ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTOS_tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvTaskIsTaskSuspended, %function
  24              	prvTaskIsTaskSuspended:
  25              	.LFB77:
  26              		.file 1 "Generated_Source\\PSoC5\\RTOS_tasks.c"
   1:Generated_Source\PSoC5/RTOS_tasks.c **** /*
   2:Generated_Source\PSoC5/RTOS_tasks.c ****  * FreeRTOS Kernel V10.4.0
   3:Generated_Source\PSoC5/RTOS_tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC5/RTOS_tasks.c ****  *
   5:Generated_Source\PSoC5/RTOS_tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC5/RTOS_tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC5/RTOS_tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC5/RTOS_tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC5/RTOS_tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC5/RTOS_tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC5/RTOS_tasks.c ****  *
  12:Generated_Source\PSoC5/RTOS_tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC5/RTOS_tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC5/RTOS_tasks.c ****  *
  15:Generated_Source\PSoC5/RTOS_tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC5/RTOS_tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC5/RTOS_tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC5/RTOS_tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC5/RTOS_tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC5/RTOS_tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC5/RTOS_tasks.c ****  *
  22:Generated_Source\PSoC5/RTOS_tasks.c ****  * https://www.FreeRTOS.org
  23:Generated_Source\PSoC5/RTOS_tasks.c ****  * https://github.com/FreeRTOS
  24:Generated_Source\PSoC5/RTOS_tasks.c ****  *
  25:Generated_Source\PSoC5/RTOS_tasks.c ****  */
  26:Generated_Source\PSoC5/RTOS_tasks.c **** 
  27:Generated_Source\PSoC5/RTOS_tasks.c **** /* Standard includes. */
  28:Generated_Source\PSoC5/RTOS_tasks.c **** #include <stdlib.h>
  29:Generated_Source\PSoC5/RTOS_tasks.c **** #include <string.h>
  30:Generated_Source\PSoC5/RTOS_tasks.c **** 
  31:Generated_Source\PSoC5/RTOS_tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 2


  32:Generated_Source\PSoC5/RTOS_tasks.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  33:Generated_Source\PSoC5/RTOS_tasks.c ****  * task.h is included from an application file. */
  34:Generated_Source\PSoC5/RTOS_tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Generated_Source\PSoC5/RTOS_tasks.c **** 
  36:Generated_Source\PSoC5/RTOS_tasks.c **** /* FreeRTOS includes. */
  37:Generated_Source\PSoC5/RTOS_tasks.c **** #include "RTOS_FreeRTOS.h"
  38:Generated_Source\PSoC5/RTOS_tasks.c **** #include "task.h"
  39:Generated_Source\PSoC5/RTOS_tasks.c **** #include "timers.h"
  40:Generated_Source\PSoC5/RTOS_tasks.c **** #include "stack_macros.h"
  41:Generated_Source\PSoC5/RTOS_tasks.c **** 
  42:Generated_Source\PSoC5/RTOS_tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  43:Generated_Source\PSoC5/RTOS_tasks.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  44:Generated_Source\PSoC5/RTOS_tasks.c ****  * for the header files above, but not in this file, in order to generate the
  45:Generated_Source\PSoC5/RTOS_tasks.c ****  * correct privileged Vs unprivileged linkage and placement. */
  46:Generated_Source\PSoC5/RTOS_tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  47:Generated_Source\PSoC5/RTOS_tasks.c **** 
  48:Generated_Source\PSoC5/RTOS_tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  49:Generated_Source\PSoC5/RTOS_tasks.c ****  * functions but without including stdio.h here. */
  50:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  51:Generated_Source\PSoC5/RTOS_tasks.c **** 
  52:Generated_Source\PSoC5/RTOS_tasks.c **** /* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC5/RTOS_tasks.c ****  * to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC5/RTOS_tasks.c ****  * uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC5/RTOS_tasks.c ****  * for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC5/RTOS_tasks.c ****     #include <stdio.h>
  57:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC5/RTOS_tasks.c **** 
  59:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC5/RTOS_tasks.c **** 
  61:Generated_Source\PSoC5/RTOS_tasks.c **** /* If the cooperative scheduler is being used then a yield should not be
  62:Generated_Source\PSoC5/RTOS_tasks.c ****  * performed just because a higher priority task has been woken. */
  63:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()
  64:Generated_Source\PSoC5/RTOS_tasks.c **** #else
  65:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  66:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
  67:Generated_Source\PSoC5/RTOS_tasks.c **** 
  68:Generated_Source\PSoC5/RTOS_tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  69:Generated_Source\PSoC5/RTOS_tasks.c **** #define taskNOT_WAITING_NOTIFICATION              ( ( uint8_t ) 0 ) /* Must be zero as it is the in
  70:Generated_Source\PSoC5/RTOS_tasks.c **** #define taskWAITING_NOTIFICATION                  ( ( uint8_t ) 1 )
  71:Generated_Source\PSoC5/RTOS_tasks.c **** #define taskNOTIFICATION_RECEIVED                 ( ( uint8_t ) 2 )
  72:Generated_Source\PSoC5/RTOS_tasks.c **** 
  73:Generated_Source\PSoC5/RTOS_tasks.c **** /*
  74:Generated_Source\PSoC5/RTOS_tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  75:Generated_Source\PSoC5/RTOS_tasks.c ****  * is used purely for checking the high water mark for tasks.
  76:Generated_Source\PSoC5/RTOS_tasks.c ****  */
  77:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskSTACK_FILL_BYTE                        ( 0xa5U )
  78:Generated_Source\PSoC5/RTOS_tasks.c **** 
  79:Generated_Source\PSoC5/RTOS_tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  80:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB    ( ( uint8_t ) 0 )
  81:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY        ( ( uint8_t ) 1 )
  82:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB     ( ( uint8_t ) 2 )
  83:Generated_Source\PSoC5/RTOS_tasks.c **** 
  84:Generated_Source\PSoC5/RTOS_tasks.c **** /* If any of the following are set then task stacks are filled with a known
  85:Generated_Source\PSoC5/RTOS_tasks.c ****  * value so the high water mark can be determined.  If none of the following are
  86:Generated_Source\PSoC5/RTOS_tasks.c ****  * set then don't fill the stack so there is no unnecessary dependency on memset. */
  87:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
  88:Generated_Source\PSoC5/RTOS_tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 3


  89:Generated_Source\PSoC5/RTOS_tasks.c **** #else
  90:Generated_Source\PSoC5/RTOS_tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    0
  91:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
  92:Generated_Source\PSoC5/RTOS_tasks.c **** 
  93:Generated_Source\PSoC5/RTOS_tasks.c **** /*
  94:Generated_Source\PSoC5/RTOS_tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  95:Generated_Source\PSoC5/RTOS_tasks.c ****  */
  96:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskRUNNING_CHAR      ( 'X' )
  97:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskBLOCKED_CHAR      ( 'B' )
  98:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskREADY_CHAR        ( 'R' )
  99:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskDELETED_CHAR      ( 'D' )
 100:Generated_Source\PSoC5/RTOS_tasks.c **** #define tskSUSPENDED_CHAR    ( 'S' )
 101:Generated_Source\PSoC5/RTOS_tasks.c **** 
 102:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 103:Generated_Source\PSoC5/RTOS_tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 104:Generated_Source\PSoC5/RTOS_tasks.c ****  * global, rather than file scope.
 105:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 106:Generated_Source\PSoC5/RTOS_tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 107:Generated_Source\PSoC5/RTOS_tasks.c ****     #define static
 108:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 109:Generated_Source\PSoC5/RTOS_tasks.c **** 
 110:Generated_Source\PSoC5/RTOS_tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 111:Generated_Source\PSoC5/RTOS_tasks.c ****  * configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 112:Generated_Source\PSoC5/RTOS_tasks.c **** #ifndef configIDLE_TASK_NAME
 113:Generated_Source\PSoC5/RTOS_tasks.c ****     #define configIDLE_TASK_NAME    "IDLE"
 114:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 115:Generated_Source\PSoC5/RTOS_tasks.c **** 
 116:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 117:Generated_Source\PSoC5/RTOS_tasks.c **** 
 118:Generated_Source\PSoC5/RTOS_tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 119:Generated_Source\PSoC5/RTOS_tasks.c ****  * performed in a generic way that is not optimised to any particular
 120:Generated_Source\PSoC5/RTOS_tasks.c ****  * microcontroller architecture. */
 121:Generated_Source\PSoC5/RTOS_tasks.c **** 
 122:Generated_Source\PSoC5/RTOS_tasks.c **** /* uxTopReadyPriority holds the priority of the highest priority ready
 123:Generated_Source\PSoC5/RTOS_tasks.c ****  * state task. */
 124:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority ) \
 125:Generated_Source\PSoC5/RTOS_tasks.c ****     {                                               \
 126:Generated_Source\PSoC5/RTOS_tasks.c ****         if( ( uxPriority ) > uxTopReadyPriority )   \
 127:Generated_Source\PSoC5/RTOS_tasks.c ****         {                                           \
 128:Generated_Source\PSoC5/RTOS_tasks.c ****             uxTopReadyPriority = ( uxPriority );    \
 129:Generated_Source\PSoC5/RTOS_tasks.c ****         }                                           \
 130:Generated_Source\PSoC5/RTOS_tasks.c ****     } /* taskRECORD_READY_PRIORITY */
 131:Generated_Source\PSoC5/RTOS_tasks.c **** 
 132:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 133:Generated_Source\PSoC5/RTOS_tasks.c **** 
 134:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                \
 135:Generated_Source\PSoC5/RTOS_tasks.c ****     {                                                                         \
 136:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxTopPriority = uxTopReadyPriority;                       \
 137:Generated_Source\PSoC5/RTOS_tasks.c ****                                                                               \
 138:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Find the highest priority queue that contains ready tasks. */      \
 139:Generated_Source\PSoC5/RTOS_tasks.c ****         while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) ) \
 140:Generated_Source\PSoC5/RTOS_tasks.c ****         {                                                                     \
 141:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( uxTopPriority );                                    \
 142:Generated_Source\PSoC5/RTOS_tasks.c ****             --uxTopPriority;                                                  \
 143:Generated_Source\PSoC5/RTOS_tasks.c ****         }                                                                     \
 144:Generated_Source\PSoC5/RTOS_tasks.c ****                                                                               \
 145:Generated_Source\PSoC5/RTOS_tasks.c ****         /* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of \
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 4


 146:Generated_Source\PSoC5/RTOS_tasks.c ****          * the  same priority get an equal share of the processor time. */                    \
 147:Generated_Source\PSoC5/RTOS_tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) ); \
 148:Generated_Source\PSoC5/RTOS_tasks.c ****         uxTopReadyPriority = uxTopPriority;                                                   \
 149:Generated_Source\PSoC5/RTOS_tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK */
 150:Generated_Source\PSoC5/RTOS_tasks.c **** 
 151:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 152:Generated_Source\PSoC5/RTOS_tasks.c **** 
 153:Generated_Source\PSoC5/RTOS_tasks.c **** /* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 154:Generated_Source\PSoC5/RTOS_tasks.c ****  * they are only required when a port optimised method of task selection is
 155:Generated_Source\PSoC5/RTOS_tasks.c ****  * being used. */
 156:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )
 157:Generated_Source\PSoC5/RTOS_tasks.c ****     #define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 158:Generated_Source\PSoC5/RTOS_tasks.c **** 
 159:Generated_Source\PSoC5/RTOS_tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 160:Generated_Source\PSoC5/RTOS_tasks.c **** 
 161:Generated_Source\PSoC5/RTOS_tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 162:Generated_Source\PSoC5/RTOS_tasks.c ****  * performed in a way that is tailored to the particular microcontroller
 163:Generated_Source\PSoC5/RTOS_tasks.c ****  * architecture being used. */
 164:Generated_Source\PSoC5/RTOS_tasks.c **** 
 165:Generated_Source\PSoC5/RTOS_tasks.c **** /* A port optimised version is provided.  Call the port defined macros. */
 166:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority )    portRECORD_READY_PRIORITY( uxPriority, uxTop
 167:Generated_Source\PSoC5/RTOS_tasks.c **** 
 168:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 169:Generated_Source\PSoC5/RTOS_tasks.c **** 
 170:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                                  \
 171:Generated_Source\PSoC5/RTOS_tasks.c ****     {                                                                                           \
 172:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxTopPriority;                                                              \
 173:Generated_Source\PSoC5/RTOS_tasks.c ****                                                                                                 \
 174:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Find the highest priority list that contains ready tasks. */                         \
 175:Generated_Source\PSoC5/RTOS_tasks.c ****         portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );                          \
 176:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 ); \
 177:Generated_Source\PSoC5/RTOS_tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );   \
 178:Generated_Source\PSoC5/RTOS_tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 179:Generated_Source\PSoC5/RTOS_tasks.c **** 
 180:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 181:Generated_Source\PSoC5/RTOS_tasks.c **** 
 182:Generated_Source\PSoC5/RTOS_tasks.c **** /* A port optimised version is provided, call it only if the TCB being reset
 183:Generated_Source\PSoC5/RTOS_tasks.c ****  * is being referenced from a ready list.  If it is referenced from a delayed
 184:Generated_Source\PSoC5/RTOS_tasks.c ****  * or suspended list then it won't be in a ready list. */
 185:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )                                                 
 186:Generated_Source\PSoC5/RTOS_tasks.c ****     {                                                                                              
 187:Generated_Source\PSoC5/RTOS_tasks.c ****         if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 
 188:Generated_Source\PSoC5/RTOS_tasks.c ****         {                                                                                          
 189:Generated_Source\PSoC5/RTOS_tasks.c ****             portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );                    
 190:Generated_Source\PSoC5/RTOS_tasks.c ****         }                                                                                          
 191:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 192:Generated_Source\PSoC5/RTOS_tasks.c **** 
 193:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Generated_Source\PSoC5/RTOS_tasks.c **** 
 195:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 196:Generated_Source\PSoC5/RTOS_tasks.c **** 
 197:Generated_Source\PSoC5/RTOS_tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 198:Generated_Source\PSoC5/RTOS_tasks.c ****  * count overflows. */
 199:Generated_Source\PSoC5/RTOS_tasks.c **** #define taskSWITCH_DELAYED_LISTS()                                                \
 200:Generated_Source\PSoC5/RTOS_tasks.c ****     {                                                                             \
 201:Generated_Source\PSoC5/RTOS_tasks.c ****         List_t * pxTemp;                                                          \
 202:Generated_Source\PSoC5/RTOS_tasks.c ****                                                                                   \
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 5


 203:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The delayed tasks list should be empty when the lists are switched. */ \
 204:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );               \
 205:Generated_Source\PSoC5/RTOS_tasks.c ****                                                                                   \
 206:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTemp = pxDelayedTaskList;                                               \
 207:Generated_Source\PSoC5/RTOS_tasks.c ****         pxDelayedTaskList = pxOverflowDelayedTaskList;                            \
 208:Generated_Source\PSoC5/RTOS_tasks.c ****         pxOverflowDelayedTaskList = pxTemp;                                       \
 209:Generated_Source\PSoC5/RTOS_tasks.c ****         xNumOfOverflows++;                                                        \
 210:Generated_Source\PSoC5/RTOS_tasks.c ****         prvResetNextTaskUnblockTime();                                            \
 211:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 212:Generated_Source\PSoC5/RTOS_tasks.c **** 
 213:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 214:Generated_Source\PSoC5/RTOS_tasks.c **** 
 215:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 216:Generated_Source\PSoC5/RTOS_tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 217:Generated_Source\PSoC5/RTOS_tasks.c ****  * the task.  It is inserted at the end of the list.
 218:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 219:Generated_Source\PSoC5/RTOS_tasks.c **** #define prvAddTaskToReadyList( pxTCB )                                                             
 220:Generated_Source\PSoC5/RTOS_tasks.c ****     traceMOVED_TASK_TO_READY_STATE( pxTCB );                                                       
 221:Generated_Source\PSoC5/RTOS_tasks.c ****     taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );                                            
 222:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem )
 223:Generated_Source\PSoC5/RTOS_tasks.c ****     tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 224:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 225:Generated_Source\PSoC5/RTOS_tasks.c **** 
 226:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 227:Generated_Source\PSoC5/RTOS_tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 228:Generated_Source\PSoC5/RTOS_tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 229:Generated_Source\PSoC5/RTOS_tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 230:Generated_Source\PSoC5/RTOS_tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 231:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 232:Generated_Source\PSoC5/RTOS_tasks.c **** #define prvGetTCBFromHandle( pxHandle )    ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle )
 233:Generated_Source\PSoC5/RTOS_tasks.c **** 
 234:Generated_Source\PSoC5/RTOS_tasks.c **** /* The item value of the event list item is normally used to hold the priority
 235:Generated_Source\PSoC5/RTOS_tasks.c ****  * of the task to which it belongs (coded to allow it to be held in reverse
 236:Generated_Source\PSoC5/RTOS_tasks.c ****  * priority order).  However, it is occasionally borrowed for other purposes.  It
 237:Generated_Source\PSoC5/RTOS_tasks.c ****  * is important its value is not updated due to a task priority change while it is
 238:Generated_Source\PSoC5/RTOS_tasks.c ****  * being used for another purpose.  The following bit definition is used to inform
 239:Generated_Source\PSoC5/RTOS_tasks.c ****  * the scheduler that the value should not be changed - in which case it is the
 240:Generated_Source\PSoC5/RTOS_tasks.c ****  * responsibility of whichever module is using the value to ensure it gets set back
 241:Generated_Source\PSoC5/RTOS_tasks.c ****  * to its original value when it is released. */
 242:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_16_BIT_TICKS == 1 )
 243:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x8000U
 244:Generated_Source\PSoC5/RTOS_tasks.c **** #else
 245:Generated_Source\PSoC5/RTOS_tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x80000000UL
 246:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 247:Generated_Source\PSoC5/RTOS_tasks.c **** 
 248:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 249:Generated_Source\PSoC5/RTOS_tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 250:Generated_Source\PSoC5/RTOS_tasks.c ****  * and stores task state information, including a pointer to the task's context
 251:Generated_Source\PSoC5/RTOS_tasks.c ****  * (the task's run time environment, including register values)
 252:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 253:Generated_Source\PSoC5/RTOS_tasks.c **** typedef struct tskTaskControlBlock       /* The old naming convention is used to prevent breaking k
 254:Generated_Source\PSoC5/RTOS_tasks.c **** {
 255:Generated_Source\PSoC5/RTOS_tasks.c ****     volatile StackType_t * pxTopOfStack; /*< Points to the location of the last item placed on the 
 256:Generated_Source\PSoC5/RTOS_tasks.c **** 
 257:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 258:Generated_Source\PSoC5/RTOS_tasks.c ****         xMPU_SETTINGS xMPUSettings; /*< The MPU settings are defined as part of the port layer.  TH
 259:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 6


 260:Generated_Source\PSoC5/RTOS_tasks.c **** 
 261:Generated_Source\PSoC5/RTOS_tasks.c ****     ListItem_t xStateListItem;                  /*< The list that the state list item of a task is 
 262:Generated_Source\PSoC5/RTOS_tasks.c ****     ListItem_t xEventListItem;                  /*< Used to reference a task from an event list. */
 263:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxPriority;                     /*< The priority of the task.  0 is the lowest prio
 264:Generated_Source\PSoC5/RTOS_tasks.c ****     StackType_t * pxStack;                      /*< Points to the start of the stack. */
 265:Generated_Source\PSoC5/RTOS_tasks.c ****     char pcTaskName[ configMAX_TASK_NAME_LEN ]; /*< Descriptive name given to the task when created
 266:Generated_Source\PSoC5/RTOS_tasks.c **** 
 267:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 268:Generated_Source\PSoC5/RTOS_tasks.c ****         StackType_t * pxEndOfStack; /*< Points to the highest valid address for the stack. */
 269:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 270:Generated_Source\PSoC5/RTOS_tasks.c **** 
 271:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 272:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxCriticalNesting; /*< Holds the critical section nesting depth for ports that 
 273:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 274:Generated_Source\PSoC5/RTOS_tasks.c **** 
 275:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 276:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxTCBNumber;  /*< Stores a number that increments each time a TCB is created.  
 277:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxTaskNumber; /*< Stores a number specifically for use by third party trace cod
 278:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 279:Generated_Source\PSoC5/RTOS_tasks.c **** 
 280:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 281:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxBasePriority; /*< The priority last assigned to the task - used by the priori
 282:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxMutexesHeld;
 283:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 284:Generated_Source\PSoC5/RTOS_tasks.c **** 
 285:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 286:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskHookFunction_t pxTaskTag;
 287:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 288:Generated_Source\PSoC5/RTOS_tasks.c **** 
 289:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 290:Generated_Source\PSoC5/RTOS_tasks.c ****         void * pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 291:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 292:Generated_Source\PSoC5/RTOS_tasks.c **** 
 293:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 294:Generated_Source\PSoC5/RTOS_tasks.c ****         uint32_t ulRunTimeCounter; /*< Stores the amount of time the task has spent in the Running 
 295:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 296:Generated_Source\PSoC5/RTOS_tasks.c **** 
 297:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_NEWLIB_REENTRANT == 1 )
 298:Generated_Source\PSoC5/RTOS_tasks.c **** 
 299:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Allocate a Newlib reent structure that is specific to this task.
 300:Generated_Source\PSoC5/RTOS_tasks.c ****          * Note Newlib support has been included by popular demand, but is not
 301:Generated_Source\PSoC5/RTOS_tasks.c ****          * used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 302:Generated_Source\PSoC5/RTOS_tasks.c ****          * responsible for resulting newlib operation.  User must be familiar with
 303:Generated_Source\PSoC5/RTOS_tasks.c ****          * newlib and must provide system-wide implementations of the necessary
 304:Generated_Source\PSoC5/RTOS_tasks.c ****          * stubs. Be warned that (at the time of writing) the current newlib design
 305:Generated_Source\PSoC5/RTOS_tasks.c ****          * implements a system-wide malloc() that must be provided with locks.
 306:Generated_Source\PSoC5/RTOS_tasks.c ****          *
 307:Generated_Source\PSoC5/RTOS_tasks.c ****          * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 308:Generated_Source\PSoC5/RTOS_tasks.c ****          * for additional information. */
 309:Generated_Source\PSoC5/RTOS_tasks.c ****         struct  _reent xNewLib_reent;
 310:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 311:Generated_Source\PSoC5/RTOS_tasks.c **** 
 312:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 313:Generated_Source\PSoC5/RTOS_tasks.c ****         volatile uint32_t ulNotifiedValue[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 314:Generated_Source\PSoC5/RTOS_tasks.c ****         volatile uint8_t ucNotifyState[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 315:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 316:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 7


 317:Generated_Source\PSoC5/RTOS_tasks.c ****     /* See the comments in FreeRTOS.h with the definition of
 318:Generated_Source\PSoC5/RTOS_tasks.c ****      * tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 319:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been conso
 320:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucStaticallyAllocated;                     /*< Set to pdTRUE if the task is a stati
 321:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 322:Generated_Source\PSoC5/RTOS_tasks.c **** 
 323:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 324:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucDelayAborted;
 325:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 326:Generated_Source\PSoC5/RTOS_tasks.c **** 
 327:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_POSIX_ERRNO == 1 )
 328:Generated_Source\PSoC5/RTOS_tasks.c ****         int iTaskErrno;
 329:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 330:Generated_Source\PSoC5/RTOS_tasks.c **** } tskTCB;
 331:Generated_Source\PSoC5/RTOS_tasks.c **** 
 332:Generated_Source\PSoC5/RTOS_tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 333:Generated_Source\PSoC5/RTOS_tasks.c ****  * below to enable the use of older kernel aware debuggers. */
 334:Generated_Source\PSoC5/RTOS_tasks.c **** typedef tskTCB TCB_t;
 335:Generated_Source\PSoC5/RTOS_tasks.c **** 
 336:Generated_Source\PSoC5/RTOS_tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 337:Generated_Source\PSoC5/RTOS_tasks.c ****  * which static variables must be declared volatile. */
 338:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 339:Generated_Source\PSoC5/RTOS_tasks.c **** 
 340:Generated_Source\PSoC5/RTOS_tasks.c **** /* Lists for ready and blocked tasks. --------------------
 341:Generated_Source\PSoC5/RTOS_tasks.c ****  * xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 342:Generated_Source\PSoC5/RTOS_tasks.c ****  * doing so breaks some kernel aware debuggers and debuggers that rely on removing
 343:Generated_Source\PSoC5/RTOS_tasks.c ****  * the static qualifier. */
 344:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ]; /*< Prioritised ready task
 345:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;                         /*< Delayed tasks. */
 346:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;                         /*< Delayed tasks (two lis
 347:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /*< Points to the delayed 
 348:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /*< Points to the delayed 
 349:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;                         /*< Tasks that have been r
 350:Generated_Source\PSoC5/RTOS_tasks.c **** 
 351:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 352:Generated_Source\PSoC5/RTOS_tasks.c **** 
 353:Generated_Source\PSoC5/RTOS_tasks.c ****     PRIVILEGED_DATA static List_t xTasksWaitingTermination; /*< Tasks that have been deleted - but 
 354:Generated_Source\PSoC5/RTOS_tasks.c ****     PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 355:Generated_Source\PSoC5/RTOS_tasks.c **** 
 356:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 357:Generated_Source\PSoC5/RTOS_tasks.c **** 
 358:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 359:Generated_Source\PSoC5/RTOS_tasks.c **** 
 360:Generated_Source\PSoC5/RTOS_tasks.c ****     PRIVILEGED_DATA static List_t xSuspendedTaskList; /*< Tasks that are currently suspended. */
 361:Generated_Source\PSoC5/RTOS_tasks.c **** 
 362:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 363:Generated_Source\PSoC5/RTOS_tasks.c **** 
 364:Generated_Source\PSoC5/RTOS_tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 365:Generated_Source\PSoC5/RTOS_tasks.c ****  * the errno of the currently running task. */
 366:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 367:Generated_Source\PSoC5/RTOS_tasks.c ****     int FreeRTOS_errno = 0;
 368:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 369:Generated_Source\PSoC5/RTOS_tasks.c **** 
 370:Generated_Source\PSoC5/RTOS_tasks.c **** /* Other file private variables. --------------------------------*/
 371:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
 372:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 373:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 8


 374:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
 375:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
 376:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending = pdFALSE;
 377:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
 378:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
 379:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised
 380:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;                          /*< Holds the 
 381:Generated_Source\PSoC5/RTOS_tasks.c **** 
 382:Generated_Source\PSoC5/RTOS_tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 383:Generated_Source\PSoC5/RTOS_tasks.c ****  * interrupts must not manipulate the xStateListItem of a TCB, or any of the
 384:Generated_Source\PSoC5/RTOS_tasks.c ****  * lists the xStateListItem can be referenced from, if the scheduler is suspended.
 385:Generated_Source\PSoC5/RTOS_tasks.c ****  * If an interrupt needs to unblock a task while the scheduler is suspended then it
 386:Generated_Source\PSoC5/RTOS_tasks.c ****  * moves the task's event list item into the xPendingReadyList, ready for the
 387:Generated_Source\PSoC5/RTOS_tasks.c ****  * kernel to move the task from the pending ready list into the real ready list
 388:Generated_Source\PSoC5/RTOS_tasks.c ****  * when the scheduler is unsuspended.  The pending ready list itself can only be
 389:Generated_Source\PSoC5/RTOS_tasks.c ****  * accessed from a critical section. */
 390:Generated_Source\PSoC5/RTOS_tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) pdFALSE;
 391:Generated_Source\PSoC5/RTOS_tasks.c **** 
 392:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 393:Generated_Source\PSoC5/RTOS_tasks.c **** 
 394:Generated_Source\PSoC5/RTOS_tasks.c **** /* Do not move these variables to function scope as doing so prevents the
 395:Generated_Source\PSoC5/RTOS_tasks.c ****  * code working with debuggers that need to remove the static qualifier. */
 396:Generated_Source\PSoC5/RTOS_tasks.c ****     PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;    /*< Holds the value of a timer/c
 397:Generated_Source\PSoC5/RTOS_tasks.c ****     PRIVILEGED_DATA static volatile uint32_t ulTotalRunTime = 0UL; /*< Holds the total amount of ex
 398:Generated_Source\PSoC5/RTOS_tasks.c **** 
 399:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 400:Generated_Source\PSoC5/RTOS_tasks.c **** 
 401:Generated_Source\PSoC5/RTOS_tasks.c **** /*lint -restore */
 402:Generated_Source\PSoC5/RTOS_tasks.c **** 
 403:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 404:Generated_Source\PSoC5/RTOS_tasks.c **** 
 405:Generated_Source\PSoC5/RTOS_tasks.c **** /* File private functions. --------------------------------*/
 406:Generated_Source\PSoC5/RTOS_tasks.c **** 
 407:Generated_Source\PSoC5/RTOS_tasks.c **** /**
 408:Generated_Source\PSoC5/RTOS_tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 409:Generated_Source\PSoC5/RTOS_tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 410:Generated_Source\PSoC5/RTOS_tasks.c ****  * is in any other state.
 411:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 412:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 413:Generated_Source\PSoC5/RTOS_tasks.c **** 
 414:Generated_Source\PSoC5/RTOS_tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 415:Generated_Source\PSoC5/RTOS_tasks.c **** 
 416:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 417:Generated_Source\PSoC5/RTOS_tasks.c **** 
 418:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 419:Generated_Source\PSoC5/RTOS_tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 420:Generated_Source\PSoC5/RTOS_tasks.c ****  * automatically upon the creation of the first task.
 421:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 422:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 423:Generated_Source\PSoC5/RTOS_tasks.c **** 
 424:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 425:Generated_Source\PSoC5/RTOS_tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 426:Generated_Source\PSoC5/RTOS_tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 427:Generated_Source\PSoC5/RTOS_tasks.c ****  * creation of the first user task.
 428:Generated_Source\PSoC5/RTOS_tasks.c ****  *
 429:Generated_Source\PSoC5/RTOS_tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 430:Generated_Source\PSoC5/RTOS_tasks.c ****  * language extensions.  The equivalent prototype for this function is:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 9


 431:Generated_Source\PSoC5/RTOS_tasks.c ****  *
 432:Generated_Source\PSoC5/RTOS_tasks.c ****  * void prvIdleTask( void *pvParameters );
 433:Generated_Source\PSoC5/RTOS_tasks.c ****  *
 434:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 435:Generated_Source\PSoC5/RTOS_tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters ) PRIVILEGED_FUNCTION;
 436:Generated_Source\PSoC5/RTOS_tasks.c **** 
 437:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 438:Generated_Source\PSoC5/RTOS_tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 439:Generated_Source\PSoC5/RTOS_tasks.c ****  * including the stack pointed to by the TCB.
 440:Generated_Source\PSoC5/RTOS_tasks.c ****  *
 441:Generated_Source\PSoC5/RTOS_tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 442:Generated_Source\PSoC5/RTOS_tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 443:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 444:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 445:Generated_Source\PSoC5/RTOS_tasks.c **** 
 446:Generated_Source\PSoC5/RTOS_tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB ) PRIVILEGED_FUNCTION;
 447:Generated_Source\PSoC5/RTOS_tasks.c **** 
 448:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 449:Generated_Source\PSoC5/RTOS_tasks.c **** 
 450:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 451:Generated_Source\PSoC5/RTOS_tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 452:Generated_Source\PSoC5/RTOS_tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 453:Generated_Source\PSoC5/RTOS_tasks.c ****  * and its TCB deleted.
 454:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 455:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 456:Generated_Source\PSoC5/RTOS_tasks.c **** 
 457:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 458:Generated_Source\PSoC5/RTOS_tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 459:Generated_Source\PSoC5/RTOS_tasks.c ****  * either the current or the overflow delayed task list.
 460:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 461:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
 462:Generated_Source\PSoC5/RTOS_tasks.c ****                                             const BaseType_t xCanBlockIndefinitely ) PRIVILEGED_FUN
 463:Generated_Source\PSoC5/RTOS_tasks.c **** 
 464:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 465:Generated_Source\PSoC5/RTOS_tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 466:Generated_Source\PSoC5/RTOS_tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 467:Generated_Source\PSoC5/RTOS_tasks.c ****  * a suspended list, etc.).
 468:Generated_Source\PSoC5/RTOS_tasks.c ****  *
 469:Generated_Source\PSoC5/RTOS_tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 470:Generated_Source\PSoC5/RTOS_tasks.c ****  * NORMAL APPLICATION CODE.
 471:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 472:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 473:Generated_Source\PSoC5/RTOS_tasks.c **** 
 474:Generated_Source\PSoC5/RTOS_tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
 475:Generated_Source\PSoC5/RTOS_tasks.c ****                                                      List_t * pxList,
 476:Generated_Source\PSoC5/RTOS_tasks.c ****                                                      eTaskState eState ) PRIVILEGED_FUNCTION;
 477:Generated_Source\PSoC5/RTOS_tasks.c **** 
 478:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 479:Generated_Source\PSoC5/RTOS_tasks.c **** 
 480:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 481:Generated_Source\PSoC5/RTOS_tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 482:Generated_Source\PSoC5/RTOS_tasks.c ****  * the task if it is found, or NULL if the task is not found.
 483:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 484:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 485:Generated_Source\PSoC5/RTOS_tasks.c **** 
 486:Generated_Source\PSoC5/RTOS_tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
 487:Generated_Source\PSoC5/RTOS_tasks.c ****                                                      const char pcNameToQuery[] ) PRIVILEGED_FUNCTI
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 10


 488:Generated_Source\PSoC5/RTOS_tasks.c **** 
 489:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 490:Generated_Source\PSoC5/RTOS_tasks.c **** 
 491:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 492:Generated_Source\PSoC5/RTOS_tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 493:Generated_Source\PSoC5/RTOS_tasks.c ****  * This function determines the 'high water mark' of the task stack by
 494:Generated_Source\PSoC5/RTOS_tasks.c ****  * determining how much of the stack remains at the original preset value.
 495:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 496:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 497:Generated_Source\PSoC5/RTOS_tasks.c **** 
 498:Generated_Source\PSoC5/RTOS_tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVIL
 499:Generated_Source\PSoC5/RTOS_tasks.c **** 
 500:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 501:Generated_Source\PSoC5/RTOS_tasks.c **** 
 502:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 503:Generated_Source\PSoC5/RTOS_tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 504:Generated_Source\PSoC5/RTOS_tasks.c ****  * next move a task from the Blocked state to the Running state.
 505:Generated_Source\PSoC5/RTOS_tasks.c ****  *
 506:Generated_Source\PSoC5/RTOS_tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 507:Generated_Source\PSoC5/RTOS_tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 508:Generated_Source\PSoC5/RTOS_tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 509:Generated_Source\PSoC5/RTOS_tasks.c ****  * set to a value other than 1.
 510:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 511:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 512:Generated_Source\PSoC5/RTOS_tasks.c **** 
 513:Generated_Source\PSoC5/RTOS_tasks.c ****     static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 514:Generated_Source\PSoC5/RTOS_tasks.c **** 
 515:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 516:Generated_Source\PSoC5/RTOS_tasks.c **** 
 517:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 518:Generated_Source\PSoC5/RTOS_tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 519:Generated_Source\PSoC5/RTOS_tasks.c ****  * will exit the Blocked state.
 520:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 521:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvResetNextTaskUnblockTime( void ) PRIVILEGED_FUNCTION;
 522:Generated_Source\PSoC5/RTOS_tasks.c **** 
 523:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 524:Generated_Source\PSoC5/RTOS_tasks.c **** 
 525:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 526:Generated_Source\PSoC5/RTOS_tasks.c ****  * Helper function used to pad task names with spaces when printing out
 527:Generated_Source\PSoC5/RTOS_tasks.c ****  * human readable tables of task information.
 528:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 529:Generated_Source\PSoC5/RTOS_tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
 530:Generated_Source\PSoC5/RTOS_tasks.c ****                                         const char * pcTaskName ) PRIVILEGED_FUNCTION;
 531:Generated_Source\PSoC5/RTOS_tasks.c **** 
 532:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 533:Generated_Source\PSoC5/RTOS_tasks.c **** 
 534:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 535:Generated_Source\PSoC5/RTOS_tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 536:Generated_Source\PSoC5/RTOS_tasks.c ****  * dynamically to fill in the structure's members.
 537:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 538:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 539:Generated_Source\PSoC5/RTOS_tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 540:Generated_Source\PSoC5/RTOS_tasks.c ****                                   const uint32_t ulStackDepth,
 541:Generated_Source\PSoC5/RTOS_tasks.c ****                                   void * const pvParameters,
 542:Generated_Source\PSoC5/RTOS_tasks.c ****                                   UBaseType_t uxPriority,
 543:Generated_Source\PSoC5/RTOS_tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 544:Generated_Source\PSoC5/RTOS_tasks.c ****                                   TCB_t * pxNewTCB,
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 11


 545:Generated_Source\PSoC5/RTOS_tasks.c ****                                   const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 546:Generated_Source\PSoC5/RTOS_tasks.c **** 
 547:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 548:Generated_Source\PSoC5/RTOS_tasks.c ****  * Called after a new task has been created and initialised to place the task
 549:Generated_Source\PSoC5/RTOS_tasks.c ****  * under the control of the scheduler.
 550:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 551:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) PRIVILEGED_FUNCTION;
 552:Generated_Source\PSoC5/RTOS_tasks.c **** 
 553:Generated_Source\PSoC5/RTOS_tasks.c **** /*
 554:Generated_Source\PSoC5/RTOS_tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 555:Generated_Source\PSoC5/RTOS_tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 556:Generated_Source\PSoC5/RTOS_tasks.c ****  * called by the function.
 557:Generated_Source\PSoC5/RTOS_tasks.c ****  */
 558:Generated_Source\PSoC5/RTOS_tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 559:Generated_Source\PSoC5/RTOS_tasks.c **** 
 560:Generated_Source\PSoC5/RTOS_tasks.c ****     static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 561:Generated_Source\PSoC5/RTOS_tasks.c **** 
 562:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
 563:Generated_Source\PSoC5/RTOS_tasks.c **** 
 564:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 565:Generated_Source\PSoC5/RTOS_tasks.c **** 
 566:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 567:Generated_Source\PSoC5/RTOS_tasks.c **** 
 568:Generated_Source\PSoC5/RTOS_tasks.c ****     TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode,
 569:Generated_Source\PSoC5/RTOS_tasks.c ****                                     const char * const pcName, /*lint !e971 Unqualified char types 
 570:Generated_Source\PSoC5/RTOS_tasks.c ****                                     const uint32_t ulStackDepth,
 571:Generated_Source\PSoC5/RTOS_tasks.c ****                                     void * const pvParameters,
 572:Generated_Source\PSoC5/RTOS_tasks.c ****                                     UBaseType_t uxPriority,
 573:Generated_Source\PSoC5/RTOS_tasks.c ****                                     StackType_t * const puxStackBuffer,
 574:Generated_Source\PSoC5/RTOS_tasks.c ****                                     StaticTask_t * const pxTaskBuffer )
 575:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 576:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxNewTCB;
 577:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskHandle_t xReturn;
 578:Generated_Source\PSoC5/RTOS_tasks.c **** 
 579:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( puxStackBuffer != NULL );
 580:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 581:Generated_Source\PSoC5/RTOS_tasks.c **** 
 582:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configASSERT_DEFINED == 1 )
 583:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 584:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Sanity check that the size of the structure used to declare a
 585:Generated_Source\PSoC5/RTOS_tasks.c ****                  * variable of type StaticTask_t equals the size of the real task
 586:Generated_Source\PSoC5/RTOS_tasks.c ****                  * structure. */
 587:Generated_Source\PSoC5/RTOS_tasks.c ****                 volatile size_t xSize = sizeof( StaticTask_t );
 588:Generated_Source\PSoC5/RTOS_tasks.c ****                 configASSERT( xSize == sizeof( TCB_t ) );
 589:Generated_Source\PSoC5/RTOS_tasks.c ****                 ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 590:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 591:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configASSERT_DEFINED */
 592:Generated_Source\PSoC5/RTOS_tasks.c **** 
 593:Generated_Source\PSoC5/RTOS_tasks.c ****         if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 594:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 595:Generated_Source\PSoC5/RTOS_tasks.c ****             /* The memory used for the task's TCB and stack are passed into this
 596:Generated_Source\PSoC5/RTOS_tasks.c ****              * function - use them. */
 597:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the stru
 598:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 599:Generated_Source\PSoC5/RTOS_tasks.c **** 
 600:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has be
 601:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 12


 602:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 603:Generated_Source\PSoC5/RTOS_tasks.c ****                      * task was created statically in case the task is later deleted. */
 604:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 605:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 606:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 607:Generated_Source\PSoC5/RTOS_tasks.c **** 
 608:Generated_Source\PSoC5/RTOS_tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xRet
 609:Generated_Source\PSoC5/RTOS_tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 610:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 611:Generated_Source\PSoC5/RTOS_tasks.c ****         else
 612:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 613:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = NULL;
 614:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 615:Generated_Source\PSoC5/RTOS_tasks.c **** 
 616:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
 617:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 618:Generated_Source\PSoC5/RTOS_tasks.c **** 
 619:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 620:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 621:Generated_Source\PSoC5/RTOS_tasks.c **** 
 622:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 623:Generated_Source\PSoC5/RTOS_tasks.c **** 
 624:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 625:Generated_Source\PSoC5/RTOS_tasks.c ****                                             TaskHandle_t * pxCreatedTask )
 626:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 627:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxNewTCB;
 628:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 629:Generated_Source\PSoC5/RTOS_tasks.c **** 
 630:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 631:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 632:Generated_Source\PSoC5/RTOS_tasks.c **** 
 633:Generated_Source\PSoC5/RTOS_tasks.c ****         if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NUL
 634:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 635:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 636:Generated_Source\PSoC5/RTOS_tasks.c ****              * on the implementation of the port malloc function and whether or
 637:Generated_Source\PSoC5/RTOS_tasks.c ****              * not static allocation is being used. */
 638:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 639:Generated_Source\PSoC5/RTOS_tasks.c **** 
 640:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Store the stack location in the TCB. */
 641:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 642:Generated_Source\PSoC5/RTOS_tasks.c **** 
 643:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 644:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 645:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 646:Generated_Source\PSoC5/RTOS_tasks.c ****                      * task was created statically in case the task is later deleted. */
 647:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 648:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 649:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 650:Generated_Source\PSoC5/RTOS_tasks.c **** 
 651:Generated_Source\PSoC5/RTOS_tasks.c ****             prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 652:Generated_Source\PSoC5/RTOS_tasks.c ****                                   pxTaskDefinition->pcName,
 653:Generated_Source\PSoC5/RTOS_tasks.c ****                                   ( uint32_t ) pxTaskDefinition->usStackDepth,
 654:Generated_Source\PSoC5/RTOS_tasks.c ****                                   pxTaskDefinition->pvParameters,
 655:Generated_Source\PSoC5/RTOS_tasks.c ****                                   pxTaskDefinition->uxPriority,
 656:Generated_Source\PSoC5/RTOS_tasks.c ****                                   pxCreatedTask, pxNewTCB,
 657:Generated_Source\PSoC5/RTOS_tasks.c ****                                   pxTaskDefinition->xRegions );
 658:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 13


 659:Generated_Source\PSoC5/RTOS_tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 660:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdPASS;
 661:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 662:Generated_Source\PSoC5/RTOS_tasks.c **** 
 663:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
 664:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 665:Generated_Source\PSoC5/RTOS_tasks.c **** 
 666:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 667:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 668:Generated_Source\PSoC5/RTOS_tasks.c **** 
 669:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 670:Generated_Source\PSoC5/RTOS_tasks.c **** 
 671:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
 672:Generated_Source\PSoC5/RTOS_tasks.c ****                                       TaskHandle_t * pxCreatedTask )
 673:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 674:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxNewTCB;
 675:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 676:Generated_Source\PSoC5/RTOS_tasks.c **** 
 677:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer );
 678:Generated_Source\PSoC5/RTOS_tasks.c **** 
 679:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxTaskDefinition->puxStackBuffer != NULL )
 680:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 681:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 682:Generated_Source\PSoC5/RTOS_tasks.c ****              * on the implementation of the port malloc function and whether or
 683:Generated_Source\PSoC5/RTOS_tasks.c ****              * not static allocation is being used. */
 684:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 685:Generated_Source\PSoC5/RTOS_tasks.c **** 
 686:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxNewTCB != NULL )
 687:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 688:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Store the stack location in the TCB. */
 689:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 690:Generated_Source\PSoC5/RTOS_tasks.c **** 
 691:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 692:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 693:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Tasks can be created statically or dynamically, so note
 694:Generated_Source\PSoC5/RTOS_tasks.c ****                          * this task had a statically allocated stack in case it is
 695:Generated_Source\PSoC5/RTOS_tasks.c ****                          * later deleted.  The TCB was allocated dynamically. */
 696:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 697:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 698:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 699:Generated_Source\PSoC5/RTOS_tasks.c **** 
 700:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 701:Generated_Source\PSoC5/RTOS_tasks.c ****                                       pxTaskDefinition->pcName,
 702:Generated_Source\PSoC5/RTOS_tasks.c ****                                       ( uint32_t ) pxTaskDefinition->usStackDepth,
 703:Generated_Source\PSoC5/RTOS_tasks.c ****                                       pxTaskDefinition->pvParameters,
 704:Generated_Source\PSoC5/RTOS_tasks.c ****                                       pxTaskDefinition->uxPriority,
 705:Generated_Source\PSoC5/RTOS_tasks.c ****                                       pxCreatedTask, pxNewTCB,
 706:Generated_Source\PSoC5/RTOS_tasks.c ****                                       pxTaskDefinition->xRegions );
 707:Generated_Source\PSoC5/RTOS_tasks.c **** 
 708:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvAddNewTaskToReadyList( pxNewTCB );
 709:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdPASS;
 710:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 711:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 712:Generated_Source\PSoC5/RTOS_tasks.c **** 
 713:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
 714:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 715:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 14


 716:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 717:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 718:Generated_Source\PSoC5/RTOS_tasks.c **** 
 719:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 720:Generated_Source\PSoC5/RTOS_tasks.c **** 
 721:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
 722:Generated_Source\PSoC5/RTOS_tasks.c ****                             const char * const pcName, /*lint !e971 Unqualified char types are allo
 723:Generated_Source\PSoC5/RTOS_tasks.c ****                             const configSTACK_DEPTH_TYPE usStackDepth,
 724:Generated_Source\PSoC5/RTOS_tasks.c ****                             void * const pvParameters,
 725:Generated_Source\PSoC5/RTOS_tasks.c ****                             UBaseType_t uxPriority,
 726:Generated_Source\PSoC5/RTOS_tasks.c ****                             TaskHandle_t * const pxCreatedTask )
 727:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 728:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxNewTCB;
 729:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
 730:Generated_Source\PSoC5/RTOS_tasks.c **** 
 731:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If the stack grows down then allocate the stack then the TCB so the stack
 732:Generated_Source\PSoC5/RTOS_tasks.c ****          * does not grow into the TCB.  Likewise if the stack grows up then allocate
 733:Generated_Source\PSoC5/RTOS_tasks.c ****          * the TCB then the stack. */
 734:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( portSTACK_GROWTH > 0 )
 735:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 736:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Allocate space for the TCB.  Where the memory comes from depends on
 737:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the implementation of the port malloc function and whether or not static
 738:Generated_Source\PSoC5/RTOS_tasks.c ****                  * allocation is being used. */
 739:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 740:Generated_Source\PSoC5/RTOS_tasks.c **** 
 741:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxNewTCB != NULL )
 742:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 743:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Allocate space for the stack used by the task being created.
 744:Generated_Source\PSoC5/RTOS_tasks.c ****                      * The base of the stack memory stored in the TCB so the task can
 745:Generated_Source\PSoC5/RTOS_tasks.c ****                      * be deleted later if required. */
 746:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth
 747:Generated_Source\PSoC5/RTOS_tasks.c **** 
 748:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxNewTCB->pxStack == NULL )
 749:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 750:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Could not allocate the stack.  Delete the allocated TCB. */
 751:Generated_Source\PSoC5/RTOS_tasks.c ****                         vPortFree( pxNewTCB );
 752:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxNewTCB = NULL;
 753:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 754:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 755:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 756:Generated_Source\PSoC5/RTOS_tasks.c ****         #else /* portSTACK_GROWTH */
 757:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 758:Generated_Source\PSoC5/RTOS_tasks.c ****                 StackType_t * pxStack;
 759:Generated_Source\PSoC5/RTOS_tasks.c **** 
 760:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Allocate space for the stack used by the task being created. */
 761:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); 
 762:Generated_Source\PSoC5/RTOS_tasks.c **** 
 763:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxStack != NULL )
 764:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 765:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Allocate space for the TCB. */
 766:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 Al
 767:Generated_Source\PSoC5/RTOS_tasks.c **** 
 768:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxNewTCB != NULL )
 769:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 770:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Store the stack location in the TCB. */
 771:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxNewTCB->pxStack = pxStack;
 772:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 15


 773:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
 774:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 775:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* The stack cannot be used as the TCB was not created.  Free
 776:Generated_Source\PSoC5/RTOS_tasks.c ****                          * it again. */
 777:Generated_Source\PSoC5/RTOS_tasks.c ****                         vPortFree( pxStack );
 778:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 779:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 780:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
 781:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 782:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB = NULL;
 783:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 784:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 785:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* portSTACK_GROWTH */
 786:Generated_Source\PSoC5/RTOS_tasks.c **** 
 787:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxNewTCB != NULL )
 788:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 789:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has be
 790:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 791:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 792:Generated_Source\PSoC5/RTOS_tasks.c ****                      * task was created dynamically in case it is later deleted. */
 793:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 794:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 795:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 796:Generated_Source\PSoC5/RTOS_tasks.c **** 
 797:Generated_Source\PSoC5/RTOS_tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPr
 798:Generated_Source\PSoC5/RTOS_tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 799:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdPASS;
 800:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 801:Generated_Source\PSoC5/RTOS_tasks.c ****         else
 802:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 803:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 804:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 805:Generated_Source\PSoC5/RTOS_tasks.c **** 
 806:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
 807:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 808:Generated_Source\PSoC5/RTOS_tasks.c **** 
 809:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 810:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 811:Generated_Source\PSoC5/RTOS_tasks.c **** 
 812:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 813:Generated_Source\PSoC5/RTOS_tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 814:Generated_Source\PSoC5/RTOS_tasks.c ****                                   const uint32_t ulStackDepth,
 815:Generated_Source\PSoC5/RTOS_tasks.c ****                                   void * const pvParameters,
 816:Generated_Source\PSoC5/RTOS_tasks.c ****                                   UBaseType_t uxPriority,
 817:Generated_Source\PSoC5/RTOS_tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 818:Generated_Source\PSoC5/RTOS_tasks.c ****                                   TCB_t * pxNewTCB,
 819:Generated_Source\PSoC5/RTOS_tasks.c ****                                   const MemoryRegion_t * const xRegions )
 820:Generated_Source\PSoC5/RTOS_tasks.c **** {
 821:Generated_Source\PSoC5/RTOS_tasks.c ****     StackType_t * pxTopOfStack;
 822:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t x;
 823:Generated_Source\PSoC5/RTOS_tasks.c **** 
 824:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 825:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Should the task be created in privileged mode? */
 826:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xRunPrivileged;
 827:Generated_Source\PSoC5/RTOS_tasks.c **** 
 828:Generated_Source\PSoC5/RTOS_tasks.c ****         if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 829:Generated_Source\PSoC5/RTOS_tasks.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 16


 830:Generated_Source\PSoC5/RTOS_tasks.c ****             xRunPrivileged = pdTRUE;
 831:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 832:Generated_Source\PSoC5/RTOS_tasks.c ****         else
 833:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 834:Generated_Source\PSoC5/RTOS_tasks.c ****             xRunPrivileged = pdFALSE;
 835:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 836:Generated_Source\PSoC5/RTOS_tasks.c ****         uxPriority &= ~portPRIVILEGE_BIT;
 837:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* portUSING_MPU_WRAPPERS == 1 */
 838:Generated_Source\PSoC5/RTOS_tasks.c **** 
 839:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Avoid dependency on memset() if it is not required. */
 840:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 841:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 842:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Fill the stack with a known value to assist debugging. */
 843:Generated_Source\PSoC5/RTOS_tasks.c ****             ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth
 844:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 845:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 846:Generated_Source\PSoC5/RTOS_tasks.c **** 
 847:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Calculate the top of stack address.  This depends on whether the stack
 848:Generated_Source\PSoC5/RTOS_tasks.c ****      * grows from high memory to low (as per the 80x86) or vice versa.
 849:Generated_Source\PSoC5/RTOS_tasks.c ****      * portSTACK_GROWTH is used to make the result positive or negative as required
 850:Generated_Source\PSoC5/RTOS_tasks.c ****      * by the port. */
 851:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( portSTACK_GROWTH < 0 )
 852:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 853:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 854:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 855:Generated_Source\PSoC5/RTOS_tasks.c **** 
 856:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Check the alignment of the calculated top of stack is correct. */
 857:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) po
 858:Generated_Source\PSoC5/RTOS_tasks.c **** 
 859:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( configRECORD_STACK_HIGH_ADDRESS == 1 )
 860:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 861:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Also record the stack's high address, which may assist
 862:Generated_Source\PSoC5/RTOS_tasks.c ****                      * debugging. */
 863:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB->pxEndOfStack = pxTopOfStack;
 864:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 865:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* configRECORD_STACK_HIGH_ADDRESS */
 866:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 867:Generated_Source\PSoC5/RTOS_tasks.c ****     #else /* portSTACK_GROWTH */
 868:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 869:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTopOfStack = pxNewTCB->pxStack;
 870:Generated_Source\PSoC5/RTOS_tasks.c **** 
 871:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Check the alignment of the stack buffer is correct. */
 872:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE
 873:Generated_Source\PSoC5/RTOS_tasks.c **** 
 874:Generated_Source\PSoC5/RTOS_tasks.c ****             /* The other extreme of the stack space is required if stack checking is
 875:Generated_Source\PSoC5/RTOS_tasks.c ****              * performed. */
 876:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 877:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 878:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* portSTACK_GROWTH */
 879:Generated_Source\PSoC5/RTOS_tasks.c **** 
 880:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Store the task name in the TCB. */
 881:Generated_Source\PSoC5/RTOS_tasks.c ****     if( pcName != NULL )
 882:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 883:Generated_Source\PSoC5/RTOS_tasks.c ****         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 884:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 885:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 886:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 17


 887:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 888:Generated_Source\PSoC5/RTOS_tasks.c ****              * configMAX_TASK_NAME_LEN characters just in case the memory after the
 889:Generated_Source\PSoC5/RTOS_tasks.c ****              * string is not accessible (extremely unlikely). */
 890:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pcName[ x ] == ( char ) 0x00 )
 891:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 892:Generated_Source\PSoC5/RTOS_tasks.c ****                 break;
 893:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 894:Generated_Source\PSoC5/RTOS_tasks.c ****             else
 895:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 896:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 897:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 898:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 899:Generated_Source\PSoC5/RTOS_tasks.c **** 
 900:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Ensure the name string is terminated in the case that the string length
 901:Generated_Source\PSoC5/RTOS_tasks.c ****          * was greater or equal to configMAX_TASK_NAME_LEN. */
 902:Generated_Source\PSoC5/RTOS_tasks.c ****         pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 903:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 904:Generated_Source\PSoC5/RTOS_tasks.c ****     else
 905:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 906:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The task has not been given a name, so just ensure there is a NULL
 907:Generated_Source\PSoC5/RTOS_tasks.c ****          * terminator when it is read out. */
 908:Generated_Source\PSoC5/RTOS_tasks.c ****         pxNewTCB->pcTaskName[ 0 ] = 0x00;
 909:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 910:Generated_Source\PSoC5/RTOS_tasks.c **** 
 911:Generated_Source\PSoC5/RTOS_tasks.c ****     /* This is used as an array index so must ensure it's not too large.  First
 912:Generated_Source\PSoC5/RTOS_tasks.c ****      * remove the privilege bit if one is present. */
 913:Generated_Source\PSoC5/RTOS_tasks.c ****     if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 914:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 915:Generated_Source\PSoC5/RTOS_tasks.c ****         uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 916:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 917:Generated_Source\PSoC5/RTOS_tasks.c ****     else
 918:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 919:Generated_Source\PSoC5/RTOS_tasks.c ****         mtCOVERAGE_TEST_MARKER();
 920:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 921:Generated_Source\PSoC5/RTOS_tasks.c **** 
 922:Generated_Source\PSoC5/RTOS_tasks.c ****     pxNewTCB->uxPriority = uxPriority;
 923:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 924:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 925:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->uxBasePriority = uxPriority;
 926:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->uxMutexesHeld = 0;
 927:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 928:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* configUSE_MUTEXES */
 929:Generated_Source\PSoC5/RTOS_tasks.c **** 
 930:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 931:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 932:Generated_Source\PSoC5/RTOS_tasks.c **** 
 933:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 934:Generated_Source\PSoC5/RTOS_tasks.c ****      * back to  the containing TCB from a generic item in a list. */
 935:Generated_Source\PSoC5/RTOS_tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 936:Generated_Source\PSoC5/RTOS_tasks.c **** 
 937:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Event lists are always in priority order. */
 938:Generated_Source\PSoC5/RTOS_tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - (
 939:Generated_Source\PSoC5/RTOS_tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 940:Generated_Source\PSoC5/RTOS_tasks.c **** 
 941:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 942:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 943:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 18


 944:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 945:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* portCRITICAL_NESTING_IN_TCB */
 946:Generated_Source\PSoC5/RTOS_tasks.c **** 
 947:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 948:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 949:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->pxTaskTag = NULL;
 950:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 951:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* configUSE_APPLICATION_TASK_TAG */
 952:Generated_Source\PSoC5/RTOS_tasks.c **** 
 953:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 954:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 955:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->ulRunTimeCounter = 0UL;
 956:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 957:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* configGENERATE_RUN_TIME_STATS */
 958:Generated_Source\PSoC5/RTOS_tasks.c **** 
 959:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 960:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 961:Generated_Source\PSoC5/RTOS_tasks.c ****             vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ul
 962:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 963:Generated_Source\PSoC5/RTOS_tasks.c ****     #else
 964:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 965:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Avoid compiler warning about unreferenced parameter. */
 966:Generated_Source\PSoC5/RTOS_tasks.c ****             ( void ) xRegions;
 967:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 968:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 969:Generated_Source\PSoC5/RTOS_tasks.c **** 
 970:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 971:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 972:Generated_Source\PSoC5/RTOS_tasks.c ****             memset( ( void * ) &( pxNewTCB->pvThreadLocalStoragePointers[ 0 ] ), 0x00, sizeof( pxNe
 973:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 974:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 975:Generated_Source\PSoC5/RTOS_tasks.c **** 
 976:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 977:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 978:Generated_Source\PSoC5/RTOS_tasks.c ****             memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotif
 979:Generated_Source\PSoC5/RTOS_tasks.c ****             memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyS
 980:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 981:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 982:Generated_Source\PSoC5/RTOS_tasks.c **** 
 983:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_NEWLIB_REENTRANT == 1 )
 984:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 985:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Initialise this task's Newlib reent structure.
 986:Generated_Source\PSoC5/RTOS_tasks.c ****              * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 987:Generated_Source\PSoC5/RTOS_tasks.c ****              * for additional information. */
 988:Generated_Source\PSoC5/RTOS_tasks.c ****             _REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 989:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 990:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 991:Generated_Source\PSoC5/RTOS_tasks.c **** 
 992:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 993:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 994:Generated_Source\PSoC5/RTOS_tasks.c ****             pxNewTCB->ucDelayAborted = pdFALSE;
 995:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 996:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
 997:Generated_Source\PSoC5/RTOS_tasks.c **** 
 998:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Initialize the TCB stack to look as if the task was already running,
 999:Generated_Source\PSoC5/RTOS_tasks.c ****      * but had been interrupted by the scheduler.  The return address is set
1000:Generated_Source\PSoC5/RTOS_tasks.c ****      * to the start of the task function. Once the stack has been initialised
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 19


1001:Generated_Source\PSoC5/RTOS_tasks.c ****      * the top of stack variable is updated. */
1002:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
1003:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1004:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If the port has capability to detect stack overflow,
1005:Generated_Source\PSoC5/RTOS_tasks.c ****              * pass the stack end address to the stack initialization
1006:Generated_Source\PSoC5/RTOS_tasks.c ****              * function as well. */
1007:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1008:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1009:Generated_Source\PSoC5/RTOS_tasks.c ****                     #if ( portSTACK_GROWTH < 0 )
1010:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1011:Generated_Source\PSoC5/RTOS_tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1012:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1013:Generated_Source\PSoC5/RTOS_tasks.c ****                     #else /* portSTACK_GROWTH */
1014:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1015:Generated_Source\PSoC5/RTOS_tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1016:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1017:Generated_Source\PSoC5/RTOS_tasks.c ****                     #endif /* portSTACK_GROWTH */
1018:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1019:Generated_Source\PSoC5/RTOS_tasks.c ****             #else /* portHAS_STACK_OVERFLOW_CHECKING */
1020:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1021:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvPar
1022:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1023:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1024:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1025:Generated_Source\PSoC5/RTOS_tasks.c ****     #else /* portUSING_MPU_WRAPPERS */
1026:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1027:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If the port has capability to detect stack overflow,
1028:Generated_Source\PSoC5/RTOS_tasks.c ****              * pass the stack end address to the stack initialization
1029:Generated_Source\PSoC5/RTOS_tasks.c ****              * function as well. */
1030:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1031:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1032:Generated_Source\PSoC5/RTOS_tasks.c ****                     #if ( portSTACK_GROWTH < 0 )
1033:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1034:Generated_Source\PSoC5/RTOS_tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1035:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1036:Generated_Source\PSoC5/RTOS_tasks.c ****                     #else /* portSTACK_GROWTH */
1037:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1038:Generated_Source\PSoC5/RTOS_tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1039:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1040:Generated_Source\PSoC5/RTOS_tasks.c ****                     #endif /* portSTACK_GROWTH */
1041:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1042:Generated_Source\PSoC5/RTOS_tasks.c ****             #else /* portHAS_STACK_OVERFLOW_CHECKING */
1043:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1044:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvPar
1045:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1046:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1047:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1048:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* portUSING_MPU_WRAPPERS */
1049:Generated_Source\PSoC5/RTOS_tasks.c **** 
1050:Generated_Source\PSoC5/RTOS_tasks.c ****     if( pxCreatedTask != NULL )
1051:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1052:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Pass the handle out in an anonymous way.  The handle can be used to
1053:Generated_Source\PSoC5/RTOS_tasks.c ****          * change the created task's priority, delete the created task, etc.*/
1054:Generated_Source\PSoC5/RTOS_tasks.c ****         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1055:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1056:Generated_Source\PSoC5/RTOS_tasks.c ****     else
1057:Generated_Source\PSoC5/RTOS_tasks.c ****     {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 20


1058:Generated_Source\PSoC5/RTOS_tasks.c ****         mtCOVERAGE_TEST_MARKER();
1059:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1060:Generated_Source\PSoC5/RTOS_tasks.c **** }
1061:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1062:Generated_Source\PSoC5/RTOS_tasks.c **** 
1063:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
1064:Generated_Source\PSoC5/RTOS_tasks.c **** {
1065:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
1066:Generated_Source\PSoC5/RTOS_tasks.c ****      * updated. */
1067:Generated_Source\PSoC5/RTOS_tasks.c ****     taskENTER_CRITICAL();
1068:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1069:Generated_Source\PSoC5/RTOS_tasks.c ****         uxCurrentNumberOfTasks++;
1070:Generated_Source\PSoC5/RTOS_tasks.c **** 
1071:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxCurrentTCB == NULL )
1072:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1073:Generated_Source\PSoC5/RTOS_tasks.c ****             /* There are no other tasks, or all the other tasks are in
1074:Generated_Source\PSoC5/RTOS_tasks.c ****              * the suspended state - make this the current task. */
1075:Generated_Source\PSoC5/RTOS_tasks.c ****             pxCurrentTCB = pxNewTCB;
1076:Generated_Source\PSoC5/RTOS_tasks.c **** 
1077:Generated_Source\PSoC5/RTOS_tasks.c ****             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1078:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1079:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* This is the first task to be created so do the preliminary
1080:Generated_Source\PSoC5/RTOS_tasks.c ****                  * initialisation required.  We will not recover if this call
1081:Generated_Source\PSoC5/RTOS_tasks.c ****                  * fails, but we will report the failure. */
1082:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvInitialiseTaskLists();
1083:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1084:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1085:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1086:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1087:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1088:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1089:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1090:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1091:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If the scheduler is not already running, make this task the
1092:Generated_Source\PSoC5/RTOS_tasks.c ****              * current task if it is the highest priority task to be created
1093:Generated_Source\PSoC5/RTOS_tasks.c ****              * so far. */
1094:Generated_Source\PSoC5/RTOS_tasks.c ****             if( xSchedulerRunning == pdFALSE )
1095:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1096:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1097:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1098:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxCurrentTCB = pxNewTCB;
1099:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1100:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1101:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1102:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1103:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1104:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1105:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1106:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1107:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1108:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1109:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1110:Generated_Source\PSoC5/RTOS_tasks.c **** 
1111:Generated_Source\PSoC5/RTOS_tasks.c ****         uxTaskNumber++;
1112:Generated_Source\PSoC5/RTOS_tasks.c **** 
1113:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
1114:Generated_Source\PSoC5/RTOS_tasks.c ****             {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 21


1115:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Add a counter into the TCB for tracing only. */
1116:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxNewTCB->uxTCBNumber = uxTaskNumber;
1117:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1118:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_TRACE_FACILITY */
1119:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_CREATE( pxNewTCB );
1120:Generated_Source\PSoC5/RTOS_tasks.c **** 
1121:Generated_Source\PSoC5/RTOS_tasks.c ****         prvAddTaskToReadyList( pxNewTCB );
1122:Generated_Source\PSoC5/RTOS_tasks.c **** 
1123:Generated_Source\PSoC5/RTOS_tasks.c ****         portSETUP_TCB( pxNewTCB );
1124:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1125:Generated_Source\PSoC5/RTOS_tasks.c ****     taskEXIT_CRITICAL();
1126:Generated_Source\PSoC5/RTOS_tasks.c **** 
1127:Generated_Source\PSoC5/RTOS_tasks.c ****     if( xSchedulerRunning != pdFALSE )
1128:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1129:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If the created task is of a higher priority than the current task
1130:Generated_Source\PSoC5/RTOS_tasks.c ****          * then it should run now. */
1131:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1132:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1133:Generated_Source\PSoC5/RTOS_tasks.c ****             taskYIELD_IF_USING_PREEMPTION();
1134:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1135:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1136:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1137:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1138:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1139:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1140:Generated_Source\PSoC5/RTOS_tasks.c ****     else
1141:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1142:Generated_Source\PSoC5/RTOS_tasks.c ****         mtCOVERAGE_TEST_MARKER();
1143:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1144:Generated_Source\PSoC5/RTOS_tasks.c **** }
1145:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1146:Generated_Source\PSoC5/RTOS_tasks.c **** 
1147:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1148:Generated_Source\PSoC5/RTOS_tasks.c **** 
1149:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskDelete( TaskHandle_t xTaskToDelete )
1150:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1151:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
1152:Generated_Source\PSoC5/RTOS_tasks.c **** 
1153:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
1154:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1155:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If null is passed in here then it is the calling task that is
1156:Generated_Source\PSoC5/RTOS_tasks.c ****              * being deleted. */
1157:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1158:Generated_Source\PSoC5/RTOS_tasks.c **** 
1159:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Remove task from the ready/delayed list. */
1160:Generated_Source\PSoC5/RTOS_tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1161:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1162:Generated_Source\PSoC5/RTOS_tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1163:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1164:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1165:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1166:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1167:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1168:Generated_Source\PSoC5/RTOS_tasks.c **** 
1169:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Is the task waiting on an event also? */
1170:Generated_Source\PSoC5/RTOS_tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1171:Generated_Source\PSoC5/RTOS_tasks.c ****             {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 22


1172:Generated_Source\PSoC5/RTOS_tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1173:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1174:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1175:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1176:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1177:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1178:Generated_Source\PSoC5/RTOS_tasks.c **** 
1179:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Increment the uxTaskNumber also so kernel aware debuggers can
1180:Generated_Source\PSoC5/RTOS_tasks.c ****              * detect that the task lists need re-generating.  This is done before
1181:Generated_Source\PSoC5/RTOS_tasks.c ****              * portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1182:Generated_Source\PSoC5/RTOS_tasks.c ****              * not return. */
1183:Generated_Source\PSoC5/RTOS_tasks.c ****             uxTaskNumber++;
1184:Generated_Source\PSoC5/RTOS_tasks.c **** 
1185:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB == pxCurrentTCB )
1186:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1187:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* A task is deleting itself.  This cannot complete within the
1188:Generated_Source\PSoC5/RTOS_tasks.c ****                  * task itself, as a context switch to another task is required.
1189:Generated_Source\PSoC5/RTOS_tasks.c ****                  * Place the task in the termination list.  The idle task will
1190:Generated_Source\PSoC5/RTOS_tasks.c ****                  * check the termination list and free up any memory allocated by
1191:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the scheduler for the TCB and stack of the deleted task. */
1192:Generated_Source\PSoC5/RTOS_tasks.c ****                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1193:Generated_Source\PSoC5/RTOS_tasks.c **** 
1194:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Increment the ucTasksDeleted variable so the idle task knows
1195:Generated_Source\PSoC5/RTOS_tasks.c ****                  * there is a task that has been deleted and that it should therefore
1196:Generated_Source\PSoC5/RTOS_tasks.c ****                  * check the xTasksWaitingTermination list. */
1197:Generated_Source\PSoC5/RTOS_tasks.c ****                 ++uxDeletedTasksWaitingCleanUp;
1198:Generated_Source\PSoC5/RTOS_tasks.c **** 
1199:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1200:Generated_Source\PSoC5/RTOS_tasks.c ****                  * portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1201:Generated_Source\PSoC5/RTOS_tasks.c ****                 traceTASK_DELETE( pxTCB );
1202:Generated_Source\PSoC5/RTOS_tasks.c **** 
1203:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The pre-delete hook is primarily for the Windows simulator,
1204:Generated_Source\PSoC5/RTOS_tasks.c ****                  * in which Windows specific clean up operations are performed,
1205:Generated_Source\PSoC5/RTOS_tasks.c ****                  * after which it is not possible to yield away from this task -
1206:Generated_Source\PSoC5/RTOS_tasks.c ****                  * hence xYieldPending is used to latch that a context switch is
1207:Generated_Source\PSoC5/RTOS_tasks.c ****                  * required. */
1208:Generated_Source\PSoC5/RTOS_tasks.c ****                 portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1209:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1210:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1211:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1212:Generated_Source\PSoC5/RTOS_tasks.c ****                 --uxCurrentNumberOfTasks;
1213:Generated_Source\PSoC5/RTOS_tasks.c ****                 traceTASK_DELETE( pxTCB );
1214:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvDeleteTCB( pxTCB );
1215:Generated_Source\PSoC5/RTOS_tasks.c **** 
1216:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Reset the next expected unblock time in case it referred to
1217:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the task that has just been deleted. */
1218:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvResetNextTaskUnblockTime();
1219:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1220:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1221:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
1222:Generated_Source\PSoC5/RTOS_tasks.c **** 
1223:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Force a reschedule if it is the currently running task that has just
1224:Generated_Source\PSoC5/RTOS_tasks.c ****          * been deleted. */
1225:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xSchedulerRunning != pdFALSE )
1226:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1227:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB == pxCurrentTCB )
1228:Generated_Source\PSoC5/RTOS_tasks.c ****             {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 23


1229:Generated_Source\PSoC5/RTOS_tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1230:Generated_Source\PSoC5/RTOS_tasks.c ****                 portYIELD_WITHIN_API();
1231:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1232:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1233:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1234:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1235:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1236:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1237:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1238:Generated_Source\PSoC5/RTOS_tasks.c **** 
1239:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskDelete */
1240:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1241:Generated_Source\PSoC5/RTOS_tasks.c **** 
1242:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1243:Generated_Source\PSoC5/RTOS_tasks.c **** 
1244:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
1245:Generated_Source\PSoC5/RTOS_tasks.c ****                           const TickType_t xTimeIncrement )
1246:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1247:Generated_Source\PSoC5/RTOS_tasks.c ****         TickType_t xTimeToWake;
1248:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1249:Generated_Source\PSoC5/RTOS_tasks.c **** 
1250:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxPreviousWakeTime );
1251:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
1252:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
1253:Generated_Source\PSoC5/RTOS_tasks.c **** 
1254:Generated_Source\PSoC5/RTOS_tasks.c ****         vTaskSuspendAll();
1255:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1256:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Minor optimisation.  The tick count cannot change in this
1257:Generated_Source\PSoC5/RTOS_tasks.c ****              * block. */
1258:Generated_Source\PSoC5/RTOS_tasks.c ****             const TickType_t xConstTickCount = xTickCount;
1259:Generated_Source\PSoC5/RTOS_tasks.c **** 
1260:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Generate the tick time at which the task wants to wake. */
1261:Generated_Source\PSoC5/RTOS_tasks.c ****             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1262:Generated_Source\PSoC5/RTOS_tasks.c **** 
1263:Generated_Source\PSoC5/RTOS_tasks.c ****             if( xConstTickCount < *pxPreviousWakeTime )
1264:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1265:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The tick count has overflowed since this function was
1266:Generated_Source\PSoC5/RTOS_tasks.c ****                  * lasted called.  In this case the only time we should ever
1267:Generated_Source\PSoC5/RTOS_tasks.c ****                  * actually delay is if the wake time has also  overflowed,
1268:Generated_Source\PSoC5/RTOS_tasks.c ****                  * and the wake time is greater than the tick time.  When this
1269:Generated_Source\PSoC5/RTOS_tasks.c ****                  * is the case it is as if neither time had overflowed. */
1270:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1271:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1272:Generated_Source\PSoC5/RTOS_tasks.c ****                     xShouldDelay = pdTRUE;
1273:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1274:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1275:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1276:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1277:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1278:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1279:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1280:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1281:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The tick time has not overflowed.  In this case we will
1282:Generated_Source\PSoC5/RTOS_tasks.c ****                  * delay if either the wake time has overflowed, and/or the
1283:Generated_Source\PSoC5/RTOS_tasks.c ****                  * tick time is less than the wake time. */
1284:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1285:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 24


1286:Generated_Source\PSoC5/RTOS_tasks.c ****                     xShouldDelay = pdTRUE;
1287:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1288:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1289:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1290:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1291:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1292:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1293:Generated_Source\PSoC5/RTOS_tasks.c **** 
1294:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Update the wake time ready for the next call. */
1295:Generated_Source\PSoC5/RTOS_tasks.c ****             *pxPreviousWakeTime = xTimeToWake;
1296:Generated_Source\PSoC5/RTOS_tasks.c **** 
1297:Generated_Source\PSoC5/RTOS_tasks.c ****             if( xShouldDelay != pdFALSE )
1298:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1299:Generated_Source\PSoC5/RTOS_tasks.c ****                 traceTASK_DELAY_UNTIL( xTimeToWake );
1300:Generated_Source\PSoC5/RTOS_tasks.c **** 
1301:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* prvAddCurrentTaskToDelayedList() needs the block time, not
1302:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the time to wake, so subtract the current tick count. */
1303:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1304:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1305:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1306:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1307:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1308:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1309:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1310:Generated_Source\PSoC5/RTOS_tasks.c ****         xAlreadyYielded = xTaskResumeAll();
1311:Generated_Source\PSoC5/RTOS_tasks.c **** 
1312:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1313:Generated_Source\PSoC5/RTOS_tasks.c ****          * have put ourselves to sleep. */
1314:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xAlreadyYielded == pdFALSE )
1315:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1316:Generated_Source\PSoC5/RTOS_tasks.c ****             portYIELD_WITHIN_API();
1317:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1318:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1319:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1320:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1321:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1322:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1323:Generated_Source\PSoC5/RTOS_tasks.c **** 
1324:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1325:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1326:Generated_Source\PSoC5/RTOS_tasks.c **** 
1327:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1328:Generated_Source\PSoC5/RTOS_tasks.c **** 
1329:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskDelay( const TickType_t xTicksToDelay )
1330:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1331:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
1332:Generated_Source\PSoC5/RTOS_tasks.c **** 
1333:Generated_Source\PSoC5/RTOS_tasks.c ****         /* A delay time of zero just forces a reschedule. */
1334:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xTicksToDelay > ( TickType_t ) 0U )
1335:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1336:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( uxSchedulerSuspended == 0 );
1337:Generated_Source\PSoC5/RTOS_tasks.c ****             vTaskSuspendAll();
1338:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1339:Generated_Source\PSoC5/RTOS_tasks.c ****                 traceTASK_DELAY();
1340:Generated_Source\PSoC5/RTOS_tasks.c **** 
1341:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* A task that is removed from the event list while the
1342:Generated_Source\PSoC5/RTOS_tasks.c ****                  * scheduler is suspended will not get placed in the ready
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 25


1343:Generated_Source\PSoC5/RTOS_tasks.c ****                  * list or removed from the blocked list until the scheduler
1344:Generated_Source\PSoC5/RTOS_tasks.c ****                  * is resumed.
1345:Generated_Source\PSoC5/RTOS_tasks.c ****                  *
1346:Generated_Source\PSoC5/RTOS_tasks.c ****                  * This task cannot be in an event list as it is the currently
1347:Generated_Source\PSoC5/RTOS_tasks.c ****                  * executing task. */
1348:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1349:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1350:Generated_Source\PSoC5/RTOS_tasks.c ****             xAlreadyYielded = xTaskResumeAll();
1351:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1352:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1353:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1354:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1355:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1356:Generated_Source\PSoC5/RTOS_tasks.c **** 
1357:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1358:Generated_Source\PSoC5/RTOS_tasks.c ****          * have put ourselves to sleep. */
1359:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xAlreadyYielded == pdFALSE )
1360:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1361:Generated_Source\PSoC5/RTOS_tasks.c ****             portYIELD_WITHIN_API();
1362:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1363:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1364:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1365:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1366:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1367:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1368:Generated_Source\PSoC5/RTOS_tasks.c **** 
1369:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskDelay */
1370:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1371:Generated_Source\PSoC5/RTOS_tasks.c **** 
1372:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDe
1373:Generated_Source\PSoC5/RTOS_tasks.c **** 
1374:Generated_Source\PSoC5/RTOS_tasks.c ****     eTaskState eTaskGetState( TaskHandle_t xTask )
1375:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1376:Generated_Source\PSoC5/RTOS_tasks.c ****         eTaskState eReturn;
1377:Generated_Source\PSoC5/RTOS_tasks.c ****         List_t const * pxStateList, * pxDelayedList, * pxOverflowedDelayedList;
1378:Generated_Source\PSoC5/RTOS_tasks.c ****         const TCB_t * const pxTCB = xTask;
1379:Generated_Source\PSoC5/RTOS_tasks.c **** 
1380:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxTCB );
1381:Generated_Source\PSoC5/RTOS_tasks.c **** 
1382:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxTCB == pxCurrentTCB )
1383:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1384:Generated_Source\PSoC5/RTOS_tasks.c ****             /* The task calling this function is querying its own state. */
1385:Generated_Source\PSoC5/RTOS_tasks.c ****             eReturn = eRunning;
1386:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1387:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1388:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1389:Generated_Source\PSoC5/RTOS_tasks.c ****             taskENTER_CRITICAL();
1390:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1391:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1392:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxDelayedList = pxDelayedTaskList;
1393:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1394:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1395:Generated_Source\PSoC5/RTOS_tasks.c ****             taskEXIT_CRITICAL();
1396:Generated_Source\PSoC5/RTOS_tasks.c **** 
1397:Generated_Source\PSoC5/RTOS_tasks.c ****             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1398:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1399:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The task being queried is referenced from one of the Blocked
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 26


1400:Generated_Source\PSoC5/RTOS_tasks.c ****                  * lists. */
1401:Generated_Source\PSoC5/RTOS_tasks.c ****                 eReturn = eBlocked;
1402:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1403:Generated_Source\PSoC5/RTOS_tasks.c **** 
1404:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
1405:Generated_Source\PSoC5/RTOS_tasks.c ****                 else if( pxStateList == &xSuspendedTaskList )
1406:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1407:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The task being queried is referenced from the suspended
1408:Generated_Source\PSoC5/RTOS_tasks.c ****                      * list.  Is it genuinely suspended or is it blocked
1409:Generated_Source\PSoC5/RTOS_tasks.c ****                      * indefinitely? */
1410:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1411:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1412:Generated_Source\PSoC5/RTOS_tasks.c ****                         #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1413:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
1414:Generated_Source\PSoC5/RTOS_tasks.c ****                                 BaseType_t x;
1415:Generated_Source\PSoC5/RTOS_tasks.c **** 
1416:Generated_Source\PSoC5/RTOS_tasks.c ****                                 /* The task does not appear on the event list item of
1417:Generated_Source\PSoC5/RTOS_tasks.c ****                                  * and of the RTOS objects, but could still be in the
1418:Generated_Source\PSoC5/RTOS_tasks.c ****                                  * blocked state if it is waiting on its notification
1419:Generated_Source\PSoC5/RTOS_tasks.c ****                                  * rather than waiting on an object.  If not, is
1420:Generated_Source\PSoC5/RTOS_tasks.c ****                                  * suspended. */
1421:Generated_Source\PSoC5/RTOS_tasks.c ****                                 eReturn = eSuspended;
1422:Generated_Source\PSoC5/RTOS_tasks.c **** 
1423:Generated_Source\PSoC5/RTOS_tasks.c ****                                 for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1424:Generated_Source\PSoC5/RTOS_tasks.c ****                                 {
1425:Generated_Source\PSoC5/RTOS_tasks.c ****                                     if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1426:Generated_Source\PSoC5/RTOS_tasks.c ****                                     {
1427:Generated_Source\PSoC5/RTOS_tasks.c ****                                         eReturn = eBlocked;
1428:Generated_Source\PSoC5/RTOS_tasks.c ****                                         break;
1429:Generated_Source\PSoC5/RTOS_tasks.c ****                                     }
1430:Generated_Source\PSoC5/RTOS_tasks.c ****                                 }
1431:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
1432:Generated_Source\PSoC5/RTOS_tasks.c ****                         #else /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1433:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
1434:Generated_Source\PSoC5/RTOS_tasks.c ****                                 eReturn = eSuspended;
1435:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
1436:Generated_Source\PSoC5/RTOS_tasks.c ****                         #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1437:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1438:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
1439:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1440:Generated_Source\PSoC5/RTOS_tasks.c ****                         eReturn = eBlocked;
1441:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1442:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1443:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* if ( INCLUDE_vTaskSuspend == 1 ) */
1444:Generated_Source\PSoC5/RTOS_tasks.c **** 
1445:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
1446:Generated_Source\PSoC5/RTOS_tasks.c ****                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1447:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1448:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The task being queried is referenced from the deleted
1449:Generated_Source\PSoC5/RTOS_tasks.c ****                      * tasks list, or it is not referenced from any lists at
1450:Generated_Source\PSoC5/RTOS_tasks.c ****                      * all. */
1451:Generated_Source\PSoC5/RTOS_tasks.c ****                     eReturn = eDeleted;
1452:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1453:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif
1454:Generated_Source\PSoC5/RTOS_tasks.c **** 
1455:Generated_Source\PSoC5/RTOS_tasks.c ****             else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer
1456:Generated_Source\PSoC5/RTOS_tasks.c ****             {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 27


1457:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* If the task is not in any other state, it must be in the
1458:Generated_Source\PSoC5/RTOS_tasks.c ****                  * Ready (including pending ready) state. */
1459:Generated_Source\PSoC5/RTOS_tasks.c ****                 eReturn = eReady;
1460:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1461:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1462:Generated_Source\PSoC5/RTOS_tasks.c **** 
1463:Generated_Source\PSoC5/RTOS_tasks.c ****         return eReturn;
1464:Generated_Source\PSoC5/RTOS_tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1465:Generated_Source\PSoC5/RTOS_tasks.c **** 
1466:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_eTaskGetState */
1467:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1468:Generated_Source\PSoC5/RTOS_tasks.c **** 
1469:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1470:Generated_Source\PSoC5/RTOS_tasks.c **** 
1471:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1472:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1473:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t const * pxTCB;
1474:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxReturn;
1475:Generated_Source\PSoC5/RTOS_tasks.c **** 
1476:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
1477:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1478:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If null is passed in here then it is the priority of the task
1479:Generated_Source\PSoC5/RTOS_tasks.c ****              * that called uxTaskPriorityGet() that is being queried. */
1480:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1481:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = pxTCB->uxPriority;
1482:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1483:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
1484:Generated_Source\PSoC5/RTOS_tasks.c **** 
1485:Generated_Source\PSoC5/RTOS_tasks.c ****         return uxReturn;
1486:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1487:Generated_Source\PSoC5/RTOS_tasks.c **** 
1488:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1489:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1490:Generated_Source\PSoC5/RTOS_tasks.c **** 
1491:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1492:Generated_Source\PSoC5/RTOS_tasks.c **** 
1493:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1494:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1495:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t const * pxTCB;
1496:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
1497:Generated_Source\PSoC5/RTOS_tasks.c **** 
1498:Generated_Source\PSoC5/RTOS_tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1499:Generated_Source\PSoC5/RTOS_tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1500:Generated_Source\PSoC5/RTOS_tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1501:Generated_Source\PSoC5/RTOS_tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1502:Generated_Source\PSoC5/RTOS_tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1503:Generated_Source\PSoC5/RTOS_tasks.c ****          * is defined in FreeRTOSConfig.h then
1504:Generated_Source\PSoC5/RTOS_tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1505:Generated_Source\PSoC5/RTOS_tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1506:Generated_Source\PSoC5/RTOS_tasks.c ****          * been assigned a priority above the configured maximum system call
1507:Generated_Source\PSoC5/RTOS_tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1508:Generated_Source\PSoC5/RTOS_tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1509:Generated_Source\PSoC5/RTOS_tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1510:Generated_Source\PSoC5/RTOS_tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1511:Generated_Source\PSoC5/RTOS_tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1512:Generated_Source\PSoC5/RTOS_tasks.c ****          * provided on the following link:
1513:Generated_Source\PSoC5/RTOS_tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 28


1514:Generated_Source\PSoC5/RTOS_tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1515:Generated_Source\PSoC5/RTOS_tasks.c **** 
1516:Generated_Source\PSoC5/RTOS_tasks.c ****         uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1517:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1518:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If null is passed in here then it is the priority of the calling
1519:Generated_Source\PSoC5/RTOS_tasks.c ****              * task that is being queried. */
1520:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1521:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = pxTCB->uxPriority;
1522:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1523:Generated_Source\PSoC5/RTOS_tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1524:Generated_Source\PSoC5/RTOS_tasks.c **** 
1525:Generated_Source\PSoC5/RTOS_tasks.c ****         return uxReturn;
1526:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1527:Generated_Source\PSoC5/RTOS_tasks.c **** 
1528:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1529:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1530:Generated_Source\PSoC5/RTOS_tasks.c **** 
1531:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1532:Generated_Source\PSoC5/RTOS_tasks.c **** 
1533:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskPrioritySet( TaskHandle_t xTask,
1534:Generated_Source\PSoC5/RTOS_tasks.c ****                            UBaseType_t uxNewPriority )
1535:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1536:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
1537:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1538:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1539:Generated_Source\PSoC5/RTOS_tasks.c **** 
1540:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1541:Generated_Source\PSoC5/RTOS_tasks.c **** 
1542:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Ensure the new priority is valid. */
1543:Generated_Source\PSoC5/RTOS_tasks.c ****         if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1544:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1545:Generated_Source\PSoC5/RTOS_tasks.c ****             uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1546:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1547:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1548:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1549:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1550:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1551:Generated_Source\PSoC5/RTOS_tasks.c **** 
1552:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
1553:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1554:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If null is passed in here then it is the priority of the calling
1555:Generated_Source\PSoC5/RTOS_tasks.c ****              * task that is being changed. */
1556:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1557:Generated_Source\PSoC5/RTOS_tasks.c **** 
1558:Generated_Source\PSoC5/RTOS_tasks.c ****             traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1559:Generated_Source\PSoC5/RTOS_tasks.c **** 
1560:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( configUSE_MUTEXES == 1 )
1561:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1562:Generated_Source\PSoC5/RTOS_tasks.c ****                     uxCurrentBasePriority = pxTCB->uxBasePriority;
1563:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1564:Generated_Source\PSoC5/RTOS_tasks.c ****             #else
1565:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1566:Generated_Source\PSoC5/RTOS_tasks.c ****                     uxCurrentBasePriority = pxTCB->uxPriority;
1567:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1568:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif
1569:Generated_Source\PSoC5/RTOS_tasks.c **** 
1570:Generated_Source\PSoC5/RTOS_tasks.c ****             if( uxCurrentBasePriority != uxNewPriority )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 29


1571:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1572:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The priority change may have readied a task of higher
1573:Generated_Source\PSoC5/RTOS_tasks.c ****                  * priority than the calling task. */
1574:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( uxNewPriority > uxCurrentBasePriority )
1575:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1576:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxTCB != pxCurrentTCB )
1577:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1578:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* The priority of a task other than the currently
1579:Generated_Source\PSoC5/RTOS_tasks.c ****                          * running task is being raised.  Is the priority being
1580:Generated_Source\PSoC5/RTOS_tasks.c ****                          * raised above that of the running task? */
1581:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
1582:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1583:Generated_Source\PSoC5/RTOS_tasks.c ****                             xYieldRequired = pdTRUE;
1584:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1585:Generated_Source\PSoC5/RTOS_tasks.c ****                         else
1586:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1587:Generated_Source\PSoC5/RTOS_tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1588:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1589:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1590:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
1591:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1592:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* The priority of the running task is being raised,
1593:Generated_Source\PSoC5/RTOS_tasks.c ****                          * but the running task must already be the highest
1594:Generated_Source\PSoC5/RTOS_tasks.c ****                          * priority task able to run so no yield is required. */
1595:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1596:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1597:Generated_Source\PSoC5/RTOS_tasks.c ****                 else if( pxTCB == pxCurrentTCB )
1598:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1599:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Setting the priority of the running task down means
1600:Generated_Source\PSoC5/RTOS_tasks.c ****                      * there may now be another task of higher priority that
1601:Generated_Source\PSoC5/RTOS_tasks.c ****                      * is ready to execute. */
1602:Generated_Source\PSoC5/RTOS_tasks.c ****                     xYieldRequired = pdTRUE;
1603:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1604:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1605:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1606:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Setting the priority of any other task down does not
1607:Generated_Source\PSoC5/RTOS_tasks.c ****                      * require a yield as the running task must be above the
1608:Generated_Source\PSoC5/RTOS_tasks.c ****                      * new priority of the task being modified. */
1609:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1610:Generated_Source\PSoC5/RTOS_tasks.c **** 
1611:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Remember the ready list the task might be referenced from
1612:Generated_Source\PSoC5/RTOS_tasks.c ****                  * before its uxPriority member is changed so the
1613:Generated_Source\PSoC5/RTOS_tasks.c ****                  * taskRESET_READY_PRIORITY() macro can function correctly. */
1614:Generated_Source\PSoC5/RTOS_tasks.c ****                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
1615:Generated_Source\PSoC5/RTOS_tasks.c **** 
1616:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( configUSE_MUTEXES == 1 )
1617:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1618:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Only change the priority being used if the task is not
1619:Generated_Source\PSoC5/RTOS_tasks.c ****                          * currently using an inherited priority. */
1620:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1621:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1622:Generated_Source\PSoC5/RTOS_tasks.c ****                             pxTCB->uxPriority = uxNewPriority;
1623:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1624:Generated_Source\PSoC5/RTOS_tasks.c ****                         else
1625:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
1626:Generated_Source\PSoC5/RTOS_tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1627:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 30


1628:Generated_Source\PSoC5/RTOS_tasks.c **** 
1629:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* The base priority gets set whatever. */
1630:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxTCB->uxBasePriority = uxNewPriority;
1631:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1632:Generated_Source\PSoC5/RTOS_tasks.c ****                 #else /* if ( configUSE_MUTEXES == 1 ) */
1633:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1634:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxTCB->uxPriority = uxNewPriority;
1635:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1636:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1637:Generated_Source\PSoC5/RTOS_tasks.c **** 
1638:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Only reset the event list item value if the value is not
1639:Generated_Source\PSoC5/RTOS_tasks.c ****                  * being used for anything else. */
1640:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_V
1641:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1642:Generated_Source\PSoC5/RTOS_tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX
1643:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1644:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1645:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1646:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1647:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1648:Generated_Source\PSoC5/RTOS_tasks.c **** 
1649:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* If the task is in the blocked or suspended list we need do
1650:Generated_Source\PSoC5/RTOS_tasks.c ****                  * nothing more than change its priority variable. However, if
1651:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the task is in a ready list it needs to be removed and placed
1652:Generated_Source\PSoC5/RTOS_tasks.c ****                  * in the list appropriate to its new priority. */
1653:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( px
1654:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1655:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The task is currently in its ready list - remove before
1656:Generated_Source\PSoC5/RTOS_tasks.c ****                      * adding it to it's new ready list.  As we are in a critical
1657:Generated_Source\PSoC5/RTOS_tasks.c ****                      * section we can do this even if the scheduler is suspended. */
1658:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1659:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1660:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* It is known that the task is in its ready list so
1661:Generated_Source\PSoC5/RTOS_tasks.c ****                          * there is no need to check again and the port level
1662:Generated_Source\PSoC5/RTOS_tasks.c ****                          * reset macro can be called directly. */
1663:Generated_Source\PSoC5/RTOS_tasks.c ****                         portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1664:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1665:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
1666:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1667:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1668:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1669:Generated_Source\PSoC5/RTOS_tasks.c **** 
1670:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1671:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1672:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1673:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1674:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1675:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1676:Generated_Source\PSoC5/RTOS_tasks.c **** 
1677:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xYieldRequired != pdFALSE )
1678:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1679:Generated_Source\PSoC5/RTOS_tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
1680:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1681:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1682:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1683:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1684:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 31


1685:Generated_Source\PSoC5/RTOS_tasks.c **** 
1686:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Remove compiler warning about unused variables when the port
1687:Generated_Source\PSoC5/RTOS_tasks.c ****                  * optimised task selection is not being used. */
1688:Generated_Source\PSoC5/RTOS_tasks.c ****                 ( void ) uxPriorityUsedOnEntry;
1689:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1690:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1691:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
1692:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1693:Generated_Source\PSoC5/RTOS_tasks.c **** 
1694:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1695:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1696:Generated_Source\PSoC5/RTOS_tasks.c **** 
1697:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1698:Generated_Source\PSoC5/RTOS_tasks.c **** 
1699:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1700:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1701:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
1702:Generated_Source\PSoC5/RTOS_tasks.c **** 
1703:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
1704:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1705:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If null is passed in here then it is the running task that is
1706:Generated_Source\PSoC5/RTOS_tasks.c ****              * being suspended. */
1707:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1708:Generated_Source\PSoC5/RTOS_tasks.c **** 
1709:Generated_Source\PSoC5/RTOS_tasks.c ****             traceTASK_SUSPEND( pxTCB );
1710:Generated_Source\PSoC5/RTOS_tasks.c **** 
1711:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Remove task from the ready/delayed list and place in the
1712:Generated_Source\PSoC5/RTOS_tasks.c ****              * suspended list. */
1713:Generated_Source\PSoC5/RTOS_tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1714:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1715:Generated_Source\PSoC5/RTOS_tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1716:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1717:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1718:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1719:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1720:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1721:Generated_Source\PSoC5/RTOS_tasks.c **** 
1722:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Is the task waiting on an event also? */
1723:Generated_Source\PSoC5/RTOS_tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1724:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1725:Generated_Source\PSoC5/RTOS_tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1726:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1727:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1728:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1729:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1730:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1731:Generated_Source\PSoC5/RTOS_tasks.c **** 
1732:Generated_Source\PSoC5/RTOS_tasks.c ****             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1733:Generated_Source\PSoC5/RTOS_tasks.c **** 
1734:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1735:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1736:Generated_Source\PSoC5/RTOS_tasks.c ****                     BaseType_t x;
1737:Generated_Source\PSoC5/RTOS_tasks.c **** 
1738:Generated_Source\PSoC5/RTOS_tasks.c ****                     for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1739:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1740:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1741:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 32


1742:Generated_Source\PSoC5/RTOS_tasks.c ****                             /* The task was blocked to wait for a notification, but is
1743:Generated_Source\PSoC5/RTOS_tasks.c ****                              * now suspended, so no notification was received. */
1744:Generated_Source\PSoC5/RTOS_tasks.c ****                             pxTCB->ucNotifyState[ x ] = taskNOT_WAITING_NOTIFICATION;
1745:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
1746:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1747:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1748:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1749:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1750:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
1751:Generated_Source\PSoC5/RTOS_tasks.c **** 
1752:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xSchedulerRunning != pdFALSE )
1753:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1754:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Reset the next expected unblock time in case it referred to the
1755:Generated_Source\PSoC5/RTOS_tasks.c ****              * task that is now in the Suspended state. */
1756:Generated_Source\PSoC5/RTOS_tasks.c ****             taskENTER_CRITICAL();
1757:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1758:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvResetNextTaskUnblockTime();
1759:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1760:Generated_Source\PSoC5/RTOS_tasks.c ****             taskEXIT_CRITICAL();
1761:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1762:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1763:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1764:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1765:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1766:Generated_Source\PSoC5/RTOS_tasks.c **** 
1767:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxTCB == pxCurrentTCB )
1768:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1769:Generated_Source\PSoC5/RTOS_tasks.c ****             if( xSchedulerRunning != pdFALSE )
1770:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1771:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The current task has just been suspended. */
1772:Generated_Source\PSoC5/RTOS_tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1773:Generated_Source\PSoC5/RTOS_tasks.c ****                 portYIELD_WITHIN_API();
1774:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1775:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1776:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1777:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The scheduler is not running, but the task that was pointed
1778:Generated_Source\PSoC5/RTOS_tasks.c ****                  * to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Generated_Source\PSoC5/RTOS_tasks.c ****                  * must be adjusted to point to a different task. */
1780:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*li
1781:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1782:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* No other tasks are ready, so set pxCurrentTCB back to
1783:Generated_Source\PSoC5/RTOS_tasks.c ****                      * NULL so when the next task is created pxCurrentTCB will
1784:Generated_Source\PSoC5/RTOS_tasks.c ****                      * be set to point to it no matter what its relative priority
1785:Generated_Source\PSoC5/RTOS_tasks.c ****                      * is. */
1786:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxCurrentTCB = NULL;
1787:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1788:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1789:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1790:Generated_Source\PSoC5/RTOS_tasks.c ****                     vTaskSwitchContext();
1791:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1792:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1793:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1794:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1795:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1796:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1797:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1798:Generated_Source\PSoC5/RTOS_tasks.c ****     }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 33


1799:Generated_Source\PSoC5/RTOS_tasks.c **** 
1800:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1802:Generated_Source\PSoC5/RTOS_tasks.c **** 
1803:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Generated_Source\PSoC5/RTOS_tasks.c **** 
1805:Generated_Source\PSoC5/RTOS_tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Generated_Source\PSoC5/RTOS_tasks.c ****     {
  27              		.loc 1 1806 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1807:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn = pdFALSE;
1808:Generated_Source\PSoC5/RTOS_tasks.c ****         const TCB_t * const pxTCB = xTask;
1809:Generated_Source\PSoC5/RTOS_tasks.c **** 
1810:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Accesses xPendingReadyList so must be called from a critical
1811:Generated_Source\PSoC5/RTOS_tasks.c ****          * section. */
1812:Generated_Source\PSoC5/RTOS_tasks.c **** 
1813:Generated_Source\PSoC5/RTOS_tasks.c ****         /* It does not make sense to check if the calling task is suspended. */
1814:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( xTask );
1815:Generated_Source\PSoC5/RTOS_tasks.c **** 
1816:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Is the task being resumed actually in the suspended list? */
1817:Generated_Source\PSoC5/RTOS_tasks.c ****         if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  33              		.loc 1 1817 0
  34 0000 4269     		ldr	r2, [r0, #20]
  35 0002 084B     		ldr	r3, .L6
  36 0004 9A42     		cmp	r2, r3
  37 0006 06D1     		bne	.L3
1818:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1819:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Has the task already been resumed from within an ISR? */
1820:Generated_Source\PSoC5/RTOS_tasks.c ****             if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALS
  38              		.loc 1 1820 0
  39 0008 836A     		ldr	r3, [r0, #40]
  40 000a 074A     		ldr	r2, .L6+4
  41 000c 9342     		cmp	r3, r2
  42 000e 04D0     		beq	.L4
1821:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1822:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Is it in the suspended list because it is in the Suspended
1823:Generated_Source\PSoC5/RTOS_tasks.c ****                  * state, or because is is blocked with no timeout? */
1824:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint
  43              		.loc 1 1824 0
  44 0010 2BB1     		cbz	r3, .L5
1807:Generated_Source\PSoC5/RTOS_tasks.c ****         const TCB_t * const pxTCB = xTask;
  45              		.loc 1 1807 0
  46 0012 0020     		movs	r0, #0
  47              	.LVL1:
  48 0014 7047     		bx	lr
  49              	.LVL2:
  50              	.L3:
  51 0016 0020     		movs	r0, #0
  52              	.LVL3:
  53 0018 7047     		bx	lr
  54              	.LVL4:
  55              	.L4:
  56 001a 0020     		movs	r0, #0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 34


  57              	.LVL5:
  58 001c 7047     		bx	lr
  59              	.LVL6:
  60              	.L5:
1825:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1826:Generated_Source\PSoC5/RTOS_tasks.c ****                     xReturn = pdTRUE;
  61              		.loc 1 1826 0
  62 001e 0120     		movs	r0, #1
  63              	.LVL7:
1827:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1828:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1829:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1830:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1831:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1832:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1833:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1834:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1835:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1836:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1837:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1838:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1839:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1840:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1841:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1842:Generated_Source\PSoC5/RTOS_tasks.c **** 
1843:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
1844:Generated_Source\PSoC5/RTOS_tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  64              		.loc 1 1844 0
  65 0020 7047     		bx	lr
  66              	.L7:
  67 0022 00BF     		.align	2
  68              	.L6:
  69 0024 00000000 		.word	.LANCHOR0
  70 0028 14000000 		.word	.LANCHOR0+20
  71              		.cfi_endproc
  72              	.LFE77:
  73              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
  74              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
  75              		.align	2
  76              		.thumb
  77              		.thumb_func
  78              		.type	prvResetNextTaskUnblockTime, %function
  79              	prvResetNextTaskUnblockTime:
  80              	.LFB106:
1845:Generated_Source\PSoC5/RTOS_tasks.c **** 
1846:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1848:Generated_Source\PSoC5/RTOS_tasks.c **** 
1849:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Generated_Source\PSoC5/RTOS_tasks.c **** 
1851:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskResume( TaskHandle_t xTaskToResume )
1852:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1853:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1854:Generated_Source\PSoC5/RTOS_tasks.c **** 
1855:Generated_Source\PSoC5/RTOS_tasks.c ****         /* It does not make sense to resume the calling task. */
1856:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( xTaskToResume );
1857:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 35


1858:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The parameter cannot be NULL as it is impossible to resume the
1859:Generated_Source\PSoC5/RTOS_tasks.c ****          * currently executing task. */
1860:Generated_Source\PSoC5/RTOS_tasks.c ****         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1862:Generated_Source\PSoC5/RTOS_tasks.c ****             taskENTER_CRITICAL();
1863:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1864:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1866:Generated_Source\PSoC5/RTOS_tasks.c ****                     traceTASK_RESUME( pxTCB );
1867:Generated_Source\PSoC5/RTOS_tasks.c **** 
1868:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The ready list can be accessed even if the scheduler is
1869:Generated_Source\PSoC5/RTOS_tasks.c ****                      * suspended because this is inside a critical section. */
1870:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1871:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1872:Generated_Source\PSoC5/RTOS_tasks.c **** 
1873:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* A higher priority task may have just been resumed. */
1874:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1876:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* This yield may not cause the task just resumed to run,
1877:Generated_Source\PSoC5/RTOS_tasks.c ****                          * but will leave the lists in the correct state for the
1878:Generated_Source\PSoC5/RTOS_tasks.c ****                          * next yield. */
1879:Generated_Source\PSoC5/RTOS_tasks.c ****                         taskYIELD_IF_USING_PREEMPTION();
1880:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1881:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
1882:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1883:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1884:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1885:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1886:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1887:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1888:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1889:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1890:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1891:Generated_Source\PSoC5/RTOS_tasks.c ****             taskEXIT_CRITICAL();
1892:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1893:Generated_Source\PSoC5/RTOS_tasks.c ****         else
1894:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1895:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
1896:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1897:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1898:Generated_Source\PSoC5/RTOS_tasks.c **** 
1899:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Generated_Source\PSoC5/RTOS_tasks.c **** 
1901:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1902:Generated_Source\PSoC5/RTOS_tasks.c **** 
1903:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Generated_Source\PSoC5/RTOS_tasks.c **** 
1905:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Generated_Source\PSoC5/RTOS_tasks.c ****     {
1907:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1908:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1909:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
1910:Generated_Source\PSoC5/RTOS_tasks.c **** 
1911:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( xTaskToResume );
1912:Generated_Source\PSoC5/RTOS_tasks.c **** 
1913:Generated_Source\PSoC5/RTOS_tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1914:Generated_Source\PSoC5/RTOS_tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 36


1915:Generated_Source\PSoC5/RTOS_tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1916:Generated_Source\PSoC5/RTOS_tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1917:Generated_Source\PSoC5/RTOS_tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Generated_Source\PSoC5/RTOS_tasks.c ****          * is defined in FreeRTOSConfig.h then
1919:Generated_Source\PSoC5/RTOS_tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Generated_Source\PSoC5/RTOS_tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1921:Generated_Source\PSoC5/RTOS_tasks.c ****          * been assigned a priority above the configured maximum system call
1922:Generated_Source\PSoC5/RTOS_tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Generated_Source\PSoC5/RTOS_tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1924:Generated_Source\PSoC5/RTOS_tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Generated_Source\PSoC5/RTOS_tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Generated_Source\PSoC5/RTOS_tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1927:Generated_Source\PSoC5/RTOS_tasks.c ****          * provided on the following link:
1928:Generated_Source\PSoC5/RTOS_tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1929:Generated_Source\PSoC5/RTOS_tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Generated_Source\PSoC5/RTOS_tasks.c **** 
1931:Generated_Source\PSoC5/RTOS_tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1933:Generated_Source\PSoC5/RTOS_tasks.c ****             if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1935:Generated_Source\PSoC5/RTOS_tasks.c ****                 traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Generated_Source\PSoC5/RTOS_tasks.c **** 
1937:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Check the ready lists can be accessed. */
1938:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1940:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Ready lists can be accessed so move the task from the
1941:Generated_Source\PSoC5/RTOS_tasks.c ****                      * suspended list to the ready list directly. */
1942:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1944:Generated_Source\PSoC5/RTOS_tasks.c ****                         xYieldRequired = pdTRUE;
1945:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1946:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
1947:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
1948:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1949:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
1950:Generated_Source\PSoC5/RTOS_tasks.c **** 
1951:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1953:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1954:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
1955:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
1956:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The delayed or ready lists cannot be accessed so the task
1957:Generated_Source\PSoC5/RTOS_tasks.c ****                      * is held in the pending ready list until the scheduler is
1958:Generated_Source\PSoC5/RTOS_tasks.c ****                      * unsuspended. */
1959:Generated_Source\PSoC5/RTOS_tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
1961:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1962:Generated_Source\PSoC5/RTOS_tasks.c ****             else
1963:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1964:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1965:Generated_Source\PSoC5/RTOS_tasks.c ****             }
1966:Generated_Source\PSoC5/RTOS_tasks.c ****         }
1967:Generated_Source\PSoC5/RTOS_tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Generated_Source\PSoC5/RTOS_tasks.c **** 
1969:Generated_Source\PSoC5/RTOS_tasks.c ****         return xYieldRequired;
1970:Generated_Source\PSoC5/RTOS_tasks.c ****     }
1971:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 37


1972:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
1974:Generated_Source\PSoC5/RTOS_tasks.c **** 
1975:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskStartScheduler( void )
1976:Generated_Source\PSoC5/RTOS_tasks.c **** {
1977:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xReturn;
1978:Generated_Source\PSoC5/RTOS_tasks.c **** 
1979:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Add the idle task at the lowest priority. */
1980:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Generated_Source\PSoC5/RTOS_tasks.c ****         {
1982:Generated_Source\PSoC5/RTOS_tasks.c ****             StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1983:Generated_Source\PSoC5/RTOS_tasks.c ****             StackType_t * pxIdleTaskStackBuffer = NULL;
1984:Generated_Source\PSoC5/RTOS_tasks.c ****             uint32_t ulIdleTaskStackSize;
1985:Generated_Source\PSoC5/RTOS_tasks.c **** 
1986:Generated_Source\PSoC5/RTOS_tasks.c ****             /* The Idle task is created using user provided RAM - obtain the
1987:Generated_Source\PSoC5/RTOS_tasks.c ****              * address of the RAM then create the idle task. */
1988:Generated_Source\PSoC5/RTOS_tasks.c ****             vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTas
1989:Generated_Source\PSoC5/RTOS_tasks.c ****             xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
1990:Generated_Source\PSoC5/RTOS_tasks.c ****                                                  configIDLE_TASK_NAME,
1991:Generated_Source\PSoC5/RTOS_tasks.c ****                                                  ulIdleTaskStackSize,
1992:Generated_Source\PSoC5/RTOS_tasks.c ****                                                  ( void * ) NULL,       /*lint !e961.  The cast is 
1993:Generated_Source\PSoC5/RTOS_tasks.c ****                                                  portPRIVILEGE_BIT,     /* In effect ( tskIDLE_PRIO
1994:Generated_Source\PSoC5/RTOS_tasks.c ****                                                  pxIdleTaskStackBuffer,
1995:Generated_Source\PSoC5/RTOS_tasks.c ****                                                  pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exceptio
1996:Generated_Source\PSoC5/RTOS_tasks.c **** 
1997:Generated_Source\PSoC5/RTOS_tasks.c ****             if( xIdleTaskHandle != NULL )
1998:Generated_Source\PSoC5/RTOS_tasks.c ****             {
1999:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdPASS;
2000:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2001:Generated_Source\PSoC5/RTOS_tasks.c ****             else
2002:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2003:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdFAIL;
2004:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2005:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2006:Generated_Source\PSoC5/RTOS_tasks.c ****     #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
2007:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2008:Generated_Source\PSoC5/RTOS_tasks.c ****             /* The Idle task is being created using dynamically allocated RAM. */
2009:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = xTaskCreate( prvIdleTask,
2010:Generated_Source\PSoC5/RTOS_tasks.c ****                                    configIDLE_TASK_NAME,
2011:Generated_Source\PSoC5/RTOS_tasks.c ****                                    configMINIMAL_STACK_SIZE,
2012:Generated_Source\PSoC5/RTOS_tasks.c ****                                    ( void * ) NULL,
2013:Generated_Source\PSoC5/RTOS_tasks.c ****                                    portPRIVILEGE_BIT,  /* In effect ( tskIDLE_PRIORITY | portPRIVIL
2014:Generated_Source\PSoC5/RTOS_tasks.c ****                                    &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as i
2015:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2016:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Generated_Source\PSoC5/RTOS_tasks.c **** 
2018:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_TIMERS == 1 )
2019:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2020:Generated_Source\PSoC5/RTOS_tasks.c ****             if( xReturn == pdPASS )
2021:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2022:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = xTimerCreateTimerTask();
2023:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2024:Generated_Source\PSoC5/RTOS_tasks.c ****             else
2025:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2026:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2027:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2028:Generated_Source\PSoC5/RTOS_tasks.c ****         }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 38


2029:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* configUSE_TIMERS */
2030:Generated_Source\PSoC5/RTOS_tasks.c **** 
2031:Generated_Source\PSoC5/RTOS_tasks.c ****     if( xReturn == pdPASS )
2032:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2033:Generated_Source\PSoC5/RTOS_tasks.c ****         /* freertos_tasks_c_additions_init() should only be called if the user
2034:Generated_Source\PSoC5/RTOS_tasks.c ****          * definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Generated_Source\PSoC5/RTOS_tasks.c ****          * the only macro called by the function. */
2036:Generated_Source\PSoC5/RTOS_tasks.c ****         #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2038:Generated_Source\PSoC5/RTOS_tasks.c ****                 freertos_tasks_c_additions_init();
2039:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2040:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
2041:Generated_Source\PSoC5/RTOS_tasks.c **** 
2042:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Interrupts are turned off here, to ensure a tick does not occur
2043:Generated_Source\PSoC5/RTOS_tasks.c ****          * before or during the call to xPortStartScheduler().  The stacks of
2044:Generated_Source\PSoC5/RTOS_tasks.c ****          * the created tasks contain a status word with interrupts switched on
2045:Generated_Source\PSoC5/RTOS_tasks.c ****          * so interrupts will automatically get re-enabled when the first task
2046:Generated_Source\PSoC5/RTOS_tasks.c ****          * starts to run. */
2047:Generated_Source\PSoC5/RTOS_tasks.c ****         portDISABLE_INTERRUPTS();
2048:Generated_Source\PSoC5/RTOS_tasks.c **** 
2049:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2051:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Generated_Source\PSoC5/RTOS_tasks.c ****                  * structure specific to the task that will run first.
2053:Generated_Source\PSoC5/RTOS_tasks.c ****                  * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Generated_Source\PSoC5/RTOS_tasks.c ****                  * for additional information. */
2055:Generated_Source\PSoC5/RTOS_tasks.c ****                 _impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2057:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
2058:Generated_Source\PSoC5/RTOS_tasks.c **** 
2059:Generated_Source\PSoC5/RTOS_tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
2060:Generated_Source\PSoC5/RTOS_tasks.c ****         xSchedulerRunning = pdTRUE;
2061:Generated_Source\PSoC5/RTOS_tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Generated_Source\PSoC5/RTOS_tasks.c **** 
2063:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Generated_Source\PSoC5/RTOS_tasks.c ****          * macro must be defined to configure the timer/counter used to generate
2065:Generated_Source\PSoC5/RTOS_tasks.c ****          * the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Generated_Source\PSoC5/RTOS_tasks.c ****          * is set to 0 and the following line fails to build then ensure you do not
2067:Generated_Source\PSoC5/RTOS_tasks.c ****          * have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Generated_Source\PSoC5/RTOS_tasks.c ****          * FreeRTOSConfig.h file. */
2069:Generated_Source\PSoC5/RTOS_tasks.c ****         portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:Generated_Source\PSoC5/RTOS_tasks.c **** 
2071:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
2072:Generated_Source\PSoC5/RTOS_tasks.c **** 
2073:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Setting up the timer tick is hardware specific and thus in the
2074:Generated_Source\PSoC5/RTOS_tasks.c ****          * portable interface. */
2075:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xPortStartScheduler() != pdFALSE )
2076:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2077:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Should not reach here as if the scheduler is running the
2078:Generated_Source\PSoC5/RTOS_tasks.c ****              * function will not return. */
2079:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2080:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2081:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2082:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2084:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2085:Generated_Source\PSoC5/RTOS_tasks.c ****     else
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 39


2086:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2087:Generated_Source\PSoC5/RTOS_tasks.c ****         /* This line will only be reached if the kernel could not be started,
2088:Generated_Source\PSoC5/RTOS_tasks.c ****          * because there was not enough FreeRTOS heap to create the idle task
2089:Generated_Source\PSoC5/RTOS_tasks.c ****          * or the timer task. */
2090:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2092:Generated_Source\PSoC5/RTOS_tasks.c **** 
2093:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Generated_Source\PSoC5/RTOS_tasks.c ****      * meaning xIdleTaskHandle is not used anywhere else. */
2095:Generated_Source\PSoC5/RTOS_tasks.c ****     ( void ) xIdleTaskHandle;
2096:Generated_Source\PSoC5/RTOS_tasks.c **** }
2097:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2098:Generated_Source\PSoC5/RTOS_tasks.c **** 
2099:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskEndScheduler( void )
2100:Generated_Source\PSoC5/RTOS_tasks.c **** {
2101:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
2102:Generated_Source\PSoC5/RTOS_tasks.c ****      * routine so the original ISRs can be restored if necessary.  The port
2103:Generated_Source\PSoC5/RTOS_tasks.c ****      * layer must ensure interrupts enable  bit is left in the correct state. */
2104:Generated_Source\PSoC5/RTOS_tasks.c ****     portDISABLE_INTERRUPTS();
2105:Generated_Source\PSoC5/RTOS_tasks.c ****     xSchedulerRunning = pdFALSE;
2106:Generated_Source\PSoC5/RTOS_tasks.c ****     vPortEndScheduler();
2107:Generated_Source\PSoC5/RTOS_tasks.c **** }
2108:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2109:Generated_Source\PSoC5/RTOS_tasks.c **** 
2110:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskSuspendAll( void )
2111:Generated_Source\PSoC5/RTOS_tasks.c **** {
2112:Generated_Source\PSoC5/RTOS_tasks.c ****     /* A critical section is not required as the variable is of type
2113:Generated_Source\PSoC5/RTOS_tasks.c ****      * BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Generated_Source\PSoC5/RTOS_tasks.c ****      * post in the FreeRTOS support forum before reporting this as a bug! -
2115:Generated_Source\PSoC5/RTOS_tasks.c ****      * http://goo.gl/wu4acr */
2116:Generated_Source\PSoC5/RTOS_tasks.c **** 
2117:Generated_Source\PSoC5/RTOS_tasks.c ****     /* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Generated_Source\PSoC5/RTOS_tasks.c ****      * do not otherwise exhibit real time behaviour. */
2119:Generated_Source\PSoC5/RTOS_tasks.c ****     portSOFTWARE_BARRIER();
2120:Generated_Source\PSoC5/RTOS_tasks.c **** 
2121:Generated_Source\PSoC5/RTOS_tasks.c ****     /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:Generated_Source\PSoC5/RTOS_tasks.c ****      * is used to allow calls to vTaskSuspendAll() to nest. */
2123:Generated_Source\PSoC5/RTOS_tasks.c ****     ++uxSchedulerSuspended;
2124:Generated_Source\PSoC5/RTOS_tasks.c **** 
2125:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Generated_Source\PSoC5/RTOS_tasks.c ****      * the above increment elsewhere. */
2127:Generated_Source\PSoC5/RTOS_tasks.c ****     portMEMORY_BARRIER();
2128:Generated_Source\PSoC5/RTOS_tasks.c **** }
2129:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2130:Generated_Source\PSoC5/RTOS_tasks.c **** 
2131:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Generated_Source\PSoC5/RTOS_tasks.c **** 
2133:Generated_Source\PSoC5/RTOS_tasks.c ****     static TickType_t prvGetExpectedIdleTime( void )
2134:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2135:Generated_Source\PSoC5/RTOS_tasks.c ****         TickType_t xReturn;
2136:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:Generated_Source\PSoC5/RTOS_tasks.c **** 
2138:Generated_Source\PSoC5/RTOS_tasks.c ****         /* uxHigherPriorityReadyTasks takes care of the case where
2139:Generated_Source\PSoC5/RTOS_tasks.c ****          * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Generated_Source\PSoC5/RTOS_tasks.c ****          * task that are in the Ready state, even though the idle task is
2141:Generated_Source\PSoC5/RTOS_tasks.c ****          * running. */
2142:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 40


2143:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2144:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2146:Generated_Source\PSoC5/RTOS_tasks.c ****                     uxHigherPriorityReadyTasks = pdTRUE;
2147:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2148:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2149:Generated_Source\PSoC5/RTOS_tasks.c ****         #else
2150:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2151:Generated_Source\PSoC5/RTOS_tasks.c ****                 const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Generated_Source\PSoC5/RTOS_tasks.c **** 
2153:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* When port optimised task selection is used the uxTopReadyPriority
2154:Generated_Source\PSoC5/RTOS_tasks.c ****                  * variable is used as a bit map.  If bits other than the least
2155:Generated_Source\PSoC5/RTOS_tasks.c ****                  * significant bit are set then there are tasks that have a priority
2156:Generated_Source\PSoC5/RTOS_tasks.c ****                  * above the idle priority that are in the Ready state.  This takes
2157:Generated_Source\PSoC5/RTOS_tasks.c ****                  * care of the case where the co-operative scheduler is in use. */
2158:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2160:Generated_Source\PSoC5/RTOS_tasks.c ****                     uxHigherPriorityReadyTasks = pdTRUE;
2161:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2162:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2163:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */
2164:Generated_Source\PSoC5/RTOS_tasks.c **** 
2165:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2167:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = 0;
2168:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2169:Generated_Source\PSoC5/RTOS_tasks.c ****         else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2171:Generated_Source\PSoC5/RTOS_tasks.c ****             /* There are other idle priority tasks in the ready state.  If
2172:Generated_Source\PSoC5/RTOS_tasks.c ****              * time slicing is used then the very next tick interrupt must be
2173:Generated_Source\PSoC5/RTOS_tasks.c ****              * processed. */
2174:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = 0;
2175:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2176:Generated_Source\PSoC5/RTOS_tasks.c ****         else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2178:Generated_Source\PSoC5/RTOS_tasks.c ****             /* There are tasks in the Ready state that have a priority above the
2179:Generated_Source\PSoC5/RTOS_tasks.c ****              * idle priority.  This path can only be reached if
2180:Generated_Source\PSoC5/RTOS_tasks.c ****              * configUSE_PREEMPTION is 0. */
2181:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = 0;
2182:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2183:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2184:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2185:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = xNextTaskUnblockTime - xTickCount;
2186:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2187:Generated_Source\PSoC5/RTOS_tasks.c **** 
2188:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
2189:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2190:Generated_Source\PSoC5/RTOS_tasks.c **** 
2191:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2193:Generated_Source\PSoC5/RTOS_tasks.c **** 
2194:Generated_Source\PSoC5/RTOS_tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Generated_Source\PSoC5/RTOS_tasks.c **** {
2196:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxTCB = NULL;
2197:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
2198:Generated_Source\PSoC5/RTOS_tasks.c **** 
2199:Generated_Source\PSoC5/RTOS_tasks.c ****     /* If uxSchedulerSuspended is zero then this function does not match a
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 41


2200:Generated_Source\PSoC5/RTOS_tasks.c ****      * previous call to vTaskSuspendAll(). */
2201:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( uxSchedulerSuspended );
2202:Generated_Source\PSoC5/RTOS_tasks.c **** 
2203:Generated_Source\PSoC5/RTOS_tasks.c ****     /* It is possible that an ISR caused a task to be removed from an event
2204:Generated_Source\PSoC5/RTOS_tasks.c ****      * list while the scheduler was suspended.  If this was the case then the
2205:Generated_Source\PSoC5/RTOS_tasks.c ****      * removed task will have been added to the xPendingReadyList.  Once the
2206:Generated_Source\PSoC5/RTOS_tasks.c ****      * scheduler has been resumed it is safe to move all the pending ready
2207:Generated_Source\PSoC5/RTOS_tasks.c ****      * tasks from this list into their appropriate ready list. */
2208:Generated_Source\PSoC5/RTOS_tasks.c ****     taskENTER_CRITICAL();
2209:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2210:Generated_Source\PSoC5/RTOS_tasks.c ****         --uxSchedulerSuspended;
2211:Generated_Source\PSoC5/RTOS_tasks.c **** 
2212:Generated_Source\PSoC5/RTOS_tasks.c ****         if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2214:Generated_Source\PSoC5/RTOS_tasks.c ****             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2216:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Move any readied tasks from the pending list into the
2217:Generated_Source\PSoC5/RTOS_tasks.c ****                  * appropriate ready list. */
2218:Generated_Source\PSoC5/RTOS_tasks.c ****                 while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2220:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 vo
2221:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2224:Generated_Source\PSoC5/RTOS_tasks.c **** 
2225:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* If the moved task has a priority higher than the current
2226:Generated_Source\PSoC5/RTOS_tasks.c ****                      * task then a yield must be performed. */
2227:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2229:Generated_Source\PSoC5/RTOS_tasks.c ****                         xYieldPending = pdTRUE;
2230:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2231:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
2232:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2233:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2234:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2235:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2236:Generated_Source\PSoC5/RTOS_tasks.c **** 
2237:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB != NULL )
2238:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2239:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* A task was unblocked while the scheduler was suspended,
2240:Generated_Source\PSoC5/RTOS_tasks.c ****                      * which may have prevented the next unblock time from being
2241:Generated_Source\PSoC5/RTOS_tasks.c ****                      * re-calculated, in which case re-calculate it now.  Mainly
2242:Generated_Source\PSoC5/RTOS_tasks.c ****                      * important for low power tickless implementations, where
2243:Generated_Source\PSoC5/RTOS_tasks.c ****                      * this can prevent an unnecessary exit from low power
2244:Generated_Source\PSoC5/RTOS_tasks.c ****                      * state. */
2245:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvResetNextTaskUnblockTime();
2246:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2247:Generated_Source\PSoC5/RTOS_tasks.c **** 
2248:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* If any ticks occurred while the scheduler was suspended then
2249:Generated_Source\PSoC5/RTOS_tasks.c ****                  * they should be processed now.  This ensures the tick count does
2250:Generated_Source\PSoC5/RTOS_tasks.c ****                  * not  slip, and that any delayed tasks are resumed at the correct
2251:Generated_Source\PSoC5/RTOS_tasks.c ****                  * time. */
2252:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2253:Generated_Source\PSoC5/RTOS_tasks.c ****                     TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Generated_Source\PSoC5/RTOS_tasks.c **** 
2255:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( xPendedCounts > ( TickType_t ) 0U )
2256:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 42


2257:Generated_Source\PSoC5/RTOS_tasks.c ****                         do
2258:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
2259:Generated_Source\PSoC5/RTOS_tasks.c ****                             if( xTaskIncrementTick() != pdFALSE )
2260:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
2261:Generated_Source\PSoC5/RTOS_tasks.c ****                                 xYieldPending = pdTRUE;
2262:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
2263:Generated_Source\PSoC5/RTOS_tasks.c ****                             else
2264:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
2265:Generated_Source\PSoC5/RTOS_tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2266:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
2267:Generated_Source\PSoC5/RTOS_tasks.c **** 
2268:Generated_Source\PSoC5/RTOS_tasks.c ****                             --xPendedCounts;
2269:Generated_Source\PSoC5/RTOS_tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
2270:Generated_Source\PSoC5/RTOS_tasks.c **** 
2271:Generated_Source\PSoC5/RTOS_tasks.c ****                         xPendedTicks = 0;
2272:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2273:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
2274:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2275:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2276:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2277:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2278:Generated_Source\PSoC5/RTOS_tasks.c **** 
2279:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xYieldPending != pdFALSE )
2280:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2281:Generated_Source\PSoC5/RTOS_tasks.c ****                     #if ( configUSE_PREEMPTION != 0 )
2282:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
2283:Generated_Source\PSoC5/RTOS_tasks.c ****                             xAlreadyYielded = pdTRUE;
2284:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
2285:Generated_Source\PSoC5/RTOS_tasks.c ****                     #endif
2286:Generated_Source\PSoC5/RTOS_tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
2287:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2288:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
2289:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2290:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2291:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2292:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2293:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2294:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2295:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2296:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
2297:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2298:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2299:Generated_Source\PSoC5/RTOS_tasks.c ****     taskEXIT_CRITICAL();
2300:Generated_Source\PSoC5/RTOS_tasks.c **** 
2301:Generated_Source\PSoC5/RTOS_tasks.c ****     return xAlreadyYielded;
2302:Generated_Source\PSoC5/RTOS_tasks.c **** }
2303:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2304:Generated_Source\PSoC5/RTOS_tasks.c **** 
2305:Generated_Source\PSoC5/RTOS_tasks.c **** TickType_t xTaskGetTickCount( void )
2306:Generated_Source\PSoC5/RTOS_tasks.c **** {
2307:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t xTicks;
2308:Generated_Source\PSoC5/RTOS_tasks.c **** 
2309:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Critical section required if running on a 16 bit processor. */
2310:Generated_Source\PSoC5/RTOS_tasks.c ****     portTICK_TYPE_ENTER_CRITICAL();
2311:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2312:Generated_Source\PSoC5/RTOS_tasks.c ****         xTicks = xTickCount;
2313:Generated_Source\PSoC5/RTOS_tasks.c ****     }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 43


2314:Generated_Source\PSoC5/RTOS_tasks.c ****     portTICK_TYPE_EXIT_CRITICAL();
2315:Generated_Source\PSoC5/RTOS_tasks.c **** 
2316:Generated_Source\PSoC5/RTOS_tasks.c ****     return xTicks;
2317:Generated_Source\PSoC5/RTOS_tasks.c **** }
2318:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2319:Generated_Source\PSoC5/RTOS_tasks.c **** 
2320:Generated_Source\PSoC5/RTOS_tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2321:Generated_Source\PSoC5/RTOS_tasks.c **** {
2322:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t xReturn;
2323:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxSavedInterruptStatus;
2324:Generated_Source\PSoC5/RTOS_tasks.c **** 
2325:Generated_Source\PSoC5/RTOS_tasks.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
2326:Generated_Source\PSoC5/RTOS_tasks.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
2327:Generated_Source\PSoC5/RTOS_tasks.c ****      * above the maximum system call priority are kept permanently enabled, even
2328:Generated_Source\PSoC5/RTOS_tasks.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
2329:Generated_Source\PSoC5/RTOS_tasks.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2330:Generated_Source\PSoC5/RTOS_tasks.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2331:Generated_Source\PSoC5/RTOS_tasks.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
2332:Generated_Source\PSoC5/RTOS_tasks.c ****      * assigned a priority above the configured maximum system call priority.
2333:Generated_Source\PSoC5/RTOS_tasks.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
2334:Generated_Source\PSoC5/RTOS_tasks.c ****      * that have been assigned a priority at or (logically) below the maximum
2335:Generated_Source\PSoC5/RTOS_tasks.c ****      * system call  interrupt priority.  FreeRTOS maintains a separate interrupt
2336:Generated_Source\PSoC5/RTOS_tasks.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
2337:Generated_Source\PSoC5/RTOS_tasks.c ****      * More information (albeit Cortex-M specific) is provided on the following
2338:Generated_Source\PSoC5/RTOS_tasks.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2339:Generated_Source\PSoC5/RTOS_tasks.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2340:Generated_Source\PSoC5/RTOS_tasks.c **** 
2341:Generated_Source\PSoC5/RTOS_tasks.c ****     uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2342:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2343:Generated_Source\PSoC5/RTOS_tasks.c ****         xReturn = xTickCount;
2344:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2345:Generated_Source\PSoC5/RTOS_tasks.c ****     portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2346:Generated_Source\PSoC5/RTOS_tasks.c **** 
2347:Generated_Source\PSoC5/RTOS_tasks.c ****     return xReturn;
2348:Generated_Source\PSoC5/RTOS_tasks.c **** }
2349:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2350:Generated_Source\PSoC5/RTOS_tasks.c **** 
2351:Generated_Source\PSoC5/RTOS_tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2352:Generated_Source\PSoC5/RTOS_tasks.c **** {
2353:Generated_Source\PSoC5/RTOS_tasks.c ****     /* A critical section is not required because the variables are of type
2354:Generated_Source\PSoC5/RTOS_tasks.c ****      * BaseType_t. */
2355:Generated_Source\PSoC5/RTOS_tasks.c ****     return uxCurrentNumberOfTasks;
2356:Generated_Source\PSoC5/RTOS_tasks.c **** }
2357:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2358:Generated_Source\PSoC5/RTOS_tasks.c **** 
2359:Generated_Source\PSoC5/RTOS_tasks.c **** char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed f
2360:Generated_Source\PSoC5/RTOS_tasks.c **** {
2361:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxTCB;
2362:Generated_Source\PSoC5/RTOS_tasks.c **** 
2363:Generated_Source\PSoC5/RTOS_tasks.c ****     /* If null is passed in here then the name of the calling task is being
2364:Generated_Source\PSoC5/RTOS_tasks.c ****      * queried. */
2365:Generated_Source\PSoC5/RTOS_tasks.c ****     pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2366:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxTCB );
2367:Generated_Source\PSoC5/RTOS_tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
2368:Generated_Source\PSoC5/RTOS_tasks.c **** }
2369:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2370:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 44


2371:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2372:Generated_Source\PSoC5/RTOS_tasks.c **** 
2373:Generated_Source\PSoC5/RTOS_tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
2374:Generated_Source\PSoC5/RTOS_tasks.c ****                                                      const char pcNameToQuery[] )
2375:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2376:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxNextTCB, * pxFirstTCB, * pxReturn = NULL;
2377:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t x;
2378:Generated_Source\PSoC5/RTOS_tasks.c ****         char cNextChar;
2379:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xBreakLoop;
2380:Generated_Source\PSoC5/RTOS_tasks.c **** 
2381:Generated_Source\PSoC5/RTOS_tasks.c ****         /* This function is called with the scheduler suspended. */
2382:Generated_Source\PSoC5/RTOS_tasks.c **** 
2383:Generated_Source\PSoC5/RTOS_tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2384:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2385:Generated_Source\PSoC5/RTOS_tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
2386:Generated_Source\PSoC5/RTOS_tasks.c **** 
2387:Generated_Source\PSoC5/RTOS_tasks.c ****             do
2388:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2389:Generated_Source\PSoC5/RTOS_tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
2390:Generated_Source\PSoC5/RTOS_tasks.c **** 
2391:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Check each character in the name looking for a match or
2392:Generated_Source\PSoC5/RTOS_tasks.c ****                  * mismatch. */
2393:Generated_Source\PSoC5/RTOS_tasks.c ****                 xBreakLoop = pdFALSE;
2394:Generated_Source\PSoC5/RTOS_tasks.c **** 
2395:Generated_Source\PSoC5/RTOS_tasks.c ****                 for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2396:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2397:Generated_Source\PSoC5/RTOS_tasks.c ****                     cNextChar = pxNextTCB->pcTaskName[ x ];
2398:Generated_Source\PSoC5/RTOS_tasks.c **** 
2399:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( cNextChar != pcNameToQuery[ x ] )
2400:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2401:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Characters didn't match. */
2402:Generated_Source\PSoC5/RTOS_tasks.c ****                         xBreakLoop = pdTRUE;
2403:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2404:Generated_Source\PSoC5/RTOS_tasks.c ****                     else if( cNextChar == ( char ) 0x00 )
2405:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2406:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Both strings terminated, a match must have been
2407:Generated_Source\PSoC5/RTOS_tasks.c ****                          * found. */
2408:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxReturn = pxNextTCB;
2409:Generated_Source\PSoC5/RTOS_tasks.c ****                         xBreakLoop = pdTRUE;
2410:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2411:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
2412:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2413:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2414:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2415:Generated_Source\PSoC5/RTOS_tasks.c **** 
2416:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( xBreakLoop != pdFALSE )
2417:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2418:Generated_Source\PSoC5/RTOS_tasks.c ****                         break;
2419:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2420:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2421:Generated_Source\PSoC5/RTOS_tasks.c **** 
2422:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxReturn != NULL )
2423:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2424:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The handle has been found. */
2425:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
2426:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2427:Generated_Source\PSoC5/RTOS_tasks.c ****             } while( pxNextTCB != pxFirstTCB );
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 45


2428:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2429:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2430:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2431:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
2432:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2433:Generated_Source\PSoC5/RTOS_tasks.c **** 
2434:Generated_Source\PSoC5/RTOS_tasks.c ****         return pxReturn;
2435:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2436:Generated_Source\PSoC5/RTOS_tasks.c **** 
2437:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2438:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2439:Generated_Source\PSoC5/RTOS_tasks.c **** 
2440:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2441:Generated_Source\PSoC5/RTOS_tasks.c **** 
2442:Generated_Source\PSoC5/RTOS_tasks.c ****     TaskHandle_t xTaskGetHandle( const char * pcNameToQuery ) /*lint !e971 Unqualified char types a
2443:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2444:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxQueue = configMAX_PRIORITIES;
2445:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
2446:Generated_Source\PSoC5/RTOS_tasks.c **** 
2447:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2448:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2449:Generated_Source\PSoC5/RTOS_tasks.c **** 
2450:Generated_Source\PSoC5/RTOS_tasks.c ****         vTaskSuspendAll();
2451:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2452:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Search the ready lists. */
2453:Generated_Source\PSoC5/RTOS_tasks.c ****             do
2454:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2455:Generated_Source\PSoC5/RTOS_tasks.c ****                 uxQueue--;
2456:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueu
2457:Generated_Source\PSoC5/RTOS_tasks.c **** 
2458:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB != NULL )
2459:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2460:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Found the handle. */
2461:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
2462:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2463:Generated_Source\PSoC5/RTOS_tasks.c ****             } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as 
2464:Generated_Source\PSoC5/RTOS_tasks.c **** 
2465:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Search the delayed lists. */
2466:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB == NULL )
2467:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2468:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQ
2469:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2470:Generated_Source\PSoC5/RTOS_tasks.c **** 
2471:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB == NULL )
2472:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2473:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, p
2474:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2475:Generated_Source\PSoC5/RTOS_tasks.c **** 
2476:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
2477:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2478:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxTCB == NULL )
2479:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2480:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Search the suspended list. */
2481:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuer
2482:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2483:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2484:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 46


2485:Generated_Source\PSoC5/RTOS_tasks.c **** 
2486:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
2487:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2488:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxTCB == NULL )
2489:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2490:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Search the deleted list. */
2491:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcName
2492:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2493:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2494:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif
2495:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2496:Generated_Source\PSoC5/RTOS_tasks.c ****         ( void ) xTaskResumeAll();
2497:Generated_Source\PSoC5/RTOS_tasks.c **** 
2498:Generated_Source\PSoC5/RTOS_tasks.c ****         return pxTCB;
2499:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2500:Generated_Source\PSoC5/RTOS_tasks.c **** 
2501:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2502:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2503:Generated_Source\PSoC5/RTOS_tasks.c **** 
2504:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2505:Generated_Source\PSoC5/RTOS_tasks.c **** 
2506:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
2507:Generated_Source\PSoC5/RTOS_tasks.c ****                                       const UBaseType_t uxArraySize,
2508:Generated_Source\PSoC5/RTOS_tasks.c ****                                       uint32_t * const pulTotalRunTime )
2509:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2510:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2511:Generated_Source\PSoC5/RTOS_tasks.c **** 
2512:Generated_Source\PSoC5/RTOS_tasks.c ****         vTaskSuspendAll();
2513:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2514:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Is there a space in the array for each task in the system? */
2515:Generated_Source\PSoC5/RTOS_tasks.c ****             if( uxArraySize >= uxCurrentNumberOfTasks )
2516:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2517:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2518:Generated_Source\PSoC5/RTOS_tasks.c ****                  * task in the Ready state. */
2519:Generated_Source\PSoC5/RTOS_tasks.c ****                 do
2520:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2521:Generated_Source\PSoC5/RTOS_tasks.c ****                     uxQueue--;
2522:Generated_Source\PSoC5/RTOS_tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
2523:Generated_Source\PSoC5/RTOS_tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
2524:Generated_Source\PSoC5/RTOS_tasks.c **** 
2525:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2526:Generated_Source\PSoC5/RTOS_tasks.c ****                  * task in the Blocked state. */
2527:Generated_Source\PSoC5/RTOS_tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2528:Generated_Source\PSoC5/RTOS_tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2529:Generated_Source\PSoC5/RTOS_tasks.c **** 
2530:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( INCLUDE_vTaskDelete == 1 )
2531:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2532:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Fill in an TaskStatus_t structure with information on
2533:Generated_Source\PSoC5/RTOS_tasks.c ****                          * each task that has been deleted but not yet cleaned up. */
2534:Generated_Source\PSoC5/RTOS_tasks.c ****                         uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &
2535:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2536:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif
2537:Generated_Source\PSoC5/RTOS_tasks.c **** 
2538:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
2539:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2540:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Fill in an TaskStatus_t structure with information on
2541:Generated_Source\PSoC5/RTOS_tasks.c ****                          * each task in the Suspended state. */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 47


2542:Generated_Source\PSoC5/RTOS_tasks.c ****                         uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &
2543:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2544:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif
2545:Generated_Source\PSoC5/RTOS_tasks.c **** 
2546:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( configGENERATE_RUN_TIME_STATS == 1 )
2547:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2548:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( pulTotalRunTime != NULL )
2549:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
2550:Generated_Source\PSoC5/RTOS_tasks.c ****                             #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2551:Generated_Source\PSoC5/RTOS_tasks.c ****                                 portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2552:Generated_Source\PSoC5/RTOS_tasks.c ****                             #else
2553:Generated_Source\PSoC5/RTOS_tasks.c ****                                 *pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2554:Generated_Source\PSoC5/RTOS_tasks.c ****                             #endif
2555:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
2556:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2557:Generated_Source\PSoC5/RTOS_tasks.c ****                 #else /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2558:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2559:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( pulTotalRunTime != NULL )
2560:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
2561:Generated_Source\PSoC5/RTOS_tasks.c ****                             *pulTotalRunTime = 0;
2562:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
2563:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2564:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2565:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2566:Generated_Source\PSoC5/RTOS_tasks.c ****             else
2567:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2568:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2569:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2570:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2571:Generated_Source\PSoC5/RTOS_tasks.c ****         ( void ) xTaskResumeAll();
2572:Generated_Source\PSoC5/RTOS_tasks.c **** 
2573:Generated_Source\PSoC5/RTOS_tasks.c ****         return uxTask;
2574:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2575:Generated_Source\PSoC5/RTOS_tasks.c **** 
2576:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2577:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2578:Generated_Source\PSoC5/RTOS_tasks.c **** 
2579:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2580:Generated_Source\PSoC5/RTOS_tasks.c **** 
2581:Generated_Source\PSoC5/RTOS_tasks.c ****     TaskHandle_t xTaskGetIdleTaskHandle( void )
2582:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2583:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2584:Generated_Source\PSoC5/RTOS_tasks.c ****          * started, then xIdleTaskHandle will be NULL. */
2585:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( ( xIdleTaskHandle != NULL ) );
2586:Generated_Source\PSoC5/RTOS_tasks.c ****         return xIdleTaskHandle;
2587:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2588:Generated_Source\PSoC5/RTOS_tasks.c **** 
2589:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2590:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2591:Generated_Source\PSoC5/RTOS_tasks.c **** 
2592:Generated_Source\PSoC5/RTOS_tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2593:Generated_Source\PSoC5/RTOS_tasks.c ****  * This is to ensure vTaskStepTick() is available when user defined low power mode
2594:Generated_Source\PSoC5/RTOS_tasks.c ****  * implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2595:Generated_Source\PSoC5/RTOS_tasks.c ****  * 1. */
2596:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2597:Generated_Source\PSoC5/RTOS_tasks.c **** 
2598:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskStepTick( const TickType_t xTicksToJump )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 48


2599:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2600:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Correct the tick count value after a period during which the tick
2601:Generated_Source\PSoC5/RTOS_tasks.c ****          * was suppressed.  Note this does *not* call the tick hook function for
2602:Generated_Source\PSoC5/RTOS_tasks.c ****          * each stepped tick. */
2603:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2604:Generated_Source\PSoC5/RTOS_tasks.c ****         xTickCount += xTicksToJump;
2605:Generated_Source\PSoC5/RTOS_tasks.c ****         traceINCREASE_TICK_COUNT( xTicksToJump );
2606:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2607:Generated_Source\PSoC5/RTOS_tasks.c **** 
2608:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2609:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2610:Generated_Source\PSoC5/RTOS_tasks.c **** 
2611:Generated_Source\PSoC5/RTOS_tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2612:Generated_Source\PSoC5/RTOS_tasks.c **** {
2613:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xYieldOccurred;
2614:Generated_Source\PSoC5/RTOS_tasks.c **** 
2615:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Must not be called with the scheduler suspended as the implementation
2616:Generated_Source\PSoC5/RTOS_tasks.c ****      * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2617:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( uxSchedulerSuspended == 0 );
2618:Generated_Source\PSoC5/RTOS_tasks.c **** 
2619:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2620:Generated_Source\PSoC5/RTOS_tasks.c ****      * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2621:Generated_Source\PSoC5/RTOS_tasks.c ****     vTaskSuspendAll();
2622:Generated_Source\PSoC5/RTOS_tasks.c ****     xPendedTicks += xTicksToCatchUp;
2623:Generated_Source\PSoC5/RTOS_tasks.c ****     xYieldOccurred = xTaskResumeAll();
2624:Generated_Source\PSoC5/RTOS_tasks.c **** 
2625:Generated_Source\PSoC5/RTOS_tasks.c ****     return xYieldOccurred;
2626:Generated_Source\PSoC5/RTOS_tasks.c **** }
2627:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2628:Generated_Source\PSoC5/RTOS_tasks.c **** 
2629:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2630:Generated_Source\PSoC5/RTOS_tasks.c **** 
2631:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2632:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2633:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB = xTask;
2634:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
2635:Generated_Source\PSoC5/RTOS_tasks.c **** 
2636:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxTCB );
2637:Generated_Source\PSoC5/RTOS_tasks.c **** 
2638:Generated_Source\PSoC5/RTOS_tasks.c ****         vTaskSuspendAll();
2639:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2640:Generated_Source\PSoC5/RTOS_tasks.c ****             /* A task can only be prematurely removed from the Blocked state if
2641:Generated_Source\PSoC5/RTOS_tasks.c ****              * it is actually in the Blocked state. */
2642:Generated_Source\PSoC5/RTOS_tasks.c ****             if( eTaskGetState( xTask ) == eBlocked )
2643:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2644:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdPASS;
2645:Generated_Source\PSoC5/RTOS_tasks.c **** 
2646:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Remove the reference to the task from the blocked list.  An
2647:Generated_Source\PSoC5/RTOS_tasks.c ****                  * interrupt won't touch the xStateListItem because the
2648:Generated_Source\PSoC5/RTOS_tasks.c ****                  * scheduler is suspended. */
2649:Generated_Source\PSoC5/RTOS_tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2650:Generated_Source\PSoC5/RTOS_tasks.c **** 
2651:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Is the task waiting on an event also?  If so remove it from
2652:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the event list too.  Interrupts can touch the event list item,
2653:Generated_Source\PSoC5/RTOS_tasks.c ****                  * even though the scheduler is suspended, so a critical section
2654:Generated_Source\PSoC5/RTOS_tasks.c ****                  * is used. */
2655:Generated_Source\PSoC5/RTOS_tasks.c ****                 taskENTER_CRITICAL();
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 49


2656:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2657:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2658:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2659:Generated_Source\PSoC5/RTOS_tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2660:Generated_Source\PSoC5/RTOS_tasks.c **** 
2661:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* This lets the task know it was forcibly removed from the
2662:Generated_Source\PSoC5/RTOS_tasks.c ****                          * blocked state so it should not re-evaluate its block time and
2663:Generated_Source\PSoC5/RTOS_tasks.c ****                          * then block again. */
2664:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxTCB->ucDelayAborted = pdTRUE;
2665:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2666:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
2667:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2668:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2669:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2670:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2671:Generated_Source\PSoC5/RTOS_tasks.c ****                 taskEXIT_CRITICAL();
2672:Generated_Source\PSoC5/RTOS_tasks.c **** 
2673:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Place the unblocked task into the appropriate ready list. */
2674:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvAddTaskToReadyList( pxTCB );
2675:Generated_Source\PSoC5/RTOS_tasks.c **** 
2676:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* A task being unblocked cannot cause an immediate context
2677:Generated_Source\PSoC5/RTOS_tasks.c ****                  * switch if preemption is turned off. */
2678:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( configUSE_PREEMPTION == 1 )
2679:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2680:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Preemption is on, but a context switch should only be
2681:Generated_Source\PSoC5/RTOS_tasks.c ****                          *  performed if the unblocked task has a priority that is
2682:Generated_Source\PSoC5/RTOS_tasks.c ****                          *  equal to or higher than the currently executing task. */
2683:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2684:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
2685:Generated_Source\PSoC5/RTOS_tasks.c ****                             /* Pend the yield to be performed when the scheduler
2686:Generated_Source\PSoC5/RTOS_tasks.c ****                              * is unsuspended. */
2687:Generated_Source\PSoC5/RTOS_tasks.c ****                             xYieldPending = pdTRUE;
2688:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
2689:Generated_Source\PSoC5/RTOS_tasks.c ****                         else
2690:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
2691:Generated_Source\PSoC5/RTOS_tasks.c ****                             mtCOVERAGE_TEST_MARKER();
2692:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
2693:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2694:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif /* configUSE_PREEMPTION */
2695:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2696:Generated_Source\PSoC5/RTOS_tasks.c ****             else
2697:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2698:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdFAIL;
2699:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2700:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2701:Generated_Source\PSoC5/RTOS_tasks.c ****         ( void ) xTaskResumeAll();
2702:Generated_Source\PSoC5/RTOS_tasks.c **** 
2703:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
2704:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2705:Generated_Source\PSoC5/RTOS_tasks.c **** 
2706:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2707:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
2708:Generated_Source\PSoC5/RTOS_tasks.c **** 
2709:Generated_Source\PSoC5/RTOS_tasks.c **** BaseType_t xTaskIncrementTick( void )
2710:Generated_Source\PSoC5/RTOS_tasks.c **** {
2711:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxTCB;
2712:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t xItemValue;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 50


2713:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
2714:Generated_Source\PSoC5/RTOS_tasks.c **** 
2715:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Called by the portable layer each time a tick interrupt occurs.
2716:Generated_Source\PSoC5/RTOS_tasks.c ****      * Increments the tick then checks to see if the new tick value will cause any
2717:Generated_Source\PSoC5/RTOS_tasks.c ****      * tasks to be unblocked. */
2718:Generated_Source\PSoC5/RTOS_tasks.c ****     traceTASK_INCREMENT_TICK( xTickCount );
2719:Generated_Source\PSoC5/RTOS_tasks.c **** 
2720:Generated_Source\PSoC5/RTOS_tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2721:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2722:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Minor optimisation.  The tick count cannot change in this
2723:Generated_Source\PSoC5/RTOS_tasks.c ****          * block. */
2724:Generated_Source\PSoC5/RTOS_tasks.c ****         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2725:Generated_Source\PSoC5/RTOS_tasks.c **** 
2726:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Increment the RTOS tick, switching the delayed and overflowed
2727:Generated_Source\PSoC5/RTOS_tasks.c ****          * delayed lists if it wraps to 0. */
2728:Generated_Source\PSoC5/RTOS_tasks.c ****         xTickCount = xConstTickCount;
2729:Generated_Source\PSoC5/RTOS_tasks.c **** 
2730:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to fa
2731:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2732:Generated_Source\PSoC5/RTOS_tasks.c ****             taskSWITCH_DELAYED_LISTS();
2733:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2734:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2735:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2736:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
2737:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2738:Generated_Source\PSoC5/RTOS_tasks.c **** 
2739:Generated_Source\PSoC5/RTOS_tasks.c ****         /* See if this tick has made a timeout expire.  Tasks are stored in
2740:Generated_Source\PSoC5/RTOS_tasks.c ****          * the  queue in the order of their wake time - meaning once one task
2741:Generated_Source\PSoC5/RTOS_tasks.c ****          * has been found whose block time has not expired there is no need to
2742:Generated_Source\PSoC5/RTOS_tasks.c ****          * look any further down the list. */
2743:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xConstTickCount >= xNextTaskUnblockTime )
2744:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2745:Generated_Source\PSoC5/RTOS_tasks.c ****             for( ; ; )
2746:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2747:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2748:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2749:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The delayed list is empty.  Set xNextTaskUnblockTime
2750:Generated_Source\PSoC5/RTOS_tasks.c ****                      * to the maximum possible value so it is extremely
2751:Generated_Source\PSoC5/RTOS_tasks.c ****                      * unlikely that the
2752:Generated_Source\PSoC5/RTOS_tasks.c ****                      * if( xTickCount >= xNextTaskUnblockTime ) test will pass
2753:Generated_Source\PSoC5/RTOS_tasks.c ****                      * next time through. */
2754:Generated_Source\PSoC5/RTOS_tasks.c ****                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts
2755:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
2756:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2757:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
2758:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2759:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The delayed list is not empty, get the value of the
2760:Generated_Source\PSoC5/RTOS_tasks.c ****                      * item at the head of the delayed list.  This is the time
2761:Generated_Source\PSoC5/RTOS_tasks.c ****                      * at which the task at the head of the delayed list must
2762:Generated_Source\PSoC5/RTOS_tasks.c ****                      * be removed from the Blocked state. */
2763:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * 
2764:Generated_Source\PSoC5/RTOS_tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2765:Generated_Source\PSoC5/RTOS_tasks.c **** 
2766:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( xConstTickCount < xItemValue )
2767:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2768:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* It is not time to unblock this item yet, but the
2769:Generated_Source\PSoC5/RTOS_tasks.c ****                          * item value is the time at which the task at the head
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 51


2770:Generated_Source\PSoC5/RTOS_tasks.c ****                          * of the blocked list must be removed from the Blocked
2771:Generated_Source\PSoC5/RTOS_tasks.c ****                          * state -  so record the item value in
2772:Generated_Source\PSoC5/RTOS_tasks.c ****                          * xNextTaskUnblockTime. */
2773:Generated_Source\PSoC5/RTOS_tasks.c ****                         xNextTaskUnblockTime = xItemValue;
2774:Generated_Source\PSoC5/RTOS_tasks.c ****                         break; /*lint !e9011 Code structure here is deedmed easier to understand wi
2775:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2776:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
2777:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2778:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2779:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2780:Generated_Source\PSoC5/RTOS_tasks.c **** 
2781:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* It is time to remove the item from the Blocked state. */
2782:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2783:Generated_Source\PSoC5/RTOS_tasks.c **** 
2784:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Is the task waiting on an event also?  If so remove
2785:Generated_Source\PSoC5/RTOS_tasks.c ****                      * it from the event list. */
2786:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2787:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2788:Generated_Source\PSoC5/RTOS_tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2789:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2790:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
2791:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
2792:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2793:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
2794:Generated_Source\PSoC5/RTOS_tasks.c **** 
2795:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Place the unblocked task into the appropriate ready
2796:Generated_Source\PSoC5/RTOS_tasks.c ****                      * list. */
2797:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2798:Generated_Source\PSoC5/RTOS_tasks.c **** 
2799:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* A task being unblocked cannot cause an immediate
2800:Generated_Source\PSoC5/RTOS_tasks.c ****                      * context switch if preemption is turned off. */
2801:Generated_Source\PSoC5/RTOS_tasks.c ****                     #if ( configUSE_PREEMPTION == 1 )
2802:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
2803:Generated_Source\PSoC5/RTOS_tasks.c ****                             /* Preemption is on, but a context switch should
2804:Generated_Source\PSoC5/RTOS_tasks.c ****                              * only be performed if the unblocked task has a
2805:Generated_Source\PSoC5/RTOS_tasks.c ****                              * priority that is equal to or higher than the
2806:Generated_Source\PSoC5/RTOS_tasks.c ****                              * currently executing task. */
2807:Generated_Source\PSoC5/RTOS_tasks.c ****                             if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2808:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
2809:Generated_Source\PSoC5/RTOS_tasks.c ****                                 xSwitchRequired = pdTRUE;
2810:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
2811:Generated_Source\PSoC5/RTOS_tasks.c ****                             else
2812:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
2813:Generated_Source\PSoC5/RTOS_tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2814:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
2815:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
2816:Generated_Source\PSoC5/RTOS_tasks.c ****                     #endif /* configUSE_PREEMPTION */
2817:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2818:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2819:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2820:Generated_Source\PSoC5/RTOS_tasks.c **** 
2821:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Tasks of equal priority to the currently running task will share
2822:Generated_Source\PSoC5/RTOS_tasks.c ****          * processing time (time slice) if preemption is on, and the application
2823:Generated_Source\PSoC5/RTOS_tasks.c ****          * writer has not explicitly turned time slicing off. */
2824:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2825:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2826:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) >
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 52


2827:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2828:Generated_Source\PSoC5/RTOS_tasks.c ****                     xSwitchRequired = pdTRUE;
2829:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2830:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
2831:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2832:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2833:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2834:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2835:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2836:Generated_Source\PSoC5/RTOS_tasks.c **** 
2837:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2838:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2839:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Guard against the tick hook being called when the pended tick
2840:Generated_Source\PSoC5/RTOS_tasks.c ****                  * count is being unwound (when the scheduler is being unlocked). */
2841:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xPendedTicks == ( TickType_t ) 0 )
2842:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2843:Generated_Source\PSoC5/RTOS_tasks.c ****                     vApplicationTickHook();
2844:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2845:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
2846:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2847:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2848:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2849:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2850:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_TICK_HOOK */
2851:Generated_Source\PSoC5/RTOS_tasks.c **** 
2852:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_PREEMPTION == 1 )
2853:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2854:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xYieldPending != pdFALSE )
2855:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2856:Generated_Source\PSoC5/RTOS_tasks.c ****                     xSwitchRequired = pdTRUE;
2857:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2858:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
2859:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
2860:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2861:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
2862:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2863:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_PREEMPTION */
2864:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2865:Generated_Source\PSoC5/RTOS_tasks.c ****     else
2866:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2867:Generated_Source\PSoC5/RTOS_tasks.c ****         ++xPendedTicks;
2868:Generated_Source\PSoC5/RTOS_tasks.c **** 
2869:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The tick hook gets called at regular intervals, even if the
2870:Generated_Source\PSoC5/RTOS_tasks.c ****          * scheduler is locked. */
2871:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2872:Generated_Source\PSoC5/RTOS_tasks.c ****             {
2873:Generated_Source\PSoC5/RTOS_tasks.c ****                 vApplicationTickHook();
2874:Generated_Source\PSoC5/RTOS_tasks.c ****             }
2875:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
2876:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2877:Generated_Source\PSoC5/RTOS_tasks.c **** 
2878:Generated_Source\PSoC5/RTOS_tasks.c ****     return xSwitchRequired;
2879:Generated_Source\PSoC5/RTOS_tasks.c **** }
2880:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2881:Generated_Source\PSoC5/RTOS_tasks.c **** 
2882:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2883:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 53


2884:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskSetApplicationTaskTag( TaskHandle_t xTask,
2885:Generated_Source\PSoC5/RTOS_tasks.c ****                                      TaskHookFunction_t pxHookFunction )
2886:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2887:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * xTCB;
2888:Generated_Source\PSoC5/RTOS_tasks.c **** 
2889:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If xTask is NULL then it is the task hook of the calling task that is
2890:Generated_Source\PSoC5/RTOS_tasks.c ****          * getting set. */
2891:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xTask == NULL )
2892:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2893:Generated_Source\PSoC5/RTOS_tasks.c ****             xTCB = ( TCB_t * ) pxCurrentTCB;
2894:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2895:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2896:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2897:Generated_Source\PSoC5/RTOS_tasks.c ****             xTCB = xTask;
2898:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2899:Generated_Source\PSoC5/RTOS_tasks.c **** 
2900:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2901:Generated_Source\PSoC5/RTOS_tasks.c ****          * the value can be accessed from an interrupt. */
2902:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
2903:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2904:Generated_Source\PSoC5/RTOS_tasks.c ****             xTCB->pxTaskTag = pxHookFunction;
2905:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2906:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
2907:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2908:Generated_Source\PSoC5/RTOS_tasks.c **** 
2909:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2910:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2911:Generated_Source\PSoC5/RTOS_tasks.c **** 
2912:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2913:Generated_Source\PSoC5/RTOS_tasks.c **** 
2914:Generated_Source\PSoC5/RTOS_tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2915:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2916:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
2917:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskHookFunction_t xReturn;
2918:Generated_Source\PSoC5/RTOS_tasks.c **** 
2919:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2920:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2921:Generated_Source\PSoC5/RTOS_tasks.c **** 
2922:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2923:Generated_Source\PSoC5/RTOS_tasks.c ****          * the value can be accessed from an interrupt. */
2924:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
2925:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2926:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pxTCB->pxTaskTag;
2927:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2928:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
2929:Generated_Source\PSoC5/RTOS_tasks.c **** 
2930:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
2931:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2932:Generated_Source\PSoC5/RTOS_tasks.c **** 
2933:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2934:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2935:Generated_Source\PSoC5/RTOS_tasks.c **** 
2936:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2937:Generated_Source\PSoC5/RTOS_tasks.c **** 
2938:Generated_Source\PSoC5/RTOS_tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2939:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2940:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 54


2941:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskHookFunction_t xReturn;
2942:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
2943:Generated_Source\PSoC5/RTOS_tasks.c **** 
2944:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2945:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2946:Generated_Source\PSoC5/RTOS_tasks.c **** 
2947:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2948:Generated_Source\PSoC5/RTOS_tasks.c ****          * the value can be accessed from an interrupt. */
2949:Generated_Source\PSoC5/RTOS_tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2950:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2951:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pxTCB->pxTaskTag;
2952:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2953:Generated_Source\PSoC5/RTOS_tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2954:Generated_Source\PSoC5/RTOS_tasks.c **** 
2955:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
2956:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2957:Generated_Source\PSoC5/RTOS_tasks.c **** 
2958:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2959:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2960:Generated_Source\PSoC5/RTOS_tasks.c **** 
2961:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2962:Generated_Source\PSoC5/RTOS_tasks.c **** 
2963:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask,
2964:Generated_Source\PSoC5/RTOS_tasks.c ****                                              void * pvParameter )
2965:Generated_Source\PSoC5/RTOS_tasks.c ****     {
2966:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * xTCB;
2967:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
2968:Generated_Source\PSoC5/RTOS_tasks.c **** 
2969:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If xTask is NULL then we are calling our own task hook. */
2970:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xTask == NULL )
2971:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2972:Generated_Source\PSoC5/RTOS_tasks.c ****             xTCB = pxCurrentTCB;
2973:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2974:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2975:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2976:Generated_Source\PSoC5/RTOS_tasks.c ****             xTCB = xTask;
2977:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2978:Generated_Source\PSoC5/RTOS_tasks.c **** 
2979:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xTCB->pxTaskTag != NULL )
2980:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2981:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = xTCB->pxTaskTag( pvParameter );
2982:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2983:Generated_Source\PSoC5/RTOS_tasks.c ****         else
2984:Generated_Source\PSoC5/RTOS_tasks.c ****         {
2985:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdFAIL;
2986:Generated_Source\PSoC5/RTOS_tasks.c ****         }
2987:Generated_Source\PSoC5/RTOS_tasks.c **** 
2988:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
2989:Generated_Source\PSoC5/RTOS_tasks.c ****     }
2990:Generated_Source\PSoC5/RTOS_tasks.c **** 
2991:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2992:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
2993:Generated_Source\PSoC5/RTOS_tasks.c **** 
2994:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskSwitchContext( void )
2995:Generated_Source\PSoC5/RTOS_tasks.c **** {
2996:Generated_Source\PSoC5/RTOS_tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2997:Generated_Source\PSoC5/RTOS_tasks.c ****     {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 55


2998:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The scheduler is currently suspended - do not allow a context
2999:Generated_Source\PSoC5/RTOS_tasks.c ****          * switch. */
3000:Generated_Source\PSoC5/RTOS_tasks.c ****         xYieldPending = pdTRUE;
3001:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3002:Generated_Source\PSoC5/RTOS_tasks.c ****     else
3003:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3004:Generated_Source\PSoC5/RTOS_tasks.c ****         xYieldPending = pdFALSE;
3005:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_OUT();
3006:Generated_Source\PSoC5/RTOS_tasks.c **** 
3007:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3008:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3009:Generated_Source\PSoC5/RTOS_tasks.c ****                 #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3010:Generated_Source\PSoC5/RTOS_tasks.c ****                     portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3011:Generated_Source\PSoC5/RTOS_tasks.c ****                 #else
3012:Generated_Source\PSoC5/RTOS_tasks.c ****                     ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3013:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif
3014:Generated_Source\PSoC5/RTOS_tasks.c **** 
3015:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Add the amount of time the task has been running to the
3016:Generated_Source\PSoC5/RTOS_tasks.c ****                  * accumulated time so far.  The time the task started running was
3017:Generated_Source\PSoC5/RTOS_tasks.c ****                  * stored in ulTaskSwitchedInTime.  Note that there is no overflow
3018:Generated_Source\PSoC5/RTOS_tasks.c ****                  * protection here so count values are only valid until the timer
3019:Generated_Source\PSoC5/RTOS_tasks.c ****                  * overflows.  The guard against negative values is to protect
3020:Generated_Source\PSoC5/RTOS_tasks.c ****                  * against suspect run time stat counter implementations - which
3021:Generated_Source\PSoC5/RTOS_tasks.c ****                  * are provided by the application, not the kernel. */
3022:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( ulTotalRunTime > ulTaskSwitchedInTime )
3023:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3024:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3025:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3026:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
3027:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3028:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3029:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3030:Generated_Source\PSoC5/RTOS_tasks.c **** 
3031:Generated_Source\PSoC5/RTOS_tasks.c ****                 ulTaskSwitchedInTime = ulTotalRunTime;
3032:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3033:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configGENERATE_RUN_TIME_STATS */
3034:Generated_Source\PSoC5/RTOS_tasks.c **** 
3035:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Check for stack overflow, if configured. */
3036:Generated_Source\PSoC5/RTOS_tasks.c ****         taskCHECK_FOR_STACK_OVERFLOW();
3037:Generated_Source\PSoC5/RTOS_tasks.c **** 
3038:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Before the currently running task is switched out, save its errno. */
3039:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3040:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3041:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3042:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3043:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3044:Generated_Source\PSoC5/RTOS_tasks.c **** 
3045:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Select a new task to run using either the generic C or port
3046:Generated_Source\PSoC5/RTOS_tasks.c ****          * optimised asm code. */
3047:Generated_Source\PSoC5/RTOS_tasks.c ****         taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with
3048:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
3049:Generated_Source\PSoC5/RTOS_tasks.c **** 
3050:Generated_Source\PSoC5/RTOS_tasks.c ****         /* After the new task is switched in, update the global errno. */
3051:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3052:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3053:Generated_Source\PSoC5/RTOS_tasks.c ****                 FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3054:Generated_Source\PSoC5/RTOS_tasks.c ****             }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 56


3055:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3056:Generated_Source\PSoC5/RTOS_tasks.c **** 
3057:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
3058:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3059:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Switch Newlib's _impure_ptr variable to point to the _reent
3060:Generated_Source\PSoC5/RTOS_tasks.c ****                  * structure specific to this task.
3061:Generated_Source\PSoC5/RTOS_tasks.c ****                  * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3062:Generated_Source\PSoC5/RTOS_tasks.c ****                  * for additional information. */
3063:Generated_Source\PSoC5/RTOS_tasks.c ****                 _impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3064:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3065:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
3066:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3067:Generated_Source\PSoC5/RTOS_tasks.c **** }
3068:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3069:Generated_Source\PSoC5/RTOS_tasks.c **** 
3070:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList,
3071:Generated_Source\PSoC5/RTOS_tasks.c ****                             const TickType_t xTicksToWait )
3072:Generated_Source\PSoC5/RTOS_tasks.c **** {
3073:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxEventList );
3074:Generated_Source\PSoC5/RTOS_tasks.c **** 
3075:Generated_Source\PSoC5/RTOS_tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3076:Generated_Source\PSoC5/RTOS_tasks.c ****      * SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3077:Generated_Source\PSoC5/RTOS_tasks.c **** 
3078:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Place the event list item of the TCB in the appropriate event list.
3079:Generated_Source\PSoC5/RTOS_tasks.c ****      * This is placed in the list in priority order so the highest priority task
3080:Generated_Source\PSoC5/RTOS_tasks.c ****      * is the first to be woken by the event.  The queue that contains the event
3081:Generated_Source\PSoC5/RTOS_tasks.c ****      * list is locked, preventing simultaneous access from interrupts. */
3082:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3083:Generated_Source\PSoC5/RTOS_tasks.c **** 
3084:Generated_Source\PSoC5/RTOS_tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3085:Generated_Source\PSoC5/RTOS_tasks.c **** }
3086:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3087:Generated_Source\PSoC5/RTOS_tasks.c **** 
3088:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
3089:Generated_Source\PSoC5/RTOS_tasks.c ****                                      const TickType_t xItemValue,
3090:Generated_Source\PSoC5/RTOS_tasks.c ****                                      const TickType_t xTicksToWait )
3091:Generated_Source\PSoC5/RTOS_tasks.c **** {
3092:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxEventList );
3093:Generated_Source\PSoC5/RTOS_tasks.c **** 
3094:Generated_Source\PSoC5/RTOS_tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3095:Generated_Source\PSoC5/RTOS_tasks.c ****      * the event groups implementation. */
3096:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( uxSchedulerSuspended != 0 );
3097:Generated_Source\PSoC5/RTOS_tasks.c **** 
3098:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Store the item value in the event list item.  It is safe to access the
3099:Generated_Source\PSoC5/RTOS_tasks.c ****      * event list item here as interrupts won't access the event list item of a
3100:Generated_Source\PSoC5/RTOS_tasks.c ****      * task that is not in the Blocked state. */
3101:Generated_Source\PSoC5/RTOS_tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VA
3102:Generated_Source\PSoC5/RTOS_tasks.c **** 
3103:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Place the event list item of the TCB at the end of the appropriate event
3104:Generated_Source\PSoC5/RTOS_tasks.c ****      * list.  It is safe to access the event list here because it is part of an
3105:Generated_Source\PSoC5/RTOS_tasks.c ****      * event group implementation - and interrupts don't access event groups
3106:Generated_Source\PSoC5/RTOS_tasks.c ****      * directly (instead they access them indirectly by pending function calls to
3107:Generated_Source\PSoC5/RTOS_tasks.c ****      * the task level). */
3108:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3109:Generated_Source\PSoC5/RTOS_tasks.c **** 
3110:Generated_Source\PSoC5/RTOS_tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3111:Generated_Source\PSoC5/RTOS_tasks.c **** }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 57


3112:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3113:Generated_Source\PSoC5/RTOS_tasks.c **** 
3114:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TIMERS == 1 )
3115:Generated_Source\PSoC5/RTOS_tasks.c **** 
3116:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
3117:Generated_Source\PSoC5/RTOS_tasks.c ****                                           TickType_t xTicksToWait,
3118:Generated_Source\PSoC5/RTOS_tasks.c ****                                           const BaseType_t xWaitIndefinitely )
3119:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3120:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxEventList );
3121:Generated_Source\PSoC5/RTOS_tasks.c **** 
3122:Generated_Source\PSoC5/RTOS_tasks.c ****         /* This function should not be called by application code hence the
3123:Generated_Source\PSoC5/RTOS_tasks.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
3124:Generated_Source\PSoC5/RTOS_tasks.c ****          * designed for use by kernel code, and has special calling requirements -
3125:Generated_Source\PSoC5/RTOS_tasks.c ****          * it should be called with the scheduler suspended. */
3126:Generated_Source\PSoC5/RTOS_tasks.c **** 
3127:Generated_Source\PSoC5/RTOS_tasks.c **** 
3128:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Place the event list item of the TCB in the appropriate event list.
3129:Generated_Source\PSoC5/RTOS_tasks.c ****          * In this case it is assume that this is the only task that is going to
3130:Generated_Source\PSoC5/RTOS_tasks.c ****          * be waiting on this event list, so the faster vListInsertEnd() function
3131:Generated_Source\PSoC5/RTOS_tasks.c ****          * can be used in place of vListInsert. */
3132:Generated_Source\PSoC5/RTOS_tasks.c ****         vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3133:Generated_Source\PSoC5/RTOS_tasks.c **** 
3134:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If the task should block indefinitely then set the block time to a
3135:Generated_Source\PSoC5/RTOS_tasks.c ****          * value that will be recognised as an indefinite delay inside the
3136:Generated_Source\PSoC5/RTOS_tasks.c ****          * prvAddCurrentTaskToDelayedList() function. */
3137:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xWaitIndefinitely != pdFALSE )
3138:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3139:Generated_Source\PSoC5/RTOS_tasks.c ****             xTicksToWait = portMAX_DELAY;
3140:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3141:Generated_Source\PSoC5/RTOS_tasks.c **** 
3142:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3143:Generated_Source\PSoC5/RTOS_tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3144:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3145:Generated_Source\PSoC5/RTOS_tasks.c **** 
3146:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TIMERS */
3147:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3148:Generated_Source\PSoC5/RTOS_tasks.c **** 
3149:Generated_Source\PSoC5/RTOS_tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3150:Generated_Source\PSoC5/RTOS_tasks.c **** {
3151:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxUnblockedTCB;
3152:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xReturn;
3153:Generated_Source\PSoC5/RTOS_tasks.c **** 
3154:Generated_Source\PSoC5/RTOS_tasks.c ****     /* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3155:Generated_Source\PSoC5/RTOS_tasks.c ****      * called from a critical section within an ISR. */
3156:Generated_Source\PSoC5/RTOS_tasks.c **** 
3157:Generated_Source\PSoC5/RTOS_tasks.c ****     /* The event list is sorted in priority order, so the first in the list can
3158:Generated_Source\PSoC5/RTOS_tasks.c ****      * be removed as it is known to be the highest priority.  Remove the TCB from
3159:Generated_Source\PSoC5/RTOS_tasks.c ****      * the delayed list, and add it to the ready list.
3160:Generated_Source\PSoC5/RTOS_tasks.c ****      *
3161:Generated_Source\PSoC5/RTOS_tasks.c ****      * If an event is for a queue that is locked then this function will never
3162:Generated_Source\PSoC5/RTOS_tasks.c ****      * get called - the lock count on the queue will get modified instead.  This
3163:Generated_Source\PSoC5/RTOS_tasks.c ****      * means exclusive access to the event list is guaranteed here.
3164:Generated_Source\PSoC5/RTOS_tasks.c ****      *
3165:Generated_Source\PSoC5/RTOS_tasks.c ****      * This function assumes that a check has already been made to ensure that
3166:Generated_Source\PSoC5/RTOS_tasks.c ****      * pxEventList is not empty. */
3167:Generated_Source\PSoC5/RTOS_tasks.c ****     pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as th
3168:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxUnblockedTCB );
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 58


3169:Generated_Source\PSoC5/RTOS_tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3170:Generated_Source\PSoC5/RTOS_tasks.c **** 
3171:Generated_Source\PSoC5/RTOS_tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3172:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3173:Generated_Source\PSoC5/RTOS_tasks.c ****         ( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3174:Generated_Source\PSoC5/RTOS_tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
3175:Generated_Source\PSoC5/RTOS_tasks.c **** 
3176:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3177:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3178:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3179:Generated_Source\PSoC5/RTOS_tasks.c ****                  * might be set to the blocked task's time out time.  If the task is
3180:Generated_Source\PSoC5/RTOS_tasks.c ****                  * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3181:Generated_Source\PSoC5/RTOS_tasks.c ****                  * normally left unchanged, because it is automatically reset to a new
3182:Generated_Source\PSoC5/RTOS_tasks.c ****                  * value when the tick count equals xNextTaskUnblockTime.  However if
3183:Generated_Source\PSoC5/RTOS_tasks.c ****                  * tickless idling is used it might be more important to enter sleep mode
3184:Generated_Source\PSoC5/RTOS_tasks.c ****                  * at the earliest possible time - so reset xNextTaskUnblockTime here to
3185:Generated_Source\PSoC5/RTOS_tasks.c ****                  * ensure it is updated at the earliest possible time. */
3186:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvResetNextTaskUnblockTime();
3187:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3188:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3189:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3190:Generated_Source\PSoC5/RTOS_tasks.c ****     else
3191:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3192:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The delayed and ready lists cannot be accessed, so hold this task
3193:Generated_Source\PSoC5/RTOS_tasks.c ****          * pending until the scheduler is resumed. */
3194:Generated_Source\PSoC5/RTOS_tasks.c ****         vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3195:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3196:Generated_Source\PSoC5/RTOS_tasks.c **** 
3197:Generated_Source\PSoC5/RTOS_tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3198:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3199:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Return true if the task removed from the event list has a higher
3200:Generated_Source\PSoC5/RTOS_tasks.c ****          * priority than the calling task.  This allows the calling task to know if
3201:Generated_Source\PSoC5/RTOS_tasks.c ****          * it should force a context switch now. */
3202:Generated_Source\PSoC5/RTOS_tasks.c ****         xReturn = pdTRUE;
3203:Generated_Source\PSoC5/RTOS_tasks.c **** 
3204:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Mark that a yield is pending in case the user is not using the
3205:Generated_Source\PSoC5/RTOS_tasks.c ****          * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3206:Generated_Source\PSoC5/RTOS_tasks.c ****         xYieldPending = pdTRUE;
3207:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3208:Generated_Source\PSoC5/RTOS_tasks.c ****     else
3209:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3210:Generated_Source\PSoC5/RTOS_tasks.c ****         xReturn = pdFALSE;
3211:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3212:Generated_Source\PSoC5/RTOS_tasks.c **** 
3213:Generated_Source\PSoC5/RTOS_tasks.c ****     return xReturn;
3214:Generated_Source\PSoC5/RTOS_tasks.c **** }
3215:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3216:Generated_Source\PSoC5/RTOS_tasks.c **** 
3217:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
3218:Generated_Source\PSoC5/RTOS_tasks.c ****                                         const TickType_t xItemValue )
3219:Generated_Source\PSoC5/RTOS_tasks.c **** {
3220:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxUnblockedTCB;
3221:Generated_Source\PSoC5/RTOS_tasks.c **** 
3222:Generated_Source\PSoC5/RTOS_tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3223:Generated_Source\PSoC5/RTOS_tasks.c ****      * the event flags implementation. */
3224:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( uxSchedulerSuspended != pdFALSE );
3225:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 59


3226:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Store the new item value in the event list. */
3227:Generated_Source\PSoC5/RTOS_tasks.c ****     listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3228:Generated_Source\PSoC5/RTOS_tasks.c **** 
3229:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Remove the event list form the event flag.  Interrupts do not access
3230:Generated_Source\PSoC5/RTOS_tasks.c ****      * event flags. */
3231:Generated_Source\PSoC5/RTOS_tasks.c ****     pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as th
3232:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxUnblockedTCB );
3233:Generated_Source\PSoC5/RTOS_tasks.c ****     ( void ) uxListRemove( pxEventListItem );
3234:Generated_Source\PSoC5/RTOS_tasks.c **** 
3235:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_TICKLESS_IDLE != 0 )
3236:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3237:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3238:Generated_Source\PSoC5/RTOS_tasks.c ****              * might be set to the blocked task's time out time.  If the task is
3239:Generated_Source\PSoC5/RTOS_tasks.c ****              * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3240:Generated_Source\PSoC5/RTOS_tasks.c ****              * normally left unchanged, because it is automatically reset to a new
3241:Generated_Source\PSoC5/RTOS_tasks.c ****              * value when the tick count equals xNextTaskUnblockTime.  However if
3242:Generated_Source\PSoC5/RTOS_tasks.c ****              * tickless idling is used it might be more important to enter sleep mode
3243:Generated_Source\PSoC5/RTOS_tasks.c ****              * at the earliest possible time - so reset xNextTaskUnblockTime here to
3244:Generated_Source\PSoC5/RTOS_tasks.c ****              * ensure it is updated at the earliest possible time. */
3245:Generated_Source\PSoC5/RTOS_tasks.c ****             prvResetNextTaskUnblockTime();
3246:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3247:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
3248:Generated_Source\PSoC5/RTOS_tasks.c **** 
3249:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Remove the task from the delayed list and add it to the ready list.  The
3250:Generated_Source\PSoC5/RTOS_tasks.c ****      * scheduler is suspended so interrupts will not be accessing the ready
3251:Generated_Source\PSoC5/RTOS_tasks.c ****      * lists. */
3252:Generated_Source\PSoC5/RTOS_tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3253:Generated_Source\PSoC5/RTOS_tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
3254:Generated_Source\PSoC5/RTOS_tasks.c **** 
3255:Generated_Source\PSoC5/RTOS_tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3256:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3257:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The unblocked task has a priority above that of the calling task, so
3258:Generated_Source\PSoC5/RTOS_tasks.c ****          * a context switch is required.  This function is called with the
3259:Generated_Source\PSoC5/RTOS_tasks.c ****          * scheduler suspended so xYieldPending is set so the context switch
3260:Generated_Source\PSoC5/RTOS_tasks.c ****          * occurs immediately that the scheduler is resumed (unsuspended). */
3261:Generated_Source\PSoC5/RTOS_tasks.c ****         xYieldPending = pdTRUE;
3262:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3263:Generated_Source\PSoC5/RTOS_tasks.c **** }
3264:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3265:Generated_Source\PSoC5/RTOS_tasks.c **** 
3266:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Generated_Source\PSoC5/RTOS_tasks.c **** {
3268:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxTimeOut );
3269:Generated_Source\PSoC5/RTOS_tasks.c ****     taskENTER_CRITICAL();
3270:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3271:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTimeOut->xOverflowCount = xNumOfOverflows;
3272:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
3273:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3274:Generated_Source\PSoC5/RTOS_tasks.c ****     taskEXIT_CRITICAL();
3275:Generated_Source\PSoC5/RTOS_tasks.c **** }
3276:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3277:Generated_Source\PSoC5/RTOS_tasks.c **** 
3278:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3279:Generated_Source\PSoC5/RTOS_tasks.c **** {
3280:Generated_Source\PSoC5/RTOS_tasks.c ****     /* For internal use only as it does not use a critical section. */
3281:Generated_Source\PSoC5/RTOS_tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
3282:Generated_Source\PSoC5/RTOS_tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 60


3283:Generated_Source\PSoC5/RTOS_tasks.c **** }
3284:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3285:Generated_Source\PSoC5/RTOS_tasks.c **** 
3286:Generated_Source\PSoC5/RTOS_tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
3287:Generated_Source\PSoC5/RTOS_tasks.c ****                                  TickType_t * const pxTicksToWait )
3288:Generated_Source\PSoC5/RTOS_tasks.c **** {
3289:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xReturn;
3290:Generated_Source\PSoC5/RTOS_tasks.c **** 
3291:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxTimeOut );
3292:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxTicksToWait );
3293:Generated_Source\PSoC5/RTOS_tasks.c **** 
3294:Generated_Source\PSoC5/RTOS_tasks.c ****     taskENTER_CRITICAL();
3295:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3296:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Minor optimisation.  The tick count cannot change in this block. */
3297:Generated_Source\PSoC5/RTOS_tasks.c ****         const TickType_t xConstTickCount = xTickCount;
3298:Generated_Source\PSoC5/RTOS_tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3299:Generated_Source\PSoC5/RTOS_tasks.c **** 
3300:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( INCLUDE_xTaskAbortDelay == 1 )
3301:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3302:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3303:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The delay was aborted, which is not the same as a time out,
3304:Generated_Source\PSoC5/RTOS_tasks.c ****                  * but has the same result. */
3305:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxCurrentTCB->ucDelayAborted = pdFALSE;
3306:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdTRUE;
3307:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3308:Generated_Source\PSoC5/RTOS_tasks.c ****             else
3309:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3310:Generated_Source\PSoC5/RTOS_tasks.c **** 
3311:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3312:Generated_Source\PSoC5/RTOS_tasks.c ****             if( *pxTicksToWait == portMAX_DELAY )
3313:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3314:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* If INCLUDE_vTaskSuspend is set to 1 and the block time
3315:Generated_Source\PSoC5/RTOS_tasks.c ****                  * specified is the maximum block time then the task should block
3316:Generated_Source\PSoC5/RTOS_tasks.c ****                  * indefinitely, and therefore never time out. */
3317:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdFALSE;
3318:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3319:Generated_Source\PSoC5/RTOS_tasks.c ****             else
3320:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3321:Generated_Source\PSoC5/RTOS_tasks.c **** 
3322:Generated_Source\PSoC5/RTOS_tasks.c ****         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTi
3323:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3324:Generated_Source\PSoC5/RTOS_tasks.c ****             /* The tick count is greater than the time at which
3325:Generated_Source\PSoC5/RTOS_tasks.c ****              * vTaskSetTimeout() was called, but has also overflowed since
3326:Generated_Source\PSoC5/RTOS_tasks.c ****              * vTaskSetTimeOut() was called.  It must have wrapped all the way
3327:Generated_Source\PSoC5/RTOS_tasks.c ****              * around and gone past again. This passed since vTaskSetTimeout()
3328:Generated_Source\PSoC5/RTOS_tasks.c ****              * was called. */
3329:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdTRUE;
3330:Generated_Source\PSoC5/RTOS_tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3331:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3332:Generated_Source\PSoC5/RTOS_tasks.c ****         else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant wi
3333:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3334:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Not a genuine timeout. Adjust parameters for time remaining. */
3335:Generated_Source\PSoC5/RTOS_tasks.c ****             *pxTicksToWait -= xElapsedTime;
3336:Generated_Source\PSoC5/RTOS_tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
3337:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdFALSE;
3338:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3339:Generated_Source\PSoC5/RTOS_tasks.c ****         else
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 61


3340:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3341:Generated_Source\PSoC5/RTOS_tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3342:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdTRUE;
3343:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3344:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3345:Generated_Source\PSoC5/RTOS_tasks.c ****     taskEXIT_CRITICAL();
3346:Generated_Source\PSoC5/RTOS_tasks.c **** 
3347:Generated_Source\PSoC5/RTOS_tasks.c ****     return xReturn;
3348:Generated_Source\PSoC5/RTOS_tasks.c **** }
3349:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3350:Generated_Source\PSoC5/RTOS_tasks.c **** 
3351:Generated_Source\PSoC5/RTOS_tasks.c **** void vTaskMissedYield( void )
3352:Generated_Source\PSoC5/RTOS_tasks.c **** {
3353:Generated_Source\PSoC5/RTOS_tasks.c ****     xYieldPending = pdTRUE;
3354:Generated_Source\PSoC5/RTOS_tasks.c **** }
3355:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3356:Generated_Source\PSoC5/RTOS_tasks.c **** 
3357:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3358:Generated_Source\PSoC5/RTOS_tasks.c **** 
3359:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3360:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3361:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxReturn;
3362:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t const * pxTCB;
3363:Generated_Source\PSoC5/RTOS_tasks.c **** 
3364:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xTask != NULL )
3365:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3366:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = xTask;
3367:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
3368:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3369:Generated_Source\PSoC5/RTOS_tasks.c ****         else
3370:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3371:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = 0U;
3372:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3373:Generated_Source\PSoC5/RTOS_tasks.c **** 
3374:Generated_Source\PSoC5/RTOS_tasks.c ****         return uxReturn;
3375:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3376:Generated_Source\PSoC5/RTOS_tasks.c **** 
3377:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3378:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3379:Generated_Source\PSoC5/RTOS_tasks.c **** 
3380:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3381:Generated_Source\PSoC5/RTOS_tasks.c **** 
3382:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskSetTaskNumber( TaskHandle_t xTask,
3383:Generated_Source\PSoC5/RTOS_tasks.c ****                              const UBaseType_t uxHandle )
3384:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3385:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
3386:Generated_Source\PSoC5/RTOS_tasks.c **** 
3387:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xTask != NULL )
3388:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3389:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = xTask;
3390:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
3391:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3392:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3393:Generated_Source\PSoC5/RTOS_tasks.c **** 
3394:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3395:Generated_Source\PSoC5/RTOS_tasks.c **** 
3396:Generated_Source\PSoC5/RTOS_tasks.c **** /*
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 62


3397:Generated_Source\PSoC5/RTOS_tasks.c ****  * -----------------------------------------------------------
3398:Generated_Source\PSoC5/RTOS_tasks.c ****  * The Idle task.
3399:Generated_Source\PSoC5/RTOS_tasks.c ****  * ----------------------------------------------------------
3400:Generated_Source\PSoC5/RTOS_tasks.c ****  *
3401:Generated_Source\PSoC5/RTOS_tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3402:Generated_Source\PSoC5/RTOS_tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3403:Generated_Source\PSoC5/RTOS_tasks.c ****  *
3404:Generated_Source\PSoC5/RTOS_tasks.c ****  * void prvIdleTask( void *pvParameters );
3405:Generated_Source\PSoC5/RTOS_tasks.c ****  *
3406:Generated_Source\PSoC5/RTOS_tasks.c ****  */
3407:Generated_Source\PSoC5/RTOS_tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3408:Generated_Source\PSoC5/RTOS_tasks.c **** {
3409:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Stop warnings. */
3410:Generated_Source\PSoC5/RTOS_tasks.c ****     ( void ) pvParameters;
3411:Generated_Source\PSoC5/RTOS_tasks.c **** 
3412:Generated_Source\PSoC5/RTOS_tasks.c ****     /** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3413:Generated_Source\PSoC5/RTOS_tasks.c ****      * SCHEDULER IS STARTED. **/
3414:Generated_Source\PSoC5/RTOS_tasks.c **** 
3415:Generated_Source\PSoC5/RTOS_tasks.c ****     /* In case a task that has a secure context deletes itself, in which case
3416:Generated_Source\PSoC5/RTOS_tasks.c ****      * the idle task is responsible for deleting the task's secure context, if
3417:Generated_Source\PSoC5/RTOS_tasks.c ****      * any. */
3418:Generated_Source\PSoC5/RTOS_tasks.c ****     portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3419:Generated_Source\PSoC5/RTOS_tasks.c **** 
3420:Generated_Source\PSoC5/RTOS_tasks.c ****     for( ; ; )
3421:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3422:Generated_Source\PSoC5/RTOS_tasks.c ****         /* See if any tasks have deleted themselves - if so then the idle task
3423:Generated_Source\PSoC5/RTOS_tasks.c ****          * is responsible for freeing the deleted task's TCB and stack. */
3424:Generated_Source\PSoC5/RTOS_tasks.c ****         prvCheckTasksWaitingTermination();
3425:Generated_Source\PSoC5/RTOS_tasks.c **** 
3426:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_PREEMPTION == 0 )
3427:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3428:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* If we are not using preemption we keep forcing a task switch to
3429:Generated_Source\PSoC5/RTOS_tasks.c ****                  * see if any other task has become available.  If we are using
3430:Generated_Source\PSoC5/RTOS_tasks.c ****                  * preemption we don't need to do this as any task becoming available
3431:Generated_Source\PSoC5/RTOS_tasks.c ****                  * will automatically get the processor anyway. */
3432:Generated_Source\PSoC5/RTOS_tasks.c ****                 taskYIELD();
3433:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3434:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_PREEMPTION */
3435:Generated_Source\PSoC5/RTOS_tasks.c **** 
3436:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3437:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3438:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* When using preemption tasks of equal priority will be
3439:Generated_Source\PSoC5/RTOS_tasks.c ****                  * timesliced.  If a task that is sharing the idle priority is ready
3440:Generated_Source\PSoC5/RTOS_tasks.c ****                  * to run then the idle task should yield before the end of the
3441:Generated_Source\PSoC5/RTOS_tasks.c ****                  * timeslice.
3442:Generated_Source\PSoC5/RTOS_tasks.c ****                  *
3443:Generated_Source\PSoC5/RTOS_tasks.c ****                  * A critical region is not required here as we are just reading from
3444:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the list, and an occasional incorrect value will not matter.  If
3445:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the ready list at the idle priority contains more than one task
3446:Generated_Source\PSoC5/RTOS_tasks.c ****                  * then a task other than the idle task is ready to execute. */
3447:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBase
3448:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3449:Generated_Source\PSoC5/RTOS_tasks.c ****                     taskYIELD();
3450:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3451:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
3452:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3453:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 63


3454:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3455:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3456:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3457:Generated_Source\PSoC5/RTOS_tasks.c **** 
3458:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_IDLE_HOOK == 1 )
3459:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3460:Generated_Source\PSoC5/RTOS_tasks.c ****                 extern void vApplicationIdleHook( void );
3461:Generated_Source\PSoC5/RTOS_tasks.c **** 
3462:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Call the user defined function from within the idle task.  This
3463:Generated_Source\PSoC5/RTOS_tasks.c ****                  * allows the application designer to add background functionality
3464:Generated_Source\PSoC5/RTOS_tasks.c ****                  * without the overhead of a separate task.
3465:Generated_Source\PSoC5/RTOS_tasks.c ****                  * NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3466:Generated_Source\PSoC5/RTOS_tasks.c ****                  * CALL A FUNCTION THAT MIGHT BLOCK. */
3467:Generated_Source\PSoC5/RTOS_tasks.c ****                 vApplicationIdleHook();
3468:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3469:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_IDLE_HOOK */
3470:Generated_Source\PSoC5/RTOS_tasks.c **** 
3471:Generated_Source\PSoC5/RTOS_tasks.c ****         /* This conditional compilation should use inequality to 0, not equality
3472:Generated_Source\PSoC5/RTOS_tasks.c ****          * to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3473:Generated_Source\PSoC5/RTOS_tasks.c ****          * user defined low power mode  implementations require
3474:Generated_Source\PSoC5/RTOS_tasks.c ****          * configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3475:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3476:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3477:Generated_Source\PSoC5/RTOS_tasks.c ****                 TickType_t xExpectedIdleTime;
3478:Generated_Source\PSoC5/RTOS_tasks.c **** 
3479:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* It is not desirable to suspend then resume the scheduler on
3480:Generated_Source\PSoC5/RTOS_tasks.c ****                  * each iteration of the idle task.  Therefore, a preliminary
3481:Generated_Source\PSoC5/RTOS_tasks.c ****                  * test of the expected idle time is performed without the
3482:Generated_Source\PSoC5/RTOS_tasks.c ****                  * scheduler suspended.  The result here is not necessarily
3483:Generated_Source\PSoC5/RTOS_tasks.c ****                  * valid. */
3484:Generated_Source\PSoC5/RTOS_tasks.c ****                 xExpectedIdleTime = prvGetExpectedIdleTime();
3485:Generated_Source\PSoC5/RTOS_tasks.c **** 
3486:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3488:Generated_Source\PSoC5/RTOS_tasks.c ****                     vTaskSuspendAll();
3489:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
3490:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Now the scheduler is suspended, the expected idle
3491:Generated_Source\PSoC5/RTOS_tasks.c ****                          * time can be sampled again, and this time its value can
3492:Generated_Source\PSoC5/RTOS_tasks.c ****                          * be used. */
3493:Generated_Source\PSoC5/RTOS_tasks.c ****                         configASSERT( xNextTaskUnblockTime >= xTickCount );
3494:Generated_Source\PSoC5/RTOS_tasks.c ****                         xExpectedIdleTime = prvGetExpectedIdleTime();
3495:Generated_Source\PSoC5/RTOS_tasks.c **** 
3496:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* Define the following macro to set xExpectedIdleTime to 0
3497:Generated_Source\PSoC5/RTOS_tasks.c ****                          * if the application does not want
3498:Generated_Source\PSoC5/RTOS_tasks.c ****                          * portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3499:Generated_Source\PSoC5/RTOS_tasks.c ****                         configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3500:Generated_Source\PSoC5/RTOS_tasks.c **** 
3501:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3502:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
3503:Generated_Source\PSoC5/RTOS_tasks.c ****                             traceLOW_POWER_IDLE_BEGIN();
3504:Generated_Source\PSoC5/RTOS_tasks.c ****                             portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3505:Generated_Source\PSoC5/RTOS_tasks.c ****                             traceLOW_POWER_IDLE_END();
3506:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
3507:Generated_Source\PSoC5/RTOS_tasks.c ****                         else
3508:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
3509:Generated_Source\PSoC5/RTOS_tasks.c ****                             mtCOVERAGE_TEST_MARKER();
3510:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 64


3511:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
3512:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) xTaskResumeAll();
3513:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3514:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
3515:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3516:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3517:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3518:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3519:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_TICKLESS_IDLE */
3520:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3521:Generated_Source\PSoC5/RTOS_tasks.c **** }
3522:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3523:Generated_Source\PSoC5/RTOS_tasks.c **** 
3524:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
3525:Generated_Source\PSoC5/RTOS_tasks.c **** 
3526:Generated_Source\PSoC5/RTOS_tasks.c ****     eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3527:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3528:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The idle task exists in addition to the application tasks. */
3529:Generated_Source\PSoC5/RTOS_tasks.c ****         const UBaseType_t uxNonApplicationTasks = 1;
3530:Generated_Source\PSoC5/RTOS_tasks.c ****         eSleepModeStatus eReturn = eStandardSleep;
3531:Generated_Source\PSoC5/RTOS_tasks.c **** 
3532:Generated_Source\PSoC5/RTOS_tasks.c ****         /* This function must be called from a critical section. */
3533:Generated_Source\PSoC5/RTOS_tasks.c **** 
3534:Generated_Source\PSoC5/RTOS_tasks.c ****         if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3535:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3536:Generated_Source\PSoC5/RTOS_tasks.c ****             /* A task was made ready while the scheduler was suspended. */
3537:Generated_Source\PSoC5/RTOS_tasks.c ****             eReturn = eAbortSleep;
3538:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3539:Generated_Source\PSoC5/RTOS_tasks.c ****         else if( xYieldPending != pdFALSE )
3540:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3541:Generated_Source\PSoC5/RTOS_tasks.c ****             /* A yield was pended while the scheduler was suspended. */
3542:Generated_Source\PSoC5/RTOS_tasks.c ****             eReturn = eAbortSleep;
3543:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3544:Generated_Source\PSoC5/RTOS_tasks.c ****         else if( xPendedTicks != 0 )
3545:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3546:Generated_Source\PSoC5/RTOS_tasks.c ****             /* A tick interrupt has already occurred but was held pending
3547:Generated_Source\PSoC5/RTOS_tasks.c ****              * because the scheduler is suspended. */
3548:Generated_Source\PSoC5/RTOS_tasks.c ****             eReturn = eAbortSleep;
3549:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3550:Generated_Source\PSoC5/RTOS_tasks.c ****         else
3551:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3552:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If all the tasks are in the suspended list (which might mean they
3553:Generated_Source\PSoC5/RTOS_tasks.c ****              * have an infinite block time rather than actually being suspended)
3554:Generated_Source\PSoC5/RTOS_tasks.c ****              * then it is safe to turn all clocks off and just wait for external
3555:Generated_Source\PSoC5/RTOS_tasks.c ****              * interrupts. */
3556:Generated_Source\PSoC5/RTOS_tasks.c ****             if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonA
3557:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3558:Generated_Source\PSoC5/RTOS_tasks.c ****                 eReturn = eNoTasksWaitingTimeout;
3559:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3560:Generated_Source\PSoC5/RTOS_tasks.c ****             else
3561:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3562:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3563:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3564:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3565:Generated_Source\PSoC5/RTOS_tasks.c **** 
3566:Generated_Source\PSoC5/RTOS_tasks.c ****         return eReturn;
3567:Generated_Source\PSoC5/RTOS_tasks.c ****     }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 65


3568:Generated_Source\PSoC5/RTOS_tasks.c **** 
3569:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3570:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3571:Generated_Source\PSoC5/RTOS_tasks.c **** 
3572:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3573:Generated_Source\PSoC5/RTOS_tasks.c **** 
3574:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
3575:Generated_Source\PSoC5/RTOS_tasks.c ****                                             BaseType_t xIndex,
3576:Generated_Source\PSoC5/RTOS_tasks.c ****                                             void * pvValue )
3577:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3578:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
3579:Generated_Source\PSoC5/RTOS_tasks.c **** 
3580:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3581:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3582:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSet );
3583:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( pxTCB != NULL );
3584:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3585:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3586:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3587:Generated_Source\PSoC5/RTOS_tasks.c **** 
3588:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3590:Generated_Source\PSoC5/RTOS_tasks.c **** 
3591:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3592:Generated_Source\PSoC5/RTOS_tasks.c **** 
3593:Generated_Source\PSoC5/RTOS_tasks.c ****     void * pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
3594:Generated_Source\PSoC5/RTOS_tasks.c ****                                                BaseType_t xIndex )
3595:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3596:Generated_Source\PSoC5/RTOS_tasks.c ****         void * pvReturn = NULL;
3597:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
3598:Generated_Source\PSoC5/RTOS_tasks.c **** 
3599:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3600:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3601:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3602:Generated_Source\PSoC5/RTOS_tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3603:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3604:Generated_Source\PSoC5/RTOS_tasks.c ****         else
3605:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3606:Generated_Source\PSoC5/RTOS_tasks.c ****             pvReturn = NULL;
3607:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3608:Generated_Source\PSoC5/RTOS_tasks.c **** 
3609:Generated_Source\PSoC5/RTOS_tasks.c ****         return pvReturn;
3610:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3611:Generated_Source\PSoC5/RTOS_tasks.c **** 
3612:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3613:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3614:Generated_Source\PSoC5/RTOS_tasks.c **** 
3615:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3616:Generated_Source\PSoC5/RTOS_tasks.c **** 
3617:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,
3618:Generated_Source\PSoC5/RTOS_tasks.c ****                                   const MemoryRegion_t * const xRegions )
3619:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3620:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
3621:Generated_Source\PSoC5/RTOS_tasks.c **** 
3622:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If null is passed in here then we are modifying the MPU settings of
3623:Generated_Source\PSoC5/RTOS_tasks.c ****          * the calling task. */
3624:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTaskToModify );
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 66


3625:Generated_Source\PSoC5/RTOS_tasks.c **** 
3626:Generated_Source\PSoC5/RTOS_tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3627:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3628:Generated_Source\PSoC5/RTOS_tasks.c **** 
3629:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3630:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3631:Generated_Source\PSoC5/RTOS_tasks.c **** 
3632:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvInitialiseTaskLists( void )
3633:Generated_Source\PSoC5/RTOS_tasks.c **** {
3634:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxPriority;
3635:Generated_Source\PSoC5/RTOS_tasks.c **** 
3636:Generated_Source\PSoC5/RTOS_tasks.c ****     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPrio
3637:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3638:Generated_Source\PSoC5/RTOS_tasks.c ****         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3639:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3640:Generated_Source\PSoC5/RTOS_tasks.c **** 
3641:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialise( &xDelayedTaskList1 );
3642:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialise( &xDelayedTaskList2 );
3643:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialise( &xPendingReadyList );
3644:Generated_Source\PSoC5/RTOS_tasks.c **** 
3645:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3646:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3647:Generated_Source\PSoC5/RTOS_tasks.c ****             vListInitialise( &xTasksWaitingTermination );
3648:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3649:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3650:Generated_Source\PSoC5/RTOS_tasks.c **** 
3651:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
3652:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3653:Generated_Source\PSoC5/RTOS_tasks.c ****             vListInitialise( &xSuspendedTaskList );
3654:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3655:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
3656:Generated_Source\PSoC5/RTOS_tasks.c **** 
3657:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3658:Generated_Source\PSoC5/RTOS_tasks.c ****      * using list2. */
3659:Generated_Source\PSoC5/RTOS_tasks.c ****     pxDelayedTaskList = &xDelayedTaskList1;
3660:Generated_Source\PSoC5/RTOS_tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
3661:Generated_Source\PSoC5/RTOS_tasks.c **** }
3662:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3663:Generated_Source\PSoC5/RTOS_tasks.c **** 
3664:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvCheckTasksWaitingTermination( void )
3665:Generated_Source\PSoC5/RTOS_tasks.c **** {
3666:Generated_Source\PSoC5/RTOS_tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3667:Generated_Source\PSoC5/RTOS_tasks.c **** 
3668:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3669:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3670:Generated_Source\PSoC5/RTOS_tasks.c ****             TCB_t * pxTCB;
3671:Generated_Source\PSoC5/RTOS_tasks.c **** 
3672:Generated_Source\PSoC5/RTOS_tasks.c ****             /* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3673:Generated_Source\PSoC5/RTOS_tasks.c ****              * being called too often in the idle task. */
3674:Generated_Source\PSoC5/RTOS_tasks.c ****             while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3675:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3676:Generated_Source\PSoC5/RTOS_tasks.c ****                 taskENTER_CRITICAL();
3677:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3678:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e
3679:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3680:Generated_Source\PSoC5/RTOS_tasks.c ****                     --uxCurrentNumberOfTasks;
3681:Generated_Source\PSoC5/RTOS_tasks.c ****                     --uxDeletedTasksWaitingCleanUp;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 67


3682:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3683:Generated_Source\PSoC5/RTOS_tasks.c ****                 taskEXIT_CRITICAL();
3684:Generated_Source\PSoC5/RTOS_tasks.c **** 
3685:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvDeleteTCB( pxTCB );
3686:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3687:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3688:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3689:Generated_Source\PSoC5/RTOS_tasks.c **** }
3690:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3691:Generated_Source\PSoC5/RTOS_tasks.c **** 
3692:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3693:Generated_Source\PSoC5/RTOS_tasks.c **** 
3694:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskGetInfo( TaskHandle_t xTask,
3695:Generated_Source\PSoC5/RTOS_tasks.c ****                        TaskStatus_t * pxTaskStatus,
3696:Generated_Source\PSoC5/RTOS_tasks.c ****                        BaseType_t xGetFreeStackSpace,
3697:Generated_Source\PSoC5/RTOS_tasks.c ****                        eTaskState eState )
3698:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3699:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
3700:Generated_Source\PSoC5/RTOS_tasks.c **** 
3701:Generated_Source\PSoC5/RTOS_tasks.c ****         /* xTask is NULL then get the state of the calling task. */
3702:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3703:Generated_Source\PSoC5/RTOS_tasks.c **** 
3704:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3705:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
3706:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3707:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
3708:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3709:Generated_Source\PSoC5/RTOS_tasks.c **** 
3710:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_MUTEXES == 1 )
3711:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3712:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3713:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3714:Generated_Source\PSoC5/RTOS_tasks.c ****         #else
3715:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3716:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTaskStatus->uxBasePriority = 0;
3717:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3718:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3719:Generated_Source\PSoC5/RTOS_tasks.c **** 
3720:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3721:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3722:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3723:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3724:Generated_Source\PSoC5/RTOS_tasks.c ****         #else
3725:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3726:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTaskStatus->ulRunTimeCounter = 0;
3727:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3728:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3729:Generated_Source\PSoC5/RTOS_tasks.c **** 
3730:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Obtaining the task state is a little fiddly, so is only done if the
3731:Generated_Source\PSoC5/RTOS_tasks.c ****          * value of eState passed into this function is eInvalid - otherwise the
3732:Generated_Source\PSoC5/RTOS_tasks.c ****          * state is just set to whatever is passed in. */
3733:Generated_Source\PSoC5/RTOS_tasks.c ****         if( eState != eInvalid )
3734:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3735:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB == pxCurrentTCB )
3736:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3737:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTaskStatus->eCurrentState = eRunning;
3738:Generated_Source\PSoC5/RTOS_tasks.c ****             }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 68


3739:Generated_Source\PSoC5/RTOS_tasks.c ****             else
3740:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3741:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTaskStatus->eCurrentState = eState;
3742:Generated_Source\PSoC5/RTOS_tasks.c **** 
3743:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
3744:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
3745:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* If the task is in the suspended list then there is a
3746:Generated_Source\PSoC5/RTOS_tasks.c ****                          *  chance it is actually just blocked indefinitely - so really
3747:Generated_Source\PSoC5/RTOS_tasks.c ****                          *  it should be reported as being in the Blocked state. */
3748:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( eState == eSuspended )
3749:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
3750:Generated_Source\PSoC5/RTOS_tasks.c ****                             vTaskSuspendAll();
3751:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
3752:Generated_Source\PSoC5/RTOS_tasks.c ****                                 if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3753:Generated_Source\PSoC5/RTOS_tasks.c ****                                 {
3754:Generated_Source\PSoC5/RTOS_tasks.c ****                                     pxTaskStatus->eCurrentState = eBlocked;
3755:Generated_Source\PSoC5/RTOS_tasks.c ****                                 }
3756:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
3757:Generated_Source\PSoC5/RTOS_tasks.c ****                             ( void ) xTaskResumeAll();
3758:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
3759:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
3760:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif /* INCLUDE_vTaskSuspend */
3761:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3762:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3763:Generated_Source\PSoC5/RTOS_tasks.c ****         else
3764:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3765:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3766:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3767:Generated_Source\PSoC5/RTOS_tasks.c **** 
3768:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3769:Generated_Source\PSoC5/RTOS_tasks.c ****          * parameter is provided to allow it to be skipped. */
3770:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xGetFreeStackSpace != pdFALSE )
3771:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3772:Generated_Source\PSoC5/RTOS_tasks.c ****             #if ( portSTACK_GROWTH > 0 )
3773:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3774:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) 
3775:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3776:Generated_Source\PSoC5/RTOS_tasks.c ****             #else
3777:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3778:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) 
3779:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3780:Generated_Source\PSoC5/RTOS_tasks.c ****             #endif
3781:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3782:Generated_Source\PSoC5/RTOS_tasks.c ****         else
3783:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3784:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTaskStatus->usStackHighWaterMark = 0;
3785:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3786:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3787:Generated_Source\PSoC5/RTOS_tasks.c **** 
3788:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3789:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3790:Generated_Source\PSoC5/RTOS_tasks.c **** 
3791:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3792:Generated_Source\PSoC5/RTOS_tasks.c **** 
3793:Generated_Source\PSoC5/RTOS_tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
3794:Generated_Source\PSoC5/RTOS_tasks.c ****                                                      List_t * pxList,
3795:Generated_Source\PSoC5/RTOS_tasks.c ****                                                      eTaskState eState )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 69


3796:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3797:Generated_Source\PSoC5/RTOS_tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB, * pxFirstTCB;
3798:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxTask = 0;
3799:Generated_Source\PSoC5/RTOS_tasks.c **** 
3800:Generated_Source\PSoC5/RTOS_tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3801:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3802:Generated_Source\PSoC5/RTOS_tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
3803:Generated_Source\PSoC5/RTOS_tasks.c **** 
3804:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Populate an TaskStatus_t structure within the
3805:Generated_Source\PSoC5/RTOS_tasks.c ****              * pxTaskStatusArray array for each task that is referenced from
3806:Generated_Source\PSoC5/RTOS_tasks.c ****              * pxList.  See the definition of TaskStatus_t in task.h for the
3807:Generated_Source\PSoC5/RTOS_tasks.c ****              * meaning of each TaskStatus_t structure member. */
3808:Generated_Source\PSoC5/RTOS_tasks.c ****             do
3809:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3810:Generated_Source\PSoC5/RTOS_tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
3811:Generated_Source\PSoC5/RTOS_tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
3812:Generated_Source\PSoC5/RTOS_tasks.c ****                 uxTask++;
3813:Generated_Source\PSoC5/RTOS_tasks.c ****             } while( pxNextTCB != pxFirstTCB );
3814:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3815:Generated_Source\PSoC5/RTOS_tasks.c ****         else
3816:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3817:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
3818:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3819:Generated_Source\PSoC5/RTOS_tasks.c **** 
3820:Generated_Source\PSoC5/RTOS_tasks.c ****         return uxTask;
3821:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3822:Generated_Source\PSoC5/RTOS_tasks.c **** 
3823:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3824:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3825:Generated_Source\PSoC5/RTOS_tasks.c **** 
3826:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3827:Generated_Source\PSoC5/RTOS_tasks.c **** 
3828:Generated_Source\PSoC5/RTOS_tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3829:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3830:Generated_Source\PSoC5/RTOS_tasks.c ****         uint32_t ulCount = 0U;
3831:Generated_Source\PSoC5/RTOS_tasks.c **** 
3832:Generated_Source\PSoC5/RTOS_tasks.c ****         while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3833:Generated_Source\PSoC5/RTOS_tasks.c ****         {
3834:Generated_Source\PSoC5/RTOS_tasks.c ****             pucStackByte -= portSTACK_GROWTH;
3835:Generated_Source\PSoC5/RTOS_tasks.c ****             ulCount++;
3836:Generated_Source\PSoC5/RTOS_tasks.c ****         }
3837:Generated_Source\PSoC5/RTOS_tasks.c **** 
3838:Generated_Source\PSoC5/RTOS_tasks.c ****         ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on sma
3839:Generated_Source\PSoC5/RTOS_tasks.c **** 
3840:Generated_Source\PSoC5/RTOS_tasks.c ****         return ( configSTACK_DEPTH_TYPE ) ulCount;
3841:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3842:Generated_Source\PSoC5/RTOS_tasks.c **** 
3843:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3844:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3845:Generated_Source\PSoC5/RTOS_tasks.c **** 
3846:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3847:Generated_Source\PSoC5/RTOS_tasks.c **** 
3848:Generated_Source\PSoC5/RTOS_tasks.c **** /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3849:Generated_Source\PSoC5/RTOS_tasks.c ****  * same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3850:Generated_Source\PSoC5/RTOS_tasks.c ****  * user to determine the return type.  It gets around the problem of the value
3851:Generated_Source\PSoC5/RTOS_tasks.c ****  * overflowing on 8-bit types without breaking backward compatibility for
3852:Generated_Source\PSoC5/RTOS_tasks.c ****  * applications that expect an 8-bit return type. */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 70


3853:Generated_Source\PSoC5/RTOS_tasks.c ****     configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3854:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3855:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
3856:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t * pucEndOfStack;
3857:Generated_Source\PSoC5/RTOS_tasks.c ****         configSTACK_DEPTH_TYPE uxReturn;
3858:Generated_Source\PSoC5/RTOS_tasks.c **** 
3859:Generated_Source\PSoC5/RTOS_tasks.c ****         /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3860:Generated_Source\PSoC5/RTOS_tasks.c ****          * the same except for their return type.  Using configSTACK_DEPTH_TYPE
3861:Generated_Source\PSoC5/RTOS_tasks.c ****          * allows the user to determine the return type.  It gets around the
3862:Generated_Source\PSoC5/RTOS_tasks.c ****          * problem of the value overflowing on 8-bit types without breaking
3863:Generated_Source\PSoC5/RTOS_tasks.c ****          * backward compatibility for applications that expect an 8-bit return
3864:Generated_Source\PSoC5/RTOS_tasks.c ****          * type. */
3865:Generated_Source\PSoC5/RTOS_tasks.c **** 
3866:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3867:Generated_Source\PSoC5/RTOS_tasks.c **** 
3868:Generated_Source\PSoC5/RTOS_tasks.c ****         #if portSTACK_GROWTH < 0
3869:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3870:Generated_Source\PSoC5/RTOS_tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3871:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3872:Generated_Source\PSoC5/RTOS_tasks.c ****         #else
3873:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3874:Generated_Source\PSoC5/RTOS_tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3875:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3876:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3877:Generated_Source\PSoC5/RTOS_tasks.c **** 
3878:Generated_Source\PSoC5/RTOS_tasks.c ****         uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3879:Generated_Source\PSoC5/RTOS_tasks.c **** 
3880:Generated_Source\PSoC5/RTOS_tasks.c ****         return uxReturn;
3881:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3882:Generated_Source\PSoC5/RTOS_tasks.c **** 
3883:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3884:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3885:Generated_Source\PSoC5/RTOS_tasks.c **** 
3886:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3887:Generated_Source\PSoC5/RTOS_tasks.c **** 
3888:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3889:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3890:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
3891:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t * pucEndOfStack;
3892:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxReturn;
3893:Generated_Source\PSoC5/RTOS_tasks.c **** 
3894:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3895:Generated_Source\PSoC5/RTOS_tasks.c **** 
3896:Generated_Source\PSoC5/RTOS_tasks.c ****         #if portSTACK_GROWTH < 0
3897:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3898:Generated_Source\PSoC5/RTOS_tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3899:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3900:Generated_Source\PSoC5/RTOS_tasks.c ****         #else
3901:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3902:Generated_Source\PSoC5/RTOS_tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3903:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3904:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
3905:Generated_Source\PSoC5/RTOS_tasks.c **** 
3906:Generated_Source\PSoC5/RTOS_tasks.c ****         uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3907:Generated_Source\PSoC5/RTOS_tasks.c **** 
3908:Generated_Source\PSoC5/RTOS_tasks.c ****         return uxReturn;
3909:Generated_Source\PSoC5/RTOS_tasks.c ****     }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 71


3910:Generated_Source\PSoC5/RTOS_tasks.c **** 
3911:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3912:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3913:Generated_Source\PSoC5/RTOS_tasks.c **** 
3914:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3915:Generated_Source\PSoC5/RTOS_tasks.c **** 
3916:Generated_Source\PSoC5/RTOS_tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB )
3917:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3918:Generated_Source\PSoC5/RTOS_tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
3919:Generated_Source\PSoC5/RTOS_tasks.c ****          * above the vPortFree() calls.  The call is also used by ports/demos that
3920:Generated_Source\PSoC5/RTOS_tasks.c ****          * want to allocate and clean RAM statically. */
3921:Generated_Source\PSoC5/RTOS_tasks.c ****         portCLEAN_UP_TCB( pxTCB );
3922:Generated_Source\PSoC5/RTOS_tasks.c **** 
3923:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Free up the memory allocated by the scheduler for the task.  It is up
3924:Generated_Source\PSoC5/RTOS_tasks.c ****          * to the task to free any memory allocated at the application level.
3925:Generated_Source\PSoC5/RTOS_tasks.c ****          * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3926:Generated_Source\PSoC5/RTOS_tasks.c ****          * for additional information. */
3927:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
3928:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3929:Generated_Source\PSoC5/RTOS_tasks.c ****                 _reclaim_reent( &( pxTCB->xNewLib_reent ) );
3930:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3931:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
3932:Generated_Source\PSoC5/RTOS_tasks.c **** 
3933:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
3934:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3935:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The task can only have been allocated dynamically - free both
3936:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the stack and TCB. */
3937:Generated_Source\PSoC5/RTOS_tasks.c ****                 vPortFree( pxTCB->pxStack );
3938:Generated_Source\PSoC5/RTOS_tasks.c ****                 vPortFree( pxTCB );
3939:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3940:Generated_Source\PSoC5/RTOS_tasks.c ****         #elif ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been
3941:Generated_Source\PSoC5/RTOS_tasks.c ****             {
3942:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The task could have been allocated statically or dynamically, so
3943:Generated_Source\PSoC5/RTOS_tasks.c ****                  * check what was statically allocated before trying to free the
3944:Generated_Source\PSoC5/RTOS_tasks.c ****                  * memory. */
3945:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3946:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3947:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Both the stack and TCB were allocated dynamically, so both
3948:Generated_Source\PSoC5/RTOS_tasks.c ****                      * must be freed. */
3949:Generated_Source\PSoC5/RTOS_tasks.c ****                     vPortFree( pxTCB->pxStack );
3950:Generated_Source\PSoC5/RTOS_tasks.c ****                     vPortFree( pxTCB );
3951:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3952:Generated_Source\PSoC5/RTOS_tasks.c ****                 else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3953:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3954:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Only the stack was statically allocated, so the TCB is the
3955:Generated_Source\PSoC5/RTOS_tasks.c ****                      * only memory that must be freed. */
3956:Generated_Source\PSoC5/RTOS_tasks.c ****                     vPortFree( pxTCB );
3957:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3958:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
3959:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
3960:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Neither the stack nor the TCB were allocated dynamically, so
3961:Generated_Source\PSoC5/RTOS_tasks.c ****                      * nothing needs to be freed. */
3962:Generated_Source\PSoC5/RTOS_tasks.c ****                     configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND
3963:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
3965:Generated_Source\PSoC5/RTOS_tasks.c ****             }
3966:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 72


3967:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3968:Generated_Source\PSoC5/RTOS_tasks.c **** 
3969:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* INCLUDE_vTaskDelete */
3970:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3971:Generated_Source\PSoC5/RTOS_tasks.c **** 
3972:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvResetNextTaskUnblockTime( void )
3973:Generated_Source\PSoC5/RTOS_tasks.c **** {
  81              		.loc 1 3973 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
3974:Generated_Source\PSoC5/RTOS_tasks.c ****     if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  86              		.loc 1 3974 0
  87 0000 074B     		ldr	r3, .L11
  88 0002 9B6A     		ldr	r3, [r3, #40]
  89 0004 1B68     		ldr	r3, [r3]
  90 0006 23B9     		cbnz	r3, .L9
3975:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3976:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3977:Generated_Source\PSoC5/RTOS_tasks.c ****          * the maximum possible value so it is  extremely unlikely that the
3978:Generated_Source\PSoC5/RTOS_tasks.c ****          * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3979:Generated_Source\PSoC5/RTOS_tasks.c ****          * there is an item in the delayed list. */
3980:Generated_Source\PSoC5/RTOS_tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
  91              		.loc 1 3980 0
  92 0008 4FF0FF32 		mov	r2, #-1
  93 000c 044B     		ldr	r3, .L11
  94 000e DA62     		str	r2, [r3, #44]
  95 0010 7047     		bx	lr
  96              	.L9:
3981:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3982:Generated_Source\PSoC5/RTOS_tasks.c ****     else
3983:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3984:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The new current delayed list is not empty, get the value of
3985:Generated_Source\PSoC5/RTOS_tasks.c ****          * the item at the head of the delayed list.  This is the time at
3986:Generated_Source\PSoC5/RTOS_tasks.c ****          * which the task at the head of the delayed list should be removed
3987:Generated_Source\PSoC5/RTOS_tasks.c ****          * from the Blocked state. */
3988:Generated_Source\PSoC5/RTOS_tasks.c ****         xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
  97              		.loc 1 3988 0
  98 0012 034B     		ldr	r3, .L11
  99 0014 9A6A     		ldr	r2, [r3, #40]
 100 0016 D268     		ldr	r2, [r2, #12]
 101 0018 1268     		ldr	r2, [r2]
 102 001a DA62     		str	r2, [r3, #44]
 103 001c 7047     		bx	lr
 104              	.L12:
 105 001e 00BF     		.align	2
 106              	.L11:
 107 0020 00000000 		.word	.LANCHOR0
 108              		.cfi_endproc
 109              	.LFE106:
 110              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 111              		.section	.text.prvDeleteTCB,"ax",%progbits
 112              		.align	2
 113              		.thumb
 114              		.thumb_func
 115              		.type	prvDeleteTCB, %function
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 73


 116              	prvDeleteTCB:
 117              	.LFB105:
3917:Generated_Source\PSoC5/RTOS_tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
 118              		.loc 1 3917 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL8:
 123 0000 10B5     		push	{r4, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 127 0002 0446     		mov	r4, r0
3937:Generated_Source\PSoC5/RTOS_tasks.c ****                 vPortFree( pxTCB );
 128              		.loc 1 3937 0
 129 0004 006B     		ldr	r0, [r0, #48]
 130              	.LVL9:
 131 0006 FFF7FEFF 		bl	vPortFree
 132              	.LVL10:
3938:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 133              		.loc 1 3938 0
 134 000a 2046     		mov	r0, r4
 135 000c FFF7FEFF 		bl	vPortFree
 136              	.LVL11:
 137 0010 10BD     		pop	{r4, pc}
 138              		.cfi_endproc
 139              	.LFE105:
 140              		.size	prvDeleteTCB, .-prvDeleteTCB
 141 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 142              		.align	2
 143              		.thumb
 144              		.thumb_func
 145              		.type	prvInitialiseNewTask, %function
 146              	prvInitialiseNewTask:
 147              	.LFB68:
 820:Generated_Source\PSoC5/RTOS_tasks.c ****     StackType_t * pxTopOfStack;
 148              		.loc 1 820 0
 149              		.cfi_startproc
 150              		@ args = 16, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              	.LVL12:
 153 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 154              		.cfi_def_cfa_offset 32
 155              		.cfi_offset 3, -32
 156              		.cfi_offset 4, -28
 157              		.cfi_offset 5, -24
 158              		.cfi_offset 6, -20
 159              		.cfi_offset 7, -16
 160              		.cfi_offset 8, -12
 161              		.cfi_offset 9, -8
 162              		.cfi_offset 14, -4
 163 0004 8046     		mov	r8, r0
 164 0006 9946     		mov	r9, r3
 165 0008 089D     		ldr	r5, [sp, #32]
 166 000a 099F     		ldr	r7, [sp, #36]
 167 000c 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 74


 168              		.loc 1 853 0
 169 000e 236B     		ldr	r3, [r4, #48]
 170              	.LVL13:
 171 0010 02F18042 		add	r2, r2, #1073741824
 172              	.LVL14:
 173 0014 013A     		subs	r2, r2, #1
 174              	.LVL15:
 175 0016 03EB8206 		add	r6, r3, r2, lsl #2
 176              	.LVL16:
 854:Generated_Source\PSoC5/RTOS_tasks.c **** 
 177              		.loc 1 854 0
 178 001a 26F00706 		bic	r6, r6, #7
 179              	.LVL17:
 881:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 180              		.loc 1 881 0
 181 001e 41B9     		cbnz	r1, .L23
 182 0020 0FE0     		b	.L25
 183              	.LVL18:
 184              	.L19:
 885:Generated_Source\PSoC5/RTOS_tasks.c **** 
 185              		.loc 1 885 0
 186 0022 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 187 0024 E118     		adds	r1, r4, r3
 188 0026 81F83400 		strb	r0, [r1, #52]
 890:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 189              		.loc 1 890 0
 190 002a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 191 002c 29B1     		cbz	r1, .L18
 883:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 192              		.loc 1 883 0 discriminator 2
 193 002e 0133     		adds	r3, r3, #1
 194              	.LVL19:
 195 0030 01E0     		b	.L16
 196              	.LVL20:
 197              	.L23:
 198 0032 0A46     		mov	r2, r1
 199 0034 0023     		movs	r3, #0
 200              	.LVL21:
 201              	.L16:
 883:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 202              		.loc 1 883 0 is_stmt 0 discriminator 1
 203 0036 0F2B     		cmp	r3, #15
 204 0038 F3D9     		bls	.L19
 205              	.L18:
 902:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 206              		.loc 1 902 0 is_stmt 1
 207 003a 0023     		movs	r3, #0
 208              	.LVL22:
 209 003c 84F84330 		strb	r3, [r4, #67]
 210 0040 02E0     		b	.L20
 211              	.LVL23:
 212              	.L25:
 908:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 213              		.loc 1 908 0
 214 0042 0023     		movs	r3, #0
 215 0044 84F83430 		strb	r3, [r4, #52]
 216              	.LVL24:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 75


 217              	.L20:
 913:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 218              		.loc 1 913 0
 219 0048 042D     		cmp	r5, #4
 220 004a 00D9     		bls	.L21
 915:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 221              		.loc 1 915 0
 222 004c 0425     		movs	r5, #4
 223              	.L21:
 224              	.LVL25:
 922:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 225              		.loc 1 922 0
 226 004e E562     		str	r5, [r4, #44]
 930:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 227              		.loc 1 930 0
 228 0050 201D     		adds	r0, r4, #4
 229 0052 FFF7FEFF 		bl	vListInitialiseItem
 230              	.LVL26:
 931:Generated_Source\PSoC5/RTOS_tasks.c **** 
 231              		.loc 1 931 0
 232 0056 04F11800 		add	r0, r4, #24
 233 005a FFF7FEFF 		bl	vListInitialiseItem
 234              	.LVL27:
 935:Generated_Source\PSoC5/RTOS_tasks.c **** 
 235              		.loc 1 935 0
 236 005e 2461     		str	r4, [r4, #16]
 938:Generated_Source\PSoC5/RTOS_tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 237              		.loc 1 938 0
 238 0060 C5F10505 		rsb	r5, r5, #5
 239              	.LVL28:
 240 0064 A561     		str	r5, [r4, #24]
 939:Generated_Source\PSoC5/RTOS_tasks.c **** 
 241              		.loc 1 939 0
 242 0066 6462     		str	r4, [r4, #36]
 972:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 243              		.loc 1 972 0
 244 0068 0023     		movs	r3, #0
 245 006a 6364     		str	r3, [r4, #68]	@ unaligned
 246 006c A364     		str	r3, [r4, #72]	@ unaligned
 247 006e E364     		str	r3, [r4, #76]	@ unaligned
 248 0070 2365     		str	r3, [r4, #80]	@ unaligned
 249 0072 6365     		str	r3, [r4, #84]	@ unaligned
 978:Generated_Source\PSoC5/RTOS_tasks.c ****             memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyS
 250              		.loc 1 978 0
 251 0074 A365     		str	r3, [r4, #88]	@ unaligned
 979:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 252              		.loc 1 979 0
 253 0076 84F85C30 		strb	r3, [r4, #92]
1044:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 254              		.loc 1 1044 0
 255 007a 4A46     		mov	r2, r9
 256 007c 4146     		mov	r1, r8
 257 007e 3046     		mov	r0, r6
 258 0080 FFF7FEFF 		bl	pxPortInitialiseStack
 259              	.LVL29:
 260 0084 2060     		str	r0, [r4]
1050:Generated_Source\PSoC5/RTOS_tasks.c ****     {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 76


 261              		.loc 1 1050 0
 262 0086 07B1     		cbz	r7, .L15
1054:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 263              		.loc 1 1054 0
 264 0088 3C60     		str	r4, [r7]
 265              	.L15:
 266 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 267              		.cfi_endproc
 268              	.LFE68:
 269              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 270 008e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 271              		.align	2
 272              		.thumb
 273              		.thumb_func
 274              		.type	prvInitialiseTaskLists, %function
 275              	prvInitialiseTaskLists:
 276              	.LFB103:
3633:Generated_Source\PSoC5/RTOS_tasks.c ****     UBaseType_t uxPriority;
 277              		.loc 1 3633 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 70B5     		push	{r4, r5, r6, lr}
 282              		.cfi_def_cfa_offset 16
 283              		.cfi_offset 4, -16
 284              		.cfi_offset 5, -12
 285              		.cfi_offset 6, -8
 286              		.cfi_offset 14, -4
 287              	.LVL30:
3636:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 288              		.loc 1 3636 0
 289 0002 0024     		movs	r4, #0
 290 0004 07E0     		b	.L28
 291              	.LVL31:
 292              	.L29:
3638:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 293              		.loc 1 3638 0 discriminator 3
 294 0006 04EB8402 		add	r2, r4, r4, lsl #2
 295 000a 9300     		lsls	r3, r2, #2
 296 000c 1048     		ldr	r0, .L31
 297 000e 1844     		add	r0, r0, r3
 298 0010 FFF7FEFF 		bl	vListInitialise
 299              	.LVL32:
3636:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 300              		.loc 1 3636 0 discriminator 3
 301 0014 0134     		adds	r4, r4, #1
 302              	.LVL33:
 303              	.L28:
3636:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 304              		.loc 1 3636 0 is_stmt 0 discriminator 1
 305 0016 042C     		cmp	r4, #4
 306 0018 F5D9     		bls	.L29
3641:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialise( &xDelayedTaskList2 );
 307              		.loc 1 3641 0 is_stmt 1
 308 001a 0E4C     		ldr	r4, .L31+4
 309              	.LVL34:
 310 001c 04F19406 		add	r6, r4, #148
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 77


 311 0020 3046     		mov	r0, r6
 312 0022 FFF7FEFF 		bl	vListInitialise
 313              	.LVL35:
3642:Generated_Source\PSoC5/RTOS_tasks.c ****     vListInitialise( &xPendingReadyList );
 314              		.loc 1 3642 0
 315 0026 04F1A805 		add	r5, r4, #168
 316 002a 2846     		mov	r0, r5
 317 002c FFF7FEFF 		bl	vListInitialise
 318              	.LVL36:
3643:Generated_Source\PSoC5/RTOS_tasks.c **** 
 319              		.loc 1 3643 0
 320 0030 04F11400 		add	r0, r4, #20
 321 0034 FFF7FEFF 		bl	vListInitialise
 322              	.LVL37:
3647:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 323              		.loc 1 3647 0
 324 0038 04F1BC00 		add	r0, r4, #188
 325 003c FFF7FEFF 		bl	vListInitialise
 326              	.LVL38:
3653:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 327              		.loc 1 3653 0
 328 0040 2046     		mov	r0, r4
 329 0042 FFF7FEFF 		bl	vListInitialise
 330              	.LVL39:
3659:Generated_Source\PSoC5/RTOS_tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 331              		.loc 1 3659 0
 332 0046 A662     		str	r6, [r4, #40]
3660:Generated_Source\PSoC5/RTOS_tasks.c **** }
 333              		.loc 1 3660 0
 334 0048 C4F8D050 		str	r5, [r4, #208]
 335 004c 70BD     		pop	{r4, r5, r6, pc}
 336              	.L32:
 337 004e 00BF     		.align	2
 338              	.L31:
 339 0050 30000000 		.word	.LANCHOR0+48
 340 0054 00000000 		.word	.LANCHOR0
 341              		.cfi_endproc
 342              	.LFE103:
 343              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 344              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 345              		.align	2
 346              		.thumb
 347              		.thumb_func
 348              		.type	prvAddNewTaskToReadyList, %function
 349              	prvAddNewTaskToReadyList:
 350              	.LFB69:
1064:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 351              		.loc 1 1064 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              	.LVL40:
 356 0000 38B5     		push	{r3, r4, r5, lr}
 357              		.cfi_def_cfa_offset 16
 358              		.cfi_offset 3, -16
 359              		.cfi_offset 4, -12
 360              		.cfi_offset 5, -8
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 78


 361              		.cfi_offset 14, -4
 362 0002 0446     		mov	r4, r0
1067:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 363              		.loc 1 1067 0
 364 0004 FFF7FEFF 		bl	vPortEnterCritical
 365              	.LVL41:
1069:Generated_Source\PSoC5/RTOS_tasks.c **** 
 366              		.loc 1 1069 0
 367 0008 264B     		ldr	r3, .L39
 368 000a D3F8D420 		ldr	r2, [r3, #212]
 369 000e 0132     		adds	r2, r2, #1
 370 0010 C3F8D420 		str	r2, [r3, #212]
1071:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 371              		.loc 1 1071 0
 372 0014 D3F8D830 		ldr	r3, [r3, #216]
 373 0018 4BB9     		cbnz	r3, .L34
1075:Generated_Source\PSoC5/RTOS_tasks.c **** 
 374              		.loc 1 1075 0
 375 001a 224B     		ldr	r3, .L39
 376 001c C3F8D840 		str	r4, [r3, #216]
1077:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 377              		.loc 1 1077 0
 378 0020 D3F8D430 		ldr	r3, [r3, #212]
 379 0024 012B     		cmp	r3, #1
 380 0026 10D1     		bne	.L35
1082:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 381              		.loc 1 1082 0
 382 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 383              	.LVL42:
 384 002c 0DE0     		b	.L35
 385              	.L34:
1094:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 386              		.loc 1 1094 0
 387 002e 1D4B     		ldr	r3, .L39
 388 0030 D3F8DC30 		ldr	r3, [r3, #220]
 389 0034 4BB9     		cbnz	r3, .L35
1096:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 390              		.loc 1 1096 0
 391 0036 1B4B     		ldr	r3, .L39
 392 0038 D3F8D830 		ldr	r3, [r3, #216]
 393 003c DA6A     		ldr	r2, [r3, #44]
 394 003e E36A     		ldr	r3, [r4, #44]
 395 0040 9A42     		cmp	r2, r3
 396 0042 02D8     		bhi	.L35
1098:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 397              		.loc 1 1098 0
 398 0044 174B     		ldr	r3, .L39
 399 0046 C3F8D840 		str	r4, [r3, #216]
 400              	.L35:
1111:Generated_Source\PSoC5/RTOS_tasks.c **** 
 401              		.loc 1 1111 0
 402 004a 164A     		ldr	r2, .L39
 403 004c D2F8E030 		ldr	r3, [r2, #224]
 404 0050 0133     		adds	r3, r3, #1
 405 0052 C2F8E030 		str	r3, [r2, #224]
1121:Generated_Source\PSoC5/RTOS_tasks.c **** 
 406              		.loc 1 1121 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 79


 407 0056 E36A     		ldr	r3, [r4, #44]
 408 0058 D2F8E420 		ldr	r2, [r2, #228]
 409 005c 9342     		cmp	r3, r2
 410 005e 02D9     		bls	.L36
1121:Generated_Source\PSoC5/RTOS_tasks.c **** 
 411              		.loc 1 1121 0 is_stmt 0 discriminator 1
 412 0060 104A     		ldr	r2, .L39
 413 0062 C2F8E430 		str	r3, [r2, #228]
 414              	.L36:
1121:Generated_Source\PSoC5/RTOS_tasks.c **** 
 415              		.loc 1 1121 0 discriminator 3
 416 0066 0F4D     		ldr	r5, .L39
 417 0068 05F13000 		add	r0, r5, #48
 418 006c 03EB8303 		add	r3, r3, r3, lsl #2
 419 0070 9A00     		lsls	r2, r3, #2
 420 0072 211D     		adds	r1, r4, #4
 421 0074 1044     		add	r0, r0, r2
 422 0076 FFF7FEFF 		bl	vListInsertEnd
 423              	.LVL43:
1125:Generated_Source\PSoC5/RTOS_tasks.c **** 
 424              		.loc 1 1125 0 is_stmt 1 discriminator 3
 425 007a FFF7FEFF 		bl	vPortExitCritical
 426              	.LVL44:
1127:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 427              		.loc 1 1127 0 discriminator 3
 428 007e D5F8DC30 		ldr	r3, [r5, #220]
 429 0082 6BB1     		cbz	r3, .L33
1131:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 430              		.loc 1 1131 0
 431 0084 D5F8D830 		ldr	r3, [r5, #216]
 432 0088 DA6A     		ldr	r2, [r3, #44]
 433 008a E36A     		ldr	r3, [r4, #44]
 434 008c 9A42     		cmp	r2, r3
 435 008e 07D2     		bcs	.L33
1133:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 436              		.loc 1 1133 0
 437 0090 4FF08052 		mov	r2, #268435456
 438 0094 044B     		ldr	r3, .L39+4
 439 0096 1A60     		str	r2, [r3]
 440              		.syntax unified
 441              	@ 1133 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 442 0098 BFF34F8F 		dsb
 443              	@ 0 "" 2
 444              	@ 1133 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 445 009c BFF36F8F 		isb
 446              	@ 0 "" 2
 447              		.thumb
 448              		.syntax unified
 449              	.L33:
 450 00a0 38BD     		pop	{r3, r4, r5, pc}
 451              	.LVL45:
 452              	.L40:
 453 00a2 00BF     		.align	2
 454              	.L39:
 455 00a4 00000000 		.word	.LANCHOR0
 456 00a8 04ED00E0 		.word	-536810236
 457              		.cfi_endproc
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 80


 458              	.LFE69:
 459              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 460              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 461              		.align	2
 462              		.thumb
 463              		.thumb_func
 464              		.type	prvCheckTasksWaitingTermination, %function
 465              	prvCheckTasksWaitingTermination:
 466              	.LFB104:
3665:Generated_Source\PSoC5/RTOS_tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 467              		.loc 1 3665 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 38B5     		push	{r3, r4, r5, lr}
 472              		.cfi_def_cfa_offset 16
 473              		.cfi_offset 3, -16
 474              		.cfi_offset 4, -12
 475              		.cfi_offset 5, -8
 476              		.cfi_offset 14, -4
 477              	.LBB22:
3674:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 478              		.loc 1 3674 0
 479 0002 17E0     		b	.L42
 480              	.L43:
3676:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 481              		.loc 1 3676 0
 482 0004 FFF7FEFF 		bl	vPortEnterCritical
 483              	.LVL46:
3678:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 484              		.loc 1 3678 0
 485 0008 0D4C     		ldr	r4, .L45
 486 000a D4F8C830 		ldr	r3, [r4, #200]
 487 000e DD68     		ldr	r5, [r3, #12]
 488              	.LVL47:
3679:Generated_Source\PSoC5/RTOS_tasks.c ****                     --uxCurrentNumberOfTasks;
 489              		.loc 1 3679 0
 490 0010 281D     		adds	r0, r5, #4
 491 0012 FFF7FEFF 		bl	uxListRemove
 492              	.LVL48:
3680:Generated_Source\PSoC5/RTOS_tasks.c ****                     --uxDeletedTasksWaitingCleanUp;
 493              		.loc 1 3680 0
 494 0016 D4F8D430 		ldr	r3, [r4, #212]
 495 001a 013B     		subs	r3, r3, #1
 496 001c C4F8D430 		str	r3, [r4, #212]
3681:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 497              		.loc 1 3681 0
 498 0020 D4F8E830 		ldr	r3, [r4, #232]
 499 0024 013B     		subs	r3, r3, #1
 500 0026 C4F8E830 		str	r3, [r4, #232]
3683:Generated_Source\PSoC5/RTOS_tasks.c **** 
 501              		.loc 1 3683 0
 502 002a FFF7FEFF 		bl	vPortExitCritical
 503              	.LVL49:
3685:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 504              		.loc 1 3685 0
 505 002e 2846     		mov	r0, r5
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 81


 506 0030 FFF7FEFF 		bl	prvDeleteTCB
 507              	.LVL50:
 508              	.L42:
3674:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 509              		.loc 1 3674 0
 510 0034 024B     		ldr	r3, .L45
 511 0036 D3F8E830 		ldr	r3, [r3, #232]
 512 003a 002B     		cmp	r3, #0
 513 003c E2D1     		bne	.L43
 514              	.LBE22:
3689:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 515              		.loc 1 3689 0
 516 003e 38BD     		pop	{r3, r4, r5, pc}
 517              	.L46:
 518              		.align	2
 519              	.L45:
 520 0040 00000000 		.word	.LANCHOR0
 521              		.cfi_endproc
 522              	.LFE104:
 523              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 524              		.section	.text.prvIdleTask,"ax",%progbits
 525              		.align	2
 526              		.thumb
 527              		.thumb_func
 528              		.type	prvIdleTask, %function
 529              	prvIdleTask:
 530              	.LFB100:
3408:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Stop warnings. */
 531              		.loc 1 3408 0
 532              		.cfi_startproc
 533              		@ Volatile: function does not return.
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL51:
 537 0000 08B5     		push	{r3, lr}
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 3, -8
 540              		.cfi_offset 14, -4
 541              	.LVL52:
 542              	.L48:
3424:Generated_Source\PSoC5/RTOS_tasks.c **** 
 543              		.loc 1 3424 0
 544 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 545              	.LVL53:
3447:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 546              		.loc 1 3447 0
 547 0006 064B     		ldr	r3, .L51
 548 0008 1B6B     		ldr	r3, [r3, #48]
 549 000a 012B     		cmp	r3, #1
 550 000c F9D9     		bls	.L48
3449:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 551              		.loc 1 3449 0
 552 000e 4FF08052 		mov	r2, #268435456
 553 0012 044B     		ldr	r3, .L51+4
 554 0014 1A60     		str	r2, [r3]
 555              		.syntax unified
 556              	@ 3449 "Generated_Source\PSoC5\RTOS_tasks.c" 1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 82


 557 0016 BFF34F8F 		dsb
 558              	@ 0 "" 2
 559              	@ 3449 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 560 001a BFF36F8F 		isb
 561              	@ 0 "" 2
 562              		.thumb
 563              		.syntax unified
 564 001e F0E7     		b	.L48
 565              	.L52:
 566              		.align	2
 567              	.L51:
 568 0020 00000000 		.word	.LANCHOR0
 569 0024 04ED00E0 		.word	-536810236
 570              		.cfi_endproc
 571              	.LFE100:
 572              		.size	prvIdleTask, .-prvIdleTask
 573              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 574              		.align	2
 575              		.thumb
 576              		.thumb_func
 577              		.type	prvAddCurrentTaskToDelayedList, %function
 578              	prvAddCurrentTaskToDelayedList:
 579              	.LFB117:
3989:Generated_Source\PSoC5/RTOS_tasks.c ****     }
3990:Generated_Source\PSoC5/RTOS_tasks.c **** }
3991:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
3992:Generated_Source\PSoC5/RTOS_tasks.c **** 
3993:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3994:Generated_Source\PSoC5/RTOS_tasks.c **** 
3995:Generated_Source\PSoC5/RTOS_tasks.c ****     TaskHandle_t xTaskGetCurrentTaskHandle( void )
3996:Generated_Source\PSoC5/RTOS_tasks.c ****     {
3997:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskHandle_t xReturn;
3998:Generated_Source\PSoC5/RTOS_tasks.c **** 
3999:Generated_Source\PSoC5/RTOS_tasks.c ****         /* A critical section is not required as this is not called from
4000:Generated_Source\PSoC5/RTOS_tasks.c ****          * an interrupt and the current TCB will always be the same for any
4001:Generated_Source\PSoC5/RTOS_tasks.c ****          * individual execution thread. */
4002:Generated_Source\PSoC5/RTOS_tasks.c ****         xReturn = pxCurrentTCB;
4003:Generated_Source\PSoC5/RTOS_tasks.c **** 
4004:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
4005:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4006:Generated_Source\PSoC5/RTOS_tasks.c **** 
4007:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
4008:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4009:Generated_Source\PSoC5/RTOS_tasks.c **** 
4010:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
4011:Generated_Source\PSoC5/RTOS_tasks.c **** 
4012:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskGetSchedulerState( void )
4013:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4014:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
4015:Generated_Source\PSoC5/RTOS_tasks.c **** 
4016:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xSchedulerRunning == pdFALSE )
4017:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4018:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = taskSCHEDULER_NOT_STARTED;
4019:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4020:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4021:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4022:Generated_Source\PSoC5/RTOS_tasks.c ****             if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 83


4023:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4024:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = taskSCHEDULER_RUNNING;
4025:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4026:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4027:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4028:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = taskSCHEDULER_SUSPENDED;
4029:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4030:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4031:Generated_Source\PSoC5/RTOS_tasks.c **** 
4032:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
4033:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4034:Generated_Source\PSoC5/RTOS_tasks.c **** 
4035:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4036:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4037:Generated_Source\PSoC5/RTOS_tasks.c **** 
4038:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_MUTEXES == 1 )
4039:Generated_Source\PSoC5/RTOS_tasks.c **** 
4040:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4041:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4042:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4043:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn = pdFALSE;
4044:Generated_Source\PSoC5/RTOS_tasks.c **** 
4045:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If the mutex was given back by an interrupt while the queue was
4046:Generated_Source\PSoC5/RTOS_tasks.c ****          * locked then the mutex holder might now be NULL.  _RB_ Is this still
4047:Generated_Source\PSoC5/RTOS_tasks.c ****          * needed as interrupts can no longer use mutexes? */
4048:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxMutexHolder != NULL )
4049:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4050:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If the holder of the mutex has a priority below the priority of
4051:Generated_Source\PSoC5/RTOS_tasks.c ****              * the task attempting to obtain the mutex then it will temporarily
4052:Generated_Source\PSoC5/RTOS_tasks.c ****              * inherit the priority of the task attempting to obtain the mutex. */
4053:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4054:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4055:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Adjust the mutex holder state to account for its new
4056:Generated_Source\PSoC5/RTOS_tasks.c ****                  * priority.  Only reset the event list item value if the value is
4057:Generated_Source\PSoC5/RTOS_tasks.c ****                  * not being used for anything else. */
4058:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_
4059:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4060:Generated_Source\PSoC5/RTOS_tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) 
4061:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4062:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4063:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4064:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4065:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4066:Generated_Source\PSoC5/RTOS_tasks.c **** 
4067:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* If the task being modified is in the ready state it will need
4068:Generated_Source\PSoC5/RTOS_tasks.c ****                  * to be moved into a new list. */
4069:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] )
4070:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4071:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 
4072:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4073:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* It is known that the task is in its ready list so
4074:Generated_Source\PSoC5/RTOS_tasks.c ****                          * there is no need to check again and the port level
4075:Generated_Source\PSoC5/RTOS_tasks.c ****                          * reset macro can be called directly. */
4076:Generated_Source\PSoC5/RTOS_tasks.c ****                         portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority 
4077:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4078:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
4079:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 84


4080:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4081:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4082:Generated_Source\PSoC5/RTOS_tasks.c **** 
4083:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Inherit the priority before being moved into the new list. */
4084:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4085:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
4086:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4087:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4088:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4089:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Just inherit the priority. */
4090:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4091:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4092:Generated_Source\PSoC5/RTOS_tasks.c **** 
4093:Generated_Source\PSoC5/RTOS_tasks.c ****                 traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4094:Generated_Source\PSoC5/RTOS_tasks.c **** 
4095:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Inheritance occurred. */
4096:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdTRUE;
4097:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4098:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4099:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4100:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4101:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4102:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The base priority of the mutex holder is lower than the
4103:Generated_Source\PSoC5/RTOS_tasks.c ****                      * priority of the task attempting to take the mutex, but the
4104:Generated_Source\PSoC5/RTOS_tasks.c ****                      * current priority of the mutex holder is not lower than the
4105:Generated_Source\PSoC5/RTOS_tasks.c ****                      * priority of the task attempting to take the mutex.
4106:Generated_Source\PSoC5/RTOS_tasks.c ****                      * Therefore the mutex holder must have already inherited a
4107:Generated_Source\PSoC5/RTOS_tasks.c ****                      * priority, but inheritance would have occurred if that had
4108:Generated_Source\PSoC5/RTOS_tasks.c ****                      * not been the case. */
4109:Generated_Source\PSoC5/RTOS_tasks.c ****                     xReturn = pdTRUE;
4110:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4111:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4112:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4113:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4114:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4115:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4116:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4117:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4118:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4119:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
4120:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4121:Generated_Source\PSoC5/RTOS_tasks.c **** 
4122:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
4123:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4124:Generated_Source\PSoC5/RTOS_tasks.c **** 
4125:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_MUTEXES */
4126:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4127:Generated_Source\PSoC5/RTOS_tasks.c **** 
4128:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_MUTEXES == 1 )
4129:Generated_Source\PSoC5/RTOS_tasks.c **** 
4130:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4131:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4132:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4133:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn = pdFALSE;
4134:Generated_Source\PSoC5/RTOS_tasks.c **** 
4135:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxMutexHolder != NULL )
4136:Generated_Source\PSoC5/RTOS_tasks.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 85


4137:Generated_Source\PSoC5/RTOS_tasks.c ****             /* A task can only have an inherited priority if it holds the mutex.
4138:Generated_Source\PSoC5/RTOS_tasks.c ****              * If the mutex is held by a task then it cannot be given from an
4139:Generated_Source\PSoC5/RTOS_tasks.c ****              * interrupt, and if a mutex is given by the holding task then it must
4140:Generated_Source\PSoC5/RTOS_tasks.c ****              * be the running state task. */
4141:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( pxTCB == pxCurrentTCB );
4142:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4143:Generated_Source\PSoC5/RTOS_tasks.c ****             ( pxTCB->uxMutexesHeld )--;
4144:Generated_Source\PSoC5/RTOS_tasks.c **** 
4145:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Has the holder of the mutex inherited the priority of another
4146:Generated_Source\PSoC5/RTOS_tasks.c ****              * task? */
4147:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4148:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4149:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Only disinherit if no other mutexes are held. */
4150:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4151:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4152:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* A task can only have an inherited priority if it holds
4153:Generated_Source\PSoC5/RTOS_tasks.c ****                      * the mutex.  If the mutex is held by a task then it cannot be
4154:Generated_Source\PSoC5/RTOS_tasks.c ****                      * given from an interrupt, and if a mutex is given by the
4155:Generated_Source\PSoC5/RTOS_tasks.c ****                      * holding task then it must be the running state task.  Remove
4156:Generated_Source\PSoC5/RTOS_tasks.c ****                      * the holding task from the ready list. */
4157:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4158:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4159:Generated_Source\PSoC5/RTOS_tasks.c ****                         portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4160:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4161:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
4162:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4163:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4164:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4165:Generated_Source\PSoC5/RTOS_tasks.c **** 
4166:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Disinherit the priority before adding the task into the
4167:Generated_Source\PSoC5/RTOS_tasks.c ****                      * new  ready list. */
4168:Generated_Source\PSoC5/RTOS_tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4169:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
4170:Generated_Source\PSoC5/RTOS_tasks.c **** 
4171:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Reset the event list item value.  It cannot be in use for
4172:Generated_Source\PSoC5/RTOS_tasks.c ****                      * any other purpose if this task is running, and it must be
4173:Generated_Source\PSoC5/RTOS_tasks.c ****                      * running to give back the mutex. */
4174:Generated_Source\PSoC5/RTOS_tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_P
4175:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
4176:Generated_Source\PSoC5/RTOS_tasks.c **** 
4177:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Return true to indicate that a context switch is required.
4178:Generated_Source\PSoC5/RTOS_tasks.c ****                      * This is only actually required in the corner case whereby
4179:Generated_Source\PSoC5/RTOS_tasks.c ****                      * multiple mutexes were held and the mutexes were given back
4180:Generated_Source\PSoC5/RTOS_tasks.c ****                      * in an order different to that in which they were taken.
4181:Generated_Source\PSoC5/RTOS_tasks.c ****                      * If a context switch did not occur when the first mutex was
4182:Generated_Source\PSoC5/RTOS_tasks.c ****                      * returned, even if a task was waiting on it, then a context
4183:Generated_Source\PSoC5/RTOS_tasks.c ****                      * switch should occur when the last mutex is returned whether
4184:Generated_Source\PSoC5/RTOS_tasks.c ****                      * a task is waiting on it or not. */
4185:Generated_Source\PSoC5/RTOS_tasks.c ****                     xReturn = pdTRUE;
4186:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4187:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4188:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4189:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4190:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4191:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4192:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4193:Generated_Source\PSoC5/RTOS_tasks.c ****             {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 86


4194:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4195:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4196:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4197:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4198:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4199:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
4200:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4201:Generated_Source\PSoC5/RTOS_tasks.c **** 
4202:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
4203:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4204:Generated_Source\PSoC5/RTOS_tasks.c **** 
4205:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_MUTEXES */
4206:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4207:Generated_Source\PSoC5/RTOS_tasks.c **** 
4208:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_MUTEXES == 1 )
4209:Generated_Source\PSoC5/RTOS_tasks.c **** 
4210:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
4211:Generated_Source\PSoC5/RTOS_tasks.c ****                                               UBaseType_t uxHighestPriorityWaitingTask )
4212:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4213:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4214:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4215:Generated_Source\PSoC5/RTOS_tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4216:Generated_Source\PSoC5/RTOS_tasks.c **** 
4217:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxMutexHolder != NULL )
4218:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4219:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If pxMutexHolder is not NULL then the holder must hold at least
4220:Generated_Source\PSoC5/RTOS_tasks.c ****              * one mutex. */
4221:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4222:Generated_Source\PSoC5/RTOS_tasks.c **** 
4223:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Determine the priority to which the priority of the task that
4224:Generated_Source\PSoC5/RTOS_tasks.c ****              * holds the mutex should be set.  This will be the greater of the
4225:Generated_Source\PSoC5/RTOS_tasks.c ****              * holding task's base priority and the priority of the highest
4226:Generated_Source\PSoC5/RTOS_tasks.c ****              * priority task that is waiting to obtain the mutex. */
4227:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4228:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4229:Generated_Source\PSoC5/RTOS_tasks.c ****                 uxPriorityToUse = uxHighestPriorityWaitingTask;
4230:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4231:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4232:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4233:Generated_Source\PSoC5/RTOS_tasks.c ****                 uxPriorityToUse = pxTCB->uxBasePriority;
4234:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4235:Generated_Source\PSoC5/RTOS_tasks.c **** 
4236:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Does the priority need to change? */
4237:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB->uxPriority != uxPriorityToUse )
4238:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4239:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Only disinherit if no other mutexes are held.  This is a
4240:Generated_Source\PSoC5/RTOS_tasks.c ****                  * simplification in the priority inheritance implementation.  If
4241:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the task that holds the mutex is also holding other mutexes then
4242:Generated_Source\PSoC5/RTOS_tasks.c ****                  * the other mutexes may have caused the priority inheritance. */
4243:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4244:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4245:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* If a task has timed out because it already holds the
4246:Generated_Source\PSoC5/RTOS_tasks.c ****                      * mutex it was trying to obtain then it cannot of inherited
4247:Generated_Source\PSoC5/RTOS_tasks.c ****                      * its own priority. */
4248:Generated_Source\PSoC5/RTOS_tasks.c ****                     configASSERT( pxTCB != pxCurrentTCB );
4249:Generated_Source\PSoC5/RTOS_tasks.c **** 
4250:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Disinherit the priority, remembering the previous
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 87


4251:Generated_Source\PSoC5/RTOS_tasks.c ****                      * priority to facilitate determining the subject task's
4252:Generated_Source\PSoC5/RTOS_tasks.c ****                      * state. */
4253:Generated_Source\PSoC5/RTOS_tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, uxPriorityToUse );
4254:Generated_Source\PSoC5/RTOS_tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
4255:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
4256:Generated_Source\PSoC5/RTOS_tasks.c **** 
4257:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Only reset the event list item value if the value is not
4258:Generated_Source\PSoC5/RTOS_tasks.c ****                      * being used for anything else. */
4259:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_IT
4260:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4261:Generated_Source\PSoC5/RTOS_tasks.c ****                         listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configM
4262:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4263:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
4264:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4265:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4266:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4267:Generated_Source\PSoC5/RTOS_tasks.c **** 
4268:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* If the running task is not the task that holds the mutex
4269:Generated_Source\PSoC5/RTOS_tasks.c ****                      * then the task that holds the mutex could be in either the
4270:Generated_Source\PSoC5/RTOS_tasks.c ****                      * Ready, Blocked or Suspended states.  Only remove the task
4271:Generated_Source\PSoC5/RTOS_tasks.c ****                      * from its current state list if it is in the Ready state as
4272:Generated_Source\PSoC5/RTOS_tasks.c ****                      * the task's priority is going to change and there is one
4273:Generated_Source\PSoC5/RTOS_tasks.c ****                      * Ready list per priority. */
4274:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &
4275:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4276:Generated_Source\PSoC5/RTOS_tasks.c ****                         if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4277:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
4278:Generated_Source\PSoC5/RTOS_tasks.c ****                             /* It is known that the task is in its ready list so
4279:Generated_Source\PSoC5/RTOS_tasks.c ****                              * there is no need to check again and the port level
4280:Generated_Source\PSoC5/RTOS_tasks.c ****                              * reset macro can be called directly. */
4281:Generated_Source\PSoC5/RTOS_tasks.c ****                             portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4282:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
4283:Generated_Source\PSoC5/RTOS_tasks.c ****                         else
4284:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
4285:Generated_Source\PSoC5/RTOS_tasks.c ****                             mtCOVERAGE_TEST_MARKER();
4286:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
4287:Generated_Source\PSoC5/RTOS_tasks.c **** 
4288:Generated_Source\PSoC5/RTOS_tasks.c ****                         prvAddTaskToReadyList( pxTCB );
4289:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4290:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
4291:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4292:Generated_Source\PSoC5/RTOS_tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4293:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4294:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4295:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4296:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4297:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4298:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4299:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4300:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4301:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4302:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4303:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4304:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4305:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4306:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4307:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 88


4308:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4309:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4310:Generated_Source\PSoC5/RTOS_tasks.c **** 
4311:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_MUTEXES */
4312:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4313:Generated_Source\PSoC5/RTOS_tasks.c **** 
4314:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4315:Generated_Source\PSoC5/RTOS_tasks.c **** 
4316:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskEnterCritical( void )
4317:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4318:Generated_Source\PSoC5/RTOS_tasks.c ****         portDISABLE_INTERRUPTS();
4319:Generated_Source\PSoC5/RTOS_tasks.c **** 
4320:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xSchedulerRunning != pdFALSE )
4321:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4322:Generated_Source\PSoC5/RTOS_tasks.c ****             ( pxCurrentTCB->uxCriticalNesting )++;
4323:Generated_Source\PSoC5/RTOS_tasks.c **** 
4324:Generated_Source\PSoC5/RTOS_tasks.c ****             /* This is not the interrupt safe version of the enter critical
4325:Generated_Source\PSoC5/RTOS_tasks.c ****              * function so  assert() if it is being called from an interrupt
4326:Generated_Source\PSoC5/RTOS_tasks.c ****              * context.  Only API functions that end in "FromISR" can be used in an
4327:Generated_Source\PSoC5/RTOS_tasks.c ****              * interrupt.  Only assert if the critical nesting count is 1 to
4328:Generated_Source\PSoC5/RTOS_tasks.c ****              * protect against recursive calls if the assert function also uses a
4329:Generated_Source\PSoC5/RTOS_tasks.c ****              * critical section. */
4330:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxCurrentTCB->uxCriticalNesting == 1 )
4331:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4332:Generated_Source\PSoC5/RTOS_tasks.c ****                 portASSERT_IF_IN_ISR();
4333:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4334:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4335:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4336:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4337:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
4338:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4339:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4340:Generated_Source\PSoC5/RTOS_tasks.c **** 
4341:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4342:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4343:Generated_Source\PSoC5/RTOS_tasks.c **** 
4344:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4345:Generated_Source\PSoC5/RTOS_tasks.c **** 
4346:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskExitCritical( void )
4347:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4348:Generated_Source\PSoC5/RTOS_tasks.c ****         if( xSchedulerRunning != pdFALSE )
4349:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4350:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxCurrentTCB->uxCriticalNesting > 0U )
4351:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4352:Generated_Source\PSoC5/RTOS_tasks.c ****                 ( pxCurrentTCB->uxCriticalNesting )--;
4353:Generated_Source\PSoC5/RTOS_tasks.c **** 
4354:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxCurrentTCB->uxCriticalNesting == 0U )
4355:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4356:Generated_Source\PSoC5/RTOS_tasks.c ****                     portENABLE_INTERRUPTS();
4357:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4358:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4359:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4360:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4361:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4362:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4363:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4364:Generated_Source\PSoC5/RTOS_tasks.c ****             {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 89


4365:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4366:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4367:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4368:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4369:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4370:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
4371:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4372:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4373:Generated_Source\PSoC5/RTOS_tasks.c **** 
4374:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4375:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4376:Generated_Source\PSoC5/RTOS_tasks.c **** 
4377:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4378:Generated_Source\PSoC5/RTOS_tasks.c **** 
4379:Generated_Source\PSoC5/RTOS_tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
4380:Generated_Source\PSoC5/RTOS_tasks.c ****                                         const char * pcTaskName )
4381:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4382:Generated_Source\PSoC5/RTOS_tasks.c ****         size_t x;
4383:Generated_Source\PSoC5/RTOS_tasks.c **** 
4384:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Start by copying the entire string. */
4385:Generated_Source\PSoC5/RTOS_tasks.c ****         strcpy( pcBuffer, pcTaskName );
4386:Generated_Source\PSoC5/RTOS_tasks.c **** 
4387:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Pad the end of the string with spaces to ensure columns line up when
4388:Generated_Source\PSoC5/RTOS_tasks.c ****          * printed out. */
4389:Generated_Source\PSoC5/RTOS_tasks.c ****         for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4390:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4391:Generated_Source\PSoC5/RTOS_tasks.c ****             pcBuffer[ x ] = ' ';
4392:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4393:Generated_Source\PSoC5/RTOS_tasks.c **** 
4394:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Terminate. */
4395:Generated_Source\PSoC5/RTOS_tasks.c ****         pcBuffer[ x ] = ( char ) 0x00;
4396:Generated_Source\PSoC5/RTOS_tasks.c **** 
4397:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Return the new end of string. */
4398:Generated_Source\PSoC5/RTOS_tasks.c ****         return &( pcBuffer[ x ] );
4399:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4400:Generated_Source\PSoC5/RTOS_tasks.c **** 
4401:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4402:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4403:Generated_Source\PSoC5/RTOS_tasks.c **** 
4404:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4405:Generated_Source\PSoC5/RTOS_tasks.c **** 
4406:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskList( char * pcWriteBuffer )
4407:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4408:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4409:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxArraySize, x;
4410:Generated_Source\PSoC5/RTOS_tasks.c ****         char cStatus;
4411:Generated_Source\PSoC5/RTOS_tasks.c **** 
4412:Generated_Source\PSoC5/RTOS_tasks.c ****         /*
4413:Generated_Source\PSoC5/RTOS_tasks.c ****          * PLEASE NOTE:
4414:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4415:Generated_Source\PSoC5/RTOS_tasks.c ****          * This function is provided for convenience only, and is used by many
4416:Generated_Source\PSoC5/RTOS_tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4417:Generated_Source\PSoC5/RTOS_tasks.c ****          * scheduler.
4418:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4419:Generated_Source\PSoC5/RTOS_tasks.c ****          * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4420:Generated_Source\PSoC5/RTOS_tasks.c ****          * uxTaskGetSystemState() output into a human readable table that
4421:Generated_Source\PSoC5/RTOS_tasks.c ****          * displays task names, states and stack usage.
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 90


4422:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4423:Generated_Source\PSoC5/RTOS_tasks.c ****          * vTaskList() has a dependency on the sprintf() C library function that
4424:Generated_Source\PSoC5/RTOS_tasks.c ****          * might bloat the code size, use a lot of stack, and provide different
4425:Generated_Source\PSoC5/RTOS_tasks.c ****          * results on different platforms.  An alternative, tiny, third party,
4426:Generated_Source\PSoC5/RTOS_tasks.c ****          * and limited functionality implementation of sprintf() is provided in
4427:Generated_Source\PSoC5/RTOS_tasks.c ****          * many of the FreeRTOS/Demo sub-directories in a file called
4428:Generated_Source\PSoC5/RTOS_tasks.c ****          * printf-stdarg.c (note printf-stdarg.c does not provide a full
4429:Generated_Source\PSoC5/RTOS_tasks.c ****          * snprintf() implementation!).
4430:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4431:Generated_Source\PSoC5/RTOS_tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4432:Generated_Source\PSoC5/RTOS_tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4433:Generated_Source\PSoC5/RTOS_tasks.c ****          * through a call to vTaskList().
4434:Generated_Source\PSoC5/RTOS_tasks.c ****          */
4435:Generated_Source\PSoC5/RTOS_tasks.c **** 
4436:Generated_Source\PSoC5/RTOS_tasks.c **** 
4437:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Make sure the write buffer does not contain a string. */
4438:Generated_Source\PSoC5/RTOS_tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4439:Generated_Source\PSoC5/RTOS_tasks.c **** 
4440:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4441:Generated_Source\PSoC5/RTOS_tasks.c ****          * function is executing. */
4442:Generated_Source\PSoC5/RTOS_tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4443:Generated_Source\PSoC5/RTOS_tasks.c **** 
4444:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Allocate an array index for each task.  NOTE!  if
4445:Generated_Source\PSoC5/RTOS_tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4446:Generated_Source\PSoC5/RTOS_tasks.c ****          * equate to NULL. */
4447:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4448:Generated_Source\PSoC5/RTOS_tasks.c **** 
4449:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxTaskStatusArray != NULL )
4450:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4451:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Generate the (binary) data. */
4452:Generated_Source\PSoC5/RTOS_tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4453:Generated_Source\PSoC5/RTOS_tasks.c **** 
4454:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Create a human readable table from the binary data. */
4455:Generated_Source\PSoC5/RTOS_tasks.c ****             for( x = 0; x < uxArraySize; x++ )
4456:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4457:Generated_Source\PSoC5/RTOS_tasks.c ****                 switch( pxTaskStatusArray[ x ].eCurrentState )
4458:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4459:Generated_Source\PSoC5/RTOS_tasks.c ****                     case eRunning:
4460:Generated_Source\PSoC5/RTOS_tasks.c ****                         cStatus = tskRUNNING_CHAR;
4461:Generated_Source\PSoC5/RTOS_tasks.c ****                         break;
4462:Generated_Source\PSoC5/RTOS_tasks.c **** 
4463:Generated_Source\PSoC5/RTOS_tasks.c ****                     case eReady:
4464:Generated_Source\PSoC5/RTOS_tasks.c ****                         cStatus = tskREADY_CHAR;
4465:Generated_Source\PSoC5/RTOS_tasks.c ****                         break;
4466:Generated_Source\PSoC5/RTOS_tasks.c **** 
4467:Generated_Source\PSoC5/RTOS_tasks.c ****                     case eBlocked:
4468:Generated_Source\PSoC5/RTOS_tasks.c ****                         cStatus = tskBLOCKED_CHAR;
4469:Generated_Source\PSoC5/RTOS_tasks.c ****                         break;
4470:Generated_Source\PSoC5/RTOS_tasks.c **** 
4471:Generated_Source\PSoC5/RTOS_tasks.c ****                     case eSuspended:
4472:Generated_Source\PSoC5/RTOS_tasks.c ****                         cStatus = tskSUSPENDED_CHAR;
4473:Generated_Source\PSoC5/RTOS_tasks.c ****                         break;
4474:Generated_Source\PSoC5/RTOS_tasks.c **** 
4475:Generated_Source\PSoC5/RTOS_tasks.c ****                     case eDeleted:
4476:Generated_Source\PSoC5/RTOS_tasks.c ****                         cStatus = tskDELETED_CHAR;
4477:Generated_Source\PSoC5/RTOS_tasks.c ****                         break;
4478:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 91


4479:Generated_Source\PSoC5/RTOS_tasks.c ****                     case eInvalid: /* Fall through. */
4480:Generated_Source\PSoC5/RTOS_tasks.c ****                     default:       /* Should not get here, but it is included
4481:Generated_Source\PSoC5/RTOS_tasks.c ****                                     * to prevent static checking errors. */
4482:Generated_Source\PSoC5/RTOS_tasks.c ****                         cStatus = ( char ) 0x00;
4483:Generated_Source\PSoC5/RTOS_tasks.c ****                         break;
4484:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4485:Generated_Source\PSoC5/RTOS_tasks.c **** 
4486:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Write the task name to the string, padding with spaces so it
4487:Generated_Source\PSoC5/RTOS_tasks.c ****                  * can be printed in tabular form more easily. */
4488:Generated_Source\PSoC5/RTOS_tasks.c ****                 pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskN
4489:Generated_Source\PSoC5/RTOS_tasks.c **** 
4490:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Write the rest of the string. */
4491:Generated_Source\PSoC5/RTOS_tasks.c ****                 sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskSta
4492:Generated_Source\PSoC5/RTOS_tasks.c ****                 pcWriteBuffer += strlen( pcWriteBuffer );                                          
4493:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4494:Generated_Source\PSoC5/RTOS_tasks.c **** 
4495:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4496:Generated_Source\PSoC5/RTOS_tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4497:Generated_Source\PSoC5/RTOS_tasks.c ****             vPortFree( pxTaskStatusArray );
4498:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4499:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4500:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4501:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
4502:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4503:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4504:Generated_Source\PSoC5/RTOS_tasks.c **** 
4505:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4506:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
4507:Generated_Source\PSoC5/RTOS_tasks.c **** 
4508:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4509:Generated_Source\PSoC5/RTOS_tasks.c **** 
4510:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskGetRunTimeStats( char * pcWriteBuffer )
4511:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4512:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4513:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxArraySize, x;
4514:Generated_Source\PSoC5/RTOS_tasks.c ****         uint32_t ulTotalTime, ulStatsAsPercentage;
4515:Generated_Source\PSoC5/RTOS_tasks.c **** 
4516:Generated_Source\PSoC5/RTOS_tasks.c ****         #if ( configUSE_TRACE_FACILITY != 1 )
4517:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4518:Generated_Source\PSoC5/RTOS_tasks.c ****                 #error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vT
4519:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4520:Generated_Source\PSoC5/RTOS_tasks.c ****         #endif
4521:Generated_Source\PSoC5/RTOS_tasks.c **** 
4522:Generated_Source\PSoC5/RTOS_tasks.c ****         /*
4523:Generated_Source\PSoC5/RTOS_tasks.c ****          * PLEASE NOTE:
4524:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4525:Generated_Source\PSoC5/RTOS_tasks.c ****          * This function is provided for convenience only, and is used by many
4526:Generated_Source\PSoC5/RTOS_tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4527:Generated_Source\PSoC5/RTOS_tasks.c ****          * scheduler.
4528:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4529:Generated_Source\PSoC5/RTOS_tasks.c ****          * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4530:Generated_Source\PSoC5/RTOS_tasks.c ****          * of the uxTaskGetSystemState() output into a human readable table that
4531:Generated_Source\PSoC5/RTOS_tasks.c ****          * displays the amount of time each task has spent in the Running state
4532:Generated_Source\PSoC5/RTOS_tasks.c ****          * in both absolute and percentage terms.
4533:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4534:Generated_Source\PSoC5/RTOS_tasks.c ****          * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4535:Generated_Source\PSoC5/RTOS_tasks.c ****          * function that might bloat the code size, use a lot of stack, and
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 92


4536:Generated_Source\PSoC5/RTOS_tasks.c ****          * provide different results on different platforms.  An alternative,
4537:Generated_Source\PSoC5/RTOS_tasks.c ****          * tiny, third party, and limited functionality implementation of
4538:Generated_Source\PSoC5/RTOS_tasks.c ****          * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4539:Generated_Source\PSoC5/RTOS_tasks.c ****          * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4540:Generated_Source\PSoC5/RTOS_tasks.c ****          * a full snprintf() implementation!).
4541:Generated_Source\PSoC5/RTOS_tasks.c ****          *
4542:Generated_Source\PSoC5/RTOS_tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4543:Generated_Source\PSoC5/RTOS_tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4544:Generated_Source\PSoC5/RTOS_tasks.c ****          * through a call to vTaskGetRunTimeStats().
4545:Generated_Source\PSoC5/RTOS_tasks.c ****          */
4546:Generated_Source\PSoC5/RTOS_tasks.c **** 
4547:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Make sure the write buffer does not contain a string. */
4548:Generated_Source\PSoC5/RTOS_tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4549:Generated_Source\PSoC5/RTOS_tasks.c **** 
4550:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4551:Generated_Source\PSoC5/RTOS_tasks.c ****          * function is executing. */
4552:Generated_Source\PSoC5/RTOS_tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4553:Generated_Source\PSoC5/RTOS_tasks.c **** 
4554:Generated_Source\PSoC5/RTOS_tasks.c ****         /* Allocate an array index for each task.  NOTE!  If
4555:Generated_Source\PSoC5/RTOS_tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4556:Generated_Source\PSoC5/RTOS_tasks.c ****          * equate to NULL. */
4557:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4558:Generated_Source\PSoC5/RTOS_tasks.c **** 
4559:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxTaskStatusArray != NULL )
4560:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4561:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Generate the (binary) data. */
4562:Generated_Source\PSoC5/RTOS_tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4563:Generated_Source\PSoC5/RTOS_tasks.c **** 
4564:Generated_Source\PSoC5/RTOS_tasks.c ****             /* For percentage calculations. */
4565:Generated_Source\PSoC5/RTOS_tasks.c ****             ulTotalTime /= 100UL;
4566:Generated_Source\PSoC5/RTOS_tasks.c **** 
4567:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Avoid divide by zero errors. */
4568:Generated_Source\PSoC5/RTOS_tasks.c ****             if( ulTotalTime > 0UL )
4569:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4570:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Create a human readable table from the binary data. */
4571:Generated_Source\PSoC5/RTOS_tasks.c ****                 for( x = 0; x < uxArraySize; x++ )
4572:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4573:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* What percentage of the total run time has the task used?
4574:Generated_Source\PSoC5/RTOS_tasks.c ****                      * This will always be rounded down to the nearest integer.
4575:Generated_Source\PSoC5/RTOS_tasks.c ****                      * ulTotalRunTimeDiv100 has already been divided by 100. */
4576:Generated_Source\PSoC5/RTOS_tasks.c ****                     ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4577:Generated_Source\PSoC5/RTOS_tasks.c **** 
4578:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Write the task name to the string, padding with
4579:Generated_Source\PSoC5/RTOS_tasks.c ****                      * spaces so it can be printed in tabular form more
4580:Generated_Source\PSoC5/RTOS_tasks.c ****                      * easily. */
4581:Generated_Source\PSoC5/RTOS_tasks.c ****                     pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcT
4582:Generated_Source\PSoC5/RTOS_tasks.c **** 
4583:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( ulStatsAsPercentage > 0UL )
4584:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4585:Generated_Source\PSoC5/RTOS_tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4586:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
4587:Generated_Source\PSoC5/RTOS_tasks.c ****                                 sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x 
4588:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
4589:Generated_Source\PSoC5/RTOS_tasks.c ****                         #else
4590:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
4591:Generated_Source\PSoC5/RTOS_tasks.c ****                                 /* sizeof( int ) == sizeof( long ) so a smaller
4592:Generated_Source\PSoC5/RTOS_tasks.c ****                                  * printf() library can be used. */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 93


4593:Generated_Source\PSoC5/RTOS_tasks.c ****                                 sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTask
4594:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
4595:Generated_Source\PSoC5/RTOS_tasks.c ****                         #endif
4596:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4597:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
4598:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4599:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* If the percentage is zero here then the task has
4600:Generated_Source\PSoC5/RTOS_tasks.c ****                          * consumed less than 1% of the total run time. */
4601:Generated_Source\PSoC5/RTOS_tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4602:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
4603:Generated_Source\PSoC5/RTOS_tasks.c ****                                 sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ]
4604:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
4605:Generated_Source\PSoC5/RTOS_tasks.c ****                         #else
4606:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
4607:Generated_Source\PSoC5/RTOS_tasks.c ****                                 /* sizeof( int ) == sizeof( long ) so a smaller
4608:Generated_Source\PSoC5/RTOS_tasks.c ****                                  * printf() library can be used. */
4609:Generated_Source\PSoC5/RTOS_tasks.c ****                                 sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTask
4610:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
4611:Generated_Source\PSoC5/RTOS_tasks.c ****                         #endif
4612:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4613:Generated_Source\PSoC5/RTOS_tasks.c **** 
4614:Generated_Source\PSoC5/RTOS_tasks.c ****                     pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok o
4615:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4616:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4617:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4618:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4619:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4620:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4621:Generated_Source\PSoC5/RTOS_tasks.c **** 
4622:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4623:Generated_Source\PSoC5/RTOS_tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4624:Generated_Source\PSoC5/RTOS_tasks.c ****             vPortFree( pxTaskStatusArray );
4625:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4626:Generated_Source\PSoC5/RTOS_tasks.c ****         else
4627:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4628:Generated_Source\PSoC5/RTOS_tasks.c ****             mtCOVERAGE_TEST_MARKER();
4629:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4630:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4631:Generated_Source\PSoC5/RTOS_tasks.c **** 
4632:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4633:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4634:Generated_Source\PSoC5/RTOS_tasks.c **** 
4635:Generated_Source\PSoC5/RTOS_tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4636:Generated_Source\PSoC5/RTOS_tasks.c **** {
4637:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t uxReturn;
4638:Generated_Source\PSoC5/RTOS_tasks.c **** 
4639:Generated_Source\PSoC5/RTOS_tasks.c ****     uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4640:Generated_Source\PSoC5/RTOS_tasks.c **** 
4641:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Reset the event list item to its normal value - so it can be used with
4642:Generated_Source\PSoC5/RTOS_tasks.c ****      * queues and semaphores. */
4643:Generated_Source\PSoC5/RTOS_tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITI
4644:Generated_Source\PSoC5/RTOS_tasks.c **** 
4645:Generated_Source\PSoC5/RTOS_tasks.c ****     return uxReturn;
4646:Generated_Source\PSoC5/RTOS_tasks.c **** }
4647:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4648:Generated_Source\PSoC5/RTOS_tasks.c **** 
4649:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_MUTEXES == 1 )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 94


4650:Generated_Source\PSoC5/RTOS_tasks.c **** 
4651:Generated_Source\PSoC5/RTOS_tasks.c ****     TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4652:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4653:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
4654:Generated_Source\PSoC5/RTOS_tasks.c ****          * then pxCurrentTCB will be NULL. */
4655:Generated_Source\PSoC5/RTOS_tasks.c ****         if( pxCurrentTCB != NULL )
4656:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4657:Generated_Source\PSoC5/RTOS_tasks.c ****             ( pxCurrentTCB->uxMutexesHeld )++;
4658:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4659:Generated_Source\PSoC5/RTOS_tasks.c **** 
4660:Generated_Source\PSoC5/RTOS_tasks.c ****         return pxCurrentTCB;
4661:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4662:Generated_Source\PSoC5/RTOS_tasks.c **** 
4663:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_MUTEXES */
4664:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4665:Generated_Source\PSoC5/RTOS_tasks.c **** 
4666:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4667:Generated_Source\PSoC5/RTOS_tasks.c **** 
4668:Generated_Source\PSoC5/RTOS_tasks.c ****     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
4669:Generated_Source\PSoC5/RTOS_tasks.c ****                                       BaseType_t xClearCountOnExit,
4670:Generated_Source\PSoC5/RTOS_tasks.c ****                                       TickType_t xTicksToWait )
4671:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4672:Generated_Source\PSoC5/RTOS_tasks.c ****         uint32_t ulReturn;
4673:Generated_Source\PSoC5/RTOS_tasks.c **** 
4674:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4675:Generated_Source\PSoC5/RTOS_tasks.c **** 
4676:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
4677:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4678:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Only block if the notification count is not already non-zero. */
4679:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
4680:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4681:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Mark this task as waiting for a notification. */
4682:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4683:Generated_Source\PSoC5/RTOS_tasks.c **** 
4684:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4685:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4686:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4687:Generated_Source\PSoC5/RTOS_tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
4688:Generated_Source\PSoC5/RTOS_tasks.c **** 
4689:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* All ports are written to allow a yield in a critical
4690:Generated_Source\PSoC5/RTOS_tasks.c ****                      * section (some will yield immediately, others wait until the
4691:Generated_Source\PSoC5/RTOS_tasks.c ****                      * critical section exits) - but it is not something that
4692:Generated_Source\PSoC5/RTOS_tasks.c ****                      * application code should ever do. */
4693:Generated_Source\PSoC5/RTOS_tasks.c ****                     portYIELD_WITHIN_API();
4694:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4695:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4696:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4697:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4698:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4699:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4700:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4701:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4702:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4703:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4704:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4705:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
4706:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 95


4707:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
4708:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4709:Generated_Source\PSoC5/RTOS_tasks.c ****             traceTASK_NOTIFY_TAKE( uxIndexToWait );
4710:Generated_Source\PSoC5/RTOS_tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4711:Generated_Source\PSoC5/RTOS_tasks.c **** 
4712:Generated_Source\PSoC5/RTOS_tasks.c ****             if( ulReturn != 0UL )
4713:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4714:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xClearCountOnExit != pdFALSE )
4715:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4716:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
4717:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4718:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4719:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4720:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
4721:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4722:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4723:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4724:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4725:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4726:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4727:Generated_Source\PSoC5/RTOS_tasks.c **** 
4728:Generated_Source\PSoC5/RTOS_tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4729:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4730:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
4731:Generated_Source\PSoC5/RTOS_tasks.c **** 
4732:Generated_Source\PSoC5/RTOS_tasks.c ****         return ulReturn;
4733:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4734:Generated_Source\PSoC5/RTOS_tasks.c **** 
4735:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4736:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4737:Generated_Source\PSoC5/RTOS_tasks.c **** 
4738:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4739:Generated_Source\PSoC5/RTOS_tasks.c **** 
4740:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
4741:Generated_Source\PSoC5/RTOS_tasks.c ****                                        uint32_t ulBitsToClearOnEntry,
4742:Generated_Source\PSoC5/RTOS_tasks.c ****                                        uint32_t ulBitsToClearOnExit,
4743:Generated_Source\PSoC5/RTOS_tasks.c ****                                        uint32_t * pulNotificationValue,
4744:Generated_Source\PSoC5/RTOS_tasks.c ****                                        TickType_t xTicksToWait )
4745:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4746:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
4747:Generated_Source\PSoC5/RTOS_tasks.c **** 
4748:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4749:Generated_Source\PSoC5/RTOS_tasks.c **** 
4750:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
4751:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4752:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Only block if a notification is not already pending. */
4753:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4754:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4755:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Clear bits in the task's notification value as bits may get
4756:Generated_Source\PSoC5/RTOS_tasks.c ****                  * set  by the notifying task or interrupt.  This can be used to
4757:Generated_Source\PSoC5/RTOS_tasks.c ****                  * clear the value to zero. */
4758:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
4759:Generated_Source\PSoC5/RTOS_tasks.c **** 
4760:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Mark this task as waiting for a notification. */
4761:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4762:Generated_Source\PSoC5/RTOS_tasks.c **** 
4763:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 96


4764:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4765:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4766:Generated_Source\PSoC5/RTOS_tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
4767:Generated_Source\PSoC5/RTOS_tasks.c **** 
4768:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* All ports are written to allow a yield in a critical
4769:Generated_Source\PSoC5/RTOS_tasks.c ****                      * section (some will yield immediately, others wait until the
4770:Generated_Source\PSoC5/RTOS_tasks.c ****                      * critical section exits) - but it is not something that
4771:Generated_Source\PSoC5/RTOS_tasks.c ****                      * application code should ever do. */
4772:Generated_Source\PSoC5/RTOS_tasks.c ****                     portYIELD_WITHIN_API();
4773:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4774:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4775:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4776:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4777:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4778:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4779:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4780:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4781:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4782:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4783:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4784:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
4785:Generated_Source\PSoC5/RTOS_tasks.c **** 
4786:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
4787:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4788:Generated_Source\PSoC5/RTOS_tasks.c ****             traceTASK_NOTIFY_WAIT( uxIndexToWait );
4789:Generated_Source\PSoC5/RTOS_tasks.c **** 
4790:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pulNotificationValue != NULL )
4791:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4792:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Output the current notification value, which may or may not
4793:Generated_Source\PSoC5/RTOS_tasks.c ****                  * have changed. */
4794:Generated_Source\PSoC5/RTOS_tasks.c ****                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4795:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4796:Generated_Source\PSoC5/RTOS_tasks.c **** 
4797:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If ucNotifyValue is set then either the task never entered the
4798:Generated_Source\PSoC5/RTOS_tasks.c ****              * blocked state (because a notification was already pending) or the
4799:Generated_Source\PSoC5/RTOS_tasks.c ****              * task unblocked because of a notification.  Otherwise the task
4800:Generated_Source\PSoC5/RTOS_tasks.c ****              * unblocked because of a timeout. */
4801:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4802:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4803:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* A notification was not received. */
4804:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdFALSE;
4805:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4806:Generated_Source\PSoC5/RTOS_tasks.c ****             else
4807:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4808:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* A notification was already pending or a notification was
4809:Generated_Source\PSoC5/RTOS_tasks.c ****                  * received while the task was waiting. */
4810:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
4811:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdTRUE;
4812:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4813:Generated_Source\PSoC5/RTOS_tasks.c **** 
4814:Generated_Source\PSoC5/RTOS_tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4815:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4816:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
4817:Generated_Source\PSoC5/RTOS_tasks.c **** 
4818:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
4819:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4820:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 97


4821:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4822:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4823:Generated_Source\PSoC5/RTOS_tasks.c **** 
4824:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4825:Generated_Source\PSoC5/RTOS_tasks.c **** 
4826:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
4827:Generated_Source\PSoC5/RTOS_tasks.c ****                                    UBaseType_t uxIndexToNotify,
4828:Generated_Source\PSoC5/RTOS_tasks.c ****                                    uint32_t ulValue,
4829:Generated_Source\PSoC5/RTOS_tasks.c ****                                    eNotifyAction eAction,
4830:Generated_Source\PSoC5/RTOS_tasks.c ****                                    uint32_t * pulPreviousNotificationValue )
4831:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4832:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
4833:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn = pdPASS;
4834:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucOriginalNotifyState;
4835:Generated_Source\PSoC5/RTOS_tasks.c **** 
4836:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4837:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( xTaskToNotify );
4838:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = xTaskToNotify;
4839:Generated_Source\PSoC5/RTOS_tasks.c **** 
4840:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
4841:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4842:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pulPreviousNotificationValue != NULL )
4843:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4844:Generated_Source\PSoC5/RTOS_tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
4845:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4846:Generated_Source\PSoC5/RTOS_tasks.c **** 
4847:Generated_Source\PSoC5/RTOS_tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
4848:Generated_Source\PSoC5/RTOS_tasks.c **** 
4849:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
4850:Generated_Source\PSoC5/RTOS_tasks.c **** 
4851:Generated_Source\PSoC5/RTOS_tasks.c ****             switch( eAction )
4852:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4853:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eSetBits:
4854:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
4855:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
4856:Generated_Source\PSoC5/RTOS_tasks.c **** 
4857:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eIncrement:
4858:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
4859:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
4860:Generated_Source\PSoC5/RTOS_tasks.c **** 
4861:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eSetValueWithOverwrite:
4862:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4863:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
4864:Generated_Source\PSoC5/RTOS_tasks.c **** 
4865:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eSetValueWithoutOverwrite:
4866:Generated_Source\PSoC5/RTOS_tasks.c **** 
4867:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4868:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4869:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4870:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4871:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
4872:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4873:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* The value could not be written to the task. */
4874:Generated_Source\PSoC5/RTOS_tasks.c ****                         xReturn = pdFAIL;
4875:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4876:Generated_Source\PSoC5/RTOS_tasks.c **** 
4877:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 98


4878:Generated_Source\PSoC5/RTOS_tasks.c **** 
4879:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eNoAction:
4880:Generated_Source\PSoC5/RTOS_tasks.c **** 
4881:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The task is being notified without its notify value being
4882:Generated_Source\PSoC5/RTOS_tasks.c ****                      * updated. */
4883:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
4884:Generated_Source\PSoC5/RTOS_tasks.c **** 
4885:Generated_Source\PSoC5/RTOS_tasks.c ****                 default:
4886:Generated_Source\PSoC5/RTOS_tasks.c **** 
4887:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Should not get here if all enums are handled.
4888:Generated_Source\PSoC5/RTOS_tasks.c ****                      * Artificially force an assert by testing a value the
4889:Generated_Source\PSoC5/RTOS_tasks.c ****                      * compiler can't assume is const. */
4890:Generated_Source\PSoC5/RTOS_tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
4891:Generated_Source\PSoC5/RTOS_tasks.c **** 
4892:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
4893:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4894:Generated_Source\PSoC5/RTOS_tasks.c **** 
4895:Generated_Source\PSoC5/RTOS_tasks.c ****             traceTASK_NOTIFY( uxIndexToNotify );
4896:Generated_Source\PSoC5/RTOS_tasks.c **** 
4897:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If the task is in the blocked state specifically to wait for a
4898:Generated_Source\PSoC5/RTOS_tasks.c ****              * notification then unblock it now. */
4899:Generated_Source\PSoC5/RTOS_tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4900:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4901:Generated_Source\PSoC5/RTOS_tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4902:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvAddTaskToReadyList( pxTCB );
4903:Generated_Source\PSoC5/RTOS_tasks.c **** 
4904:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The task should not have been on an event list. */
4905:Generated_Source\PSoC5/RTOS_tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4906:Generated_Source\PSoC5/RTOS_tasks.c **** 
4907:Generated_Source\PSoC5/RTOS_tasks.c ****                 #if ( configUSE_TICKLESS_IDLE != 0 )
4908:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
4909:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* If a task is blocked waiting for a notification then
4910:Generated_Source\PSoC5/RTOS_tasks.c ****                          * xNextTaskUnblockTime might be set to the blocked task's time
4911:Generated_Source\PSoC5/RTOS_tasks.c ****                          * out time.  If the task is unblocked for a reason other than
4912:Generated_Source\PSoC5/RTOS_tasks.c ****                          * a timeout xNextTaskUnblockTime is normally left unchanged,
4913:Generated_Source\PSoC5/RTOS_tasks.c ****                          * because it will automatically get reset to a new value when
4914:Generated_Source\PSoC5/RTOS_tasks.c ****                          * the tick count equals xNextTaskUnblockTime.  However if
4915:Generated_Source\PSoC5/RTOS_tasks.c ****                          * tickless idling is used it might be more important to enter
4916:Generated_Source\PSoC5/RTOS_tasks.c ****                          * sleep mode at the earliest possible time - so reset
4917:Generated_Source\PSoC5/RTOS_tasks.c ****                          * xNextTaskUnblockTime here to ensure it is updated at the
4918:Generated_Source\PSoC5/RTOS_tasks.c ****                          * earliest possible time. */
4919:Generated_Source\PSoC5/RTOS_tasks.c ****                         prvResetNextTaskUnblockTime();
4920:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
4921:Generated_Source\PSoC5/RTOS_tasks.c ****                 #endif
4922:Generated_Source\PSoC5/RTOS_tasks.c **** 
4923:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4924:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4925:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The notified task has a priority above the currently
4926:Generated_Source\PSoC5/RTOS_tasks.c ****                      * executing task so a yield is required. */
4927:Generated_Source\PSoC5/RTOS_tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
4928:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4929:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
4930:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
4931:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4932:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
4933:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4934:Generated_Source\PSoC5/RTOS_tasks.c ****             else
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 99


4935:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4936:Generated_Source\PSoC5/RTOS_tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4937:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4938:Generated_Source\PSoC5/RTOS_tasks.c ****         }
4939:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
4940:Generated_Source\PSoC5/RTOS_tasks.c **** 
4941:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
4942:Generated_Source\PSoC5/RTOS_tasks.c ****     }
4943:Generated_Source\PSoC5/RTOS_tasks.c **** 
4944:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4945:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
4946:Generated_Source\PSoC5/RTOS_tasks.c **** 
4947:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4948:Generated_Source\PSoC5/RTOS_tasks.c **** 
4949:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
4950:Generated_Source\PSoC5/RTOS_tasks.c ****                                           UBaseType_t uxIndexToNotify,
4951:Generated_Source\PSoC5/RTOS_tasks.c ****                                           uint32_t ulValue,
4952:Generated_Source\PSoC5/RTOS_tasks.c ****                                           eNotifyAction eAction,
4953:Generated_Source\PSoC5/RTOS_tasks.c ****                                           uint32_t * pulPreviousNotificationValue,
4954:Generated_Source\PSoC5/RTOS_tasks.c ****                                           BaseType_t * pxHigherPriorityTaskWoken )
4955:Generated_Source\PSoC5/RTOS_tasks.c ****     {
4956:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
4957:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucOriginalNotifyState;
4958:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn = pdPASS;
4959:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
4960:Generated_Source\PSoC5/RTOS_tasks.c **** 
4961:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( xTaskToNotify );
4962:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4963:Generated_Source\PSoC5/RTOS_tasks.c **** 
4964:Generated_Source\PSoC5/RTOS_tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
4965:Generated_Source\PSoC5/RTOS_tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
4966:Generated_Source\PSoC5/RTOS_tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
4967:Generated_Source\PSoC5/RTOS_tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
4968:Generated_Source\PSoC5/RTOS_tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4969:Generated_Source\PSoC5/RTOS_tasks.c ****          * is defined in FreeRTOSConfig.h then
4970:Generated_Source\PSoC5/RTOS_tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4971:Generated_Source\PSoC5/RTOS_tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
4972:Generated_Source\PSoC5/RTOS_tasks.c ****          * been assigned a priority above the configured maximum system call
4973:Generated_Source\PSoC5/RTOS_tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
4974:Generated_Source\PSoC5/RTOS_tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
4975:Generated_Source\PSoC5/RTOS_tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
4976:Generated_Source\PSoC5/RTOS_tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
4977:Generated_Source\PSoC5/RTOS_tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
4978:Generated_Source\PSoC5/RTOS_tasks.c ****          * provided on the following link:
4979:Generated_Source\PSoC5/RTOS_tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
4980:Generated_Source\PSoC5/RTOS_tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4981:Generated_Source\PSoC5/RTOS_tasks.c **** 
4982:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = xTaskToNotify;
4983:Generated_Source\PSoC5/RTOS_tasks.c **** 
4984:Generated_Source\PSoC5/RTOS_tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4985:Generated_Source\PSoC5/RTOS_tasks.c ****         {
4986:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pulPreviousNotificationValue != NULL )
4987:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4988:Generated_Source\PSoC5/RTOS_tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
4989:Generated_Source\PSoC5/RTOS_tasks.c ****             }
4990:Generated_Source\PSoC5/RTOS_tasks.c **** 
4991:Generated_Source\PSoC5/RTOS_tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 100


4992:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
4993:Generated_Source\PSoC5/RTOS_tasks.c **** 
4994:Generated_Source\PSoC5/RTOS_tasks.c ****             switch( eAction )
4995:Generated_Source\PSoC5/RTOS_tasks.c ****             {
4996:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eSetBits:
4997:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
4998:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
4999:Generated_Source\PSoC5/RTOS_tasks.c **** 
5000:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eIncrement:
5001:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5002:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
5003:Generated_Source\PSoC5/RTOS_tasks.c **** 
5004:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eSetValueWithOverwrite:
5005:Generated_Source\PSoC5/RTOS_tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5006:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
5007:Generated_Source\PSoC5/RTOS_tasks.c **** 
5008:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eSetValueWithoutOverwrite:
5009:Generated_Source\PSoC5/RTOS_tasks.c **** 
5010:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
5011:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
5012:Generated_Source\PSoC5/RTOS_tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5013:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
5014:Generated_Source\PSoC5/RTOS_tasks.c ****                     else
5015:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
5016:Generated_Source\PSoC5/RTOS_tasks.c ****                         /* The value could not be written to the task. */
5017:Generated_Source\PSoC5/RTOS_tasks.c ****                         xReturn = pdFAIL;
5018:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
5019:Generated_Source\PSoC5/RTOS_tasks.c **** 
5020:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
5021:Generated_Source\PSoC5/RTOS_tasks.c **** 
5022:Generated_Source\PSoC5/RTOS_tasks.c ****                 case eNoAction:
5023:Generated_Source\PSoC5/RTOS_tasks.c **** 
5024:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The task is being notified without its notify value being
5025:Generated_Source\PSoC5/RTOS_tasks.c ****                      * updated. */
5026:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
5027:Generated_Source\PSoC5/RTOS_tasks.c **** 
5028:Generated_Source\PSoC5/RTOS_tasks.c ****                 default:
5029:Generated_Source\PSoC5/RTOS_tasks.c **** 
5030:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Should not get here if all enums are handled.
5031:Generated_Source\PSoC5/RTOS_tasks.c ****                      * Artificially force an assert by testing a value the
5032:Generated_Source\PSoC5/RTOS_tasks.c ****                      * compiler can't assume is const. */
5033:Generated_Source\PSoC5/RTOS_tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
5034:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
5035:Generated_Source\PSoC5/RTOS_tasks.c ****             }
5036:Generated_Source\PSoC5/RTOS_tasks.c **** 
5037:Generated_Source\PSoC5/RTOS_tasks.c ****             traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );
5038:Generated_Source\PSoC5/RTOS_tasks.c **** 
5039:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5040:Generated_Source\PSoC5/RTOS_tasks.c ****              * notification then unblock it now. */
5041:Generated_Source\PSoC5/RTOS_tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5042:Generated_Source\PSoC5/RTOS_tasks.c ****             {
5043:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The task should not have been on an event list. */
5044:Generated_Source\PSoC5/RTOS_tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5045:Generated_Source\PSoC5/RTOS_tasks.c **** 
5046:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5047:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5048:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 101


5049:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5050:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5051:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
5052:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5053:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5054:Generated_Source\PSoC5/RTOS_tasks.c ****                      * this task pending until the scheduler is resumed. */
5055:Generated_Source\PSoC5/RTOS_tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5056:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5057:Generated_Source\PSoC5/RTOS_tasks.c **** 
5058:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5059:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5060:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The notified task has a priority above the currently
5061:Generated_Source\PSoC5/RTOS_tasks.c ****                      * executing task so a yield is required. */
5062:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5063:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
5064:Generated_Source\PSoC5/RTOS_tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5065:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
5066:Generated_Source\PSoC5/RTOS_tasks.c **** 
5067:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Mark that a yield is pending in case the user is not
5068:Generated_Source\PSoC5/RTOS_tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter to an ISR
5069:Generated_Source\PSoC5/RTOS_tasks.c ****                      * safe FreeRTOS function. */
5070:Generated_Source\PSoC5/RTOS_tasks.c ****                     xYieldPending = pdTRUE;
5071:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5072:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
5073:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5074:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5075:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5076:Generated_Source\PSoC5/RTOS_tasks.c ****             }
5077:Generated_Source\PSoC5/RTOS_tasks.c ****         }
5078:Generated_Source\PSoC5/RTOS_tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5079:Generated_Source\PSoC5/RTOS_tasks.c **** 
5080:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
5081:Generated_Source\PSoC5/RTOS_tasks.c ****     }
5082:Generated_Source\PSoC5/RTOS_tasks.c **** 
5083:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5084:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
5085:Generated_Source\PSoC5/RTOS_tasks.c **** 
5086:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5087:Generated_Source\PSoC5/RTOS_tasks.c **** 
5088:Generated_Source\PSoC5/RTOS_tasks.c ****     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
5089:Generated_Source\PSoC5/RTOS_tasks.c ****                                         UBaseType_t uxIndexToNotify,
5090:Generated_Source\PSoC5/RTOS_tasks.c ****                                         BaseType_t * pxHigherPriorityTaskWoken )
5091:Generated_Source\PSoC5/RTOS_tasks.c ****     {
5092:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
5093:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucOriginalNotifyState;
5094:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
5095:Generated_Source\PSoC5/RTOS_tasks.c **** 
5096:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( xTaskToNotify );
5097:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5098:Generated_Source\PSoC5/RTOS_tasks.c **** 
5099:Generated_Source\PSoC5/RTOS_tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
5100:Generated_Source\PSoC5/RTOS_tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
5101:Generated_Source\PSoC5/RTOS_tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
5102:Generated_Source\PSoC5/RTOS_tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
5103:Generated_Source\PSoC5/RTOS_tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5104:Generated_Source\PSoC5/RTOS_tasks.c ****          * is defined in FreeRTOSConfig.h then
5105:Generated_Source\PSoC5/RTOS_tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 102


5106:Generated_Source\PSoC5/RTOS_tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
5107:Generated_Source\PSoC5/RTOS_tasks.c ****          * been assigned a priority above the configured maximum system call
5108:Generated_Source\PSoC5/RTOS_tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
5109:Generated_Source\PSoC5/RTOS_tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
5110:Generated_Source\PSoC5/RTOS_tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
5111:Generated_Source\PSoC5/RTOS_tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5112:Generated_Source\PSoC5/RTOS_tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5113:Generated_Source\PSoC5/RTOS_tasks.c ****          * provided on the following link:
5114:Generated_Source\PSoC5/RTOS_tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5115:Generated_Source\PSoC5/RTOS_tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5116:Generated_Source\PSoC5/RTOS_tasks.c **** 
5117:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = xTaskToNotify;
5118:Generated_Source\PSoC5/RTOS_tasks.c **** 
5119:Generated_Source\PSoC5/RTOS_tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5120:Generated_Source\PSoC5/RTOS_tasks.c ****         {
5121:Generated_Source\PSoC5/RTOS_tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5122:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5123:Generated_Source\PSoC5/RTOS_tasks.c **** 
5124:Generated_Source\PSoC5/RTOS_tasks.c ****             /* 'Giving' is equivalent to incrementing a count in a counting
5125:Generated_Source\PSoC5/RTOS_tasks.c ****              * semaphore. */
5126:Generated_Source\PSoC5/RTOS_tasks.c ****             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5127:Generated_Source\PSoC5/RTOS_tasks.c **** 
5128:Generated_Source\PSoC5/RTOS_tasks.c ****             traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );
5129:Generated_Source\PSoC5/RTOS_tasks.c **** 
5130:Generated_Source\PSoC5/RTOS_tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5131:Generated_Source\PSoC5/RTOS_tasks.c ****              * notification then unblock it now. */
5132:Generated_Source\PSoC5/RTOS_tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5133:Generated_Source\PSoC5/RTOS_tasks.c ****             {
5134:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The task should not have been on an event list. */
5135:Generated_Source\PSoC5/RTOS_tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5136:Generated_Source\PSoC5/RTOS_tasks.c **** 
5137:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5138:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5139:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5140:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5141:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5142:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
5143:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5144:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5145:Generated_Source\PSoC5/RTOS_tasks.c ****                      * this task pending until the scheduler is resumed. */
5146:Generated_Source\PSoC5/RTOS_tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5147:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5148:Generated_Source\PSoC5/RTOS_tasks.c **** 
5149:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5150:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5151:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The notified task has a priority above the currently
5152:Generated_Source\PSoC5/RTOS_tasks.c ****                      * executing task so a yield is required. */
5153:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5154:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
5155:Generated_Source\PSoC5/RTOS_tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5156:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
5157:Generated_Source\PSoC5/RTOS_tasks.c **** 
5158:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Mark that a yield is pending in case the user is not
5159:Generated_Source\PSoC5/RTOS_tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter in an ISR
5160:Generated_Source\PSoC5/RTOS_tasks.c ****                      * safe FreeRTOS function. */
5161:Generated_Source\PSoC5/RTOS_tasks.c ****                     xYieldPending = pdTRUE;
5162:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 103


5163:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
5164:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5165:Generated_Source\PSoC5/RTOS_tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5166:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5167:Generated_Source\PSoC5/RTOS_tasks.c ****             }
5168:Generated_Source\PSoC5/RTOS_tasks.c ****         }
5169:Generated_Source\PSoC5/RTOS_tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5170:Generated_Source\PSoC5/RTOS_tasks.c ****     }
5171:Generated_Source\PSoC5/RTOS_tasks.c **** 
5172:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5173:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
5174:Generated_Source\PSoC5/RTOS_tasks.c **** 
5175:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5176:Generated_Source\PSoC5/RTOS_tasks.c **** 
5177:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
5178:Generated_Source\PSoC5/RTOS_tasks.c ****                                              UBaseType_t uxIndexToClear )
5179:Generated_Source\PSoC5/RTOS_tasks.c ****     {
5180:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
5181:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
5182:Generated_Source\PSoC5/RTOS_tasks.c **** 
5183:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5184:Generated_Source\PSoC5/RTOS_tasks.c **** 
5185:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If null is passed in here then it is the calling task that is having
5186:Generated_Source\PSoC5/RTOS_tasks.c ****          * its notification state cleared. */
5187:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5188:Generated_Source\PSoC5/RTOS_tasks.c **** 
5189:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
5190:Generated_Source\PSoC5/RTOS_tasks.c ****         {
5191:Generated_Source\PSoC5/RTOS_tasks.c ****             if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
5192:Generated_Source\PSoC5/RTOS_tasks.c ****             {
5193:Generated_Source\PSoC5/RTOS_tasks.c ****                 pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
5194:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdPASS;
5195:Generated_Source\PSoC5/RTOS_tasks.c ****             }
5196:Generated_Source\PSoC5/RTOS_tasks.c ****             else
5197:Generated_Source\PSoC5/RTOS_tasks.c ****             {
5198:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdFAIL;
5199:Generated_Source\PSoC5/RTOS_tasks.c ****             }
5200:Generated_Source\PSoC5/RTOS_tasks.c ****         }
5201:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
5202:Generated_Source\PSoC5/RTOS_tasks.c **** 
5203:Generated_Source\PSoC5/RTOS_tasks.c ****         return xReturn;
5204:Generated_Source\PSoC5/RTOS_tasks.c ****     }
5205:Generated_Source\PSoC5/RTOS_tasks.c **** 
5206:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5207:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
5208:Generated_Source\PSoC5/RTOS_tasks.c **** 
5209:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5210:Generated_Source\PSoC5/RTOS_tasks.c **** 
5211:Generated_Source\PSoC5/RTOS_tasks.c ****     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
5212:Generated_Source\PSoC5/RTOS_tasks.c ****                                             UBaseType_t uxIndexToClear,
5213:Generated_Source\PSoC5/RTOS_tasks.c ****                                             uint32_t ulBitsToClear )
5214:Generated_Source\PSoC5/RTOS_tasks.c ****     {
5215:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
5216:Generated_Source\PSoC5/RTOS_tasks.c ****         uint32_t ulReturn;
5217:Generated_Source\PSoC5/RTOS_tasks.c **** 
5218:Generated_Source\PSoC5/RTOS_tasks.c ****         /* If null is passed in here then it is the calling task that is having
5219:Generated_Source\PSoC5/RTOS_tasks.c ****          * its notification state cleared. */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 104


5220:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5221:Generated_Source\PSoC5/RTOS_tasks.c **** 
5222:Generated_Source\PSoC5/RTOS_tasks.c ****         taskENTER_CRITICAL();
5223:Generated_Source\PSoC5/RTOS_tasks.c ****         {
5224:Generated_Source\PSoC5/RTOS_tasks.c ****             /* Return the notification as it was before the bits were cleared,
5225:Generated_Source\PSoC5/RTOS_tasks.c ****              * then clear the bit mask. */
5226:Generated_Source\PSoC5/RTOS_tasks.c ****             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
5227:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
5228:Generated_Source\PSoC5/RTOS_tasks.c ****         }
5229:Generated_Source\PSoC5/RTOS_tasks.c ****         taskEXIT_CRITICAL();
5230:Generated_Source\PSoC5/RTOS_tasks.c **** 
5231:Generated_Source\PSoC5/RTOS_tasks.c ****         return ulReturn;
5232:Generated_Source\PSoC5/RTOS_tasks.c ****     }
5233:Generated_Source\PSoC5/RTOS_tasks.c **** 
5234:Generated_Source\PSoC5/RTOS_tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5235:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
5236:Generated_Source\PSoC5/RTOS_tasks.c **** 
5237:Generated_Source\PSoC5/RTOS_tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5238:Generated_Source\PSoC5/RTOS_tasks.c **** 
5239:Generated_Source\PSoC5/RTOS_tasks.c ****     uint32_t ulTaskGetIdleRunTimeCounter( void )
5240:Generated_Source\PSoC5/RTOS_tasks.c ****     {
5241:Generated_Source\PSoC5/RTOS_tasks.c ****         return xIdleTaskHandle->ulRunTimeCounter;
5242:Generated_Source\PSoC5/RTOS_tasks.c ****     }
5243:Generated_Source\PSoC5/RTOS_tasks.c **** 
5244:Generated_Source\PSoC5/RTOS_tasks.c **** #endif
5245:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
5246:Generated_Source\PSoC5/RTOS_tasks.c **** 
5247:Generated_Source\PSoC5/RTOS_tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
5248:Generated_Source\PSoC5/RTOS_tasks.c ****                                             const BaseType_t xCanBlockIndefinitely )
5249:Generated_Source\PSoC5/RTOS_tasks.c **** {
 580              		.loc 1 5249 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              	.LVL54:
 585 0000 70B5     		push	{r4, r5, r6, lr}
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 591 0002 0446     		mov	r4, r0
 592 0004 0E46     		mov	r6, r1
5250:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t xTimeToWake;
5251:Generated_Source\PSoC5/RTOS_tasks.c ****     const TickType_t xConstTickCount = xTickCount;
 593              		.loc 1 5251 0
 594 0006 174B     		ldr	r3, .L58
 595 0008 D3F8EC50 		ldr	r5, [r3, #236]
 596              	.LVL55:
5252:Generated_Source\PSoC5/RTOS_tasks.c **** 
5253:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
5254:Generated_Source\PSoC5/RTOS_tasks.c ****         {
5255:Generated_Source\PSoC5/RTOS_tasks.c ****             /* About to enter a delayed list, so ensure the ucDelayAborted flag is
5256:Generated_Source\PSoC5/RTOS_tasks.c ****              * reset to pdFALSE so it can be detected as having been set to pdTRUE
5257:Generated_Source\PSoC5/RTOS_tasks.c ****              * when the task leaves the Blocked state. */
5258:Generated_Source\PSoC5/RTOS_tasks.c ****             pxCurrentTCB->ucDelayAborted = pdFALSE;
5259:Generated_Source\PSoC5/RTOS_tasks.c ****         }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 105


5260:Generated_Source\PSoC5/RTOS_tasks.c ****     #endif
5261:Generated_Source\PSoC5/RTOS_tasks.c **** 
5262:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Remove the task from the ready list before adding it to the blocked list
5263:Generated_Source\PSoC5/RTOS_tasks.c ****      * as the same list item is used for both lists. */
5264:Generated_Source\PSoC5/RTOS_tasks.c ****     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 597              		.loc 1 5264 0
 598 000c D3F8D800 		ldr	r0, [r3, #216]
 599              	.LVL56:
 600 0010 0430     		adds	r0, r0, #4
 601 0012 FFF7FEFF 		bl	uxListRemove
 602              	.LVL57:
5265:Generated_Source\PSoC5/RTOS_tasks.c ****     {
5266:Generated_Source\PSoC5/RTOS_tasks.c ****         /* The current task must be in a ready list, so there is no need to
5267:Generated_Source\PSoC5/RTOS_tasks.c ****          * check, and the port reset macro can be called directly. */
5268:Generated_Source\PSoC5/RTOS_tasks.c ****         portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCu
5269:Generated_Source\PSoC5/RTOS_tasks.c ****     }
5270:Generated_Source\PSoC5/RTOS_tasks.c ****     else
5271:Generated_Source\PSoC5/RTOS_tasks.c ****     {
5272:Generated_Source\PSoC5/RTOS_tasks.c ****         mtCOVERAGE_TEST_MARKER();
5273:Generated_Source\PSoC5/RTOS_tasks.c ****     }
5274:Generated_Source\PSoC5/RTOS_tasks.c **** 
5275:Generated_Source\PSoC5/RTOS_tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
5276:Generated_Source\PSoC5/RTOS_tasks.c ****         {
5277:Generated_Source\PSoC5/RTOS_tasks.c ****             if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 603              		.loc 1 5277 0
 604 0016 B4F1FF3F 		cmp	r4, #-1
 605 001a 07D1     		bne	.L54
 606              		.loc 1 5277 0 is_stmt 0 discriminator 1
 607 001c 36B1     		cbz	r6, .L54
5278:Generated_Source\PSoC5/RTOS_tasks.c ****             {
5279:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Add the task to the suspended task list instead of a delayed task
5280:Generated_Source\PSoC5/RTOS_tasks.c ****                  * list to ensure it is not woken by a timing event.  It will block
5281:Generated_Source\PSoC5/RTOS_tasks.c ****                  * indefinitely. */
5282:Generated_Source\PSoC5/RTOS_tasks.c ****                 vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 608              		.loc 1 5282 0 is_stmt 1
 609 001e 1148     		ldr	r0, .L58
 610 0020 D0F8D810 		ldr	r1, [r0, #216]
 611 0024 0431     		adds	r1, r1, #4
 612 0026 FFF7FEFF 		bl	vListInsertEnd
 613              	.LVL58:
 614 002a 70BD     		pop	{r4, r5, r6, pc}
 615              	.LVL59:
 616              	.L54:
5283:Generated_Source\PSoC5/RTOS_tasks.c ****             }
5284:Generated_Source\PSoC5/RTOS_tasks.c ****             else
5285:Generated_Source\PSoC5/RTOS_tasks.c ****             {
5286:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* Calculate the time at which the task should be woken if the event
5287:Generated_Source\PSoC5/RTOS_tasks.c ****                  * does not occur.  This may overflow but this doesn't matter, the
5288:Generated_Source\PSoC5/RTOS_tasks.c ****                  * kernel will manage it correctly. */
5289:Generated_Source\PSoC5/RTOS_tasks.c ****                 xTimeToWake = xConstTickCount + xTicksToWait;
 617              		.loc 1 5289 0
 618 002c 2C44     		add	r4, r4, r5
 619              	.LVL60:
5290:Generated_Source\PSoC5/RTOS_tasks.c **** 
5291:Generated_Source\PSoC5/RTOS_tasks.c ****                 /* The list item will be inserted in wake time order. */
5292:Generated_Source\PSoC5/RTOS_tasks.c ****                 listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 620              		.loc 1 5292 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 106


 621 002e 0D4B     		ldr	r3, .L58
 622 0030 D3F8D830 		ldr	r3, [r3, #216]
 623 0034 5C60     		str	r4, [r3, #4]
5293:Generated_Source\PSoC5/RTOS_tasks.c **** 
5294:Generated_Source\PSoC5/RTOS_tasks.c ****                 if( xTimeToWake < xConstTickCount )
 624              		.loc 1 5294 0
 625 0036 A542     		cmp	r5, r4
 626 0038 08D9     		bls	.L56
5295:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5296:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* Wake time has overflowed.  Place this item in the overflow
5297:Generated_Source\PSoC5/RTOS_tasks.c ****                      * list. */
5298:Generated_Source\PSoC5/RTOS_tasks.c ****                     vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 627              		.loc 1 5298 0
 628 003a 0A4B     		ldr	r3, .L58
 629 003c D3F8D000 		ldr	r0, [r3, #208]
 630 0040 D3F8D810 		ldr	r1, [r3, #216]
 631 0044 0431     		adds	r1, r1, #4
 632 0046 FFF7FEFF 		bl	vListInsert
 633              	.LVL61:
 634 004a 70BD     		pop	{r4, r5, r6, pc}
 635              	.LVL62:
 636              	.L56:
5299:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
5300:Generated_Source\PSoC5/RTOS_tasks.c ****                 else
5301:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
5302:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* The wake time has not overflowed, so the current block list
5303:Generated_Source\PSoC5/RTOS_tasks.c ****                      * is used. */
5304:Generated_Source\PSoC5/RTOS_tasks.c ****                     vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 637              		.loc 1 5304 0
 638 004c 054D     		ldr	r5, .L58
 639              	.LVL63:
 640 004e A86A     		ldr	r0, [r5, #40]
 641 0050 D5F8D810 		ldr	r1, [r5, #216]
 642 0054 0431     		adds	r1, r1, #4
 643 0056 FFF7FEFF 		bl	vListInsert
 644              	.LVL64:
5305:Generated_Source\PSoC5/RTOS_tasks.c **** 
5306:Generated_Source\PSoC5/RTOS_tasks.c ****                     /* If the task entering the blocked state was placed at the
5307:Generated_Source\PSoC5/RTOS_tasks.c ****                      * head of the list of blocked tasks then xNextTaskUnblockTime
5308:Generated_Source\PSoC5/RTOS_tasks.c ****                      * needs to be updated too. */
5309:Generated_Source\PSoC5/RTOS_tasks.c ****                     if( xTimeToWake < xNextTaskUnblockTime )
 645              		.loc 1 5309 0
 646 005a EB6A     		ldr	r3, [r5, #44]
 647 005c 9C42     		cmp	r4, r3
 648 005e 00D2     		bcs	.L53
5310:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
5311:Generated_Source\PSoC5/RTOS_tasks.c ****                         xNextTaskUnblockTime = xTimeToWake;
 649              		.loc 1 5311 0
 650 0060 EC62     		str	r4, [r5, #44]
 651              	.L53:
 652 0062 70BD     		pop	{r4, r5, r6, pc}
 653              	.LVL65:
 654              	.L59:
 655              		.align	2
 656              	.L58:
 657 0064 00000000 		.word	.LANCHOR0
 658              		.cfi_endproc
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 107


 659              	.LFE117:
 660              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 661              		.section	.text.xTaskCreate,"ax",%progbits
 662              		.align	2
 663              		.global	xTaskCreate
 664              		.thumb
 665              		.thumb_func
 666              		.type	xTaskCreate, %function
 667              	xTaskCreate:
 668              	.LFB67:
 727:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxNewTCB;
 669              		.loc 1 727 0
 670              		.cfi_startproc
 671              		@ args = 8, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              	.LVL66:
 674 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 675              		.cfi_def_cfa_offset 28
 676              		.cfi_offset 4, -28
 677              		.cfi_offset 5, -24
 678              		.cfi_offset 6, -20
 679              		.cfi_offset 7, -16
 680              		.cfi_offset 8, -12
 681              		.cfi_offset 9, -8
 682              		.cfi_offset 14, -4
 683 0004 85B0     		sub	sp, sp, #20
 684              		.cfi_def_cfa_offset 48
 685 0006 0646     		mov	r6, r0
 686 0008 0F46     		mov	r7, r1
 687 000a 1546     		mov	r5, r2
 688 000c 9846     		mov	r8, r3
 689              	.LBB23:
 761:Generated_Source\PSoC5/RTOS_tasks.c **** 
 690              		.loc 1 761 0
 691 000e 9000     		lsls	r0, r2, #2
 692              	.LVL67:
 693 0010 FFF7FEFF 		bl	pvPortMalloc
 694              	.LVL68:
 763:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 695              		.loc 1 763 0
 696 0014 60B1     		cbz	r0, .L64
 697 0016 8146     		mov	r9, r0
 766:Generated_Source\PSoC5/RTOS_tasks.c **** 
 698              		.loc 1 766 0
 699 0018 6020     		movs	r0, #96
 700              	.LVL69:
 701 001a FFF7FEFF 		bl	pvPortMalloc
 702              	.LVL70:
 768:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 703              		.loc 1 768 0
 704 001e 0446     		mov	r4, r0
 705 0020 10B1     		cbz	r0, .L62
 771:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 706              		.loc 1 771 0
 707 0022 C0F83090 		str	r9, [r0, #48]
 708 0026 04E0     		b	.L61
 709              	.L62:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 108


 777:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 710              		.loc 1 777 0
 711 0028 4846     		mov	r0, r9
 712              	.LVL71:
 713 002a FFF7FEFF 		bl	vPortFree
 714              	.LVL72:
 715 002e 00E0     		b	.L61
 716              	.LVL73:
 717              	.L64:
 782:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 718              		.loc 1 782 0
 719 0030 0024     		movs	r4, #0
 720              	.LVL74:
 721              	.L61:
 722              	.LBE23:
 787:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 723              		.loc 1 787 0
 724 0032 8CB1     		cbz	r4, .L65
 797:Generated_Source\PSoC5/RTOS_tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 725              		.loc 1 797 0
 726 0034 0023     		movs	r3, #0
 727 0036 0393     		str	r3, [sp, #12]
 728 0038 0294     		str	r4, [sp, #8]
 729 003a 0D9B     		ldr	r3, [sp, #52]
 730 003c 0193     		str	r3, [sp, #4]
 731 003e 0C9B     		ldr	r3, [sp, #48]
 732 0040 0093     		str	r3, [sp]
 733 0042 4346     		mov	r3, r8
 734 0044 2A46     		mov	r2, r5
 735 0046 3946     		mov	r1, r7
 736 0048 3046     		mov	r0, r6
 737 004a FFF7FEFF 		bl	prvInitialiseNewTask
 738              	.LVL75:
 798:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdPASS;
 739              		.loc 1 798 0
 740 004e 2046     		mov	r0, r4
 741 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 742              	.LVL76:
 799:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 743              		.loc 1 799 0
 744 0054 0120     		movs	r0, #1
 745 0056 01E0     		b	.L63
 746              	.LVL77:
 747              	.L65:
 803:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 748              		.loc 1 803 0
 749 0058 4FF0FF30 		mov	r0, #-1
 750              	.L63:
 751              	.LVL78:
 807:Generated_Source\PSoC5/RTOS_tasks.c **** 
 752              		.loc 1 807 0
 753 005c 05B0     		add	sp, sp, #20
 754              		.cfi_def_cfa_offset 28
 755              		@ sp needed
 756 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 757              		.cfi_endproc
 758              	.LFE67:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 109


 759              		.size	xTaskCreate, .-xTaskCreate
 760 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 761              		.align	2
 762              		.global	vTaskDelete
 763              		.thumb
 764              		.thumb_func
 765              		.type	vTaskDelete, %function
 766              	vTaskDelete:
 767              	.LFB70:
1150:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 768              		.loc 1 1150 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              	.LVL79:
 773 0000 70B5     		push	{r4, r5, r6, lr}
 774              		.cfi_def_cfa_offset 16
 775              		.cfi_offset 4, -16
 776              		.cfi_offset 5, -12
 777              		.cfi_offset 6, -8
 778              		.cfi_offset 14, -4
 779 0002 0446     		mov	r4, r0
1153:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 780              		.loc 1 1153 0
 781 0004 FFF7FEFF 		bl	vPortEnterCritical
 782              	.LVL80:
1157:Generated_Source\PSoC5/RTOS_tasks.c **** 
 783              		.loc 1 1157 0
 784 0008 14B9     		cbnz	r4, .L68
1157:Generated_Source\PSoC5/RTOS_tasks.c **** 
 785              		.loc 1 1157 0 is_stmt 0 discriminator 1
 786 000a 214B     		ldr	r3, .L74
 787 000c D3F8D840 		ldr	r4, [r3, #216]
 788              	.LVL81:
 789              	.L68:
1160:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 790              		.loc 1 1160 0 is_stmt 1 discriminator 4
 791 0010 251D     		adds	r5, r4, #4
 792 0012 2846     		mov	r0, r5
 793 0014 FFF7FEFF 		bl	uxListRemove
 794              	.LVL82:
1170:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 795              		.loc 1 1170 0 discriminator 4
 796 0018 A36A     		ldr	r3, [r4, #40]
 797 001a 1BB1     		cbz	r3, .L69
1172:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 798              		.loc 1 1172 0
 799 001c 04F11800 		add	r0, r4, #24
 800 0020 FFF7FEFF 		bl	uxListRemove
 801              	.LVL83:
 802              	.L69:
1183:Generated_Source\PSoC5/RTOS_tasks.c **** 
 803              		.loc 1 1183 0
 804 0024 1A4B     		ldr	r3, .L74
 805 0026 D3F8E020 		ldr	r2, [r3, #224]
 806 002a 0132     		adds	r2, r2, #1
 807 002c C3F8E020 		str	r2, [r3, #224]
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 110


1185:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 808              		.loc 1 1185 0
 809 0030 D3F8D830 		ldr	r3, [r3, #216]
 810 0034 9C42     		cmp	r4, r3
 811 0036 0BD1     		bne	.L70
1192:Generated_Source\PSoC5/RTOS_tasks.c **** 
 812              		.loc 1 1192 0
 813 0038 154E     		ldr	r6, .L74
 814 003a 2946     		mov	r1, r5
 815 003c 06F1BC00 		add	r0, r6, #188
 816 0040 FFF7FEFF 		bl	vListInsertEnd
 817              	.LVL84:
1197:Generated_Source\PSoC5/RTOS_tasks.c **** 
 818              		.loc 1 1197 0
 819 0044 D6F8E830 		ldr	r3, [r6, #232]
 820 0048 0133     		adds	r3, r3, #1
 821 004a C6F8E830 		str	r3, [r6, #232]
 822 004e 0AE0     		b	.L71
 823              	.L70:
1212:Generated_Source\PSoC5/RTOS_tasks.c ****                 traceTASK_DELETE( pxTCB );
 824              		.loc 1 1212 0
 825 0050 0F4A     		ldr	r2, .L74
 826 0052 D2F8D430 		ldr	r3, [r2, #212]
 827 0056 013B     		subs	r3, r3, #1
 828 0058 C2F8D430 		str	r3, [r2, #212]
1214:Generated_Source\PSoC5/RTOS_tasks.c **** 
 829              		.loc 1 1214 0
 830 005c 2046     		mov	r0, r4
 831 005e FFF7FEFF 		bl	prvDeleteTCB
 832              	.LVL85:
1218:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 833              		.loc 1 1218 0
 834 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 835              	.LVL86:
 836              	.L71:
1221:Generated_Source\PSoC5/RTOS_tasks.c **** 
 837              		.loc 1 1221 0
 838 0066 FFF7FEFF 		bl	vPortExitCritical
 839              	.LVL87:
1225:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 840              		.loc 1 1225 0
 841 006a 094B     		ldr	r3, .L74
 842 006c D3F8DC30 		ldr	r3, [r3, #220]
 843 0070 63B1     		cbz	r3, .L67
1227:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 844              		.loc 1 1227 0
 845 0072 074B     		ldr	r3, .L74
 846 0074 D3F8D830 		ldr	r3, [r3, #216]
 847 0078 9C42     		cmp	r4, r3
 848 007a 07D1     		bne	.L67
1230:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 849              		.loc 1 1230 0
 850 007c 4FF08052 		mov	r2, #268435456
 851 0080 044B     		ldr	r3, .L74+4
 852 0082 1A60     		str	r2, [r3]
 853              		.syntax unified
 854              	@ 1230 "Generated_Source\PSoC5\RTOS_tasks.c" 1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 111


 855 0084 BFF34F8F 		dsb
 856              	@ 0 "" 2
 857              	@ 1230 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 858 0088 BFF36F8F 		isb
 859              	@ 0 "" 2
 860              		.thumb
 861              		.syntax unified
 862              	.L67:
 863 008c 70BD     		pop	{r4, r5, r6, pc}
 864              	.LVL88:
 865              	.L75:
 866 008e 00BF     		.align	2
 867              	.L74:
 868 0090 00000000 		.word	.LANCHOR0
 869 0094 04ED00E0 		.word	-536810236
 870              		.cfi_endproc
 871              	.LFE70:
 872              		.size	vTaskDelete, .-vTaskDelete
 873              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 874              		.align	2
 875              		.global	uxTaskPriorityGet
 876              		.thumb
 877              		.thumb_func
 878              		.type	uxTaskPriorityGet, %function
 879              	uxTaskPriorityGet:
 880              	.LFB73:
1472:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t const * pxTCB;
 881              		.loc 1 1472 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL89:
 886 0000 10B5     		push	{r4, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 4, -8
 889              		.cfi_offset 14, -4
 890 0002 0446     		mov	r4, r0
1476:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 891              		.loc 1 1476 0
 892 0004 FFF7FEFF 		bl	vPortEnterCritical
 893              	.LVL90:
1480:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = pxTCB->uxPriority;
 894              		.loc 1 1480 0
 895 0008 14B9     		cbnz	r4, .L77
1480:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = pxTCB->uxPriority;
 896              		.loc 1 1480 0 is_stmt 0 discriminator 1
 897 000a 044B     		ldr	r3, .L80
 898 000c D3F8D840 		ldr	r4, [r3, #216]
 899              	.LVL91:
 900              	.L77:
1481:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 901              		.loc 1 1481 0 is_stmt 1 discriminator 4
 902 0010 E46A     		ldr	r4, [r4, #44]
 903              	.LVL92:
1483:Generated_Source\PSoC5/RTOS_tasks.c **** 
 904              		.loc 1 1483 0 discriminator 4
 905 0012 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 112


 906              	.LVL93:
1486:Generated_Source\PSoC5/RTOS_tasks.c **** 
 907              		.loc 1 1486 0 discriminator 4
 908 0016 2046     		mov	r0, r4
 909 0018 10BD     		pop	{r4, pc}
 910              	.LVL94:
 911              	.L81:
 912 001a 00BF     		.align	2
 913              	.L80:
 914 001c 00000000 		.word	.LANCHOR0
 915              		.cfi_endproc
 916              	.LFE73:
 917              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 918              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 919              		.align	2
 920              		.global	uxTaskPriorityGetFromISR
 921              		.thumb
 922              		.thumb_func
 923              		.type	uxTaskPriorityGetFromISR, %function
 924              	uxTaskPriorityGetFromISR:
 925              	.LFB74:
1494:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t const * pxTCB;
 926              		.loc 1 1494 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931              	.LVL95:
 932              	.LBB24:
 933              	.LBB25:
 934              		.file 2 "g:\\project\\psocwagen\\psoc\\ucll_koen_lib.cylib\\myfreertos\\source\\portable\\gcc\\arm
   1:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*
   2:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * FreeRTOS Kernel V10.4.0
   3:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
   5:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * subject to the following conditions:
  11:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  12:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * copies or substantial portions of the Software.
  14:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  15:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  22:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * https://www.FreeRTOS.org
  23:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * https://github.com/FreeRTOS
  24:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  25:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * 1 tab == 4 spaces!
  26:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 113


  27:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  28:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  29:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** #ifndef PORTMACRO_H
  30:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define PORTMACRO_H
  31:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  32:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifdef __cplusplus
  33:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         extern "C" {
  34:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
  35:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  36:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------
  37:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * Port specific definitions.
  38:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  39:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * given hardware and compiler.
  41:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  42:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * These settings should not be altered.
  43:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *-----------------------------------------------------------
  44:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  */
  45:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  46:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Type definitions. */
  47:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portCHAR          char
  48:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portFLOAT         float
  49:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portDOUBLE        double
  50:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portLONG          long
  51:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSHORT         short
  52:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portBASE_TYPE     long
  54:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  55:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     typedef long             BaseType_t;
  57:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  59:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         typedef uint16_t     TickType_t;
  61:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #else
  63:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         typedef uint32_t     TickType_t;
  64:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  66:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * not need to be guarded with a critical section. */
  68:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
  70:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
  71:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  72:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Architecture specifics. */
  73:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
  78:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  79:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Scheduler utilities. */
  80:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portYIELD()                                 \
  81:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {                                                   \
  82:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 114


  84:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****                                                         \
  85:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
  90:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  91:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
  96:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  97:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Critical section management. */
  98:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     extern void vPortEnterCritical( void );
  99:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     extern void vPortExitCritical( void );
 100:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 107:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 108:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 109:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * (which build with all the ports) will build. */
 112:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 115:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 116:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Tickless idle/low power functionality. */
 117:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 121:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 122:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 123:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Architecture specific optimisations. */
 124:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 127:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 128:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 130:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Generic helper function. */
 131:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         {
 133:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             uint8_t ucReturn;
 134:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 135:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 137:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             return ucReturn;
 138:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         }
 139:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 140:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Check the configuration. */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 115


 141:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #endif
 144:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 145:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 149:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 150:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 151:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 153:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 155:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 156:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 157:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifdef configASSERT
 158:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 161:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 162:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* portNOP() is not required by this port. */
 163:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portNOP()
 164:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 165:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portINLINE              __inline
 166:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 167:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifndef portFORCE_INLINE
 168:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 170:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 171:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 172:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 173:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 174:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 175:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         uint32_t ulCurrentInterrupt;
 176:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         BaseType_t xReturn;
 177:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 178:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 179:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 180:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 181:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         if( ulCurrentInterrupt == 0 )
 182:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         {
 183:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             xReturn = pdFALSE;
 184:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         }
 185:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         else
 186:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         {
 187:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             xReturn = pdTRUE;
 188:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         }
 189:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 190:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         return xReturn;
 191:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
 192:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 193:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 194:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 195:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 197:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         uint32_t ulNewBASEPRI;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 116


 198:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 199:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile
 200:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 201:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	mov %0, %1												\n"\
 202:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	msr basepri, %0											\n"\
 203:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	isb														\n"\
 204:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	dsb														\n"\
 205:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 206:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         );
 207:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
 208:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 209:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 210:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 211:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 213:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile
 935              		.loc 2 215 0
 936              		.syntax unified
 937              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 938 0000 EFF31183 			mrs r3, basepri											
 939 0004 4FF00402 		mov r2, #4												
 940 0008 82F31188 		msr basepri, r2											
 941 000c BFF36F8F 		isb														
 942 0010 BFF34F8F 		dsb														
 943              	
 944              	@ 0 "" 2
 945              		.thumb
 946              		.syntax unified
 947              	.LBE25:
 948              	.LBE24:
1520:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = pxTCB->uxPriority;
 949              		.loc 1 1520 0
 950 0014 10B9     		cbnz	r0, .L83
1520:Generated_Source\PSoC5/RTOS_tasks.c ****             uxReturn = pxTCB->uxPriority;
 951              		.loc 1 1520 0 is_stmt 0 discriminator 1
 952 0016 034A     		ldr	r2, .L85
 953 0018 D2F8D800 		ldr	r0, [r2, #216]
 954              	.LVL96:
 955              	.L83:
1521:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 956              		.loc 1 1521 0 is_stmt 1 discriminator 4
 957 001c C06A     		ldr	r0, [r0, #44]
 958              	.LVL97:
 959              	.LBB26:
 960              	.LBB27:
 216:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 217:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	mrs %0, basepri											\n"\
 218:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	mov %1, %2												\n"\
 219:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	msr basepri, %1											\n"\
 220:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	isb														\n"\
 221:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	dsb														\n"\
 222:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 223:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         );
 224:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 225:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 117


 226:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****          * warnings. */
 227:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         return ulOriginalBASEPRI;
 228:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
 229:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 230:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 231:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 233:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile
 961              		.loc 2 233 0 discriminator 4
 962              		.syntax unified
 963              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 964 001e 83F31188 			msr basepri, r3	
 965              	@ 0 "" 2
 966              	.LVL98:
 967              		.thumb
 968              		.syntax unified
 969              	.LBE27:
 970              	.LBE26:
1526:Generated_Source\PSoC5/RTOS_tasks.c **** 
 971              		.loc 1 1526 0 discriminator 4
 972 0022 7047     		bx	lr
 973              	.L86:
 974              		.align	2
 975              	.L85:
 976 0024 00000000 		.word	.LANCHOR0
 977              		.cfi_endproc
 978              	.LFE74:
 979              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 980              		.section	.text.vTaskPrioritySet,"ax",%progbits
 981              		.align	2
 982              		.global	vTaskPrioritySet
 983              		.thumb
 984              		.thumb_func
 985              		.type	vTaskPrioritySet, %function
 986              	vTaskPrioritySet:
 987              	.LFB75:
1535:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 988              		.loc 1 1535 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              	.LVL99:
 993 0000 70B5     		push	{r4, r5, r6, lr}
 994              		.cfi_def_cfa_offset 16
 995              		.cfi_offset 4, -16
 996              		.cfi_offset 5, -12
 997              		.cfi_offset 6, -8
 998              		.cfi_offset 14, -4
 999 0002 0546     		mov	r5, r0
 1000 0004 0C46     		mov	r4, r1
 1001              	.LVL100:
1543:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1002              		.loc 1 1543 0
 1003 0006 0429     		cmp	r1, #4
 1004 0008 00D9     		bls	.L88
1545:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 1005              		.loc 1 1545 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 118


 1006 000a 0424     		movs	r4, #4
 1007              	.L88:
 1008              	.LVL101:
1552:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1009              		.loc 1 1552 0
 1010 000c FFF7FEFF 		bl	vPortEnterCritical
 1011              	.LVL102:
1556:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1012              		.loc 1 1556 0
 1013 0010 15B9     		cbnz	r5, .L89
1556:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1014              		.loc 1 1556 0 is_stmt 0 discriminator 1
 1015 0012 284B     		ldr	r3, .L101
 1016 0014 D3F8D850 		ldr	r5, [r3, #216]
 1017              	.LVL103:
 1018              	.L89:
1566:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1019              		.loc 1 1566 0 is_stmt 1 discriminator 4
 1020 0018 EB6A     		ldr	r3, [r5, #44]
 1021              	.LVL104:
1570:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 1022              		.loc 1 1570 0 discriminator 4
 1023 001a 9C42     		cmp	r4, r3
 1024 001c 46D0     		beq	.L90
1574:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1025              		.loc 1 1574 0
 1026 001e 0CD9     		bls	.L91
1576:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1027              		.loc 1 1576 0
 1028 0020 244A     		ldr	r2, .L101
 1029 0022 D2F8D820 		ldr	r2, [r2, #216]
 1030 0026 9542     		cmp	r5, r2
 1031 0028 0ED0     		beq	.L97
1581:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
 1032              		.loc 1 1581 0
 1033 002a 224A     		ldr	r2, .L101
 1034 002c D2F8D820 		ldr	r2, [r2, #216]
 1035 0030 D26A     		ldr	r2, [r2, #44]
 1036 0032 9442     		cmp	r4, r2
 1037 0034 0AD2     		bcs	.L98
1538:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1038              		.loc 1 1538 0
 1039 0036 0026     		movs	r6, #0
 1040 0038 0BE0     		b	.L92
 1041              	.L91:
1597:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1042              		.loc 1 1597 0
 1043 003a 1E4A     		ldr	r2, .L101
 1044 003c D2F8D820 		ldr	r2, [r2, #216]
 1045 0040 9542     		cmp	r5, r2
 1046 0042 05D0     		beq	.L99
1538:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1047              		.loc 1 1538 0
 1048 0044 0026     		movs	r6, #0
 1049 0046 04E0     		b	.L92
 1050              	.L97:
 1051 0048 0026     		movs	r6, #0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 119


 1052 004a 02E0     		b	.L92
 1053              	.L98:
1583:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
 1054              		.loc 1 1583 0
 1055 004c 0126     		movs	r6, #1
 1056 004e 00E0     		b	.L92
 1057              	.L99:
1602:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1058              		.loc 1 1602 0
 1059 0050 0126     		movs	r6, #1
 1060              	.L92:
 1061              	.LVL105:
1634:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 1062              		.loc 1 1634 0
 1063 0052 EC62     		str	r4, [r5, #44]
1640:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1064              		.loc 1 1640 0
 1065 0054 AA69     		ldr	r2, [r5, #24]
 1066 0056 002A     		cmp	r2, #0
 1067 0058 02DB     		blt	.L93
1642:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1068              		.loc 1 1642 0
 1069 005a C4F10504 		rsb	r4, r4, #5
 1070              	.LVL106:
 1071 005e AC61     		str	r4, [r5, #24]
 1072              	.L93:
1653:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1073              		.loc 1 1653 0
 1074 0060 6969     		ldr	r1, [r5, #20]
 1075 0062 03EB8303 		add	r3, r3, r3, lsl #2
 1076              	.LVL107:
 1077 0066 9A00     		lsls	r2, r3, #2
 1078 0068 134B     		ldr	r3, .L101+4
 1079 006a 1A44     		add	r2, r2, r3
 1080 006c 9142     		cmp	r1, r2
 1081 006e 14D1     		bne	.L94
1658:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1082              		.loc 1 1658 0
 1083 0070 2C1D     		adds	r4, r5, #4
 1084 0072 2046     		mov	r0, r4
 1085 0074 FFF7FEFF 		bl	uxListRemove
 1086              	.LVL108:
1670:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1087              		.loc 1 1670 0
 1088 0078 EB6A     		ldr	r3, [r5, #44]
 1089 007a 0E4A     		ldr	r2, .L101
 1090 007c D2F8E420 		ldr	r2, [r2, #228]
 1091 0080 9342     		cmp	r3, r2
 1092 0082 02D9     		bls	.L95
1670:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1093              		.loc 1 1670 0 is_stmt 0 discriminator 1
 1094 0084 0B4A     		ldr	r2, .L101
 1095 0086 C2F8E430 		str	r3, [r2, #228]
 1096              	.L95:
1670:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1097              		.loc 1 1670 0 discriminator 3
 1098 008a 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 120


 1099 008e 9A00     		lsls	r2, r3, #2
 1100 0090 2146     		mov	r1, r4
 1101 0092 0948     		ldr	r0, .L101+4
 1102 0094 1044     		add	r0, r0, r2
 1103 0096 FFF7FEFF 		bl	vListInsertEnd
 1104              	.LVL109:
 1105              	.L94:
1677:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1106              		.loc 1 1677 0 is_stmt 1
 1107 009a 3EB1     		cbz	r6, .L90
1679:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1108              		.loc 1 1679 0
 1109 009c 4FF08052 		mov	r2, #268435456
 1110 00a0 064B     		ldr	r3, .L101+8
 1111 00a2 1A60     		str	r2, [r3]
 1112              		.syntax unified
 1113              	@ 1679 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 1114 00a4 BFF34F8F 		dsb
 1115              	@ 0 "" 2
 1116              	@ 1679 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 1117 00a8 BFF36F8F 		isb
 1118              	@ 0 "" 2
 1119              	.LVL110:
 1120              		.thumb
 1121              		.syntax unified
 1122              	.L90:
1691:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 1123              		.loc 1 1691 0
 1124 00ac FFF7FEFF 		bl	vPortExitCritical
 1125              	.LVL111:
 1126 00b0 70BD     		pop	{r4, r5, r6, pc}
 1127              	.LVL112:
 1128              	.L102:
 1129 00b2 00BF     		.align	2
 1130              	.L101:
 1131 00b4 00000000 		.word	.LANCHOR0
 1132 00b8 30000000 		.word	.LANCHOR0+48
 1133 00bc 04ED00E0 		.word	-536810236
 1134              		.cfi_endproc
 1135              	.LFE75:
 1136              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1137              		.section	.text.vTaskResume,"ax",%progbits
 1138              		.align	2
 1139              		.global	vTaskResume
 1140              		.thumb
 1141              		.thumb_func
 1142              		.type	vTaskResume, %function
 1143              	vTaskResume:
 1144              	.LFB78:
1852:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1145              		.loc 1 1852 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 1149              	.LVL113:
1860:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1150              		.loc 1 1860 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 121


 1151 0000 1B4B     		ldr	r3, .L109
 1152 0002 D3F8D830 		ldr	r3, [r3, #216]
 1153 0006 9842     		cmp	r0, r3
 1154 0008 30D0     		beq	.L108
1860:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1155              		.loc 1 1860 0 is_stmt 0 discriminator 1
 1156 000a 78B3     		cbz	r0, .L108
1852:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1157              		.loc 1 1852 0 is_stmt 1
 1158 000c 70B5     		push	{r4, r5, r6, lr}
 1159              		.cfi_def_cfa_offset 16
 1160              		.cfi_offset 4, -16
 1161              		.cfi_offset 5, -12
 1162              		.cfi_offset 6, -8
 1163              		.cfi_offset 14, -4
 1164 000e 0446     		mov	r4, r0
1862:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 1165              		.loc 1 1862 0
 1166 0010 FFF7FEFF 		bl	vPortEnterCritical
 1167              	.LVL114:
1864:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1168              		.loc 1 1864 0
 1169 0014 2046     		mov	r0, r4
 1170 0016 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1171              	.LVL115:
 1172 001a 20B3     		cbz	r0, .L105
1870:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1173              		.loc 1 1870 0
 1174 001c 261D     		adds	r6, r4, #4
 1175 001e 3046     		mov	r0, r6
 1176 0020 FFF7FEFF 		bl	uxListRemove
 1177              	.LVL116:
1871:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1178              		.loc 1 1871 0
 1179 0024 E36A     		ldr	r3, [r4, #44]
 1180 0026 124A     		ldr	r2, .L109
 1181 0028 D2F8E420 		ldr	r2, [r2, #228]
 1182 002c 9342     		cmp	r3, r2
 1183 002e 02D9     		bls	.L106
1871:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1184              		.loc 1 1871 0 is_stmt 0 discriminator 1
 1185 0030 0F4A     		ldr	r2, .L109
 1186 0032 C2F8E430 		str	r3, [r2, #228]
 1187              	.L106:
1871:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1188              		.loc 1 1871 0 discriminator 3
 1189 0036 0E4D     		ldr	r5, .L109
 1190 0038 05F13000 		add	r0, r5, #48
 1191 003c 03EB8303 		add	r3, r3, r3, lsl #2
 1192 0040 9A00     		lsls	r2, r3, #2
 1193 0042 3146     		mov	r1, r6
 1194 0044 1044     		add	r0, r0, r2
 1195 0046 FFF7FEFF 		bl	vListInsertEnd
 1196              	.LVL117:
1874:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1197              		.loc 1 1874 0 is_stmt 1 discriminator 3
 1198 004a E26A     		ldr	r2, [r4, #44]
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 122


 1199 004c D5F8D830 		ldr	r3, [r5, #216]
 1200 0050 DB6A     		ldr	r3, [r3, #44]
 1201 0052 9A42     		cmp	r2, r3
 1202 0054 07D3     		bcc	.L105
1879:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 1203              		.loc 1 1879 0
 1204 0056 4FF08052 		mov	r2, #268435456
 1205 005a 064B     		ldr	r3, .L109+4
 1206 005c 1A60     		str	r2, [r3]
 1207              		.syntax unified
 1208              	@ 1879 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 1209 005e BFF34F8F 		dsb
 1210              	@ 0 "" 2
 1211              	@ 1879 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 1212 0062 BFF36F8F 		isb
 1213              	@ 0 "" 2
 1214              		.thumb
 1215              		.syntax unified
 1216              	.L105:
1891:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 1217              		.loc 1 1891 0
 1218 0066 FFF7FEFF 		bl	vPortExitCritical
 1219              	.LVL118:
 1220 006a 70BD     		pop	{r4, r5, r6, pc}
 1221              	.LVL119:
 1222              	.L108:
 1223              		.cfi_def_cfa_offset 0
 1224              		.cfi_restore 4
 1225              		.cfi_restore 5
 1226              		.cfi_restore 6
 1227              		.cfi_restore 14
 1228 006c 7047     		bx	lr
 1229              	.L110:
 1230 006e 00BF     		.align	2
 1231              	.L109:
 1232 0070 00000000 		.word	.LANCHOR0
 1233 0074 04ED00E0 		.word	-536810236
 1234              		.cfi_endproc
 1235              	.LFE78:
 1236              		.size	vTaskResume, .-vTaskResume
 1237              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1238              		.align	2
 1239              		.global	xTaskResumeFromISR
 1240              		.thumb
 1241              		.thumb_func
 1242              		.type	xTaskResumeFromISR, %function
 1243              	xTaskResumeFromISR:
 1244              	.LFB79:
1906:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1245              		.loc 1 1906 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 0, uses_anonymous_args = 0
 1249              	.LVL120:
 1250 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1251              		.cfi_def_cfa_offset 24
 1252              		.cfi_offset 3, -24
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 123


 1253              		.cfi_offset 4, -20
 1254              		.cfi_offset 5, -16
 1255              		.cfi_offset 6, -12
 1256              		.cfi_offset 7, -8
 1257              		.cfi_offset 14, -4
 1258 0002 0446     		mov	r4, r0
 1259              	.LVL121:
 1260              	.LBB28:
 1261              	.LBB29:
 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 1262              		.loc 2 215 0
 1263              		.syntax unified
 1264              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1265 0004 EFF31185 			mrs r5, basepri											
 1266 0008 4FF00403 		mov r3, #4												
 1267 000c 83F31188 		msr basepri, r3											
 1268 0010 BFF36F8F 		isb														
 1269 0014 BFF34F8F 		dsb														
 1270              	
 1271              	@ 0 "" 2
 1272              		.thumb
 1273              		.syntax unified
 1274              	.LBE29:
 1275              	.LBE28:
1933:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 1276              		.loc 1 1933 0
 1277 0018 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1278              	.LVL122:
 1279 001c 50B3     		cbz	r0, .L116
1938:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1280              		.loc 1 1938 0
 1281 001e 184B     		ldr	r3, .L119
 1282 0020 D3F8F030 		ldr	r3, [r3, #240]
 1283 0024 FBB9     		cbnz	r3, .L113
1942:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1284              		.loc 1 1942 0
 1285 0026 E26A     		ldr	r2, [r4, #44]
 1286 0028 154B     		ldr	r3, .L119
 1287 002a D3F8D830 		ldr	r3, [r3, #216]
 1288 002e DB6A     		ldr	r3, [r3, #44]
 1289 0030 9A42     		cmp	r2, r3
 1290 0032 01D2     		bcs	.L117
1907:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1291              		.loc 1 1907 0
 1292 0034 0026     		movs	r6, #0
 1293 0036 00E0     		b	.L114
 1294              	.L117:
1944:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 1295              		.loc 1 1944 0
 1296 0038 0126     		movs	r6, #1
 1297              	.L114:
 1298              	.LVL123:
1951:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1299              		.loc 1 1951 0
 1300 003a 271D     		adds	r7, r4, #4
 1301 003c 3846     		mov	r0, r7
 1302 003e FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 124


 1303              	.LVL124:
1952:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1304              		.loc 1 1952 0
 1305 0042 E36A     		ldr	r3, [r4, #44]
 1306 0044 0E4A     		ldr	r2, .L119
 1307 0046 D2F8E420 		ldr	r2, [r2, #228]
 1308 004a 9342     		cmp	r3, r2
 1309 004c 02D9     		bls	.L115
1952:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1310              		.loc 1 1952 0 is_stmt 0 discriminator 1
 1311 004e 0C4A     		ldr	r2, .L119
 1312 0050 C2F8E430 		str	r3, [r2, #228]
 1313              	.L115:
1952:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1314              		.loc 1 1952 0 discriminator 3
 1315 0054 03EB8303 		add	r3, r3, r3, lsl #2
 1316 0058 9A00     		lsls	r2, r3, #2
 1317 005a 3946     		mov	r1, r7
 1318 005c 0948     		ldr	r0, .L119+4
 1319 005e 1044     		add	r0, r0, r2
 1320 0060 FFF7FEFF 		bl	vListInsertEnd
 1321              	.LVL125:
 1322 0064 07E0     		b	.L112
 1323              	.LVL126:
 1324              	.L113:
1959:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1325              		.loc 1 1959 0 is_stmt 1
 1326 0066 04F11801 		add	r1, r4, #24
 1327 006a 0748     		ldr	r0, .L119+8
 1328 006c FFF7FEFF 		bl	vListInsertEnd
 1329              	.LVL127:
1907:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1330              		.loc 1 1907 0
 1331 0070 0026     		movs	r6, #0
 1332 0072 00E0     		b	.L112
 1333              	.L116:
 1334 0074 0026     		movs	r6, #0
 1335              	.LVL128:
 1336              	.L112:
 1337              	.LBB30:
 1338              	.LBB31:
 1339              		.loc 2 233 0
 1340              		.syntax unified
 1341              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1342 0076 85F31188 			msr basepri, r5	
 1343              	@ 0 "" 2
 1344              	.LVL129:
 1345              		.thumb
 1346              		.syntax unified
 1347              	.LBE31:
 1348              	.LBE30:
1970:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1349              		.loc 1 1970 0
 1350 007a 3046     		mov	r0, r6
 1351 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1352              	.LVL130:
 1353              	.L120:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 125


 1354 007e 00BF     		.align	2
 1355              	.L119:
 1356 0080 00000000 		.word	.LANCHOR0
 1357 0084 30000000 		.word	.LANCHOR0+48
 1358 0088 14000000 		.word	.LANCHOR0+20
 1359              		.cfi_endproc
 1360              	.LFE79:
 1361              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1362              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1363              		.align	2
 1364              		.global	vTaskStartScheduler
 1365              		.thumb
 1366              		.thumb_func
 1367              		.type	vTaskStartScheduler, %function
 1368              	vTaskStartScheduler:
 1369              	.LFB80:
1976:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xReturn;
 1370              		.loc 1 1976 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 00B5     		push	{lr}
 1375              		.cfi_def_cfa_offset 4
 1376              		.cfi_offset 14, -4
 1377 0002 83B0     		sub	sp, sp, #12
 1378              		.cfi_def_cfa_offset 16
2009:Generated_Source\PSoC5/RTOS_tasks.c ****                                    configIDLE_TASK_NAME,
 1379              		.loc 1 2009 0
 1380 0004 124B     		ldr	r3, .L125
 1381 0006 0193     		str	r3, [sp, #4]
 1382 0008 0023     		movs	r3, #0
 1383 000a 0093     		str	r3, [sp]
 1384 000c 8022     		movs	r2, #128
 1385 000e 1149     		ldr	r1, .L125+4
 1386 0010 1148     		ldr	r0, .L125+8
 1387 0012 FFF7FEFF 		bl	xTaskCreate
 1388              	.LVL131:
2020:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 1389              		.loc 1 2020 0
 1390 0016 0128     		cmp	r0, #1
 1391 0018 01D1     		bne	.L122
2022:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 1392              		.loc 1 2022 0
 1393 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1394              	.LVL132:
 1395              	.L122:
2031:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 1396              		.loc 1 2031 0
 1397 001e 0128     		cmp	r0, #1
 1398 0020 13D1     		bne	.L121
 1399              	.LBB32:
 1400              	.LBB33:
 199:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 1401              		.loc 2 199 0
 1402              		.syntax unified
 1403              	@ 199 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1404 0022 4FF00403 			mov r3, #4												
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 126


 1405 0026 83F31188 		msr basepri, r3											
 1406 002a BFF36F8F 		isb														
 1407 002e BFF34F8F 		dsb														
 1408              	
 1409              	@ 0 "" 2
 1410              		.thumb
 1411              		.syntax unified
 1412              	.LBE33:
 1413              	.LBE32:
2059:Generated_Source\PSoC5/RTOS_tasks.c ****         xSchedulerRunning = pdTRUE;
 1414              		.loc 1 2059 0
 1415 0032 0A4B     		ldr	r3, .L125+12
 1416 0034 4FF0FF32 		mov	r2, #-1
 1417 0038 DA62     		str	r2, [r3, #44]
2060:Generated_Source\PSoC5/RTOS_tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 1418              		.loc 1 2060 0
 1419 003a 0122     		movs	r2, #1
 1420 003c C3F8DC20 		str	r2, [r3, #220]
2061:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1421              		.loc 1 2061 0
 1422 0040 0022     		movs	r2, #0
 1423 0042 C3F8EC20 		str	r2, [r3, #236]
2075:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1424              		.loc 1 2075 0
 1425 0046 FFF7FEFF 		bl	xPortStartScheduler
 1426              	.LVL133:
 1427              	.L121:
2096:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 1428              		.loc 1 2096 0
 1429 004a 03B0     		add	sp, sp, #12
 1430              		.cfi_def_cfa_offset 4
 1431              		@ sp needed
 1432 004c 5DF804FB 		ldr	pc, [sp], #4
 1433              	.L126:
 1434              		.align	2
 1435              	.L125:
 1436 0050 F4000000 		.word	.LANCHOR0+244
 1437 0054 00000000 		.word	.LC0
 1438 0058 00000000 		.word	prvIdleTask
 1439 005c 00000000 		.word	.LANCHOR0
 1440              		.cfi_endproc
 1441              	.LFE80:
 1442              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1443              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1444              		.align	2
 1445              		.global	vTaskEndScheduler
 1446              		.thumb
 1447              		.thumb_func
 1448              		.type	vTaskEndScheduler, %function
 1449              	vTaskEndScheduler:
 1450              	.LFB81:
2100:Generated_Source\PSoC5/RTOS_tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
 1451              		.loc 1 2100 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 127


 1456              		.cfi_def_cfa_offset 8
 1457              		.cfi_offset 3, -8
 1458              		.cfi_offset 14, -4
 1459              	.LBB34:
 1460              	.LBB35:
 199:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 1461              		.loc 2 199 0
 1462              		.syntax unified
 1463              	@ 199 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1464 0002 4FF00403 			mov r3, #4												
 1465 0006 83F31188 		msr basepri, r3											
 1466 000a BFF36F8F 		isb														
 1467 000e BFF34F8F 		dsb														
 1468              	
 1469              	@ 0 "" 2
 1470              		.thumb
 1471              		.syntax unified
 1472              	.LBE35:
 1473              	.LBE34:
2105:Generated_Source\PSoC5/RTOS_tasks.c ****     vPortEndScheduler();
 1474              		.loc 1 2105 0
 1475 0012 0022     		movs	r2, #0
 1476 0014 024B     		ldr	r3, .L129
 1477 0016 C3F8DC20 		str	r2, [r3, #220]
2106:Generated_Source\PSoC5/RTOS_tasks.c **** }
 1478              		.loc 1 2106 0
 1479 001a FFF7FEFF 		bl	vPortEndScheduler
 1480              	.LVL134:
 1481 001e 08BD     		pop	{r3, pc}
 1482              	.L130:
 1483              		.align	2
 1484              	.L129:
 1485 0020 00000000 		.word	.LANCHOR0
 1486              		.cfi_endproc
 1487              	.LFE81:
 1488              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1489              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1490              		.align	2
 1491              		.global	vTaskSuspendAll
 1492              		.thumb
 1493              		.thumb_func
 1494              		.type	vTaskSuspendAll, %function
 1495              	vTaskSuspendAll:
 1496              	.LFB82:
2111:Generated_Source\PSoC5/RTOS_tasks.c ****     /* A critical section is not required as the variable is of type
 1497              		.loc 1 2111 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              		@ link register save eliminated.
2123:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1502              		.loc 1 2123 0
 1503 0000 034A     		ldr	r2, .L132
 1504 0002 D2F8F030 		ldr	r3, [r2, #240]
 1505 0006 0133     		adds	r3, r3, #1
 1506 0008 C2F8F030 		str	r3, [r2, #240]
2127:Generated_Source\PSoC5/RTOS_tasks.c **** }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 128


 1507              		.loc 1 2127 0
 1508 000c 7047     		bx	lr
 1509              	.L133:
 1510 000e 00BF     		.align	2
 1511              	.L132:
 1512 0010 00000000 		.word	.LANCHOR0
 1513              		.cfi_endproc
 1514              	.LFE82:
 1515              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1516              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1517              		.align	2
 1518              		.global	xTaskGetTickCount
 1519              		.thumb
 1520              		.thumb_func
 1521              		.type	xTaskGetTickCount, %function
 1522              	xTaskGetTickCount:
 1523              	.LFB84:
2306:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t xTicks;
 1524              		.loc 1 2306 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              		@ link register save eliminated.
2312:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 1529              		.loc 1 2312 0
 1530 0000 014B     		ldr	r3, .L135
 1531 0002 D3F8EC00 		ldr	r0, [r3, #236]
 1532              	.LVL135:
2317:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 1533              		.loc 1 2317 0
 1534 0006 7047     		bx	lr
 1535              	.L136:
 1536              		.align	2
 1537              	.L135:
 1538 0008 00000000 		.word	.LANCHOR0
 1539              		.cfi_endproc
 1540              	.LFE84:
 1541              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1542              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1543              		.align	2
 1544              		.global	xTaskGetTickCountFromISR
 1545              		.thumb
 1546              		.thumb_func
 1547              		.type	xTaskGetTickCountFromISR, %function
 1548              	xTaskGetTickCountFromISR:
 1549              	.LFB85:
2321:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t xReturn;
 1550              		.loc 1 2321 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554              		@ link register save eliminated.
 1555              	.LVL136:
2343:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 1556              		.loc 1 2343 0
 1557 0000 014B     		ldr	r3, .L138
 1558 0002 D3F8EC00 		ldr	r0, [r3, #236]
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 129


 1559              	.LVL137:
2348:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 1560              		.loc 1 2348 0
 1561 0006 7047     		bx	lr
 1562              	.L139:
 1563              		.align	2
 1564              	.L138:
 1565 0008 00000000 		.word	.LANCHOR0
 1566              		.cfi_endproc
 1567              	.LFE85:
 1568              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1569              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1570              		.align	2
 1571              		.global	uxTaskGetNumberOfTasks
 1572              		.thumb
 1573              		.thumb_func
 1574              		.type	uxTaskGetNumberOfTasks, %function
 1575              	uxTaskGetNumberOfTasks:
 1576              	.LFB86:
2352:Generated_Source\PSoC5/RTOS_tasks.c ****     /* A critical section is not required because the variables are of type
 1577              		.loc 1 2352 0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 1581              		@ link register save eliminated.
2355:Generated_Source\PSoC5/RTOS_tasks.c **** }
 1582              		.loc 1 2355 0
 1583 0000 014B     		ldr	r3, .L141
 1584 0002 D3F8D400 		ldr	r0, [r3, #212]
2356:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 1585              		.loc 1 2356 0
 1586 0006 7047     		bx	lr
 1587              	.L142:
 1588              		.align	2
 1589              	.L141:
 1590 0008 00000000 		.word	.LANCHOR0
 1591              		.cfi_endproc
 1592              	.LFE86:
 1593              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1594              		.section	.text.pcTaskGetName,"ax",%progbits
 1595              		.align	2
 1596              		.global	pcTaskGetName
 1597              		.thumb
 1598              		.thumb_func
 1599              		.type	pcTaskGetName, %function
 1600              	pcTaskGetName:
 1601              	.LFB87:
2360:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxTCB;
 1602              		.loc 1 2360 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606              		@ link register save eliminated.
 1607              	.LVL138:
2365:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxTCB );
 1608              		.loc 1 2365 0
 1609 0000 0346     		mov	r3, r0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 130


 1610 0002 10B9     		cbnz	r0, .L144
2365:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxTCB );
 1611              		.loc 1 2365 0 is_stmt 0 discriminator 1
 1612 0004 024B     		ldr	r3, .L145
 1613 0006 D3F8D830 		ldr	r3, [r3, #216]
 1614              	.LVL139:
 1615              	.L144:
2368:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 1616              		.loc 1 2368 0 is_stmt 1 discriminator 4
 1617 000a 03F13400 		add	r0, r3, #52
 1618 000e 7047     		bx	lr
 1619              	.L146:
 1620              		.align	2
 1621              	.L145:
 1622 0010 00000000 		.word	.LANCHOR0
 1623              		.cfi_endproc
 1624              	.LFE87:
 1625              		.size	pcTaskGetName, .-pcTaskGetName
 1626              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1627              		.align	2
 1628              		.global	xTaskIncrementTick
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	xTaskIncrementTick, %function
 1632              	xTaskIncrementTick:
 1633              	.LFB89:
2710:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxTCB;
 1634              		.loc 1 2710 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1639              		.cfi_def_cfa_offset 24
 1640              		.cfi_offset 4, -24
 1641              		.cfi_offset 5, -20
 1642              		.cfi_offset 6, -16
 1643              		.cfi_offset 7, -12
 1644              		.cfi_offset 8, -8
 1645              		.cfi_offset 14, -4
 1646              	.LVL140:
2720:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 1647              		.loc 1 2720 0
 1648 0004 374B     		ldr	r3, .L163
 1649 0006 D3F8F030 		ldr	r3, [r3, #240]
 1650 000a 002B     		cmp	r3, #0
 1651 000c 5BD1     		bne	.L148
 1652              	.LBB36:
2724:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1653              		.loc 1 2724 0
 1654 000e 354B     		ldr	r3, .L163
 1655 0010 D3F8EC70 		ldr	r7, [r3, #236]
 1656 0014 0137     		adds	r7, r7, #1
 1657              	.LVL141:
2728:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1658              		.loc 1 2728 0
 1659 0016 C3F8EC70 		str	r7, [r3, #236]
2730:Generated_Source\PSoC5/RTOS_tasks.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 131


 1660              		.loc 1 2730 0
 1661 001a 67B9     		cbnz	r7, .L149
 1662              	.LBB37:
2732:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 1663              		.loc 1 2732 0
 1664 001c 9A6A     		ldr	r2, [r3, #40]
 1665              	.LVL142:
 1666 001e D3F8D010 		ldr	r1, [r3, #208]
 1667 0022 9962     		str	r1, [r3, #40]
 1668 0024 C3F8D020 		str	r2, [r3, #208]
 1669 0028 D3F8F820 		ldr	r2, [r3, #248]
 1670              	.LVL143:
 1671 002c 0132     		adds	r2, r2, #1
 1672 002e C3F8F820 		str	r2, [r3, #248]
 1673              	.LVL144:
 1674 0032 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1675              	.LVL145:
 1676              	.L149:
 1677              	.LBE37:
2743:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1678              		.loc 1 2743 0
 1679 0036 2B4B     		ldr	r3, .L163
 1680 0038 DB6A     		ldr	r3, [r3, #44]
 1681 003a 9F42     		cmp	r7, r3
 1682 003c 05D2     		bcs	.L159
 1683              	.LBE36:
2713:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1684              		.loc 1 2713 0
 1685 003e 4FF00008 		mov	r8, #0
 1686 0042 3BE0     		b	.L151
 1687              	.LVL146:
 1688              	.L160:
 1689              	.LBB38:
2809:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
 1690              		.loc 1 2809 0
 1691 0044 4FF00108 		mov	r8, #1
 1692              	.LVL147:
 1693 0048 01E0     		b	.L150
 1694              	.LVL148:
 1695              	.L159:
 1696 004a 4FF00008 		mov	r8, #0
 1697              	.LVL149:
 1698              	.L150:
2747:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1699              		.loc 1 2747 0
 1700 004e 254B     		ldr	r3, .L163
 1701 0050 9B6A     		ldr	r3, [r3, #40]
 1702 0052 1B68     		ldr	r3, [r3]
 1703 0054 23B9     		cbnz	r3, .L152
2754:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
 1704              		.loc 1 2754 0
 1705 0056 4FF0FF32 		mov	r2, #-1
 1706 005a 224B     		ldr	r3, .L163
 1707 005c DA62     		str	r2, [r3, #44]
2755:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1708              		.loc 1 2755 0
 1709 005e 2DE0     		b	.L151
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 132


 1710              	.L152:
2763:Generated_Source\PSoC5/RTOS_tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1711              		.loc 1 2763 0
 1712 0060 204B     		ldr	r3, .L163
 1713 0062 9B6A     		ldr	r3, [r3, #40]
 1714 0064 DB68     		ldr	r3, [r3, #12]
 1715 0066 DC68     		ldr	r4, [r3, #12]
 1716              	.LVL150:
2764:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1717              		.loc 1 2764 0
 1718 0068 6368     		ldr	r3, [r4, #4]
 1719              	.LVL151:
2766:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1720              		.loc 1 2766 0
 1721 006a 9F42     		cmp	r7, r3
 1722 006c 02D2     		bcs	.L153
2773:Generated_Source\PSoC5/RTOS_tasks.c ****                         break; /*lint !e9011 Code structure here is deedmed easier to understand wi
 1723              		.loc 1 2773 0
 1724 006e 1D4A     		ldr	r2, .L163
 1725 0070 D362     		str	r3, [r2, #44]
2774:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 1726              		.loc 1 2774 0
 1727 0072 23E0     		b	.L151
 1728              	.L153:
2782:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1729              		.loc 1 2782 0
 1730 0074 261D     		adds	r6, r4, #4
 1731 0076 3046     		mov	r0, r6
 1732 0078 FFF7FEFF 		bl	uxListRemove
 1733              	.LVL152:
2786:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1734              		.loc 1 2786 0
 1735 007c A36A     		ldr	r3, [r4, #40]
 1736 007e 1BB1     		cbz	r3, .L154
2788:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 1737              		.loc 1 2788 0
 1738 0080 04F11800 		add	r0, r4, #24
 1739 0084 FFF7FEFF 		bl	uxListRemove
 1740              	.LVL153:
 1741              	.L154:
2797:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1742              		.loc 1 2797 0
 1743 0088 E36A     		ldr	r3, [r4, #44]
 1744 008a 164A     		ldr	r2, .L163
 1745 008c D2F8E420 		ldr	r2, [r2, #228]
 1746 0090 9342     		cmp	r3, r2
 1747 0092 02D9     		bls	.L155
2797:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1748              		.loc 1 2797 0 is_stmt 0 discriminator 1
 1749 0094 134A     		ldr	r2, .L163
 1750 0096 C2F8E430 		str	r3, [r2, #228]
 1751              	.L155:
2797:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1752              		.loc 1 2797 0 discriminator 3
 1753 009a 124D     		ldr	r5, .L163
 1754 009c 05F13000 		add	r0, r5, #48
 1755 00a0 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 133


 1756 00a4 9A00     		lsls	r2, r3, #2
 1757 00a6 3146     		mov	r1, r6
 1758 00a8 1044     		add	r0, r0, r2
 1759 00aa FFF7FEFF 		bl	vListInsertEnd
 1760              	.LVL154:
2807:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
 1761              		.loc 1 2807 0 is_stmt 1 discriminator 3
 1762 00ae E26A     		ldr	r2, [r4, #44]
 1763 00b0 D5F8D830 		ldr	r3, [r5, #216]
 1764 00b4 DB6A     		ldr	r3, [r3, #44]
 1765 00b6 9A42     		cmp	r2, r3
 1766 00b8 C4D2     		bcs	.L160
 1767 00ba C8E7     		b	.L150
 1768              	.LVL155:
 1769              	.L151:
2854:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1770              		.loc 1 2854 0
 1771 00bc 094B     		ldr	r3, .L163
 1772 00be D3F8FC30 		ldr	r3, [r3, #252]
 1773 00c2 4BB9     		cbnz	r3, .L161
 1774 00c4 0AE0     		b	.L158
 1775              	.LVL156:
 1776              	.L148:
 1777              	.LBE38:
2867:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1778              		.loc 1 2867 0
 1779 00c6 074A     		ldr	r2, .L163
 1780 00c8 D2F80031 		ldr	r3, [r2, #256]
 1781 00cc 0133     		adds	r3, r3, #1
 1782 00ce C2F80031 		str	r3, [r2, #256]
2713:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1783              		.loc 1 2713 0
 1784 00d2 4FF00008 		mov	r8, #0
 1785 00d6 01E0     		b	.L158
 1786              	.LVL157:
 1787              	.L161:
 1788              	.LBB39:
2856:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1789              		.loc 1 2856 0
 1790 00d8 4FF00108 		mov	r8, #1
 1791              	.LVL158:
 1792              	.L158:
 1793              	.LBE39:
2879:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 1794              		.loc 1 2879 0
 1795 00dc 4046     		mov	r0, r8
 1796 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1797              	.LVL159:
 1798              	.L164:
 1799 00e2 00BF     		.align	2
 1800              	.L163:
 1801 00e4 00000000 		.word	.LANCHOR0
 1802              		.cfi_endproc
 1803              	.LFE89:
 1804              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 1805              		.section	.text.xTaskResumeAll,"ax",%progbits
 1806              		.align	2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 134


 1807              		.global	xTaskResumeAll
 1808              		.thumb
 1809              		.thumb_func
 1810              		.type	xTaskResumeAll, %function
 1811              	xTaskResumeAll:
 1812              	.LFB83:
2195:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxTCB = NULL;
 1813              		.loc 1 2195 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817 0000 70B5     		push	{r4, r5, r6, lr}
 1818              		.cfi_def_cfa_offset 16
 1819              		.cfi_offset 4, -16
 1820              		.cfi_offset 5, -12
 1821              		.cfi_offset 6, -8
 1822              		.cfi_offset 14, -4
 1823              	.LVL160:
2208:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 1824              		.loc 1 2208 0
 1825 0002 FFF7FEFF 		bl	vPortEnterCritical
 1826              	.LVL161:
2210:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1827              		.loc 1 2210 0
 1828 0006 324B     		ldr	r3, .L179
 1829 0008 D3F8F020 		ldr	r2, [r3, #240]
 1830 000c 013A     		subs	r2, r2, #1
 1831 000e C3F8F020 		str	r2, [r3, #240]
2212:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1832              		.loc 1 2212 0
 1833 0012 D3F8F030 		ldr	r3, [r3, #240]
 1834 0016 002B     		cmp	r3, #0
 1835 0018 52D1     		bne	.L175
2214:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 1836              		.loc 1 2214 0
 1837 001a 2D4B     		ldr	r3, .L179
 1838 001c D3F8D430 		ldr	r3, [r3, #212]
 1839 0020 3BBB     		cbnz	r3, .L176
2197:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1840              		.loc 1 2197 0
 1841 0022 0024     		movs	r4, #0
 1842 0024 4FE0     		b	.L166
 1843              	.LVL162:
 1844              	.L170:
2220:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1845              		.loc 1 2220 0
 1846 0026 2A4D     		ldr	r5, .L179
 1847 0028 2B6A     		ldr	r3, [r5, #32]
 1848 002a DC68     		ldr	r4, [r3, #12]
 1849              	.LVL163:
2221:Generated_Source\PSoC5/RTOS_tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1850              		.loc 1 2221 0
 1851 002c 04F11800 		add	r0, r4, #24
 1852 0030 FFF7FEFF 		bl	uxListRemove
 1853              	.LVL164:
2222:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1854              		.loc 1 2222 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 135


 1855 0034 261D     		adds	r6, r4, #4
 1856 0036 3046     		mov	r0, r6
 1857 0038 FFF7FEFF 		bl	uxListRemove
 1858              	.LVL165:
2223:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1859              		.loc 1 2223 0
 1860 003c E36A     		ldr	r3, [r4, #44]
 1861 003e D5F8E420 		ldr	r2, [r5, #228]
 1862 0042 9342     		cmp	r3, r2
 1863 0044 01D9     		bls	.L168
2223:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1864              		.loc 1 2223 0 is_stmt 0 discriminator 1
 1865 0046 C5F8E430 		str	r3, [r5, #228]
 1866              	.L168:
2223:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1867              		.loc 1 2223 0 discriminator 3
 1868 004a 214D     		ldr	r5, .L179
 1869 004c 05F13000 		add	r0, r5, #48
 1870 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1871 0054 9A00     		lsls	r2, r3, #2
 1872 0056 3146     		mov	r1, r6
 1873 0058 1044     		add	r0, r0, r2
 1874 005a FFF7FEFF 		bl	vListInsertEnd
 1875              	.LVL166:
2227:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1876              		.loc 1 2227 0 is_stmt 1 discriminator 3
 1877 005e E26A     		ldr	r2, [r4, #44]
 1878 0060 D5F8D830 		ldr	r3, [r5, #216]
 1879 0064 DB6A     		ldr	r3, [r3, #44]
 1880 0066 9A42     		cmp	r2, r3
 1881 0068 04D3     		bcc	.L167
2229:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 1882              		.loc 1 2229 0
 1883 006a 0122     		movs	r2, #1
 1884 006c C5F8FC20 		str	r2, [r5, #252]
 1885 0070 00E0     		b	.L167
 1886              	.LVL167:
 1887              	.L176:
 1888 0072 0024     		movs	r4, #0
 1889              	.LVL168:
 1890              	.L167:
2218:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1891              		.loc 1 2218 0
 1892 0074 164B     		ldr	r3, .L179
 1893 0076 5B69     		ldr	r3, [r3, #20]
 1894 0078 002B     		cmp	r3, #0
 1895 007a D4D1     		bne	.L170
2237:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1896              		.loc 1 2237 0
 1897 007c 0CB1     		cbz	r4, .L171
2245:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1898              		.loc 1 2245 0
 1899 007e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1900              	.LVL169:
 1901              	.L171:
 1902              	.LBB40:
2253:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 136


 1903              		.loc 1 2253 0
 1904 0082 134B     		ldr	r3, .L179
 1905 0084 D3F80041 		ldr	r4, [r3, #256]
 1906              	.LVL170:
2255:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 1907              		.loc 1 2255 0
 1908 0088 64B1     		cbz	r4, .L172
 1909              	.L174:
2259:Generated_Source\PSoC5/RTOS_tasks.c ****                             {
 1910              		.loc 1 2259 0
 1911 008a FFF7FEFF 		bl	xTaskIncrementTick
 1912              	.LVL171:
 1913 008e 18B1     		cbz	r0, .L173
2261:Generated_Source\PSoC5/RTOS_tasks.c ****                             }
 1914              		.loc 1 2261 0
 1915 0090 0122     		movs	r2, #1
 1916 0092 0F4B     		ldr	r3, .L179
 1917 0094 C3F8FC20 		str	r2, [r3, #252]
 1918              	.L173:
 1919              	.LVL172:
2269:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1920              		.loc 1 2269 0
 1921 0098 013C     		subs	r4, r4, #1
 1922              	.LVL173:
 1923 009a F6D1     		bne	.L174
2271:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 1924              		.loc 1 2271 0
 1925 009c 0022     		movs	r2, #0
 1926 009e 0C4B     		ldr	r3, .L179
 1927 00a0 C3F80021 		str	r2, [r3, #256]
 1928              	.L172:
 1929              	.LBE40:
2279:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 1930              		.loc 1 2279 0
 1931 00a4 0A4B     		ldr	r3, .L179
 1932 00a6 D3F8FC30 		ldr	r3, [r3, #252]
 1933 00aa 5BB1     		cbz	r3, .L177
 1934              	.LVL174:
2286:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 1935              		.loc 1 2286 0
 1936 00ac 4FF08052 		mov	r2, #268435456
 1937 00b0 084B     		ldr	r3, .L179+4
 1938 00b2 1A60     		str	r2, [r3]
 1939              		.syntax unified
 1940              	@ 2286 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 1941 00b4 BFF34F8F 		dsb
 1942              	@ 0 "" 2
 1943              	@ 2286 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 1944 00b8 BFF36F8F 		isb
 1945              	@ 0 "" 2
2283:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
 1946              		.loc 1 2283 0
 1947              		.thumb
 1948              		.syntax unified
 1949 00bc 0124     		movs	r4, #1
 1950              	.LVL175:
 1951 00be 02E0     		b	.L166
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 137


 1952              	.LVL176:
 1953              	.L175:
2197:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1954              		.loc 1 2197 0
 1955 00c0 0024     		movs	r4, #0
 1956 00c2 00E0     		b	.L166
 1957              	.LVL177:
 1958              	.L177:
 1959 00c4 0024     		movs	r4, #0
 1960              	.LVL178:
 1961              	.L166:
2299:Generated_Source\PSoC5/RTOS_tasks.c **** 
 1962              		.loc 1 2299 0
 1963 00c6 FFF7FEFF 		bl	vPortExitCritical
 1964              	.LVL179:
2302:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 1965              		.loc 1 2302 0
 1966 00ca 2046     		mov	r0, r4
 1967 00cc 70BD     		pop	{r4, r5, r6, pc}
 1968              	.LVL180:
 1969              	.L180:
 1970 00ce 00BF     		.align	2
 1971              	.L179:
 1972 00d0 00000000 		.word	.LANCHOR0
 1973 00d4 04ED00E0 		.word	-536810236
 1974              		.cfi_endproc
 1975              	.LFE83:
 1976              		.size	xTaskResumeAll, .-xTaskResumeAll
 1977              		.section	.text.vTaskDelayUntil,"ax",%progbits
 1978              		.align	2
 1979              		.global	vTaskDelayUntil
 1980              		.thumb
 1981              		.thumb_func
 1982              		.type	vTaskDelayUntil, %function
 1983              	vTaskDelayUntil:
 1984              	.LFB71:
1246:Generated_Source\PSoC5/RTOS_tasks.c ****         TickType_t xTimeToWake;
 1985              		.loc 1 1246 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 1989              	.LVL181:
 1990 0000 38B5     		push	{r3, r4, r5, lr}
 1991              		.cfi_def_cfa_offset 16
 1992              		.cfi_offset 3, -16
 1993              		.cfi_offset 4, -12
 1994              		.cfi_offset 5, -8
 1995              		.cfi_offset 14, -4
 1996 0002 0546     		mov	r5, r0
 1997 0004 0C46     		mov	r4, r1
 1998              	.LVL182:
1254:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 1999              		.loc 1 1254 0
 2000 0006 FFF7FEFF 		bl	vTaskSuspendAll
 2001              	.LVL183:
 2002              	.LBB41:
1258:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 138


 2003              		.loc 1 1258 0
 2004 000a 164B     		ldr	r3, .L191
 2005 000c D3F8EC00 		ldr	r0, [r3, #236]
 2006              	.LVL184:
1261:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2007              		.loc 1 1261 0
 2008 0010 2A68     		ldr	r2, [r5]
 2009 0012 1319     		adds	r3, r2, r4
 2010              	.LVL185:
1263:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2011              		.loc 1 1263 0
 2012 0014 9042     		cmp	r0, r2
 2013 0016 05D2     		bcs	.L182
1270:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 2014              		.loc 1 1270 0
 2015 0018 9A42     		cmp	r2, r3
 2016 001a 09D9     		bls	.L186
1270:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 2017              		.loc 1 1270 0 is_stmt 0 discriminator 1
 2018 001c 9842     		cmp	r0, r3
 2019 001e 09D3     		bcc	.L187
 2020              	.LBE41:
1248:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2021              		.loc 1 1248 0 is_stmt 1
 2022 0020 0022     		movs	r2, #0
 2023 0022 0CE0     		b	.L183
 2024              	.L182:
 2025              	.LBB42:
1284:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 2026              		.loc 1 1284 0
 2027 0024 9A42     		cmp	r2, r3
 2028 0026 07D8     		bhi	.L188
1284:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 2029              		.loc 1 1284 0 is_stmt 0 discriminator 1
 2030 0028 9842     		cmp	r0, r3
 2031 002a 07D3     		bcc	.L189
 2032              	.LBE42:
1248:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2033              		.loc 1 1248 0 is_stmt 1
 2034 002c 0022     		movs	r2, #0
 2035 002e 06E0     		b	.L183
 2036              	.L186:
 2037 0030 0022     		movs	r2, #0
 2038 0032 04E0     		b	.L183
 2039              	.L187:
 2040              	.LBB43:
1272:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 2041              		.loc 1 1272 0
 2042 0034 0122     		movs	r2, #1
 2043 0036 02E0     		b	.L183
 2044              	.L188:
1286:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 2045              		.loc 1 1286 0
 2046 0038 0122     		movs	r2, #1
 2047 003a 00E0     		b	.L183
 2048              	.L189:
 2049 003c 0122     		movs	r2, #1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 139


 2050              	.L183:
 2051              	.LVL186:
1295:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2052              		.loc 1 1295 0
 2053 003e 2B60     		str	r3, [r5]
1297:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2054              		.loc 1 1297 0
 2055 0040 1AB1     		cbz	r2, .L184
1303:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 2056              		.loc 1 1303 0
 2057 0042 0021     		movs	r1, #0
 2058 0044 181A     		subs	r0, r3, r0
 2059              	.LVL187:
 2060 0046 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2061              	.LVL188:
 2062              	.L184:
 2063              	.LBE43:
1310:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2064              		.loc 1 1310 0
 2065 004a FFF7FEFF 		bl	xTaskResumeAll
 2066              	.LVL189:
1314:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2067              		.loc 1 1314 0
 2068 004e 38B9     		cbnz	r0, .L181
1316:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2069              		.loc 1 1316 0
 2070 0050 4FF08052 		mov	r2, #268435456
 2071 0054 044B     		ldr	r3, .L191+4
 2072 0056 1A60     		str	r2, [r3]
 2073              		.syntax unified
 2074              	@ 1316 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 2075 0058 BFF34F8F 		dsb
 2076              	@ 0 "" 2
 2077              	@ 1316 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 2078 005c BFF36F8F 		isb
 2079              	@ 0 "" 2
 2080              		.thumb
 2081              		.syntax unified
 2082              	.L181:
 2083 0060 38BD     		pop	{r3, r4, r5, pc}
 2084              	.LVL190:
 2085              	.L192:
 2086 0062 00BF     		.align	2
 2087              	.L191:
 2088 0064 00000000 		.word	.LANCHOR0
 2089 0068 04ED00E0 		.word	-536810236
 2090              		.cfi_endproc
 2091              	.LFE71:
 2092              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2093              		.section	.text.vTaskDelay,"ax",%progbits
 2094              		.align	2
 2095              		.global	vTaskDelay
 2096              		.thumb
 2097              		.thumb_func
 2098              		.type	vTaskDelay, %function
 2099              	vTaskDelay:
 2100              	.LFB72:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 140


1330:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 2101              		.loc 1 1330 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105              	.LVL191:
 2106 0000 10B5     		push	{r4, lr}
 2107              		.cfi_def_cfa_offset 8
 2108              		.cfi_offset 4, -8
 2109              		.cfi_offset 14, -4
 2110              	.LVL192:
1334:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2111              		.loc 1 1334 0
 2112 0002 48B1     		cbz	r0, .L196
 2113 0004 0446     		mov	r4, r0
1337:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2114              		.loc 1 1337 0
 2115 0006 FFF7FEFF 		bl	vTaskSuspendAll
 2116              	.LVL193:
1348:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 2117              		.loc 1 1348 0
 2118 000a 0021     		movs	r1, #0
 2119 000c 2046     		mov	r0, r4
 2120 000e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2121              	.LVL194:
1350:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2122              		.loc 1 1350 0
 2123 0012 FFF7FEFF 		bl	xTaskResumeAll
 2124              	.LVL195:
 2125 0016 00E0     		b	.L194
 2126              	.LVL196:
 2127              	.L196:
1331:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2128              		.loc 1 1331 0
 2129 0018 0020     		movs	r0, #0
 2130              	.LVL197:
 2131              	.L194:
1359:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2132              		.loc 1 1359 0
 2133 001a 38B9     		cbnz	r0, .L193
1361:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2134              		.loc 1 1361 0
 2135 001c 4FF08052 		mov	r2, #268435456
 2136 0020 034B     		ldr	r3, .L198
 2137 0022 1A60     		str	r2, [r3]
 2138              		.syntax unified
 2139              	@ 1361 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 2140 0024 BFF34F8F 		dsb
 2141              	@ 0 "" 2
 2142              	@ 1361 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 2143 0028 BFF36F8F 		isb
 2144              	@ 0 "" 2
 2145              		.thumb
 2146              		.syntax unified
 2147              	.L193:
 2148 002c 10BD     		pop	{r4, pc}
 2149              	.L199:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 141


 2150 002e 00BF     		.align	2
 2151              	.L198:
 2152 0030 04ED00E0 		.word	-536810236
 2153              		.cfi_endproc
 2154              	.LFE72:
 2155              		.size	vTaskDelay, .-vTaskDelay
 2156              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 2157              		.align	2
 2158              		.global	xTaskCatchUpTicks
 2159              		.thumb
 2160              		.thumb_func
 2161              		.type	xTaskCatchUpTicks, %function
 2162              	xTaskCatchUpTicks:
 2163              	.LFB88:
2612:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xYieldOccurred;
 2164              		.loc 1 2612 0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 0
 2167              		@ frame_needed = 0, uses_anonymous_args = 0
 2168              	.LVL198:
 2169 0000 10B5     		push	{r4, lr}
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 4, -8
 2172              		.cfi_offset 14, -4
 2173 0002 0446     		mov	r4, r0
2621:Generated_Source\PSoC5/RTOS_tasks.c ****     xPendedTicks += xTicksToCatchUp;
 2174              		.loc 1 2621 0
 2175 0004 FFF7FEFF 		bl	vTaskSuspendAll
 2176              	.LVL199:
2622:Generated_Source\PSoC5/RTOS_tasks.c ****     xYieldOccurred = xTaskResumeAll();
 2177              		.loc 1 2622 0
 2178 0008 044B     		ldr	r3, .L202
 2179 000a D3F80021 		ldr	r2, [r3, #256]
 2180 000e 1444     		add	r4, r4, r2
 2181              	.LVL200:
 2182 0010 C3F80041 		str	r4, [r3, #256]
2623:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2183              		.loc 1 2623 0
 2184 0014 FFF7FEFF 		bl	xTaskResumeAll
 2185              	.LVL201:
2626:Generated_Source\PSoC5/RTOS_tasks.c **** /*----------------------------------------------------------*/
 2186              		.loc 1 2626 0
 2187 0018 10BD     		pop	{r4, pc}
 2188              	.L203:
 2189 001a 00BF     		.align	2
 2190              	.L202:
 2191 001c 00000000 		.word	.LANCHOR0
 2192              		.cfi_endproc
 2193              	.LFE88:
 2194              		.size	xTaskCatchUpTicks, .-xTaskCatchUpTicks
 2195              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2196              		.align	2
 2197              		.global	vTaskSwitchContext
 2198              		.thumb
 2199              		.thumb_func
 2200              		.type	vTaskSwitchContext, %function
 2201              	vTaskSwitchContext:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 142


 2202              	.LFB90:
2995:Generated_Source\PSoC5/RTOS_tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2203              		.loc 1 2995 0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 0
 2206              		@ frame_needed = 0, uses_anonymous_args = 0
 2207              		@ link register save eliminated.
2996:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 2208              		.loc 1 2996 0
 2209 0000 1E4B     		ldr	r3, .L211
 2210 0002 D3F8F030 		ldr	r3, [r3, #240]
 2211 0006 23B1     		cbz	r3, .L205
3000:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 2212              		.loc 1 3000 0
 2213 0008 0122     		movs	r2, #1
 2214 000a 1C4B     		ldr	r3, .L211
 2215 000c C3F8FC20 		str	r2, [r3, #252]
 2216 0010 7047     		bx	lr
 2217              	.L205:
3004:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_OUT();
 2218              		.loc 1 3004 0
 2219 0012 1A4B     		ldr	r3, .L211
 2220 0014 0022     		movs	r2, #0
 2221 0016 C3F8FC20 		str	r2, [r3, #252]
 2222              	.LBB44:
3047:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
 2223              		.loc 1 3047 0
 2224 001a D3F8E430 		ldr	r3, [r3, #228]
 2225              	.LVL202:
 2226 001e 00E0     		b	.L207
 2227              	.L208:
3047:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
 2228              		.loc 1 3047 0 is_stmt 0 discriminator 3
 2229 0020 013B     		subs	r3, r3, #1
 2230              	.LVL203:
 2231              	.L207:
3047:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
 2232              		.loc 1 3047 0 discriminator 1
 2233 0022 03EB8301 		add	r1, r3, r3, lsl #2
 2234 0026 8A00     		lsls	r2, r1, #2
 2235 0028 1449     		ldr	r1, .L211
 2236 002a 0A44     		add	r2, r2, r1
 2237 002c 126B     		ldr	r2, [r2, #48]
 2238 002e 002A     		cmp	r2, #0
 2239 0030 F6D0     		beq	.L208
 2240              	.LBE44:
2995:Generated_Source\PSoC5/RTOS_tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2241              		.loc 1 2995 0 is_stmt 1 discriminator 4
 2242 0032 10B4     		push	{r4}
 2243              		.cfi_def_cfa_offset 4
 2244              		.cfi_offset 4, -4
 2245              	.LVL204:
 2246              	.LBB46:
 2247              	.LBB45:
3047:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
 2248              		.loc 1 3047 0 discriminator 4
 2249 0034 0A46     		mov	r2, r1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 143


 2250 0036 9900     		lsls	r1, r3, #2
 2251 0038 CC18     		adds	r4, r1, r3
 2252 003a A000     		lsls	r0, r4, #2
 2253 003c 1044     		add	r0, r0, r2
 2254 003e 446B     		ldr	r4, [r0, #52]
 2255 0040 6468     		ldr	r4, [r4, #4]
 2256 0042 4463     		str	r4, [r0, #52]
 2257 0044 02F13000 		add	r0, r2, #48
 2258 0048 1944     		add	r1, r1, r3
 2259 004a 8A00     		lsls	r2, r1, #2
 2260 004c 0832     		adds	r2, r2, #8
 2261 004e 0244     		add	r2, r2, r0
 2262 0050 9442     		cmp	r4, r2
 2263 0052 06D1     		bne	.L209
3047:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
 2264              		.loc 1 3047 0 is_stmt 0 discriminator 5
 2265 0054 6068     		ldr	r0, [r4, #4]
 2266 0056 03EB8301 		add	r1, r3, r3, lsl #2
 2267 005a 8A00     		lsls	r2, r1, #2
 2268 005c 0749     		ldr	r1, .L211
 2269 005e 0A44     		add	r2, r2, r1
 2270 0060 5063     		str	r0, [r2, #52]
 2271              	.L209:
3047:Generated_Source\PSoC5/RTOS_tasks.c ****         traceTASK_SWITCHED_IN();
 2272              		.loc 1 3047 0 discriminator 7
 2273 0062 0649     		ldr	r1, .L211
 2274 0064 03EB8300 		add	r0, r3, r3, lsl #2
 2275 0068 8200     		lsls	r2, r0, #2
 2276 006a 0A44     		add	r2, r2, r1
 2277 006c 526B     		ldr	r2, [r2, #52]
 2278 006e D268     		ldr	r2, [r2, #12]
 2279 0070 C1F8D820 		str	r2, [r1, #216]
 2280              	.LBE45:
 2281 0074 C1F8E430 		str	r3, [r1, #228]
 2282              	.LBE46:
3067:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 2283              		.loc 1 3067 0 is_stmt 1 discriminator 7
 2284 0078 10BC     		pop	{r4}
 2285              		.cfi_restore 4
 2286              		.cfi_def_cfa_offset 0
 2287 007a 7047     		bx	lr
 2288              	.L212:
 2289              		.align	2
 2290              	.L211:
 2291 007c 00000000 		.word	.LANCHOR0
 2292              		.cfi_endproc
 2293              	.LFE90:
 2294              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2295              		.section	.text.vTaskSuspend,"ax",%progbits
 2296              		.align	2
 2297              		.global	vTaskSuspend
 2298              		.thumb
 2299              		.thumb_func
 2300              		.type	vTaskSuspend, %function
 2301              	vTaskSuspend:
 2302              	.LFB76:
1700:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 144


 2303              		.loc 1 1700 0
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 0
 2306              		@ frame_needed = 0, uses_anonymous_args = 0
 2307              	.LVL205:
 2308 0000 38B5     		push	{r3, r4, r5, lr}
 2309              		.cfi_def_cfa_offset 16
 2310              		.cfi_offset 3, -16
 2311              		.cfi_offset 4, -12
 2312              		.cfi_offset 5, -8
 2313              		.cfi_offset 14, -4
 2314 0002 0446     		mov	r4, r0
1703:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2315              		.loc 1 1703 0
 2316 0004 FFF7FEFF 		bl	vPortEnterCritical
 2317              	.LVL206:
1707:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2318              		.loc 1 1707 0
 2319 0008 14B9     		cbnz	r4, .L214
1707:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2320              		.loc 1 1707 0 is_stmt 0 discriminator 1
 2321 000a 264B     		ldr	r3, .L224
 2322 000c D3F8D840 		ldr	r4, [r3, #216]
 2323              	.LVL207:
 2324              	.L214:
1713:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2325              		.loc 1 1713 0 is_stmt 1 discriminator 4
 2326 0010 251D     		adds	r5, r4, #4
 2327 0012 2846     		mov	r0, r5
 2328 0014 FFF7FEFF 		bl	uxListRemove
 2329              	.LVL208:
1723:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2330              		.loc 1 1723 0 discriminator 4
 2331 0018 A36A     		ldr	r3, [r4, #40]
 2332 001a 1BB1     		cbz	r3, .L215
1725:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 2333              		.loc 1 1725 0
 2334 001c 04F11800 		add	r0, r4, #24
 2335 0020 FFF7FEFF 		bl	uxListRemove
 2336              	.LVL209:
 2337              	.L215:
1732:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2338              		.loc 1 1732 0
 2339 0024 2946     		mov	r1, r5
 2340 0026 1F48     		ldr	r0, .L224
 2341 0028 FFF7FEFF 		bl	vListInsertEnd
 2342              	.LVL210:
 2343              	.LBB47:
1738:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 2344              		.loc 1 1738 0
 2345 002c 0023     		movs	r3, #0
 2346 002e 0AE0     		b	.L216
 2347              	.LVL211:
 2348              	.L218:
1740:Generated_Source\PSoC5/RTOS_tasks.c ****                         {
 2349              		.loc 1 1740 0
 2350 0030 E218     		adds	r2, r4, r3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 145


 2351 0032 92F85C20 		ldrb	r2, [r2, #92]	@ zero_extendqisi2
 2352 0036 D2B2     		uxtb	r2, r2
 2353 0038 012A     		cmp	r2, #1
 2354 003a 03D1     		bne	.L217
1744:Generated_Source\PSoC5/RTOS_tasks.c ****                         }
 2355              		.loc 1 1744 0
 2356 003c E218     		adds	r2, r4, r3
 2357 003e 0021     		movs	r1, #0
 2358 0040 82F85C10 		strb	r1, [r2, #92]
 2359              	.L217:
1738:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 2360              		.loc 1 1738 0 discriminator 2
 2361 0044 0133     		adds	r3, r3, #1
 2362              	.LVL212:
 2363              	.L216:
1738:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 2364              		.loc 1 1738 0 is_stmt 0 discriminator 1
 2365 0046 002B     		cmp	r3, #0
 2366 0048 F2DD     		ble	.L218
 2367              	.LBE47:
1750:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2368              		.loc 1 1750 0 is_stmt 1
 2369 004a FFF7FEFF 		bl	vPortExitCritical
 2370              	.LVL213:
1752:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2371              		.loc 1 1752 0
 2372 004e 154B     		ldr	r3, .L224
 2373 0050 D3F8DC30 		ldr	r3, [r3, #220]
 2374 0054 2BB1     		cbz	r3, .L219
1756:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2375              		.loc 1 1756 0
 2376 0056 FFF7FEFF 		bl	vPortEnterCritical
 2377              	.LVL214:
1758:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 2378              		.loc 1 1758 0
 2379 005a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2380              	.LVL215:
1760:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2381              		.loc 1 1760 0
 2382 005e FFF7FEFF 		bl	vPortExitCritical
 2383              	.LVL216:
 2384              	.L219:
1767:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2385              		.loc 1 1767 0
 2386 0062 104B     		ldr	r3, .L224
 2387 0064 D3F8D830 		ldr	r3, [r3, #216]
 2388 0068 9C42     		cmp	r4, r3
 2389 006a 19D1     		bne	.L213
1769:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2390              		.loc 1 1769 0
 2391 006c 0D4B     		ldr	r3, .L224
 2392 006e D3F8DC30 		ldr	r3, [r3, #220]
 2393 0072 43B1     		cbz	r3, .L221
1773:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 2394              		.loc 1 1773 0
 2395 0074 4FF08052 		mov	r2, #268435456
 2396 0078 0B4B     		ldr	r3, .L224+4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 146


 2397 007a 1A60     		str	r2, [r3]
 2398              		.syntax unified
 2399              	@ 1773 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 2400 007c BFF34F8F 		dsb
 2401              	@ 0 "" 2
 2402              	@ 1773 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 2403 0080 BFF36F8F 		isb
 2404              	@ 0 "" 2
 2405              		.thumb
 2406              		.syntax unified
 2407 0084 38BD     		pop	{r3, r4, r5, pc}
 2408              	.LVL217:
 2409              	.L221:
1780:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 2410              		.loc 1 1780 0
 2411 0086 074B     		ldr	r3, .L224
 2412 0088 1A68     		ldr	r2, [r3]
 2413 008a D3F8D430 		ldr	r3, [r3, #212]
 2414 008e 9A42     		cmp	r2, r3
 2415 0090 04D1     		bne	.L222
1786:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 2416              		.loc 1 1786 0
 2417 0092 0022     		movs	r2, #0
 2418 0094 034B     		ldr	r3, .L224
 2419 0096 C3F8D820 		str	r2, [r3, #216]
 2420 009a 38BD     		pop	{r3, r4, r5, pc}
 2421              	.LVL218:
 2422              	.L222:
1790:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 2423              		.loc 1 1790 0
 2424 009c FFF7FEFF 		bl	vTaskSwitchContext
 2425              	.LVL219:
 2426              	.L213:
 2427 00a0 38BD     		pop	{r3, r4, r5, pc}
 2428              	.LVL220:
 2429              	.L225:
 2430 00a2 00BF     		.align	2
 2431              	.L224:
 2432 00a4 00000000 		.word	.LANCHOR0
 2433 00a8 04ED00E0 		.word	-536810236
 2434              		.cfi_endproc
 2435              	.LFE76:
 2436              		.size	vTaskSuspend, .-vTaskSuspend
 2437              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2438              		.align	2
 2439              		.global	vTaskPlaceOnEventList
 2440              		.thumb
 2441              		.thumb_func
 2442              		.type	vTaskPlaceOnEventList, %function
 2443              	vTaskPlaceOnEventList:
 2444              	.LFB91:
3072:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxEventList );
 2445              		.loc 1 3072 0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 0
 2448              		@ frame_needed = 0, uses_anonymous_args = 0
 2449              	.LVL221:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 147


 2450 0000 10B5     		push	{r4, lr}
 2451              		.cfi_def_cfa_offset 8
 2452              		.cfi_offset 4, -8
 2453              		.cfi_offset 14, -4
 2454 0002 0C46     		mov	r4, r1
3082:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2455              		.loc 1 3082 0
 2456 0004 054B     		ldr	r3, .L228
 2457 0006 D3F8D810 		ldr	r1, [r3, #216]
 2458              	.LVL222:
 2459 000a 1831     		adds	r1, r1, #24
 2460 000c FFF7FEFF 		bl	vListInsert
 2461              	.LVL223:
3084:Generated_Source\PSoC5/RTOS_tasks.c **** }
 2462              		.loc 1 3084 0
 2463 0010 0121     		movs	r1, #1
 2464 0012 2046     		mov	r0, r4
 2465 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2466              	.LVL224:
 2467 0018 10BD     		pop	{r4, pc}
 2468              	.LVL225:
 2469              	.L229:
 2470 001a 00BF     		.align	2
 2471              	.L228:
 2472 001c 00000000 		.word	.LANCHOR0
 2473              		.cfi_endproc
 2474              	.LFE91:
 2475              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2476              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2477              		.align	2
 2478              		.global	vTaskPlaceOnUnorderedEventList
 2479              		.thumb
 2480              		.thumb_func
 2481              		.type	vTaskPlaceOnUnorderedEventList, %function
 2482              	vTaskPlaceOnUnorderedEventList:
 2483              	.LFB92:
3091:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxEventList );
 2484              		.loc 1 3091 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 0
 2487              		@ frame_needed = 0, uses_anonymous_args = 0
 2488              	.LVL226:
 2489 0000 10B5     		push	{r4, lr}
 2490              		.cfi_def_cfa_offset 8
 2491              		.cfi_offset 4, -8
 2492              		.cfi_offset 14, -4
 2493 0002 1446     		mov	r4, r2
3101:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2494              		.loc 1 3101 0
 2495 0004 074B     		ldr	r3, .L232
 2496 0006 D3F8D820 		ldr	r2, [r3, #216]
 2497              	.LVL227:
 2498 000a 41F00041 		orr	r1, r1, #-2147483648
 2499              	.LVL228:
 2500 000e 9161     		str	r1, [r2, #24]
3108:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2501              		.loc 1 3108 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 148


 2502 0010 D3F8D810 		ldr	r1, [r3, #216]
 2503 0014 1831     		adds	r1, r1, #24
 2504 0016 FFF7FEFF 		bl	vListInsertEnd
 2505              	.LVL229:
3110:Generated_Source\PSoC5/RTOS_tasks.c **** }
 2506              		.loc 1 3110 0
 2507 001a 0121     		movs	r1, #1
 2508 001c 2046     		mov	r0, r4
 2509 001e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2510              	.LVL230:
 2511 0022 10BD     		pop	{r4, pc}
 2512              	.LVL231:
 2513              	.L233:
 2514              		.align	2
 2515              	.L232:
 2516 0024 00000000 		.word	.LANCHOR0
 2517              		.cfi_endproc
 2518              	.LFE92:
 2519              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2520              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2521              		.align	2
 2522              		.global	vTaskPlaceOnEventListRestricted
 2523              		.thumb
 2524              		.thumb_func
 2525              		.type	vTaskPlaceOnEventListRestricted, %function
 2526              	vTaskPlaceOnEventListRestricted:
 2527              	.LFB93:
3119:Generated_Source\PSoC5/RTOS_tasks.c ****         configASSERT( pxEventList );
 2528              		.loc 1 3119 0
 2529              		.cfi_startproc
 2530              		@ args = 0, pretend = 0, frame = 0
 2531              		@ frame_needed = 0, uses_anonymous_args = 0
 2532              	.LVL232:
 2533 0000 38B5     		push	{r3, r4, r5, lr}
 2534              		.cfi_def_cfa_offset 16
 2535              		.cfi_offset 3, -16
 2536              		.cfi_offset 4, -12
 2537              		.cfi_offset 5, -8
 2538              		.cfi_offset 14, -4
 2539 0002 0D46     		mov	r5, r1
 2540 0004 1446     		mov	r4, r2
3132:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2541              		.loc 1 3132 0
 2542 0006 074B     		ldr	r3, .L238
 2543 0008 D3F8D810 		ldr	r1, [r3, #216]
 2544              	.LVL233:
 2545 000c 1831     		adds	r1, r1, #24
 2546 000e FFF7FEFF 		bl	vListInsertEnd
 2547              	.LVL234:
3137:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2548              		.loc 1 3137 0
 2549 0012 0CB1     		cbz	r4, .L235
3139:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2550              		.loc 1 3139 0
 2551 0014 4FF0FF35 		mov	r5, #-1
 2552              	.LVL235:
 2553              	.L235:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 149


3143:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 2554              		.loc 1 3143 0
 2555 0018 2146     		mov	r1, r4
 2556 001a 2846     		mov	r0, r5
 2557 001c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2558              	.LVL236:
 2559 0020 38BD     		pop	{r3, r4, r5, pc}
 2560              	.LVL237:
 2561              	.L239:
 2562 0022 00BF     		.align	2
 2563              	.L238:
 2564 0024 00000000 		.word	.LANCHOR0
 2565              		.cfi_endproc
 2566              	.LFE93:
 2567              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 2568              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2569              		.align	2
 2570              		.global	xTaskRemoveFromEventList
 2571              		.thumb
 2572              		.thumb_func
 2573              		.type	xTaskRemoveFromEventList, %function
 2574              	xTaskRemoveFromEventList:
 2575              	.LFB94:
3150:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxUnblockedTCB;
 2576              		.loc 1 3150 0
 2577              		.cfi_startproc
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 0, uses_anonymous_args = 0
 2580              	.LVL238:
 2581 0000 38B5     		push	{r3, r4, r5, lr}
 2582              		.cfi_def_cfa_offset 16
 2583              		.cfi_offset 3, -16
 2584              		.cfi_offset 4, -12
 2585              		.cfi_offset 5, -8
 2586              		.cfi_offset 14, -4
3167:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxUnblockedTCB );
 2587              		.loc 1 3167 0
 2588 0002 C368     		ldr	r3, [r0, #12]
 2589 0004 DC68     		ldr	r4, [r3, #12]
 2590              	.LVL239:
3169:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2591              		.loc 1 3169 0
 2592 0006 04F11805 		add	r5, r4, #24
 2593 000a 2846     		mov	r0, r5
 2594              	.LVL240:
 2595 000c FFF7FEFF 		bl	uxListRemove
 2596              	.LVL241:
3171:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 2597              		.loc 1 3171 0
 2598 0010 154B     		ldr	r3, .L247
 2599 0012 D3F8F030 		ldr	r3, [r3, #240]
 2600 0016 ABB9     		cbnz	r3, .L241
3173:Generated_Source\PSoC5/RTOS_tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 2601              		.loc 1 3173 0
 2602 0018 251D     		adds	r5, r4, #4
 2603 001a 2846     		mov	r0, r5
 2604 001c FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 150


 2605              	.LVL242:
3174:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2606              		.loc 1 3174 0
 2607 0020 E36A     		ldr	r3, [r4, #44]
 2608 0022 114A     		ldr	r2, .L247
 2609 0024 D2F8E420 		ldr	r2, [r2, #228]
 2610 0028 9342     		cmp	r3, r2
 2611 002a 02D9     		bls	.L242
3174:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2612              		.loc 1 3174 0 is_stmt 0 discriminator 1
 2613 002c 0E4A     		ldr	r2, .L247
 2614 002e C2F8E430 		str	r3, [r2, #228]
 2615              	.L242:
3174:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2616              		.loc 1 3174 0 discriminator 3
 2617 0032 03EB8303 		add	r3, r3, r3, lsl #2
 2618 0036 9A00     		lsls	r2, r3, #2
 2619 0038 2946     		mov	r1, r5
 2620 003a 0C48     		ldr	r0, .L247+4
 2621 003c 1044     		add	r0, r0, r2
 2622 003e FFF7FEFF 		bl	vListInsertEnd
 2623              	.LVL243:
 2624 0042 03E0     		b	.L243
 2625              	.L241:
3194:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 2626              		.loc 1 3194 0 is_stmt 1
 2627 0044 2946     		mov	r1, r5
 2628 0046 0A48     		ldr	r0, .L247+8
 2629 0048 FFF7FEFF 		bl	vListInsertEnd
 2630              	.LVL244:
 2631              	.L243:
3197:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 2632              		.loc 1 3197 0
 2633 004c E26A     		ldr	r2, [r4, #44]
 2634 004e 064B     		ldr	r3, .L247
 2635 0050 D3F8D830 		ldr	r3, [r3, #216]
 2636 0054 DB6A     		ldr	r3, [r3, #44]
 2637 0056 9A42     		cmp	r2, r3
 2638 0058 04D9     		bls	.L245
 2639              	.LVL245:
3206:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 2640              		.loc 1 3206 0
 2641 005a 0120     		movs	r0, #1
 2642 005c 024B     		ldr	r3, .L247
 2643 005e C3F8FC00 		str	r0, [r3, #252]
 2644 0062 38BD     		pop	{r3, r4, r5, pc}
 2645              	.LVL246:
 2646              	.L245:
3210:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 2647              		.loc 1 3210 0
 2648 0064 0020     		movs	r0, #0
 2649              	.LVL247:
3214:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 2650              		.loc 1 3214 0
 2651 0066 38BD     		pop	{r3, r4, r5, pc}
 2652              	.LVL248:
 2653              	.L248:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 151


 2654              		.align	2
 2655              	.L247:
 2656 0068 00000000 		.word	.LANCHOR0
 2657 006c 30000000 		.word	.LANCHOR0+48
 2658 0070 14000000 		.word	.LANCHOR0+20
 2659              		.cfi_endproc
 2660              	.LFE94:
 2661              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 2662              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 2663              		.align	2
 2664              		.global	vTaskRemoveFromUnorderedEventList
 2665              		.thumb
 2666              		.thumb_func
 2667              		.type	vTaskRemoveFromUnorderedEventList, %function
 2668              	vTaskRemoveFromUnorderedEventList:
 2669              	.LFB95:
3219:Generated_Source\PSoC5/RTOS_tasks.c ****     TCB_t * pxUnblockedTCB;
 2670              		.loc 1 3219 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 0
 2673              		@ frame_needed = 0, uses_anonymous_args = 0
 2674              	.LVL249:
 2675 0000 70B5     		push	{r4, r5, r6, lr}
 2676              		.cfi_def_cfa_offset 16
 2677              		.cfi_offset 4, -16
 2678              		.cfi_offset 5, -12
 2679              		.cfi_offset 6, -8
 2680              		.cfi_offset 14, -4
3227:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2681              		.loc 1 3227 0
 2682 0002 41F00041 		orr	r1, r1, #-2147483648
 2683              	.LVL250:
 2684 0006 0160     		str	r1, [r0]
3231:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxUnblockedTCB );
 2685              		.loc 1 3231 0
 2686 0008 C468     		ldr	r4, [r0, #12]
 2687              	.LVL251:
3233:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2688              		.loc 1 3233 0
 2689 000a FFF7FEFF 		bl	uxListRemove
 2690              	.LVL252:
3252:Generated_Source\PSoC5/RTOS_tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 2691              		.loc 1 3252 0
 2692 000e 261D     		adds	r6, r4, #4
 2693 0010 3046     		mov	r0, r6
 2694 0012 FFF7FEFF 		bl	uxListRemove
 2695              	.LVL253:
3253:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2696              		.loc 1 3253 0
 2697 0016 E36A     		ldr	r3, [r4, #44]
 2698 0018 0D4A     		ldr	r2, .L253
 2699 001a D2F8E420 		ldr	r2, [r2, #228]
 2700 001e 9342     		cmp	r3, r2
 2701 0020 02D9     		bls	.L250
3253:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2702              		.loc 1 3253 0 is_stmt 0 discriminator 1
 2703 0022 0B4A     		ldr	r2, .L253
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 152


 2704 0024 C2F8E430 		str	r3, [r2, #228]
 2705              	.L250:
3253:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2706              		.loc 1 3253 0 discriminator 3
 2707 0028 094D     		ldr	r5, .L253
 2708 002a 05F13000 		add	r0, r5, #48
 2709 002e 03EB8303 		add	r3, r3, r3, lsl #2
 2710 0032 9A00     		lsls	r2, r3, #2
 2711 0034 3146     		mov	r1, r6
 2712 0036 1044     		add	r0, r0, r2
 2713 0038 FFF7FEFF 		bl	vListInsertEnd
 2714              	.LVL254:
3255:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 2715              		.loc 1 3255 0 is_stmt 1 discriminator 3
 2716 003c E26A     		ldr	r2, [r4, #44]
 2717 003e D5F8D830 		ldr	r3, [r5, #216]
 2718 0042 DB6A     		ldr	r3, [r3, #44]
 2719 0044 9A42     		cmp	r2, r3
 2720 0046 02D9     		bls	.L249
3261:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 2721              		.loc 1 3261 0
 2722 0048 0122     		movs	r2, #1
 2723 004a C5F8FC20 		str	r2, [r5, #252]
 2724              	.L249:
 2725 004e 70BD     		pop	{r4, r5, r6, pc}
 2726              	.LVL255:
 2727              	.L254:
 2728              		.align	2
 2729              	.L253:
 2730 0050 00000000 		.word	.LANCHOR0
 2731              		.cfi_endproc
 2732              	.LFE95:
 2733              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 2734              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 2735              		.align	2
 2736              		.global	vTaskSetTimeOutState
 2737              		.thumb
 2738              		.thumb_func
 2739              		.type	vTaskSetTimeOutState, %function
 2740              	vTaskSetTimeOutState:
 2741              	.LFB96:
3267:Generated_Source\PSoC5/RTOS_tasks.c ****     configASSERT( pxTimeOut );
 2742              		.loc 1 3267 0
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 0
 2745              		@ frame_needed = 0, uses_anonymous_args = 0
 2746              	.LVL256:
 2747 0000 10B5     		push	{r4, lr}
 2748              		.cfi_def_cfa_offset 8
 2749              		.cfi_offset 4, -8
 2750              		.cfi_offset 14, -4
 2751 0002 0446     		mov	r4, r0
3269:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 2752              		.loc 1 3269 0
 2753 0004 FFF7FEFF 		bl	vPortEnterCritical
 2754              	.LVL257:
3271:Generated_Source\PSoC5/RTOS_tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 153


 2755              		.loc 1 3271 0
 2756 0008 044B     		ldr	r3, .L257
 2757 000a D3F8F820 		ldr	r2, [r3, #248]
 2758 000e 2260     		str	r2, [r4]
3272:Generated_Source\PSoC5/RTOS_tasks.c ****     }
 2759              		.loc 1 3272 0
 2760 0010 D3F8EC30 		ldr	r3, [r3, #236]
 2761 0014 6360     		str	r3, [r4, #4]
3274:Generated_Source\PSoC5/RTOS_tasks.c **** }
 2762              		.loc 1 3274 0
 2763 0016 FFF7FEFF 		bl	vPortExitCritical
 2764              	.LVL258:
 2765 001a 10BD     		pop	{r4, pc}
 2766              	.LVL259:
 2767              	.L258:
 2768              		.align	2
 2769              	.L257:
 2770 001c 00000000 		.word	.LANCHOR0
 2771              		.cfi_endproc
 2772              	.LFE96:
 2773              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 2774              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 2775              		.align	2
 2776              		.global	vTaskInternalSetTimeOutState
 2777              		.thumb
 2778              		.thumb_func
 2779              		.type	vTaskInternalSetTimeOutState, %function
 2780              	vTaskInternalSetTimeOutState:
 2781              	.LFB97:
3279:Generated_Source\PSoC5/RTOS_tasks.c ****     /* For internal use only as it does not use a critical section. */
 2782              		.loc 1 3279 0
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 0
 2785              		@ frame_needed = 0, uses_anonymous_args = 0
 2786              		@ link register save eliminated.
 2787              	.LVL260:
3281:Generated_Source\PSoC5/RTOS_tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 2788              		.loc 1 3281 0
 2789 0000 034B     		ldr	r3, .L260
 2790 0002 D3F8F820 		ldr	r2, [r3, #248]
 2791 0006 0260     		str	r2, [r0]
3282:Generated_Source\PSoC5/RTOS_tasks.c **** }
 2792              		.loc 1 3282 0
 2793 0008 D3F8EC30 		ldr	r3, [r3, #236]
 2794 000c 4360     		str	r3, [r0, #4]
 2795 000e 7047     		bx	lr
 2796              	.L261:
 2797              		.align	2
 2798              	.L260:
 2799 0010 00000000 		.word	.LANCHOR0
 2800              		.cfi_endproc
 2801              	.LFE97:
 2802              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 2803              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 2804              		.align	2
 2805              		.global	xTaskCheckForTimeOut
 2806              		.thumb
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 154


 2807              		.thumb_func
 2808              		.type	xTaskCheckForTimeOut, %function
 2809              	xTaskCheckForTimeOut:
 2810              	.LFB98:
3288:Generated_Source\PSoC5/RTOS_tasks.c ****     BaseType_t xReturn;
 2811              		.loc 1 3288 0
 2812              		.cfi_startproc
 2813              		@ args = 0, pretend = 0, frame = 0
 2814              		@ frame_needed = 0, uses_anonymous_args = 0
 2815              	.LVL261:
 2816 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2817              		.cfi_def_cfa_offset 24
 2818              		.cfi_offset 3, -24
 2819              		.cfi_offset 4, -20
 2820              		.cfi_offset 5, -16
 2821              		.cfi_offset 6, -12
 2822              		.cfi_offset 7, -8
 2823              		.cfi_offset 14, -4
 2824 0002 0446     		mov	r4, r0
 2825 0004 0D46     		mov	r5, r1
3294:Generated_Source\PSoC5/RTOS_tasks.c ****     {
 2826              		.loc 1 3294 0
 2827 0006 FFF7FEFF 		bl	vPortEnterCritical
 2828              	.LVL262:
 2829              	.LBB48:
3297:Generated_Source\PSoC5/RTOS_tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 2830              		.loc 1 3297 0
 2831 000a 134B     		ldr	r3, .L268
 2832 000c D3F8EC10 		ldr	r1, [r3, #236]
 2833              	.LVL263:
3298:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2834              		.loc 1 3298 0
 2835 0010 6268     		ldr	r2, [r4, #4]
 2836 0012 881A     		subs	r0, r1, r2
 2837              	.LVL264:
3312:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 2838              		.loc 1 3312 0
 2839 0014 2B68     		ldr	r3, [r5]
 2840 0016 B3F1FF3F 		cmp	r3, #-1
 2841 001a 18D0     		beq	.L266
3322:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2842              		.loc 1 3322 0
 2843 001c 2768     		ldr	r7, [r4]
 2844 001e 0E4E     		ldr	r6, .L268
 2845 0020 D6F8F860 		ldr	r6, [r6, #248]
 2846 0024 B742     		cmp	r7, r6
 2847 0026 05D0     		beq	.L264
3322:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2848              		.loc 1 3322 0 is_stmt 0 discriminator 1
 2849 0028 9142     		cmp	r1, r2
 2850 002a 03D3     		bcc	.L264
 2851              	.LVL265:
3330:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2852              		.loc 1 3330 0 is_stmt 1
 2853 002c 0023     		movs	r3, #0
 2854 002e 2B60     		str	r3, [r5]
3329:Generated_Source\PSoC5/RTOS_tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 155


 2855              		.loc 1 3329 0
 2856 0030 0124     		movs	r4, #1
 2857              	.LVL266:
3330:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2858              		.loc 1 3330 0
 2859 0032 0DE0     		b	.L263
 2860              	.LVL267:
 2861              	.L264:
3332:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2862              		.loc 1 3332 0
 2863 0034 9842     		cmp	r0, r3
 2864 0036 06D2     		bcs	.L265
3335:Generated_Source\PSoC5/RTOS_tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 2865              		.loc 1 3335 0
 2866 0038 1B1A     		subs	r3, r3, r0
 2867 003a 2B60     		str	r3, [r5]
3336:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdFALSE;
 2868              		.loc 1 3336 0
 2869 003c 2046     		mov	r0, r4
 2870              	.LVL268:
 2871 003e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2872              	.LVL269:
3337:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2873              		.loc 1 3337 0
 2874 0042 0024     		movs	r4, #0
 2875              	.LVL270:
 2876 0044 04E0     		b	.L263
 2877              	.LVL271:
 2878              	.L265:
3341:Generated_Source\PSoC5/RTOS_tasks.c ****             xReturn = pdTRUE;
 2879              		.loc 1 3341 0
 2880 0046 0023     		movs	r3, #0
 2881 0048 2B60     		str	r3, [r5]
 2882              	.LVL272:
3342:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2883              		.loc 1 3342 0
 2884 004a 0124     		movs	r4, #1
 2885              	.LVL273:
 2886 004c 00E0     		b	.L263
 2887              	.LVL274:
 2888              	.L266:
3317:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 2889              		.loc 1 3317 0
 2890 004e 0024     		movs	r4, #0
 2891              	.LVL275:
 2892              	.L263:
 2893              	.LBE48:
3345:Generated_Source\PSoC5/RTOS_tasks.c **** 
 2894              		.loc 1 3345 0
 2895 0050 FFF7FEFF 		bl	vPortExitCritical
 2896              	.LVL276:
3348:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 2897              		.loc 1 3348 0
 2898 0054 2046     		mov	r0, r4
 2899 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2900              	.LVL277:
 2901              	.L269:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 156


 2902              		.align	2
 2903              	.L268:
 2904 0058 00000000 		.word	.LANCHOR0
 2905              		.cfi_endproc
 2906              	.LFE98:
 2907              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 2908              		.section	.text.vTaskMissedYield,"ax",%progbits
 2909              		.align	2
 2910              		.global	vTaskMissedYield
 2911              		.thumb
 2912              		.thumb_func
 2913              		.type	vTaskMissedYield, %function
 2914              	vTaskMissedYield:
 2915              	.LFB99:
3352:Generated_Source\PSoC5/RTOS_tasks.c ****     xYieldPending = pdTRUE;
 2916              		.loc 1 3352 0
 2917              		.cfi_startproc
 2918              		@ args = 0, pretend = 0, frame = 0
 2919              		@ frame_needed = 0, uses_anonymous_args = 0
 2920              		@ link register save eliminated.
3353:Generated_Source\PSoC5/RTOS_tasks.c **** }
 2921              		.loc 1 3353 0
 2922 0000 0122     		movs	r2, #1
 2923 0002 024B     		ldr	r3, .L271
 2924 0004 C3F8FC20 		str	r2, [r3, #252]
 2925 0008 7047     		bx	lr
 2926              	.L272:
 2927 000a 00BF     		.align	2
 2928              	.L271:
 2929 000c 00000000 		.word	.LANCHOR0
 2930              		.cfi_endproc
 2931              	.LFE99:
 2932              		.size	vTaskMissedYield, .-vTaskMissedYield
 2933              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 2934              		.align	2
 2935              		.global	vTaskSetThreadLocalStoragePointer
 2936              		.thumb
 2937              		.thumb_func
 2938              		.type	vTaskSetThreadLocalStoragePointer, %function
 2939              	vTaskSetThreadLocalStoragePointer:
 2940              	.LFB101:
3577:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 2941              		.loc 1 3577 0
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 0, uses_anonymous_args = 0
 2945              		@ link register save eliminated.
 2946              	.LVL278:
3580:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2947              		.loc 1 3580 0
 2948 0000 0429     		cmp	r1, #4
 2949 0002 07DC     		bgt	.L273
3582:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( pxTCB != NULL );
 2950              		.loc 1 3582 0
 2951 0004 10B9     		cbnz	r0, .L275
3582:Generated_Source\PSoC5/RTOS_tasks.c ****             configASSERT( pxTCB != NULL );
 2952              		.loc 1 3582 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 157


 2953 0006 044B     		ldr	r3, .L276
 2954 0008 D3F8D800 		ldr	r0, [r3, #216]
 2955              	.LVL279:
 2956              	.L275:
3584:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2957              		.loc 1 3584 0 is_stmt 1 discriminator 4
 2958 000c 1031     		adds	r1, r1, #16
 2959              	.LVL280:
 2960 000e 00EB8101 		add	r1, r0, r1, lsl #2
 2961              	.LVL281:
 2962 0012 4A60     		str	r2, [r1, #4]
 2963              	.LVL282:
 2964              	.L273:
 2965 0014 7047     		bx	lr
 2966              	.L277:
 2967 0016 00BF     		.align	2
 2968              	.L276:
 2969 0018 00000000 		.word	.LANCHOR0
 2970              		.cfi_endproc
 2971              	.LFE101:
 2972              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 2973              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 2974              		.align	2
 2975              		.global	pvTaskGetThreadLocalStoragePointer
 2976              		.thumb
 2977              		.thumb_func
 2978              		.type	pvTaskGetThreadLocalStoragePointer, %function
 2979              	pvTaskGetThreadLocalStoragePointer:
 2980              	.LFB102:
3595:Generated_Source\PSoC5/RTOS_tasks.c ****         void * pvReturn = NULL;
 2981              		.loc 1 3595 0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 2985              		@ link register save eliminated.
 2986              	.LVL283:
3599:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 2987              		.loc 1 3599 0
 2988 0000 0429     		cmp	r1, #4
 2989 0002 08DC     		bgt	.L281
3601:Generated_Source\PSoC5/RTOS_tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 2990              		.loc 1 3601 0
 2991 0004 10B9     		cbnz	r0, .L280
3601:Generated_Source\PSoC5/RTOS_tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 2992              		.loc 1 3601 0 is_stmt 0 discriminator 1
 2993 0006 054B     		ldr	r3, .L282
 2994 0008 D3F8D800 		ldr	r0, [r3, #216]
 2995              	.LVL284:
 2996              	.L280:
3602:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 2997              		.loc 1 3602 0 is_stmt 1 discriminator 4
 2998 000c 1031     		adds	r1, r1, #16
 2999              	.LVL285:
 3000 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3001              	.LVL286:
 3002 0012 4068     		ldr	r0, [r0, #4]
 3003              	.LVL287:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 158


 3004 0014 7047     		bx	lr
 3005              	.LVL288:
 3006              	.L281:
3606:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 3007              		.loc 1 3606 0
 3008 0016 0020     		movs	r0, #0
 3009              	.LVL289:
3610:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3010              		.loc 1 3610 0
 3011 0018 7047     		bx	lr
 3012              	.L283:
 3013 001a 00BF     		.align	2
 3014              	.L282:
 3015 001c 00000000 		.word	.LANCHOR0
 3016              		.cfi_endproc
 3017              	.LFE102:
 3018              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3019              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3020              		.align	2
 3021              		.global	xTaskGetCurrentTaskHandle
 3022              		.thumb
 3023              		.thumb_func
 3024              		.type	xTaskGetCurrentTaskHandle, %function
 3025              	xTaskGetCurrentTaskHandle:
 3026              	.LFB107:
3996:Generated_Source\PSoC5/RTOS_tasks.c ****         TaskHandle_t xReturn;
 3027              		.loc 1 3996 0
 3028              		.cfi_startproc
 3029              		@ args = 0, pretend = 0, frame = 0
 3030              		@ frame_needed = 0, uses_anonymous_args = 0
 3031              		@ link register save eliminated.
4002:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3032              		.loc 1 4002 0
 3033 0000 014B     		ldr	r3, .L285
 3034 0002 D3F8D800 		ldr	r0, [r3, #216]
 3035              	.LVL290:
4005:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3036              		.loc 1 4005 0
 3037 0006 7047     		bx	lr
 3038              	.L286:
 3039              		.align	2
 3040              	.L285:
 3041 0008 00000000 		.word	.LANCHOR0
 3042              		.cfi_endproc
 3043              	.LFE107:
 3044              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3045              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3046              		.align	2
 3047              		.global	xTaskGetSchedulerState
 3048              		.thumb
 3049              		.thumb_func
 3050              		.type	xTaskGetSchedulerState, %function
 3051              	xTaskGetSchedulerState:
 3052              	.LFB108:
4013:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
 3053              		.loc 1 4013 0
 3054              		.cfi_startproc
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 159


 3055              		@ args = 0, pretend = 0, frame = 0
 3056              		@ frame_needed = 0, uses_anonymous_args = 0
 3057              		@ link register save eliminated.
4016:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 3058              		.loc 1 4016 0
 3059 0000 064B     		ldr	r3, .L291
 3060 0002 D3F8DC30 		ldr	r3, [r3, #220]
 3061 0006 2BB1     		cbz	r3, .L289
4022:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3062              		.loc 1 4022 0
 3063 0008 044B     		ldr	r3, .L291
 3064 000a D3F8F030 		ldr	r3, [r3, #240]
 3065 000e 1BB9     		cbnz	r3, .L290
4024:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3066              		.loc 1 4024 0
 3067 0010 0220     		movs	r0, #2
 3068 0012 7047     		bx	lr
 3069              	.L289:
4018:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 3070              		.loc 1 4018 0
 3071 0014 0120     		movs	r0, #1
 3072 0016 7047     		bx	lr
 3073              	.L290:
4028:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3074              		.loc 1 4028 0
 3075 0018 0020     		movs	r0, #0
 3076              	.LVL291:
4033:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3077              		.loc 1 4033 0
 3078 001a 7047     		bx	lr
 3079              	.L292:
 3080              		.align	2
 3081              	.L291:
 3082 001c 00000000 		.word	.LANCHOR0
 3083              		.cfi_endproc
 3084              	.LFE108:
 3085              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3086              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3087              		.align	2
 3088              		.global	uxTaskResetEventItemValue
 3089              		.thumb
 3090              		.thumb_func
 3091              		.type	uxTaskResetEventItemValue, %function
 3092              	uxTaskResetEventItemValue:
 3093              	.LFB109:
4636:Generated_Source\PSoC5/RTOS_tasks.c ****     TickType_t uxReturn;
 3094              		.loc 1 4636 0
 3095              		.cfi_startproc
 3096              		@ args = 0, pretend = 0, frame = 0
 3097              		@ frame_needed = 0, uses_anonymous_args = 0
 3098              		@ link register save eliminated.
4639:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3099              		.loc 1 4639 0
 3100 0000 064B     		ldr	r3, .L294
 3101 0002 D3F8D820 		ldr	r2, [r3, #216]
 3102 0006 9069     		ldr	r0, [r2, #24]
 3103              	.LVL292:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 160


4643:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3104              		.loc 1 4643 0
 3105 0008 D3F8D820 		ldr	r2, [r3, #216]
 3106 000c D3F8D830 		ldr	r3, [r3, #216]
 3107 0010 DB6A     		ldr	r3, [r3, #44]
 3108 0012 C3F10503 		rsb	r3, r3, #5
 3109 0016 9361     		str	r3, [r2, #24]
4646:Generated_Source\PSoC5/RTOS_tasks.c **** /*-----------------------------------------------------------*/
 3110              		.loc 1 4646 0
 3111 0018 7047     		bx	lr
 3112              	.L295:
 3113 001a 00BF     		.align	2
 3114              	.L294:
 3115 001c 00000000 		.word	.LANCHOR0
 3116              		.cfi_endproc
 3117              	.LFE109:
 3118              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3119              		.section	.text.ulTaskGenericNotifyTake,"ax",%progbits
 3120              		.align	2
 3121              		.global	ulTaskGenericNotifyTake
 3122              		.thumb
 3123              		.thumb_func
 3124              		.type	ulTaskGenericNotifyTake, %function
 3125              	ulTaskGenericNotifyTake:
 3126              	.LFB110:
4671:Generated_Source\PSoC5/RTOS_tasks.c ****         uint32_t ulReturn;
 3127              		.loc 1 4671 0
 3128              		.cfi_startproc
 3129              		@ args = 0, pretend = 0, frame = 0
 3130              		@ frame_needed = 0, uses_anonymous_args = 0
 3131              	.LVL293:
 3132 0000 70B5     		push	{r4, r5, r6, lr}
 3133              		.cfi_def_cfa_offset 16
 3134              		.cfi_offset 4, -16
 3135              		.cfi_offset 5, -12
 3136              		.cfi_offset 6, -8
 3137              		.cfi_offset 14, -4
 3138 0002 0446     		mov	r4, r0
 3139 0004 0E46     		mov	r6, r1
 3140 0006 1546     		mov	r5, r2
4676:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 3141              		.loc 1 4676 0
 3142 0008 FFF7FEFF 		bl	vPortEnterCritical
 3143              	.LVL294:
4679:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3144              		.loc 1 4679 0
 3145 000c 224B     		ldr	r3, .L301
 3146 000e D3F8D830 		ldr	r3, [r3, #216]
 3147 0012 04F11602 		add	r2, r4, #22
 3148 0016 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3149 001a 9BB9     		cbnz	r3, .L297
4682:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3150              		.loc 1 4682 0
 3151 001c 1E4B     		ldr	r3, .L301
 3152 001e D3F8D830 		ldr	r3, [r3, #216]
 3153 0022 2344     		add	r3, r3, r4
 3154 0024 0122     		movs	r2, #1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 161


 3155 0026 83F85C20 		strb	r2, [r3, #92]
4684:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3156              		.loc 1 4684 0
 3157 002a 5DB1     		cbz	r5, .L297
4686:Generated_Source\PSoC5/RTOS_tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
 3158              		.loc 1 4686 0
 3159 002c 1146     		mov	r1, r2
 3160 002e 2846     		mov	r0, r5
 3161 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3162              	.LVL295:
4693:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3163              		.loc 1 4693 0
 3164 0034 4FF08052 		mov	r2, #268435456
 3165 0038 184B     		ldr	r3, .L301+4
 3166 003a 1A60     		str	r2, [r3]
 3167              		.syntax unified
 3168              	@ 4693 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 3169 003c BFF34F8F 		dsb
 3170              	@ 0 "" 2
 3171              	@ 4693 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 3172 0040 BFF36F8F 		isb
 3173              	@ 0 "" 2
 3174              		.thumb
 3175              		.syntax unified
 3176              	.L297:
4705:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3177              		.loc 1 4705 0
 3178 0044 FFF7FEFF 		bl	vPortExitCritical
 3179              	.LVL296:
4707:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 3180              		.loc 1 4707 0
 3181 0048 FFF7FEFF 		bl	vPortEnterCritical
 3182              	.LVL297:
4710:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3183              		.loc 1 4710 0
 3184 004c 124B     		ldr	r3, .L301
 3185 004e D3F8D830 		ldr	r3, [r3, #216]
 3186 0052 04F11602 		add	r2, r4, #22
 3187 0056 53F82250 		ldr	r5, [r3, r2, lsl #2]
 3188              	.LVL298:
4712:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3189              		.loc 1 4712 0
 3190 005a 8DB1     		cbz	r5, .L298
4714:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3191              		.loc 1 4714 0
 3192 005c 46B1     		cbz	r6, .L299
4716:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3193              		.loc 1 4716 0
 3194 005e 0E4B     		ldr	r3, .L301
 3195 0060 D3F8D820 		ldr	r2, [r3, #216]
 3196 0064 04F11603 		add	r3, r4, #22
 3197 0068 0021     		movs	r1, #0
 3198 006a 42F82310 		str	r1, [r2, r3, lsl #2]
 3199 006e 07E0     		b	.L298
 3200              	.L299:
4720:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3201              		.loc 1 4720 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 162


 3202 0070 094B     		ldr	r3, .L301
 3203 0072 D3F8D820 		ldr	r2, [r3, #216]
 3204 0076 6B1E     		subs	r3, r5, #1
 3205 0078 04F11601 		add	r1, r4, #22
 3206 007c 42F82130 		str	r3, [r2, r1, lsl #2]
 3207              	.L298:
4728:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 3208              		.loc 1 4728 0
 3209 0080 054B     		ldr	r3, .L301
 3210 0082 D3F8D830 		ldr	r3, [r3, #216]
 3211 0086 1C44     		add	r4, r4, r3
 3212              	.LVL299:
 3213 0088 0023     		movs	r3, #0
 3214 008a 84F85C30 		strb	r3, [r4, #92]
4730:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3215              		.loc 1 4730 0
 3216 008e FFF7FEFF 		bl	vPortExitCritical
 3217              	.LVL300:
4733:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3218              		.loc 1 4733 0
 3219 0092 2846     		mov	r0, r5
 3220 0094 70BD     		pop	{r4, r5, r6, pc}
 3221              	.LVL301:
 3222              	.L302:
 3223 0096 00BF     		.align	2
 3224              	.L301:
 3225 0098 00000000 		.word	.LANCHOR0
 3226 009c 04ED00E0 		.word	-536810236
 3227              		.cfi_endproc
 3228              	.LFE110:
 3229              		.size	ulTaskGenericNotifyTake, .-ulTaskGenericNotifyTake
 3230              		.section	.text.xTaskGenericNotifyWait,"ax",%progbits
 3231              		.align	2
 3232              		.global	xTaskGenericNotifyWait
 3233              		.thumb
 3234              		.thumb_func
 3235              		.type	xTaskGenericNotifyWait, %function
 3236              	xTaskGenericNotifyWait:
 3237              	.LFB111:
4745:Generated_Source\PSoC5/RTOS_tasks.c ****         BaseType_t xReturn;
 3238              		.loc 1 4745 0
 3239              		.cfi_startproc
 3240              		@ args = 4, pretend = 0, frame = 0
 3241              		@ frame_needed = 0, uses_anonymous_args = 0
 3242              	.LVL302:
 3243 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3244              		.cfi_def_cfa_offset 24
 3245              		.cfi_offset 3, -24
 3246              		.cfi_offset 4, -20
 3247              		.cfi_offset 5, -16
 3248              		.cfi_offset 6, -12
 3249              		.cfi_offset 7, -8
 3250              		.cfi_offset 14, -4
 3251 0002 0446     		mov	r4, r0
 3252 0004 0F46     		mov	r7, r1
 3253 0006 1546     		mov	r5, r2
 3254 0008 1E46     		mov	r6, r3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 163


4750:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 3255              		.loc 1 4750 0
 3256 000a FFF7FEFF 		bl	vPortEnterCritical
 3257              	.LVL303:
4753:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3258              		.loc 1 4753 0
 3259 000e 2B4B     		ldr	r3, .L309
 3260 0010 D3F8D830 		ldr	r3, [r3, #216]
 3261 0014 2344     		add	r3, r3, r4
 3262 0016 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3263 001a DBB2     		uxtb	r3, r3
 3264 001c 022B     		cmp	r3, #2
 3265 001e 1ED0     		beq	.L304
4758:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3266              		.loc 1 4758 0
 3267 0020 264B     		ldr	r3, .L309
 3268 0022 D3F8D820 		ldr	r2, [r3, #216]
 3269 0026 04F11600 		add	r0, r4, #22
 3270 002a 52F82010 		ldr	r1, [r2, r0, lsl #2]
 3271 002e 21EA0701 		bic	r1, r1, r7
 3272 0032 42F82010 		str	r1, [r2, r0, lsl #2]
4761:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3273              		.loc 1 4761 0
 3274 0036 D3F8D830 		ldr	r3, [r3, #216]
 3275 003a 2344     		add	r3, r3, r4
 3276 003c 0122     		movs	r2, #1
 3277 003e 83F85C20 		strb	r2, [r3, #92]
4763:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3278              		.loc 1 4763 0
 3279 0042 069B     		ldr	r3, [sp, #24]
 3280 0044 5BB1     		cbz	r3, .L304
4765:Generated_Source\PSoC5/RTOS_tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
 3281              		.loc 1 4765 0
 3282 0046 1146     		mov	r1, r2
 3283 0048 1846     		mov	r0, r3
 3284 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3285              	.LVL304:
4772:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3286              		.loc 1 4772 0
 3287 004e 4FF08052 		mov	r2, #268435456
 3288 0052 1B4B     		ldr	r3, .L309+4
 3289 0054 1A60     		str	r2, [r3]
 3290              		.syntax unified
 3291              	@ 4772 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 3292 0056 BFF34F8F 		dsb
 3293              	@ 0 "" 2
 3294              	@ 4772 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 3295 005a BFF36F8F 		isb
 3296              	@ 0 "" 2
 3297              		.thumb
 3298              		.syntax unified
 3299              	.L304:
4784:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3300              		.loc 1 4784 0
 3301 005e FFF7FEFF 		bl	vPortExitCritical
 3302              	.LVL305:
4786:Generated_Source\PSoC5/RTOS_tasks.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 164


 3303              		.loc 1 4786 0
 3304 0062 FFF7FEFF 		bl	vPortEnterCritical
 3305              	.LVL306:
4790:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3306              		.loc 1 4790 0
 3307 0066 3EB1     		cbz	r6, .L305
4794:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3308              		.loc 1 4794 0
 3309 0068 144B     		ldr	r3, .L309
 3310 006a D3F8D830 		ldr	r3, [r3, #216]
 3311 006e 04F11602 		add	r2, r4, #22
 3312 0072 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3313 0076 3360     		str	r3, [r6]
 3314              	.L305:
4801:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3315              		.loc 1 4801 0
 3316 0078 104B     		ldr	r3, .L309
 3317 007a D3F8D830 		ldr	r3, [r3, #216]
 3318 007e 2344     		add	r3, r3, r4
 3319 0080 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3320 0084 DBB2     		uxtb	r3, r3
 3321 0086 022B     		cmp	r3, #2
 3322 0088 0CD1     		bne	.L307
4810:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdTRUE;
 3323              		.loc 1 4810 0
 3324 008a 0C4B     		ldr	r3, .L309
 3325 008c D3F8D820 		ldr	r2, [r3, #216]
 3326 0090 04F11601 		add	r1, r4, #22
 3327 0094 52F82130 		ldr	r3, [r2, r1, lsl #2]
 3328 0098 23EA0505 		bic	r5, r3, r5
 3329              	.LVL307:
 3330 009c 42F82150 		str	r5, [r2, r1, lsl #2]
 3331              	.LVL308:
4811:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3332              		.loc 1 4811 0
 3333 00a0 0125     		movs	r5, #1
 3334 00a2 00E0     		b	.L306
 3335              	.LVL309:
 3336              	.L307:
4804:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3337              		.loc 1 4804 0
 3338 00a4 0025     		movs	r5, #0
 3339              	.LVL310:
 3340              	.L306:
4814:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 3341              		.loc 1 4814 0
 3342 00a6 054B     		ldr	r3, .L309
 3343 00a8 D3F8D830 		ldr	r3, [r3, #216]
 3344 00ac 1C44     		add	r4, r4, r3
 3345              	.LVL311:
 3346 00ae 0023     		movs	r3, #0
 3347 00b0 84F85C30 		strb	r3, [r4, #92]
4816:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3348              		.loc 1 4816 0
 3349 00b4 FFF7FEFF 		bl	vPortExitCritical
 3350              	.LVL312:
4819:Generated_Source\PSoC5/RTOS_tasks.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 165


 3351              		.loc 1 4819 0
 3352 00b8 2846     		mov	r0, r5
 3353 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3354              	.LVL313:
 3355              	.L310:
 3356              		.align	2
 3357              	.L309:
 3358 00bc 00000000 		.word	.LANCHOR0
 3359 00c0 04ED00E0 		.word	-536810236
 3360              		.cfi_endproc
 3361              	.LFE111:
 3362              		.size	xTaskGenericNotifyWait, .-xTaskGenericNotifyWait
 3363              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3364              		.align	2
 3365              		.global	xTaskGenericNotify
 3366              		.thumb
 3367              		.thumb_func
 3368              		.type	xTaskGenericNotify, %function
 3369              	xTaskGenericNotify:
 3370              	.LFB112:
4831:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 3371              		.loc 1 4831 0
 3372              		.cfi_startproc
 3373              		@ args = 4, pretend = 0, frame = 0
 3374              		@ frame_needed = 0, uses_anonymous_args = 0
 3375              	.LVL314:
 3376 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3377              		.cfi_def_cfa_offset 24
 3378              		.cfi_offset 4, -24
 3379              		.cfi_offset 5, -20
 3380              		.cfi_offset 6, -16
 3381              		.cfi_offset 7, -12
 3382              		.cfi_offset 8, -8
 3383              		.cfi_offset 14, -4
 3384 0004 0646     		mov	r6, r0
 3385 0006 0C46     		mov	r4, r1
 3386 0008 1746     		mov	r7, r2
 3387 000a 1D46     		mov	r5, r3
 3388 000c DDF81880 		ldr	r8, [sp, #24]
 3389              	.LVL315:
4840:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 3390              		.loc 1 4840 0
 3391 0010 FFF7FEFF 		bl	vPortEnterCritical
 3392              	.LVL316:
4842:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3393              		.loc 1 4842 0
 3394 0014 B8F1000F 		cmp	r8, #0
 3395 0018 05D0     		beq	.L312
4844:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3396              		.loc 1 4844 0
 3397 001a 04F11603 		add	r3, r4, #22
 3398 001e 56F82330 		ldr	r3, [r6, r3, lsl #2]
 3399 0022 C8F80030 		str	r3, [r8]
 3400              	.L312:
4847:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3401              		.loc 1 4847 0
 3402 0026 3319     		adds	r3, r6, r4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 166


 3403 0028 93F85C10 		ldrb	r1, [r3, #92]	@ zero_extendqisi2
 3404 002c C9B2     		uxtb	r1, r1
 3405              	.LVL317:
4849:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3406              		.loc 1 4849 0
 3407 002e 0222     		movs	r2, #2
 3408 0030 83F85C20 		strb	r2, [r3, #92]
4851:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3409              		.loc 1 4851 0
 3410 0034 6B1E     		subs	r3, r5, #1
 3411 0036 032B     		cmp	r3, #3
 3412 0038 1FD8     		bhi	.L321
 3413 003a DFE803F0 		tbb	[pc, r3]
 3414              	.L315:
 3415 003e 02       		.byte	(.L314-.L315)/2
 3416 003f 0A       		.byte	(.L316-.L315)/2
 3417 0040 12       		.byte	(.L317-.L315)/2
 3418 0041 17       		.byte	(.L318-.L315)/2
 3419              		.p2align 1
 3420              	.L314:
4854:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
 3421              		.loc 1 4854 0
 3422 0042 1634     		adds	r4, r4, #22
 3423              	.LVL318:
 3424 0044 56F82430 		ldr	r3, [r6, r4, lsl #2]
 3425 0048 1F43     		orrs	r7, r7, r3
 3426              	.LVL319:
 3427 004a 46F82470 		str	r7, [r6, r4, lsl #2]
4833:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucOriginalNotifyState;
 3428              		.loc 1 4833 0
 3429 004e 0124     		movs	r4, #1
 3430              	.LVL320:
4855:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3431              		.loc 1 4855 0
 3432 0050 16E0     		b	.L313
 3433              	.LVL321:
 3434              	.L316:
4858:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
 3435              		.loc 1 4858 0
 3436 0052 1634     		adds	r4, r4, #22
 3437              	.LVL322:
 3438 0054 56F82430 		ldr	r3, [r6, r4, lsl #2]
 3439 0058 0133     		adds	r3, r3, #1
 3440 005a 46F82430 		str	r3, [r6, r4, lsl #2]
4833:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucOriginalNotifyState;
 3441              		.loc 1 4833 0
 3442 005e 0124     		movs	r4, #1
 3443              	.LVL323:
4859:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3444              		.loc 1 4859 0
 3445 0060 0EE0     		b	.L313
 3446              	.LVL324:
 3447              	.L317:
4862:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
 3448              		.loc 1 4862 0
 3449 0062 1634     		adds	r4, r4, #22
 3450              	.LVL325:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 167


 3451 0064 46F82470 		str	r7, [r6, r4, lsl #2]
4833:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucOriginalNotifyState;
 3452              		.loc 1 4833 0
 3453 0068 0124     		movs	r4, #1
 3454              	.LVL326:
4863:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3455              		.loc 1 4863 0
 3456 006a 09E0     		b	.L313
 3457              	.LVL327:
 3458              	.L318:
4867:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 3459              		.loc 1 4867 0
 3460 006c 0229     		cmp	r1, #2
 3461 006e 06D0     		beq	.L322
4869:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 3462              		.loc 1 4869 0
 3463 0070 1634     		adds	r4, r4, #22
 3464              	.LVL328:
 3465 0072 46F82470 		str	r7, [r6, r4, lsl #2]
4833:Generated_Source\PSoC5/RTOS_tasks.c ****         uint8_t ucOriginalNotifyState;
 3466              		.loc 1 4833 0
 3467 0076 0124     		movs	r4, #1
 3468              	.LVL329:
 3469 0078 02E0     		b	.L313
 3470              	.LVL330:
 3471              	.L321:
 3472 007a 0124     		movs	r4, #1
 3473              	.LVL331:
 3474 007c 00E0     		b	.L313
 3475              	.LVL332:
 3476              	.L322:
4874:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 3477              		.loc 1 4874 0
 3478 007e 0024     		movs	r4, #0
 3479              	.LVL333:
 3480              	.L313:
4899:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3481              		.loc 1 4899 0
 3482 0080 0129     		cmp	r1, #1
 3483 0082 24D1     		bne	.L319
4901:Generated_Source\PSoC5/RTOS_tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 3484              		.loc 1 4901 0
 3485 0084 371D     		adds	r7, r6, #4
 3486 0086 3846     		mov	r0, r7
 3487 0088 FFF7FEFF 		bl	uxListRemove
 3488              	.LVL334:
4902:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3489              		.loc 1 4902 0
 3490 008c F36A     		ldr	r3, [r6, #44]
 3491 008e 124A     		ldr	r2, .L324
 3492 0090 D2F8E420 		ldr	r2, [r2, #228]
 3493 0094 9342     		cmp	r3, r2
 3494 0096 02D9     		bls	.L320
4902:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3495              		.loc 1 4902 0 is_stmt 0 discriminator 1
 3496 0098 0F4A     		ldr	r2, .L324
 3497 009a C2F8E430 		str	r3, [r2, #228]
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 168


 3498              	.L320:
4902:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3499              		.loc 1 4902 0 discriminator 3
 3500 009e 0E4D     		ldr	r5, .L324
 3501 00a0 05F13000 		add	r0, r5, #48
 3502 00a4 03EB8303 		add	r3, r3, r3, lsl #2
 3503 00a8 9A00     		lsls	r2, r3, #2
 3504 00aa 3946     		mov	r1, r7
 3505 00ac 1044     		add	r0, r0, r2
 3506 00ae FFF7FEFF 		bl	vListInsertEnd
 3507              	.LVL335:
4923:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3508              		.loc 1 4923 0 is_stmt 1 discriminator 3
 3509 00b2 F26A     		ldr	r2, [r6, #44]
 3510 00b4 D5F8D830 		ldr	r3, [r5, #216]
 3511 00b8 DB6A     		ldr	r3, [r3, #44]
 3512 00ba 9A42     		cmp	r2, r3
 3513 00bc 07D9     		bls	.L319
4927:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3514              		.loc 1 4927 0
 3515 00be 4FF08052 		mov	r2, #268435456
 3516 00c2 064B     		ldr	r3, .L324+4
 3517 00c4 1A60     		str	r2, [r3]
 3518              		.syntax unified
 3519              	@ 4927 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 3520 00c6 BFF34F8F 		dsb
 3521              	@ 0 "" 2
 3522              	@ 4927 "Generated_Source\PSoC5\RTOS_tasks.c" 1
 3523 00ca BFF36F8F 		isb
 3524              	@ 0 "" 2
 3525              		.thumb
 3526              		.syntax unified
 3527              	.L319:
4939:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3528              		.loc 1 4939 0
 3529 00ce FFF7FEFF 		bl	vPortExitCritical
 3530              	.LVL336:
4942:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3531              		.loc 1 4942 0
 3532 00d2 2046     		mov	r0, r4
 3533 00d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3534              	.LVL337:
 3535              	.L325:
 3536              		.align	2
 3537              	.L324:
 3538 00d8 00000000 		.word	.LANCHOR0
 3539 00dc 04ED00E0 		.word	-536810236
 3540              		.cfi_endproc
 3541              	.LFE112:
 3542              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 3543              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 3544              		.align	2
 3545              		.global	xTaskGenericNotifyFromISR
 3546              		.thumb
 3547              		.thumb_func
 3548              		.type	xTaskGenericNotifyFromISR, %function
 3549              	xTaskGenericNotifyFromISR:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 169


 3550              	.LFB113:
4955:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 3551              		.loc 1 4955 0
 3552              		.cfi_startproc
 3553              		@ args = 8, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555              	.LVL338:
 3556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3557              		.cfi_def_cfa_offset 24
 3558              		.cfi_offset 3, -24
 3559              		.cfi_offset 4, -20
 3560              		.cfi_offset 5, -16
 3561              		.cfi_offset 6, -12
 3562              		.cfi_offset 7, -8
 3563              		.cfi_offset 14, -4
 3564 0002 069C     		ldr	r4, [sp, #24]
 3565              	.LVL339:
 3566              	.LBB49:
 3567              	.LBB50:
 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 3568              		.loc 2 215 0
 3569              		.syntax unified
 3570              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 3571 0004 EFF31186 			mrs r6, basepri											
 3572 0008 4FF00405 		mov r5, #4												
 3573 000c 85F31188 		msr basepri, r5											
 3574 0010 BFF36F8F 		isb														
 3575 0014 BFF34F8F 		dsb														
 3576              	
 3577              	@ 0 "" 2
 3578              		.thumb
 3579              		.syntax unified
 3580              	.LBE50:
 3581              	.LBE49:
4986:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3582              		.loc 1 4986 0
 3583 0018 24B1     		cbz	r4, .L327
4988:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3584              		.loc 1 4988 0
 3585 001a 01F11605 		add	r5, r1, #22
 3586 001e 50F82550 		ldr	r5, [r0, r5, lsl #2]
 3587 0022 2560     		str	r5, [r4]
 3588              	.L327:
4991:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 3589              		.loc 1 4991 0
 3590 0024 4518     		adds	r5, r0, r1
 3591 0026 95F85C40 		ldrb	r4, [r5, #92]	@ zero_extendqisi2
 3592 002a E4B2     		uxtb	r4, r4
 3593              	.LVL340:
4992:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3594              		.loc 1 4992 0
 3595 002c 0227     		movs	r7, #2
 3596 002e 85F85C70 		strb	r7, [r5, #92]
4994:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3597              		.loc 1 4994 0
 3598 0032 013B     		subs	r3, r3, #1
 3599              	.LVL341:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 170


 3600 0034 032B     		cmp	r3, #3
 3601 0036 1FD8     		bhi	.L339
 3602 0038 DFE803F0 		tbb	[pc, r3]
 3603              	.L330:
 3604 003c 02       		.byte	(.L329-.L330)/2
 3605 003d 0A       		.byte	(.L331-.L330)/2
 3606 003e 12       		.byte	(.L332-.L330)/2
 3607 003f 17       		.byte	(.L333-.L330)/2
 3608              		.p2align 1
 3609              	.L329:
4997:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
 3610              		.loc 1 4997 0
 3611 0040 1631     		adds	r1, r1, #22
 3612              	.LVL342:
 3613 0042 50F82130 		ldr	r3, [r0, r1, lsl #2]
 3614 0046 1A43     		orrs	r2, r2, r3
 3615              	.LVL343:
 3616 0048 40F82120 		str	r2, [r0, r1, lsl #2]
4958:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 3617              		.loc 1 4958 0
 3618 004c 0125     		movs	r5, #1
4998:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3619              		.loc 1 4998 0
 3620 004e 16E0     		b	.L328
 3621              	.LVL344:
 3622              	.L331:
5001:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
 3623              		.loc 1 5001 0
 3624 0050 1631     		adds	r1, r1, #22
 3625              	.LVL345:
 3626 0052 50F82130 		ldr	r3, [r0, r1, lsl #2]
 3627 0056 0133     		adds	r3, r3, #1
 3628 0058 40F82130 		str	r3, [r0, r1, lsl #2]
4958:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 3629              		.loc 1 4958 0
 3630 005c 0125     		movs	r5, #1
5002:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3631              		.loc 1 5002 0
 3632 005e 0EE0     		b	.L328
 3633              	.LVL346:
 3634              	.L332:
5005:Generated_Source\PSoC5/RTOS_tasks.c ****                     break;
 3635              		.loc 1 5005 0
 3636 0060 1631     		adds	r1, r1, #22
 3637              	.LVL347:
 3638 0062 40F82120 		str	r2, [r0, r1, lsl #2]
4958:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 3639              		.loc 1 4958 0
 3640 0066 0125     		movs	r5, #1
5006:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3641              		.loc 1 5006 0
 3642 0068 09E0     		b	.L328
 3643              	.LVL348:
 3644              	.L333:
5010:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 3645              		.loc 1 5010 0
 3646 006a 022C     		cmp	r4, #2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 171


 3647 006c 06D0     		beq	.L340
5012:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 3648              		.loc 1 5012 0
 3649 006e 1631     		adds	r1, r1, #22
 3650              	.LVL349:
 3651 0070 40F82120 		str	r2, [r0, r1, lsl #2]
4958:Generated_Source\PSoC5/RTOS_tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 3652              		.loc 1 4958 0
 3653 0074 0125     		movs	r5, #1
 3654 0076 02E0     		b	.L328
 3655              	.LVL350:
 3656              	.L339:
 3657 0078 0125     		movs	r5, #1
 3658 007a 00E0     		b	.L328
 3659              	.L340:
5017:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 3660              		.loc 1 5017 0
 3661 007c 0025     		movs	r5, #0
 3662              	.LVL351:
 3663              	.L328:
5041:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3664              		.loc 1 5041 0
 3665 007e 012C     		cmp	r4, #1
 3666 0080 2FD1     		bne	.L334
 3667 0082 0446     		mov	r4, r0
 3668              	.LVL352:
5046:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3669              		.loc 1 5046 0
 3670 0084 194B     		ldr	r3, .L342
 3671 0086 D3F8F030 		ldr	r3, [r3, #240]
 3672 008a ABB9     		cbnz	r3, .L335
5048:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3673              		.loc 1 5048 0
 3674 008c 071D     		adds	r7, r0, #4
 3675 008e 3846     		mov	r0, r7
 3676              	.LVL353:
 3677 0090 FFF7FEFF 		bl	uxListRemove
 3678              	.LVL354:
5049:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3679              		.loc 1 5049 0
 3680 0094 E36A     		ldr	r3, [r4, #44]
 3681 0096 154A     		ldr	r2, .L342
 3682 0098 D2F8E420 		ldr	r2, [r2, #228]
 3683 009c 9342     		cmp	r3, r2
 3684 009e 02D9     		bls	.L336
5049:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3685              		.loc 1 5049 0 is_stmt 0 discriminator 1
 3686 00a0 124A     		ldr	r2, .L342
 3687 00a2 C2F8E430 		str	r3, [r2, #228]
 3688              	.L336:
5049:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3689              		.loc 1 5049 0 discriminator 3
 3690 00a6 03EB8303 		add	r3, r3, r3, lsl #2
 3691 00aa 9A00     		lsls	r2, r3, #2
 3692 00ac 3946     		mov	r1, r7
 3693 00ae 1048     		ldr	r0, .L342+4
 3694 00b0 1044     		add	r0, r0, r2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 172


 3695 00b2 FFF7FEFF 		bl	vListInsertEnd
 3696              	.LVL355:
 3697 00b6 04E0     		b	.L337
 3698              	.LVL356:
 3699              	.L335:
5055:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3700              		.loc 1 5055 0 is_stmt 1
 3701 00b8 00F11801 		add	r1, r0, #24
 3702 00bc 0D48     		ldr	r0, .L342+8
 3703              	.LVL357:
 3704 00be FFF7FEFF 		bl	vListInsertEnd
 3705              	.LVL358:
 3706              	.L337:
5058:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3707              		.loc 1 5058 0
 3708 00c2 E26A     		ldr	r2, [r4, #44]
 3709 00c4 094B     		ldr	r3, .L342
 3710 00c6 D3F8D830 		ldr	r3, [r3, #216]
 3711 00ca DB6A     		ldr	r3, [r3, #44]
 3712 00cc 9A42     		cmp	r2, r3
 3713 00ce 08D9     		bls	.L334
5062:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 3714              		.loc 1 5062 0
 3715 00d0 079B     		ldr	r3, [sp, #28]
 3716 00d2 13B1     		cbz	r3, .L338
5064:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 3717              		.loc 1 5064 0
 3718 00d4 0123     		movs	r3, #1
 3719 00d6 079A     		ldr	r2, [sp, #28]
 3720 00d8 1360     		str	r3, [r2]
 3721              	.L338:
5070:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3722              		.loc 1 5070 0
 3723 00da 0122     		movs	r2, #1
 3724 00dc 034B     		ldr	r3, .L342
 3725 00de C3F8FC20 		str	r2, [r3, #252]
 3726              	.LVL359:
 3727              	.L334:
 3728              	.LBB51:
 3729              	.LBB52:
 3730              		.loc 2 233 0
 3731              		.syntax unified
 3732              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 3733 00e2 86F31188 			msr basepri, r6	
 3734              	@ 0 "" 2
 3735              	.LVL360:
 3736              		.thumb
 3737              		.syntax unified
 3738              	.LBE52:
 3739              	.LBE51:
5081:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3740              		.loc 1 5081 0
 3741 00e6 2846     		mov	r0, r5
 3742 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3743              	.LVL361:
 3744              	.L343:
 3745 00ea 00BF     		.align	2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 173


 3746              	.L342:
 3747 00ec 00000000 		.word	.LANCHOR0
 3748 00f0 30000000 		.word	.LANCHOR0+48
 3749 00f4 14000000 		.word	.LANCHOR0+20
 3750              		.cfi_endproc
 3751              	.LFE113:
 3752              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 3753              		.section	.text.vTaskGenericNotifyGiveFromISR,"ax",%progbits
 3754              		.align	2
 3755              		.global	vTaskGenericNotifyGiveFromISR
 3756              		.thumb
 3757              		.thumb_func
 3758              		.type	vTaskGenericNotifyGiveFromISR, %function
 3759              	vTaskGenericNotifyGiveFromISR:
 3760              	.LFB114:
5091:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 3761              		.loc 1 5091 0
 3762              		.cfi_startproc
 3763              		@ args = 0, pretend = 0, frame = 0
 3764              		@ frame_needed = 0, uses_anonymous_args = 0
 3765              	.LVL362:
 3766 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3767              		.cfi_def_cfa_offset 24
 3768              		.cfi_offset 3, -24
 3769              		.cfi_offset 4, -20
 3770              		.cfi_offset 5, -16
 3771              		.cfi_offset 6, -12
 3772              		.cfi_offset 7, -8
 3773              		.cfi_offset 14, -4
 3774              	.LVL363:
 3775              	.LBB53:
 3776              	.LBB54:
 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 3777              		.loc 2 215 0
 3778              		.syntax unified
 3779              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 3780 0002 EFF31185 			mrs r5, basepri											
 3781 0006 4FF00403 		mov r3, #4												
 3782 000a 83F31188 		msr basepri, r3											
 3783 000e BFF36F8F 		isb														
 3784 0012 BFF34F8F 		dsb														
 3785              	
 3786              	@ 0 "" 2
 3787              		.thumb
 3788              		.syntax unified
 3789              	.LBE54:
 3790              	.LBE53:
5121:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 3791              		.loc 1 5121 0
 3792 0016 4418     		adds	r4, r0, r1
 3793 0018 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3794 001c DBB2     		uxtb	r3, r3
 3795              	.LVL364:
5122:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3796              		.loc 1 5122 0
 3797 001e 0226     		movs	r6, #2
 3798 0020 84F85C60 		strb	r6, [r4, #92]
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 174


5126:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3799              		.loc 1 5126 0
 3800 0024 1631     		adds	r1, r1, #22
 3801              	.LVL365:
 3802 0026 50F82140 		ldr	r4, [r0, r1, lsl #2]
 3803 002a 0134     		adds	r4, r4, #1
 3804 002c 40F82140 		str	r4, [r0, r1, lsl #2]
5132:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3805              		.loc 1 5132 0
 3806 0030 012B     		cmp	r3, #1
 3807 0032 2ED1     		bne	.L345
 3808 0034 1446     		mov	r4, r2
 3809 0036 0646     		mov	r6, r0
5137:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3810              		.loc 1 5137 0
 3811 0038 174B     		ldr	r3, .L351
 3812              	.LVL366:
 3813 003a D3F8F030 		ldr	r3, [r3, #240]
 3814 003e ABB9     		cbnz	r3, .L346
5139:Generated_Source\PSoC5/RTOS_tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3815              		.loc 1 5139 0
 3816 0040 071D     		adds	r7, r0, #4
 3817 0042 3846     		mov	r0, r7
 3818              	.LVL367:
 3819 0044 FFF7FEFF 		bl	uxListRemove
 3820              	.LVL368:
5140:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3821              		.loc 1 5140 0
 3822 0048 F36A     		ldr	r3, [r6, #44]
 3823 004a 134A     		ldr	r2, .L351
 3824 004c D2F8E420 		ldr	r2, [r2, #228]
 3825 0050 9342     		cmp	r3, r2
 3826 0052 02D9     		bls	.L347
5140:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3827              		.loc 1 5140 0 is_stmt 0 discriminator 1
 3828 0054 104A     		ldr	r2, .L351
 3829 0056 C2F8E430 		str	r3, [r2, #228]
 3830              	.L347:
5140:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3831              		.loc 1 5140 0 discriminator 3
 3832 005a 03EB8303 		add	r3, r3, r3, lsl #2
 3833 005e 9A00     		lsls	r2, r3, #2
 3834 0060 3946     		mov	r1, r7
 3835 0062 0E48     		ldr	r0, .L351+4
 3836 0064 1044     		add	r0, r0, r2
 3837 0066 FFF7FEFF 		bl	vListInsertEnd
 3838              	.LVL369:
 3839 006a 04E0     		b	.L348
 3840              	.LVL370:
 3841              	.L346:
5146:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3842              		.loc 1 5146 0 is_stmt 1
 3843 006c 00F11801 		add	r1, r0, #24
 3844 0070 0B48     		ldr	r0, .L351+8
 3845              	.LVL371:
 3846 0072 FFF7FEFF 		bl	vListInsertEnd
 3847              	.LVL372:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 175


 3848              	.L348:
5149:Generated_Source\PSoC5/RTOS_tasks.c ****                 {
 3849              		.loc 1 5149 0
 3850 0076 F26A     		ldr	r2, [r6, #44]
 3851 0078 074B     		ldr	r3, .L351
 3852 007a D3F8D830 		ldr	r3, [r3, #216]
 3853 007e DB6A     		ldr	r3, [r3, #44]
 3854 0080 9A42     		cmp	r2, r3
 3855 0082 06D9     		bls	.L345
5153:Generated_Source\PSoC5/RTOS_tasks.c ****                     {
 3856              		.loc 1 5153 0
 3857 0084 0CB1     		cbz	r4, .L349
5155:Generated_Source\PSoC5/RTOS_tasks.c ****                     }
 3858              		.loc 1 5155 0
 3859 0086 0123     		movs	r3, #1
 3860 0088 2360     		str	r3, [r4]
 3861              	.L349:
5161:Generated_Source\PSoC5/RTOS_tasks.c ****                 }
 3862              		.loc 1 5161 0
 3863 008a 0122     		movs	r2, #1
 3864 008c 024B     		ldr	r3, .L351
 3865 008e C3F8FC20 		str	r2, [r3, #252]
 3866              	.LVL373:
 3867              	.L345:
 3868              	.LBB55:
 3869              	.LBB56:
 3870              		.loc 2 233 0
 3871              		.syntax unified
 3872              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 3873 0092 85F31188 			msr basepri, r5	
 3874              	@ 0 "" 2
 3875              	.LVL374:
 3876              		.thumb
 3877              		.syntax unified
 3878 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3879              	.L352:
 3880              		.align	2
 3881              	.L351:
 3882 0098 00000000 		.word	.LANCHOR0
 3883 009c 30000000 		.word	.LANCHOR0+48
 3884 00a0 14000000 		.word	.LANCHOR0+20
 3885              	.LBE56:
 3886              	.LBE55:
 3887              		.cfi_endproc
 3888              	.LFE114:
 3889              		.size	vTaskGenericNotifyGiveFromISR, .-vTaskGenericNotifyGiveFromISR
 3890              		.section	.text.xTaskGenericNotifyStateClear,"ax",%progbits
 3891              		.align	2
 3892              		.global	xTaskGenericNotifyStateClear
 3893              		.thumb
 3894              		.thumb_func
 3895              		.type	xTaskGenericNotifyStateClear, %function
 3896              	xTaskGenericNotifyStateClear:
 3897              	.LFB115:
5179:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 3898              		.loc 1 5179 0
 3899              		.cfi_startproc
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 176


 3900              		@ args = 0, pretend = 0, frame = 0
 3901              		@ frame_needed = 0, uses_anonymous_args = 0
 3902              	.LVL375:
 3903 0000 38B5     		push	{r3, r4, r5, lr}
 3904              		.cfi_def_cfa_offset 16
 3905              		.cfi_offset 3, -16
 3906              		.cfi_offset 4, -12
 3907              		.cfi_offset 5, -8
 3908              		.cfi_offset 14, -4
 3909 0002 0C46     		mov	r4, r1
5187:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3910              		.loc 1 5187 0
 3911 0004 0546     		mov	r5, r0
 3912 0006 10B9     		cbnz	r0, .L354
5187:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3913              		.loc 1 5187 0 is_stmt 0 discriminator 1
 3914 0008 0A4B     		ldr	r3, .L358
 3915 000a D3F8D850 		ldr	r5, [r3, #216]
 3916              	.LVL376:
 3917              	.L354:
5189:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 3918              		.loc 1 5189 0 is_stmt 1 discriminator 4
 3919 000e FFF7FEFF 		bl	vPortEnterCritical
 3920              	.LVL377:
5191:Generated_Source\PSoC5/RTOS_tasks.c ****             {
 3921              		.loc 1 5191 0 discriminator 4
 3922 0012 2B19     		adds	r3, r5, r4
 3923 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3924 0018 DBB2     		uxtb	r3, r3
 3925 001a 022B     		cmp	r3, #2
 3926 001c 05D1     		bne	.L356
5193:Generated_Source\PSoC5/RTOS_tasks.c ****                 xReturn = pdPASS;
 3927              		.loc 1 5193 0
 3928 001e 2C44     		add	r4, r4, r5
 3929              	.LVL378:
 3930 0020 0023     		movs	r3, #0
 3931 0022 84F85C30 		strb	r3, [r4, #92]
 3932              	.LVL379:
5194:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3933              		.loc 1 5194 0
 3934 0026 0124     		movs	r4, #1
 3935 0028 00E0     		b	.L355
 3936              	.LVL380:
 3937              	.L356:
5198:Generated_Source\PSoC5/RTOS_tasks.c ****             }
 3938              		.loc 1 5198 0
 3939 002a 0024     		movs	r4, #0
 3940              	.LVL381:
 3941              	.L355:
5201:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3942              		.loc 1 5201 0
 3943 002c FFF7FEFF 		bl	vPortExitCritical
 3944              	.LVL382:
5204:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3945              		.loc 1 5204 0
 3946 0030 2046     		mov	r0, r4
 3947 0032 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 177


 3948              	.LVL383:
 3949              	.L359:
 3950              		.align	2
 3951              	.L358:
 3952 0034 00000000 		.word	.LANCHOR0
 3953              		.cfi_endproc
 3954              	.LFE115:
 3955              		.size	xTaskGenericNotifyStateClear, .-xTaskGenericNotifyStateClear
 3956              		.section	.text.ulTaskGenericNotifyValueClear,"ax",%progbits
 3957              		.align	2
 3958              		.global	ulTaskGenericNotifyValueClear
 3959              		.thumb
 3960              		.thumb_func
 3961              		.type	ulTaskGenericNotifyValueClear, %function
 3962              	ulTaskGenericNotifyValueClear:
 3963              	.LFB116:
5214:Generated_Source\PSoC5/RTOS_tasks.c ****         TCB_t * pxTCB;
 3964              		.loc 1 5214 0
 3965              		.cfi_startproc
 3966              		@ args = 0, pretend = 0, frame = 0
 3967              		@ frame_needed = 0, uses_anonymous_args = 0
 3968              	.LVL384:
 3969 0000 70B5     		push	{r4, r5, r6, lr}
 3970              		.cfi_def_cfa_offset 16
 3971              		.cfi_offset 4, -16
 3972              		.cfi_offset 5, -12
 3973              		.cfi_offset 6, -8
 3974              		.cfi_offset 14, -4
 3975 0002 0C46     		mov	r4, r1
 3976 0004 1646     		mov	r6, r2
5220:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3977              		.loc 1 5220 0
 3978 0006 0546     		mov	r5, r0
 3979 0008 10B9     		cbnz	r0, .L361
5220:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3980              		.loc 1 5220 0 is_stmt 0 discriminator 1
 3981 000a 094B     		ldr	r3, .L363
 3982 000c D3F8D850 		ldr	r5, [r3, #216]
 3983              	.LVL385:
 3984              	.L361:
5222:Generated_Source\PSoC5/RTOS_tasks.c ****         {
 3985              		.loc 1 5222 0 is_stmt 1 discriminator 4
 3986 0010 FFF7FEFF 		bl	vPortEnterCritical
 3987              	.LVL386:
5226:Generated_Source\PSoC5/RTOS_tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 3988              		.loc 1 5226 0 discriminator 4
 3989 0014 04F11601 		add	r1, r4, #22
 3990 0018 55F82140 		ldr	r4, [r5, r1, lsl #2]
 3991              	.LVL387:
5227:Generated_Source\PSoC5/RTOS_tasks.c ****         }
 3992              		.loc 1 5227 0 discriminator 4
 3993 001c 55F82120 		ldr	r2, [r5, r1, lsl #2]
 3994 0020 22EA0602 		bic	r2, r2, r6
 3995 0024 45F82120 		str	r2, [r5, r1, lsl #2]
5229:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3996              		.loc 1 5229 0 discriminator 4
 3997 0028 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 178


 3998              	.LVL388:
5232:Generated_Source\PSoC5/RTOS_tasks.c **** 
 3999              		.loc 1 5232 0 discriminator 4
 4000 002c 2046     		mov	r0, r4
 4001 002e 70BD     		pop	{r4, r5, r6, pc}
 4002              	.LVL389:
 4003              	.L364:
 4004              		.align	2
 4005              	.L363:
 4006 0030 00000000 		.word	.LANCHOR0
 4007              		.cfi_endproc
 4008              	.LFE116:
 4009              		.size	ulTaskGenericNotifyValueClear, .-ulTaskGenericNotifyValueClear
 4010              		.global	pxCurrentTCB
 4011              		.section	.rodata.str1.4,"aMS",%progbits,1
 4012              		.align	2
 4013              	.LC0:
 4014 0000 49444C45 		.ascii	"IDLE\000"
 4014      00
 4015              		.bss
 4016              		.align	2
 4017              		.set	.LANCHOR0,. + 0
 4018              		.type	xSuspendedTaskList, %object
 4019              		.size	xSuspendedTaskList, 20
 4020              	xSuspendedTaskList:
 4021 0000 00000000 		.space	20
 4021      00000000 
 4021      00000000 
 4021      00000000 
 4021      00000000 
 4022              		.type	xPendingReadyList, %object
 4023              		.size	xPendingReadyList, 20
 4024              	xPendingReadyList:
 4025 0014 00000000 		.space	20
 4025      00000000 
 4025      00000000 
 4025      00000000 
 4025      00000000 
 4026              		.type	pxDelayedTaskList, %object
 4027              		.size	pxDelayedTaskList, 4
 4028              	pxDelayedTaskList:
 4029 0028 00000000 		.space	4
 4030              		.type	xNextTaskUnblockTime, %object
 4031              		.size	xNextTaskUnblockTime, 4
 4032              	xNextTaskUnblockTime:
 4033 002c 00000000 		.space	4
 4034              		.type	pxReadyTasksLists, %object
 4035              		.size	pxReadyTasksLists, 100
 4036              	pxReadyTasksLists:
 4037 0030 00000000 		.space	100
 4037      00000000 
 4037      00000000 
 4037      00000000 
 4037      00000000 
 4038              		.type	xDelayedTaskList1, %object
 4039              		.size	xDelayedTaskList1, 20
 4040              	xDelayedTaskList1:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 179


 4041 0094 00000000 		.space	20
 4041      00000000 
 4041      00000000 
 4041      00000000 
 4041      00000000 
 4042              		.type	xDelayedTaskList2, %object
 4043              		.size	xDelayedTaskList2, 20
 4044              	xDelayedTaskList2:
 4045 00a8 00000000 		.space	20
 4045      00000000 
 4045      00000000 
 4045      00000000 
 4045      00000000 
 4046              		.type	xTasksWaitingTermination, %object
 4047              		.size	xTasksWaitingTermination, 20
 4048              	xTasksWaitingTermination:
 4049 00bc 00000000 		.space	20
 4049      00000000 
 4049      00000000 
 4049      00000000 
 4049      00000000 
 4050              		.type	pxOverflowDelayedTaskList, %object
 4051              		.size	pxOverflowDelayedTaskList, 4
 4052              	pxOverflowDelayedTaskList:
 4053 00d0 00000000 		.space	4
 4054              		.type	uxCurrentNumberOfTasks, %object
 4055              		.size	uxCurrentNumberOfTasks, 4
 4056              	uxCurrentNumberOfTasks:
 4057 00d4 00000000 		.space	4
 4058              		.type	pxCurrentTCB, %object
 4059              		.size	pxCurrentTCB, 4
 4060              	pxCurrentTCB:
 4061 00d8 00000000 		.space	4
 4062              		.type	xSchedulerRunning, %object
 4063              		.size	xSchedulerRunning, 4
 4064              	xSchedulerRunning:
 4065 00dc 00000000 		.space	4
 4066              		.type	uxTaskNumber, %object
 4067              		.size	uxTaskNumber, 4
 4068              	uxTaskNumber:
 4069 00e0 00000000 		.space	4
 4070              		.type	uxTopReadyPriority, %object
 4071              		.size	uxTopReadyPriority, 4
 4072              	uxTopReadyPriority:
 4073 00e4 00000000 		.space	4
 4074              		.type	uxDeletedTasksWaitingCleanUp, %object
 4075              		.size	uxDeletedTasksWaitingCleanUp, 4
 4076              	uxDeletedTasksWaitingCleanUp:
 4077 00e8 00000000 		.space	4
 4078              		.type	xTickCount, %object
 4079              		.size	xTickCount, 4
 4080              	xTickCount:
 4081 00ec 00000000 		.space	4
 4082              		.type	uxSchedulerSuspended, %object
 4083              		.size	uxSchedulerSuspended, 4
 4084              	uxSchedulerSuspended:
 4085 00f0 00000000 		.space	4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 180


 4086              		.type	xIdleTaskHandle, %object
 4087              		.size	xIdleTaskHandle, 4
 4088              	xIdleTaskHandle:
 4089 00f4 00000000 		.space	4
 4090              		.type	xNumOfOverflows, %object
 4091              		.size	xNumOfOverflows, 4
 4092              	xNumOfOverflows:
 4093 00f8 00000000 		.space	4
 4094              		.type	xYieldPending, %object
 4095              		.size	xYieldPending, 4
 4096              	xYieldPending:
 4097 00fc 00000000 		.space	4
 4098              		.type	xPendedTicks, %object
 4099              		.size	xPendedTicks, 4
 4100              	xPendedTicks:
 4101 0100 00000000 		.space	4
 4102              		.text
 4103              	.Letext0:
 4104              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4105              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4106              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4107              		.file 6 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/projdefs.h"
 4108              		.file 7 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/list.h"
 4109              		.file 8 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/task.h"
 4110              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 4111              		.file 10 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/portable.h"
 4112              		.file 11 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/timers.h"
 4113              		.section	.debug_info,"",%progbits
 4114              	.Ldebug_info0:
 4115 0000 2A1F0000 		.4byte	0x1f2a
 4116 0004 0400     		.2byte	0x4
 4117 0006 00000000 		.4byte	.Ldebug_abbrev0
 4118 000a 04       		.byte	0x4
 4119 000b 01       		.uleb128 0x1
 4120 000c B7090000 		.4byte	.LASF223
 4121 0010 0C       		.byte	0xc
 4122 0011 A8050000 		.4byte	.LASF224
 4123 0015 DB070000 		.4byte	.LASF225
 4124 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 4125 001d 00000000 		.4byte	0
 4126 0021 00000000 		.4byte	.Ldebug_line0
 4127 0025 02       		.uleb128 0x2
 4128 0026 3C000000 		.4byte	.LASF4
 4129 002a 03       		.byte	0x3
 4130 002b D8       		.byte	0xd8
 4131 002c 30000000 		.4byte	0x30
 4132 0030 03       		.uleb128 0x3
 4133 0031 04       		.byte	0x4
 4134 0032 07       		.byte	0x7
 4135 0033 26040000 		.4byte	.LASF0
 4136 0037 04       		.uleb128 0x4
 4137 0038 04       		.byte	0x4
 4138 0039 05       		.byte	0x5
 4139 003a 696E7400 		.ascii	"int\000"
 4140 003e 03       		.uleb128 0x3
 4141 003f 08       		.byte	0x8
 4142 0040 05       		.byte	0x5
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 181


 4143 0041 48010000 		.4byte	.LASF1
 4144 0045 03       		.uleb128 0x3
 4145 0046 08       		.byte	0x8
 4146 0047 04       		.byte	0x4
 4147 0048 DD060000 		.4byte	.LASF2
 4148 004c 03       		.uleb128 0x3
 4149 004d 01       		.byte	0x1
 4150 004e 06       		.byte	0x6
 4151 004f 56010000 		.4byte	.LASF3
 4152 0053 02       		.uleb128 0x2
 4153 0054 A3000000 		.4byte	.LASF5
 4154 0058 04       		.byte	0x4
 4155 0059 1D       		.byte	0x1d
 4156 005a 5E000000 		.4byte	0x5e
 4157 005e 03       		.uleb128 0x3
 4158 005f 01       		.byte	0x1
 4159 0060 08       		.byte	0x8
 4160 0061 E9080000 		.4byte	.LASF6
 4161 0065 03       		.uleb128 0x3
 4162 0066 02       		.byte	0x2
 4163 0067 05       		.byte	0x5
 4164 0068 9D020000 		.4byte	.LASF7
 4165 006c 02       		.uleb128 0x2
 4166 006d 62030000 		.4byte	.LASF8
 4167 0071 04       		.byte	0x4
 4168 0072 2B       		.byte	0x2b
 4169 0073 77000000 		.4byte	0x77
 4170 0077 03       		.uleb128 0x3
 4171 0078 02       		.byte	0x2
 4172 0079 07       		.byte	0x7
 4173 007a 10050000 		.4byte	.LASF9
 4174 007e 02       		.uleb128 0x2
 4175 007f D50B0000 		.4byte	.LASF10
 4176 0083 04       		.byte	0x4
 4177 0084 3F       		.byte	0x3f
 4178 0085 89000000 		.4byte	0x89
 4179 0089 03       		.uleb128 0x3
 4180 008a 04       		.byte	0x4
 4181 008b 05       		.byte	0x5
 4182 008c F1010000 		.4byte	.LASF11
 4183 0090 02       		.uleb128 0x2
 4184 0091 F9030000 		.4byte	.LASF12
 4185 0095 04       		.byte	0x4
 4186 0096 41       		.byte	0x41
 4187 0097 9B000000 		.4byte	0x9b
 4188 009b 03       		.uleb128 0x3
 4189 009c 04       		.byte	0x4
 4190 009d 07       		.byte	0x7
 4191 009e 9A040000 		.4byte	.LASF13
 4192 00a2 03       		.uleb128 0x3
 4193 00a3 08       		.byte	0x8
 4194 00a4 07       		.byte	0x7
 4195 00a5 B3010000 		.4byte	.LASF14
 4196 00a9 03       		.uleb128 0x3
 4197 00aa 04       		.byte	0x4
 4198 00ab 07       		.byte	0x7
 4199 00ac D4060000 		.4byte	.LASF15
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 182


 4200 00b0 05       		.uleb128 0x5
 4201 00b1 04       		.byte	0x4
 4202 00b2 06       		.uleb128 0x6
 4203 00b3 04       		.byte	0x4
 4204 00b4 B8000000 		.4byte	0xb8
 4205 00b8 03       		.uleb128 0x3
 4206 00b9 01       		.byte	0x1
 4207 00ba 08       		.byte	0x8
 4208 00bb 4D0B0000 		.4byte	.LASF16
 4209 00bf 06       		.uleb128 0x6
 4210 00c0 04       		.byte	0x4
 4211 00c1 C5000000 		.4byte	0xc5
 4212 00c5 07       		.uleb128 0x7
 4213 00c6 B8000000 		.4byte	0xb8
 4214 00ca 02       		.uleb128 0x2
 4215 00cb 700D0000 		.4byte	.LASF17
 4216 00cf 05       		.byte	0x5
 4217 00d0 18       		.byte	0x18
 4218 00d1 53000000 		.4byte	0x53
 4219 00d5 02       		.uleb128 0x2
 4220 00d6 C9020000 		.4byte	.LASF18
 4221 00da 05       		.byte	0x5
 4222 00db 24       		.byte	0x24
 4223 00dc 6C000000 		.4byte	0x6c
 4224 00e0 02       		.uleb128 0x2
 4225 00e1 E1080000 		.4byte	.LASF19
 4226 00e5 05       		.byte	0x5
 4227 00e6 2C       		.byte	0x2c
 4228 00e7 7E000000 		.4byte	0x7e
 4229 00eb 02       		.uleb128 0x2
 4230 00ec BB0E0000 		.4byte	.LASF20
 4231 00f0 05       		.byte	0x5
 4232 00f1 30       		.byte	0x30
 4233 00f2 90000000 		.4byte	0x90
 4234 00f6 03       		.uleb128 0x3
 4235 00f7 04       		.byte	0x4
 4236 00f8 04       		.byte	0x4
 4237 00f9 7E080000 		.4byte	.LASF21
 4238 00fd 03       		.uleb128 0x3
 4239 00fe 08       		.byte	0x8
 4240 00ff 04       		.byte	0x4
 4241 0100 D2020000 		.4byte	.LASF22
 4242 0104 08       		.uleb128 0x8
 4243 0105 EB000000 		.4byte	0xeb
 4244 0109 08       		.uleb128 0x8
 4245 010a CA000000 		.4byte	0xca
 4246 010e 02       		.uleb128 0x2
 4247 010f 89090000 		.4byte	.LASF23
 4248 0113 06       		.byte	0x6
 4249 0114 22       		.byte	0x22
 4250 0115 19010000 		.4byte	0x119
 4251 0119 06       		.uleb128 0x6
 4252 011a 04       		.byte	0x4
 4253 011b 1F010000 		.4byte	0x11f
 4254 011f 09       		.uleb128 0x9
 4255 0120 2A010000 		.4byte	0x12a
 4256 0124 0A       		.uleb128 0xa
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 183


 4257 0125 B0000000 		.4byte	0xb0
 4258 0129 00       		.byte	0
 4259 012a 02       		.uleb128 0x2
 4260 012b 23050000 		.4byte	.LASF24
 4261 012f 02       		.byte	0x2
 4262 0130 37       		.byte	0x37
 4263 0131 EB000000 		.4byte	0xeb
 4264 0135 02       		.uleb128 0x2
 4265 0136 F7020000 		.4byte	.LASF25
 4266 013a 02       		.byte	0x2
 4267 013b 38       		.byte	0x38
 4268 013c 89000000 		.4byte	0x89
 4269 0140 02       		.uleb128 0x2
 4270 0141 AF0E0000 		.4byte	.LASF26
 4271 0145 02       		.byte	0x2
 4272 0146 39       		.byte	0x39
 4273 0147 9B000000 		.4byte	0x9b
 4274 014b 02       		.uleb128 0x2
 4275 014c 92020000 		.4byte	.LASF27
 4276 0150 02       		.byte	0x2
 4277 0151 3F       		.byte	0x3f
 4278 0152 EB000000 		.4byte	0xeb
 4279 0156 0B       		.uleb128 0xb
 4280 0157 B0000000 		.4byte	0xb0
 4281 015b 66010000 		.4byte	0x166
 4282 015f 0C       		.uleb128 0xc
 4283 0160 A9000000 		.4byte	0xa9
 4284 0164 04       		.byte	0x4
 4285 0165 00       		.byte	0
 4286 0166 0D       		.uleb128 0xd
 4287 0167 220E0000 		.4byte	.LASF33
 4288 016b 14       		.byte	0x14
 4289 016c 07       		.byte	0x7
 4290 016d 8E       		.byte	0x8e
 4291 016e AF010000 		.4byte	0x1af
 4292 0172 0E       		.uleb128 0xe
 4293 0173 8B0B0000 		.4byte	.LASF28
 4294 0177 07       		.byte	0x7
 4295 0178 91       		.byte	0x91
 4296 0179 4B010000 		.4byte	0x14b
 4297 017d 00       		.byte	0
 4298 017e 0E       		.uleb128 0xe
 4299 017f A70D0000 		.4byte	.LASF29
 4300 0183 07       		.byte	0x7
 4301 0184 92       		.byte	0x92
 4302 0185 AF010000 		.4byte	0x1af
 4303 0189 04       		.byte	0x4
 4304 018a 0E       		.uleb128 0xe
 4305 018b 5D080000 		.4byte	.LASF30
 4306 018f 07       		.byte	0x7
 4307 0190 93       		.byte	0x93
 4308 0191 AF010000 		.4byte	0x1af
 4309 0195 08       		.byte	0x8
 4310 0196 0E       		.uleb128 0xe
 4311 0197 F20C0000 		.4byte	.LASF31
 4312 019b 07       		.byte	0x7
 4313 019c 94       		.byte	0x94
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 184


 4314 019d B0000000 		.4byte	0xb0
 4315 01a1 0C       		.byte	0xc
 4316 01a2 0E       		.uleb128 0xe
 4317 01a3 B6080000 		.4byte	.LASF32
 4318 01a7 07       		.byte	0x7
 4319 01a8 95       		.byte	0x95
 4320 01a9 E6010000 		.4byte	0x1e6
 4321 01ad 10       		.byte	0x10
 4322 01ae 00       		.byte	0
 4323 01af 06       		.uleb128 0x6
 4324 01b0 04       		.byte	0x4
 4325 01b1 66010000 		.4byte	0x166
 4326 01b5 0D       		.uleb128 0xd
 4327 01b6 98090000 		.4byte	.LASF34
 4328 01ba 14       		.byte	0x14
 4329 01bb 07       		.byte	0x7
 4330 01bc A6       		.byte	0xa6
 4331 01bd E6010000 		.4byte	0x1e6
 4332 01c1 0E       		.uleb128 0xe
 4333 01c2 8A040000 		.4byte	.LASF35
 4334 01c6 07       		.byte	0x7
 4335 01c7 A9       		.byte	0xa9
 4336 01c8 33020000 		.4byte	0x233
 4337 01cc 00       		.byte	0
 4338 01cd 0E       		.uleb128 0xe
 4339 01ce 9B080000 		.4byte	.LASF36
 4340 01d2 07       		.byte	0x7
 4341 01d3 AA       		.byte	0xaa
 4342 01d4 38020000 		.4byte	0x238
 4343 01d8 04       		.byte	0x4
 4344 01d9 0E       		.uleb128 0xe
 4345 01da 18010000 		.4byte	.LASF37
 4346 01de 07       		.byte	0x7
 4347 01df AB       		.byte	0xab
 4348 01e0 28020000 		.4byte	0x228
 4349 01e4 08       		.byte	0x8
 4350 01e5 00       		.byte	0
 4351 01e6 06       		.uleb128 0x6
 4352 01e7 04       		.byte	0x4
 4353 01e8 B5010000 		.4byte	0x1b5
 4354 01ec 02       		.uleb128 0x2
 4355 01ed 2F080000 		.4byte	.LASF38
 4356 01f1 07       		.byte	0x7
 4357 01f2 98       		.byte	0x98
 4358 01f3 66010000 		.4byte	0x166
 4359 01f7 0D       		.uleb128 0xd
 4360 01f8 38010000 		.4byte	.LASF39
 4361 01fc 0C       		.byte	0xc
 4362 01fd 07       		.byte	0x7
 4363 01fe 9A       		.byte	0x9a
 4364 01ff 28020000 		.4byte	0x228
 4365 0203 0E       		.uleb128 0xe
 4366 0204 8B0B0000 		.4byte	.LASF28
 4367 0208 07       		.byte	0x7
 4368 0209 9D       		.byte	0x9d
 4369 020a 4B010000 		.4byte	0x14b
 4370 020e 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 185


 4371 020f 0E       		.uleb128 0xe
 4372 0210 A70D0000 		.4byte	.LASF29
 4373 0214 07       		.byte	0x7
 4374 0215 9E       		.byte	0x9e
 4375 0216 AF010000 		.4byte	0x1af
 4376 021a 04       		.byte	0x4
 4377 021b 0E       		.uleb128 0xe
 4378 021c 5D080000 		.4byte	.LASF30
 4379 0220 07       		.byte	0x7
 4380 0221 9F       		.byte	0x9f
 4381 0222 AF010000 		.4byte	0x1af
 4382 0226 08       		.byte	0x8
 4383 0227 00       		.byte	0
 4384 0228 02       		.uleb128 0x2
 4385 0229 43000000 		.4byte	.LASF40
 4386 022d 07       		.byte	0x7
 4387 022e A1       		.byte	0xa1
 4388 022f F7010000 		.4byte	0x1f7
 4389 0233 08       		.uleb128 0x8
 4390 0234 40010000 		.4byte	0x140
 4391 0238 06       		.uleb128 0x6
 4392 0239 04       		.byte	0x4
 4393 023a EC010000 		.4byte	0x1ec
 4394 023e 02       		.uleb128 0x2
 4395 023f 3E060000 		.4byte	.LASF41
 4396 0243 07       		.byte	0x7
 4397 0244 AD       		.byte	0xad
 4398 0245 B5010000 		.4byte	0x1b5
 4399 0249 02       		.uleb128 0x2
 4400 024a 85020000 		.4byte	.LASF42
 4401 024e 08       		.byte	0x8
 4402 024f 4E       		.byte	0x4e
 4403 0250 54020000 		.4byte	0x254
 4404 0254 06       		.uleb128 0x6
 4405 0255 04       		.byte	0x4
 4406 0256 5A020000 		.4byte	0x25a
 4407 025a 0D       		.uleb128 0xd
 4408 025b FA010000 		.4byte	.LASF43
 4409 025f 60       		.byte	0x60
 4410 0260 01       		.byte	0x1
 4411 0261 FD       		.byte	0xfd
 4412 0262 DB020000 		.4byte	0x2db
 4413 0266 0E       		.uleb128 0xe
 4414 0267 BA040000 		.4byte	.LASF44
 4415 026b 01       		.byte	0x1
 4416 026c FF       		.byte	0xff
 4417 026d 88030000 		.4byte	0x388
 4418 0271 00       		.byte	0
 4419 0272 0F       		.uleb128 0xf
 4420 0273 CA010000 		.4byte	.LASF45
 4421 0277 01       		.byte	0x1
 4422 0278 0501     		.2byte	0x105
 4423 027a EC010000 		.4byte	0x1ec
 4424 027e 04       		.byte	0x4
 4425 027f 0F       		.uleb128 0xf
 4426 0280 6B070000 		.4byte	.LASF46
 4427 0284 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 186


 4428 0285 0601     		.2byte	0x106
 4429 0287 EC010000 		.4byte	0x1ec
 4430 028b 18       		.byte	0x18
 4431 028c 0F       		.uleb128 0xf
 4432 028d 2D0E0000 		.4byte	.LASF47
 4433 0291 01       		.byte	0x1
 4434 0292 0701     		.2byte	0x107
 4435 0294 40010000 		.4byte	0x140
 4436 0298 2C       		.byte	0x2c
 4437 0299 0F       		.uleb128 0xf
 4438 029a 89060000 		.4byte	.LASF48
 4439 029e 01       		.byte	0x1
 4440 029f 0801     		.2byte	0x108
 4441 02a1 82030000 		.4byte	0x382
 4442 02a5 30       		.byte	0x30
 4443 02a6 0F       		.uleb128 0xf
 4444 02a7 650D0000 		.4byte	.LASF49
 4445 02ab 01       		.byte	0x1
 4446 02ac 0901     		.2byte	0x109
 4447 02ae 93030000 		.4byte	0x393
 4448 02b2 34       		.byte	0x34
 4449 02b3 0F       		.uleb128 0xf
 4450 02b4 66050000 		.4byte	.LASF50
 4451 02b8 01       		.byte	0x1
 4452 02b9 2201     		.2byte	0x122
 4453 02bb 56010000 		.4byte	0x156
 4454 02bf 44       		.byte	0x44
 4455 02c0 0F       		.uleb128 0xf
 4456 02c1 F7080000 		.4byte	.LASF51
 4457 02c5 01       		.byte	0x1
 4458 02c6 3901     		.2byte	0x139
 4459 02c8 B3030000 		.4byte	0x3b3
 4460 02cc 58       		.byte	0x58
 4461 02cd 0F       		.uleb128 0xf
 4462 02ce DE030000 		.4byte	.LASF52
 4463 02d2 01       		.byte	0x1
 4464 02d3 3A01     		.2byte	0x13a
 4465 02d5 C8030000 		.4byte	0x3c8
 4466 02d9 5C       		.byte	0x5c
 4467 02da 00       		.byte	0
 4468 02db 10       		.uleb128 0x10
 4469 02dc 01       		.byte	0x1
 4470 02dd 5E000000 		.4byte	0x5e
 4471 02e1 08       		.byte	0x8
 4472 02e2 63       		.byte	0x63
 4473 02e3 06030000 		.4byte	0x306
 4474 02e7 11       		.uleb128 0x11
 4475 02e8 9D0D0000 		.4byte	.LASF53
 4476 02ec 00       		.byte	0
 4477 02ed 11       		.uleb128 0x11
 4478 02ee 3F020000 		.4byte	.LASF54
 4479 02f2 01       		.byte	0x1
 4480 02f3 11       		.uleb128 0x11
 4481 02f4 7E060000 		.4byte	.LASF55
 4482 02f8 02       		.byte	0x2
 4483 02f9 11       		.uleb128 0x11
 4484 02fa 8F070000 		.4byte	.LASF56
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 187


 4485 02fe 03       		.byte	0x3
 4486 02ff 11       		.uleb128 0x11
 4487 0300 4B0D0000 		.4byte	.LASF57
 4488 0304 04       		.byte	0x4
 4489 0305 00       		.byte	0
 4490 0306 02       		.uleb128 0x2
 4491 0307 DE0D0000 		.4byte	.LASF58
 4492 030b 08       		.byte	0x8
 4493 030c 69       		.byte	0x69
 4494 030d DB020000 		.4byte	0x2db
 4495 0311 0D       		.uleb128 0xd
 4496 0312 2E010000 		.4byte	.LASF59
 4497 0316 08       		.byte	0x8
 4498 0317 08       		.byte	0x8
 4499 0318 6E       		.byte	0x6e
 4500 0319 36030000 		.4byte	0x336
 4501 031d 0E       		.uleb128 0xe
 4502 031e 98030000 		.4byte	.LASF60
 4503 0322 08       		.byte	0x8
 4504 0323 70       		.byte	0x70
 4505 0324 35010000 		.4byte	0x135
 4506 0328 00       		.byte	0
 4507 0329 0E       		.uleb128 0xe
 4508 032a 120E0000 		.4byte	.LASF61
 4509 032e 08       		.byte	0x8
 4510 032f 71       		.byte	0x71
 4511 0330 4B010000 		.4byte	0x14b
 4512 0334 04       		.byte	0x4
 4513 0335 00       		.byte	0
 4514 0336 02       		.uleb128 0x2
 4515 0337 52000000 		.4byte	.LASF62
 4516 033b 08       		.byte	0x8
 4517 033c 72       		.byte	0x72
 4518 033d 11030000 		.4byte	0x311
 4519 0341 0D       		.uleb128 0xd
 4520 0342 C2080000 		.4byte	.LASF63
 4521 0346 0C       		.byte	0xc
 4522 0347 08       		.byte	0x8
 4523 0348 77       		.byte	0x77
 4524 0349 72030000 		.4byte	0x372
 4525 034d 0E       		.uleb128 0xe
 4526 034e E60E0000 		.4byte	.LASF64
 4527 0352 08       		.byte	0x8
 4528 0353 79       		.byte	0x79
 4529 0354 B0000000 		.4byte	0xb0
 4530 0358 00       		.byte	0
 4531 0359 0E       		.uleb128 0xe
 4532 035a 0F080000 		.4byte	.LASF65
 4533 035e 08       		.byte	0x8
 4534 035f 7A       		.byte	0x7a
 4535 0360 EB000000 		.4byte	0xeb
 4536 0364 04       		.byte	0x4
 4537 0365 0E       		.uleb128 0xe
 4538 0366 F60A0000 		.4byte	.LASF66
 4539 036a 08       		.byte	0x8
 4540 036b 7B       		.byte	0x7b
 4541 036c EB000000 		.4byte	0xeb
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 188


 4542 0370 08       		.byte	0x8
 4543 0371 00       		.byte	0
 4544 0372 02       		.uleb128 0x2
 4545 0373 A7020000 		.4byte	.LASF67
 4546 0377 08       		.byte	0x8
 4547 0378 7C       		.byte	0x7c
 4548 0379 41030000 		.4byte	0x341
 4549 037d 07       		.uleb128 0x7
 4550 037e BF000000 		.4byte	0xbf
 4551 0382 06       		.uleb128 0x6
 4552 0383 04       		.byte	0x4
 4553 0384 2A010000 		.4byte	0x12a
 4554 0388 06       		.uleb128 0x6
 4555 0389 04       		.byte	0x4
 4556 038a 8E030000 		.4byte	0x38e
 4557 038e 08       		.uleb128 0x8
 4558 038f 2A010000 		.4byte	0x12a
 4559 0393 0B       		.uleb128 0xb
 4560 0394 B8000000 		.4byte	0xb8
 4561 0398 A3030000 		.4byte	0x3a3
 4562 039c 0C       		.uleb128 0xc
 4563 039d A9000000 		.4byte	0xa9
 4564 03a1 0F       		.byte	0xf
 4565 03a2 00       		.byte	0
 4566 03a3 0B       		.uleb128 0xb
 4567 03a4 04010000 		.4byte	0x104
 4568 03a8 B3030000 		.4byte	0x3b3
 4569 03ac 0C       		.uleb128 0xc
 4570 03ad A9000000 		.4byte	0xa9
 4571 03b1 00       		.byte	0
 4572 03b2 00       		.byte	0
 4573 03b3 08       		.uleb128 0x8
 4574 03b4 A3030000 		.4byte	0x3a3
 4575 03b8 0B       		.uleb128 0xb
 4576 03b9 09010000 		.4byte	0x109
 4577 03bd C8030000 		.4byte	0x3c8
 4578 03c1 0C       		.uleb128 0xc
 4579 03c2 A9000000 		.4byte	0xa9
 4580 03c6 00       		.byte	0
 4581 03c7 00       		.byte	0
 4582 03c8 08       		.uleb128 0x8
 4583 03c9 B8030000 		.4byte	0x3b8
 4584 03cd 12       		.uleb128 0x12
 4585 03ce FD040000 		.4byte	.LASF68
 4586 03d2 01       		.byte	0x1
 4587 03d3 4A01     		.2byte	0x14a
 4588 03d5 5A020000 		.4byte	0x25a
 4589 03d9 12       		.uleb128 0x12
 4590 03da 1D090000 		.4byte	.LASF69
 4591 03de 01       		.byte	0x1
 4592 03df 4E01     		.2byte	0x14e
 4593 03e1 CD030000 		.4byte	0x3cd
 4594 03e5 13       		.uleb128 0x13
 4595 03e6 58070000 		.4byte	.LASF226
 4596 03ea 02       		.byte	0x2
 4597 03eb D3       		.byte	0xd3
 4598 03ec EB000000 		.4byte	0xeb
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 189


 4599 03f0 03       		.byte	0x3
 4600 03f1 0C040000 		.4byte	0x40c
 4601 03f5 14       		.uleb128 0x14
 4602 03f6 16000000 		.4byte	.LASF70
 4603 03fa 02       		.byte	0x2
 4604 03fb D5       		.byte	0xd5
 4605 03fc EB000000 		.4byte	0xeb
 4606 0400 14       		.uleb128 0x14
 4607 0401 E5000000 		.4byte	.LASF71
 4608 0405 02       		.byte	0x2
 4609 0406 D5       		.byte	0xd5
 4610 0407 EB000000 		.4byte	0xeb
 4611 040b 00       		.byte	0
 4612 040c 15       		.uleb128 0x15
 4613 040d 1F080000 		.4byte	.LASF72
 4614 0411 02       		.byte	0x2
 4615 0412 E7       		.byte	0xe7
 4616 0413 03       		.byte	0x3
 4617 0414 24040000 		.4byte	0x424
 4618 0418 16       		.uleb128 0x16
 4619 0419 1F0B0000 		.4byte	.LASF227
 4620 041d 02       		.byte	0x2
 4621 041e E7       		.byte	0xe7
 4622 041f EB000000 		.4byte	0xeb
 4623 0423 00       		.byte	0
 4624 0424 15       		.uleb128 0x15
 4625 0425 2C060000 		.4byte	.LASF73
 4626 0429 02       		.byte	0x2
 4627 042a C3       		.byte	0xc3
 4628 042b 03       		.byte	0x3
 4629 042c 3C040000 		.4byte	0x43c
 4630 0430 14       		.uleb128 0x14
 4631 0431 E5000000 		.4byte	.LASF71
 4632 0435 02       		.byte	0x2
 4633 0436 C5       		.byte	0xc5
 4634 0437 EB000000 		.4byte	0xeb
 4635 043b 00       		.byte	0
 4636 043c 17       		.uleb128 0x17
 4637 043d 860D0000 		.4byte	.LASF89
 4638 0441 01       		.byte	0x1
 4639 0442 0D07     		.2byte	0x70d
 4640 0444 35010000 		.4byte	0x135
 4641 0448 00000000 		.4byte	.LFB77
 4642 044c 2C000000 		.4byte	.LFE77-.LFB77
 4643 0450 01       		.uleb128 0x1
 4644 0451 9C       		.byte	0x9c
 4645 0452 87040000 		.4byte	0x487
 4646 0456 18       		.uleb128 0x18
 4647 0457 F00A0000 		.4byte	.LASF76
 4648 045b 01       		.byte	0x1
 4649 045c 0D07     		.2byte	0x70d
 4650 045e 87040000 		.4byte	0x487
 4651 0462 00000000 		.4byte	.LLST0
 4652 0466 19       		.uleb128 0x19
 4653 0467 33040000 		.4byte	.LASF74
 4654 046b 01       		.byte	0x1
 4655 046c 0F07     		.2byte	0x70f
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 190


 4656 046e 35010000 		.4byte	0x135
 4657 0472 6C000000 		.4byte	.LLST1
 4658 0476 19       		.uleb128 0x19
 4659 0477 2F050000 		.4byte	.LASF75
 4660 047b 01       		.byte	0x1
 4661 047c 1007     		.2byte	0x710
 4662 047e 97040000 		.4byte	0x497
 4663 0482 8B000000 		.4byte	.LLST2
 4664 0486 00       		.byte	0
 4665 0487 07       		.uleb128 0x7
 4666 0488 49020000 		.4byte	0x249
 4667 048c 06       		.uleb128 0x6
 4668 048d 04       		.byte	0x4
 4669 048e 92040000 		.4byte	0x492
 4670 0492 07       		.uleb128 0x7
 4671 0493 D9030000 		.4byte	0x3d9
 4672 0497 07       		.uleb128 0x7
 4673 0498 8C040000 		.4byte	0x48c
 4674 049c 1A       		.uleb128 0x1a
 4675 049d 46030000 		.4byte	.LASF228
 4676 04a1 01       		.byte	0x1
 4677 04a2 840F     		.2byte	0xf84
 4678 04a4 00000000 		.4byte	.LFB106
 4679 04a8 24000000 		.4byte	.LFE106-.LFB106
 4680 04ac 01       		.uleb128 0x1
 4681 04ad 9C       		.byte	0x9c
 4682 04ae 1B       		.uleb128 0x1b
 4683 04af 45060000 		.4byte	.LASF77
 4684 04b3 01       		.byte	0x1
 4685 04b4 4C0F     		.2byte	0xf4c
 4686 04b6 00000000 		.4byte	.LFB105
 4687 04ba 12000000 		.4byte	.LFE105-.LFB105
 4688 04be 01       		.uleb128 0x1
 4689 04bf 9C       		.byte	0x9c
 4690 04c0 EE040000 		.4byte	0x4ee
 4691 04c4 18       		.uleb128 0x18
 4692 04c5 2F050000 		.4byte	.LASF75
 4693 04c9 01       		.byte	0x1
 4694 04ca 4C0F     		.2byte	0xf4c
 4695 04cc EE040000 		.4byte	0x4ee
 4696 04d0 F7000000 		.4byte	.LLST3
 4697 04d4 1C       		.uleb128 0x1c
 4698 04d5 0A000000 		.4byte	.LVL10
 4699 04d9 981E0000 		.4byte	0x1e98
 4700 04dd 1D       		.uleb128 0x1d
 4701 04de 10000000 		.4byte	.LVL11
 4702 04e2 981E0000 		.4byte	0x1e98
 4703 04e6 1E       		.uleb128 0x1e
 4704 04e7 01       		.uleb128 0x1
 4705 04e8 50       		.byte	0x50
 4706 04e9 02       		.uleb128 0x2
 4707 04ea 74       		.byte	0x74
 4708 04eb 00       		.sleb128 0
 4709 04ec 00       		.byte	0
 4710 04ed 00       		.byte	0
 4711 04ee 06       		.uleb128 0x6
 4712 04ef 04       		.byte	0x4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 191


 4713 04f0 D9030000 		.4byte	0x3d9
 4714 04f4 1B       		.uleb128 0x1b
 4715 04f5 580A0000 		.4byte	.LASF78
 4716 04f9 01       		.byte	0x1
 4717 04fa 2C03     		.2byte	0x32c
 4718 04fc 00000000 		.4byte	.LFB68
 4719 0500 8E000000 		.4byte	.LFE68-.LFB68
 4720 0504 01       		.uleb128 0x1
 4721 0505 9C       		.byte	0x9c
 4722 0506 E8050000 		.4byte	0x5e8
 4723 050a 18       		.uleb128 0x18
 4724 050b 39070000 		.4byte	.LASF79
 4725 050f 01       		.byte	0x1
 4726 0510 2C03     		.2byte	0x32c
 4727 0512 0E010000 		.4byte	0x10e
 4728 0516 15010000 		.4byte	.LLST4
 4729 051a 18       		.uleb128 0x18
 4730 051b 6D0E0000 		.4byte	.LASF80
 4731 051f 01       		.byte	0x1
 4732 0520 2D03     		.2byte	0x32d
 4733 0522 7D030000 		.4byte	0x37d
 4734 0526 5F010000 		.4byte	.LLST5
 4735 052a 18       		.uleb128 0x18
 4736 052b EC030000 		.4byte	.LASF81
 4737 052f 01       		.byte	0x1
 4738 0530 2E03     		.2byte	0x32e
 4739 0532 E8050000 		.4byte	0x5e8
 4740 0536 AC010000 		.4byte	.LLST6
 4741 053a 18       		.uleb128 0x18
 4742 053b C7040000 		.4byte	.LASF82
 4743 053f 01       		.byte	0x1
 4744 0540 2F03     		.2byte	0x32f
 4745 0542 ED050000 		.4byte	0x5ed
 4746 0546 EF010000 		.4byte	.LLST7
 4747 054a 18       		.uleb128 0x18
 4748 054b 2D0E0000 		.4byte	.LASF47
 4749 054f 01       		.byte	0x1
 4750 0550 3003     		.2byte	0x330
 4751 0552 40010000 		.4byte	0x140
 4752 0556 0D020000 		.4byte	.LLST8
 4753 055a 1F       		.uleb128 0x1f
 4754 055b 7C040000 		.4byte	.LASF83
 4755 055f 01       		.byte	0x1
 4756 0560 3103     		.2byte	0x331
 4757 0562 F8050000 		.4byte	0x5f8
 4758 0566 02       		.uleb128 0x2
 4759 0567 91       		.byte	0x91
 4760 0568 04       		.sleb128 4
 4761 0569 1F       		.uleb128 0x1f
 4762 056a 27020000 		.4byte	.LASF84
 4763 056e 01       		.byte	0x1
 4764 056f 3203     		.2byte	0x332
 4765 0571 EE040000 		.4byte	0x4ee
 4766 0575 02       		.uleb128 0x2
 4767 0576 91       		.byte	0x91
 4768 0577 08       		.sleb128 8
 4769 0578 1F       		.uleb128 0x1f
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 192


 4770 0579 E9060000 		.4byte	.LASF85
 4771 057d 01       		.byte	0x1
 4772 057e 3303     		.2byte	0x333
 4773 0580 08060000 		.4byte	0x608
 4774 0584 02       		.uleb128 0x2
 4775 0585 91       		.byte	0x91
 4776 0586 0C       		.sleb128 12
 4777 0587 20       		.uleb128 0x20
 4778 0588 BA040000 		.4byte	.LASF44
 4779 058c 01       		.byte	0x1
 4780 058d 3503     		.2byte	0x335
 4781 058f 82030000 		.4byte	0x382
 4782 0593 01       		.uleb128 0x1
 4783 0594 56       		.byte	0x56
 4784 0595 21       		.uleb128 0x21
 4785 0596 7800     		.ascii	"x\000"
 4786 0598 01       		.byte	0x1
 4787 0599 3603     		.2byte	0x336
 4788 059b 40010000 		.4byte	0x140
 4789 059f 2C020000 		.4byte	.LLST9
 4790 05a3 22       		.uleb128 0x22
 4791 05a4 56000000 		.4byte	.LVL26
 4792 05a8 A31E0000 		.4byte	0x1ea3
 4793 05ac B7050000 		.4byte	0x5b7
 4794 05b0 1E       		.uleb128 0x1e
 4795 05b1 01       		.uleb128 0x1
 4796 05b2 50       		.byte	0x50
 4797 05b3 02       		.uleb128 0x2
 4798 05b4 74       		.byte	0x74
 4799 05b5 04       		.sleb128 4
 4800 05b6 00       		.byte	0
 4801 05b7 22       		.uleb128 0x22
 4802 05b8 5E000000 		.4byte	.LVL27
 4803 05bc A31E0000 		.4byte	0x1ea3
 4804 05c0 CB050000 		.4byte	0x5cb
 4805 05c4 1E       		.uleb128 0x1e
 4806 05c5 01       		.uleb128 0x1
 4807 05c6 50       		.byte	0x50
 4808 05c7 02       		.uleb128 0x2
 4809 05c8 74       		.byte	0x74
 4810 05c9 18       		.sleb128 24
 4811 05ca 00       		.byte	0
 4812 05cb 1D       		.uleb128 0x1d
 4813 05cc 84000000 		.4byte	.LVL29
 4814 05d0 AF1E0000 		.4byte	0x1eaf
 4815 05d4 1E       		.uleb128 0x1e
 4816 05d5 01       		.uleb128 0x1
 4817 05d6 50       		.byte	0x50
 4818 05d7 02       		.uleb128 0x2
 4819 05d8 76       		.byte	0x76
 4820 05d9 00       		.sleb128 0
 4821 05da 1E       		.uleb128 0x1e
 4822 05db 01       		.uleb128 0x1
 4823 05dc 51       		.byte	0x51
 4824 05dd 02       		.uleb128 0x2
 4825 05de 78       		.byte	0x78
 4826 05df 00       		.sleb128 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 193


 4827 05e0 1E       		.uleb128 0x1e
 4828 05e1 01       		.uleb128 0x1
 4829 05e2 52       		.byte	0x52
 4830 05e3 02       		.uleb128 0x2
 4831 05e4 79       		.byte	0x79
 4832 05e5 00       		.sleb128 0
 4833 05e6 00       		.byte	0
 4834 05e7 00       		.byte	0
 4835 05e8 07       		.uleb128 0x7
 4836 05e9 EB000000 		.4byte	0xeb
 4837 05ed 07       		.uleb128 0x7
 4838 05ee B0000000 		.4byte	0xb0
 4839 05f2 06       		.uleb128 0x6
 4840 05f3 04       		.byte	0x4
 4841 05f4 49020000 		.4byte	0x249
 4842 05f8 07       		.uleb128 0x7
 4843 05f9 F2050000 		.4byte	0x5f2
 4844 05fd 06       		.uleb128 0x6
 4845 05fe 04       		.byte	0x4
 4846 05ff 03060000 		.4byte	0x603
 4847 0603 07       		.uleb128 0x7
 4848 0604 72030000 		.4byte	0x372
 4849 0608 07       		.uleb128 0x7
 4850 0609 FD050000 		.4byte	0x5fd
 4851 060d 1B       		.uleb128 0x1b
 4852 060e F40E0000 		.4byte	.LASF86
 4853 0612 01       		.byte	0x1
 4854 0613 300E     		.2byte	0xe30
 4855 0615 00000000 		.4byte	.LFB103
 4856 0619 58000000 		.4byte	.LFE103-.LFB103
 4857 061d 01       		.uleb128 0x1
 4858 061e 9C       		.byte	0x9c
 4859 061f B6060000 		.4byte	0x6b6
 4860 0623 19       		.uleb128 0x19
 4861 0624 2D0E0000 		.4byte	.LASF47
 4862 0628 01       		.byte	0x1
 4863 0629 320E     		.2byte	0xe32
 4864 062b 40010000 		.4byte	0x140
 4865 062f 4A020000 		.4byte	.LLST10
 4866 0633 22       		.uleb128 0x22
 4867 0634 14000000 		.4byte	.LVL32
 4868 0638 BA1E0000 		.4byte	0x1eba
 4869 063c 54060000 		.4byte	0x654
 4870 0640 1E       		.uleb128 0x1e
 4871 0641 01       		.uleb128 0x1
 4872 0642 50       		.byte	0x50
 4873 0643 0F       		.uleb128 0xf
 4874 0644 74       		.byte	0x74
 4875 0645 00       		.sleb128 0
 4876 0646 32       		.byte	0x32
 4877 0647 24       		.byte	0x24
 4878 0648 74       		.byte	0x74
 4879 0649 00       		.sleb128 0
 4880 064a 22       		.byte	0x22
 4881 064b 32       		.byte	0x32
 4882 064c 24       		.byte	0x24
 4883 064d 03       		.byte	0x3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 194


 4884 064e 30000000 		.4byte	.LANCHOR0+48
 4885 0652 22       		.byte	0x22
 4886 0653 00       		.byte	0
 4887 0654 22       		.uleb128 0x22
 4888 0655 26000000 		.4byte	.LVL35
 4889 0659 BA1E0000 		.4byte	0x1eba
 4890 065d 68060000 		.4byte	0x668
 4891 0661 1E       		.uleb128 0x1e
 4892 0662 01       		.uleb128 0x1
 4893 0663 50       		.byte	0x50
 4894 0664 02       		.uleb128 0x2
 4895 0665 76       		.byte	0x76
 4896 0666 00       		.sleb128 0
 4897 0667 00       		.byte	0
 4898 0668 22       		.uleb128 0x22
 4899 0669 30000000 		.4byte	.LVL36
 4900 066d BA1E0000 		.4byte	0x1eba
 4901 0671 7C060000 		.4byte	0x67c
 4902 0675 1E       		.uleb128 0x1e
 4903 0676 01       		.uleb128 0x1
 4904 0677 50       		.byte	0x50
 4905 0678 02       		.uleb128 0x2
 4906 0679 75       		.byte	0x75
 4907 067a 00       		.sleb128 0
 4908 067b 00       		.byte	0
 4909 067c 22       		.uleb128 0x22
 4910 067d 38000000 		.4byte	.LVL37
 4911 0681 BA1E0000 		.4byte	0x1eba
 4912 0685 90060000 		.4byte	0x690
 4913 0689 1E       		.uleb128 0x1e
 4914 068a 01       		.uleb128 0x1
 4915 068b 50       		.byte	0x50
 4916 068c 02       		.uleb128 0x2
 4917 068d 74       		.byte	0x74
 4918 068e 14       		.sleb128 20
 4919 068f 00       		.byte	0
 4920 0690 22       		.uleb128 0x22
 4921 0691 40000000 		.4byte	.LVL38
 4922 0695 BA1E0000 		.4byte	0x1eba
 4923 0699 A5060000 		.4byte	0x6a5
 4924 069d 1E       		.uleb128 0x1e
 4925 069e 01       		.uleb128 0x1
 4926 069f 50       		.byte	0x50
 4927 06a0 03       		.uleb128 0x3
 4928 06a1 74       		.byte	0x74
 4929 06a2 BC01     		.sleb128 188
 4930 06a4 00       		.byte	0
 4931 06a5 1D       		.uleb128 0x1d
 4932 06a6 46000000 		.4byte	.LVL39
 4933 06aa BA1E0000 		.4byte	0x1eba
 4934 06ae 1E       		.uleb128 0x1e
 4935 06af 01       		.uleb128 0x1
 4936 06b0 50       		.byte	0x50
 4937 06b1 02       		.uleb128 0x2
 4938 06b2 74       		.byte	0x74
 4939 06b3 00       		.sleb128 0
 4940 06b4 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 195


 4941 06b5 00       		.byte	0
 4942 06b6 1B       		.uleb128 0x1b
 4943 06b7 CC050000 		.4byte	.LASF87
 4944 06bb 01       		.byte	0x1
 4945 06bc 2704     		.2byte	0x427
 4946 06be 00000000 		.4byte	.LFB69
 4947 06c2 AC000000 		.4byte	.LFE69-.LFB69
 4948 06c6 01       		.uleb128 0x1
 4949 06c7 9C       		.byte	0x9c
 4950 06c8 0C070000 		.4byte	0x70c
 4951 06cc 18       		.uleb128 0x18
 4952 06cd 27020000 		.4byte	.LASF84
 4953 06d1 01       		.byte	0x1
 4954 06d2 2704     		.2byte	0x427
 4955 06d4 EE040000 		.4byte	0x4ee
 4956 06d8 69020000 		.4byte	.LLST11
 4957 06dc 1C       		.uleb128 0x1c
 4958 06dd 08000000 		.4byte	.LVL41
 4959 06e1 C61E0000 		.4byte	0x1ec6
 4960 06e5 1C       		.uleb128 0x1c
 4961 06e6 2C000000 		.4byte	.LVL42
 4962 06ea 0D060000 		.4byte	0x60d
 4963 06ee 22       		.uleb128 0x22
 4964 06ef 7A000000 		.4byte	.LVL43
 4965 06f3 D11E0000 		.4byte	0x1ed1
 4966 06f7 02070000 		.4byte	0x702
 4967 06fb 1E       		.uleb128 0x1e
 4968 06fc 01       		.uleb128 0x1
 4969 06fd 51       		.byte	0x51
 4970 06fe 02       		.uleb128 0x2
 4971 06ff 74       		.byte	0x74
 4972 0700 04       		.sleb128 4
 4973 0701 00       		.byte	0
 4974 0702 1C       		.uleb128 0x1c
 4975 0703 7E000000 		.4byte	.LVL44
 4976 0707 DD1E0000 		.4byte	0x1edd
 4977 070b 00       		.byte	0
 4978 070c 1B       		.uleb128 0x1b
 4979 070d D00A0000 		.4byte	.LASF88
 4980 0711 01       		.byte	0x1
 4981 0712 500E     		.2byte	0xe50
 4982 0714 00000000 		.4byte	.LFB104
 4983 0718 44000000 		.4byte	.LFE104-.LFB104
 4984 071c 01       		.uleb128 0x1
 4985 071d 9C       		.byte	0x9c
 4986 071e 73070000 		.4byte	0x773
 4987 0722 23       		.uleb128 0x23
 4988 0723 02000000 		.4byte	.LBB22
 4989 0727 3C000000 		.4byte	.LBE22-.LBB22
 4990 072b 19       		.uleb128 0x19
 4991 072c 2F050000 		.4byte	.LASF75
 4992 0730 01       		.byte	0x1
 4993 0731 560E     		.2byte	0xe56
 4994 0733 EE040000 		.4byte	0x4ee
 4995 0737 95020000 		.4byte	.LLST12
 4996 073b 1C       		.uleb128 0x1c
 4997 073c 08000000 		.4byte	.LVL46
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 196


 4998 0740 C61E0000 		.4byte	0x1ec6
 4999 0744 22       		.uleb128 0x22
 5000 0745 16000000 		.4byte	.LVL48
 5001 0749 E81E0000 		.4byte	0x1ee8
 5002 074d 58070000 		.4byte	0x758
 5003 0751 1E       		.uleb128 0x1e
 5004 0752 01       		.uleb128 0x1
 5005 0753 50       		.byte	0x50
 5006 0754 02       		.uleb128 0x2
 5007 0755 75       		.byte	0x75
 5008 0756 04       		.sleb128 4
 5009 0757 00       		.byte	0
 5010 0758 1C       		.uleb128 0x1c
 5011 0759 2E000000 		.4byte	.LVL49
 5012 075d DD1E0000 		.4byte	0x1edd
 5013 0761 1D       		.uleb128 0x1d
 5014 0762 34000000 		.4byte	.LVL50
 5015 0766 AE040000 		.4byte	0x4ae
 5016 076a 1E       		.uleb128 0x1e
 5017 076b 01       		.uleb128 0x1
 5018 076c 50       		.byte	0x50
 5019 076d 02       		.uleb128 0x2
 5020 076e 75       		.byte	0x75
 5021 076f 00       		.sleb128 0
 5022 0770 00       		.byte	0
 5023 0771 00       		.byte	0
 5024 0772 00       		.byte	0
 5025 0773 24       		.uleb128 0x24
 5026 0774 52060000 		.4byte	.LASF90
 5027 0778 01       		.byte	0x1
 5028 0779 4F0D     		.2byte	0xd4f
 5029 077b 00000000 		.4byte	.LFB100
 5030 077f 28000000 		.4byte	.LFE100-.LFB100
 5031 0783 01       		.uleb128 0x1
 5032 0784 9C       		.byte	0x9c
 5033 0785 A3070000 		.4byte	0x7a3
 5034 0789 18       		.uleb128 0x18
 5035 078a C7040000 		.4byte	.LASF82
 5036 078e 01       		.byte	0x1
 5037 078f 4F0D     		.2byte	0xd4f
 5038 0791 B0000000 		.4byte	0xb0
 5039 0795 A8020000 		.4byte	.LLST13
 5040 0799 1C       		.uleb128 0x1c
 5041 079a 06000000 		.4byte	.LVL53
 5042 079e 0C070000 		.4byte	0x70c
 5043 07a2 00       		.byte	0
 5044 07a3 1B       		.uleb128 0x1b
 5045 07a4 2E0B0000 		.4byte	.LASF91
 5046 07a8 01       		.byte	0x1
 5047 07a9 7F14     		.2byte	0x147f
 5048 07ab 00000000 		.4byte	.LFB117
 5049 07af 68000000 		.4byte	.LFE117-.LFB117
 5050 07b3 01       		.uleb128 0x1
 5051 07b4 9C       		.byte	0x9c
 5052 07b5 2C080000 		.4byte	0x82c
 5053 07b9 18       		.uleb128 0x18
 5054 07ba 89010000 		.4byte	.LASF92
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 197


 5055 07be 01       		.byte	0x1
 5056 07bf 7F14     		.2byte	0x147f
 5057 07c1 4B010000 		.4byte	0x14b
 5058 07c5 C9020000 		.4byte	.LLST14
 5059 07c9 18       		.uleb128 0x18
 5060 07ca 00000000 		.4byte	.LASF93
 5061 07ce 01       		.byte	0x1
 5062 07cf 8014     		.2byte	0x1480
 5063 07d1 2C080000 		.4byte	0x82c
 5064 07d5 F5020000 		.4byte	.LLST15
 5065 07d9 19       		.uleb128 0x19
 5066 07da F2000000 		.4byte	.LASF94
 5067 07de 01       		.byte	0x1
 5068 07df 8214     		.2byte	0x1482
 5069 07e1 4B010000 		.4byte	0x14b
 5070 07e5 21030000 		.4byte	.LLST16
 5071 07e9 19       		.uleb128 0x19
 5072 07ea 3B040000 		.4byte	.LASF95
 5073 07ee 01       		.byte	0x1
 5074 07ef 8314     		.2byte	0x1483
 5075 07f1 31080000 		.4byte	0x831
 5076 07f5 34030000 		.4byte	.LLST17
 5077 07f9 1C       		.uleb128 0x1c
 5078 07fa 16000000 		.4byte	.LVL57
 5079 07fe E81E0000 		.4byte	0x1ee8
 5080 0802 22       		.uleb128 0x22
 5081 0803 2A000000 		.4byte	.LVL58
 5082 0807 D11E0000 		.4byte	0x1ed1
 5083 080b 19080000 		.4byte	0x819
 5084 080f 1E       		.uleb128 0x1e
 5085 0810 01       		.uleb128 0x1
 5086 0811 50       		.byte	0x50
 5087 0812 05       		.uleb128 0x5
 5088 0813 03       		.byte	0x3
 5089 0814 00000000 		.4byte	.LANCHOR0
 5090 0818 00       		.byte	0
 5091 0819 1C       		.uleb128 0x1c
 5092 081a 4A000000 		.4byte	.LVL61
 5093 081e F41E0000 		.4byte	0x1ef4
 5094 0822 1C       		.uleb128 0x1c
 5095 0823 5A000000 		.4byte	.LVL64
 5096 0827 F41E0000 		.4byte	0x1ef4
 5097 082b 00       		.byte	0
 5098 082c 07       		.uleb128 0x7
 5099 082d 35010000 		.4byte	0x135
 5100 0831 07       		.uleb128 0x7
 5101 0832 4B010000 		.4byte	0x14b
 5102 0836 25       		.uleb128 0x25
 5103 0837 04070000 		.4byte	.LASF98
 5104 083b 01       		.byte	0x1
 5105 083c D102     		.2byte	0x2d1
 5106 083e 35010000 		.4byte	0x135
 5107 0842 00000000 		.4byte	.LFB67
 5108 0846 62000000 		.4byte	.LFE67-.LFB67
 5109 084a 01       		.uleb128 0x1
 5110 084b 9C       		.byte	0x9c
 5111 084c 7A090000 		.4byte	0x97a
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 198


 5112 0850 18       		.uleb128 0x18
 5113 0851 39070000 		.4byte	.LASF79
 5114 0855 01       		.byte	0x1
 5115 0856 D102     		.2byte	0x2d1
 5116 0858 0E010000 		.4byte	0x10e
 5117 085c 47030000 		.4byte	.LLST18
 5118 0860 18       		.uleb128 0x18
 5119 0861 6D0E0000 		.4byte	.LASF80
 5120 0865 01       		.byte	0x1
 5121 0866 D202     		.2byte	0x2d2
 5122 0868 7D030000 		.4byte	0x37d
 5123 086c 65030000 		.4byte	.LLST19
 5124 0870 18       		.uleb128 0x18
 5125 0871 6D030000 		.4byte	.LASF96
 5126 0875 01       		.byte	0x1
 5127 0876 D302     		.2byte	0x2d3
 5128 0878 7A090000 		.4byte	0x97a
 5129 087c 83030000 		.4byte	.LLST20
 5130 0880 18       		.uleb128 0x18
 5131 0881 C7040000 		.4byte	.LASF82
 5132 0885 01       		.byte	0x1
 5133 0886 D402     		.2byte	0x2d4
 5134 0888 ED050000 		.4byte	0x5ed
 5135 088c A4030000 		.4byte	.LLST21
 5136 0890 1F       		.uleb128 0x1f
 5137 0891 2D0E0000 		.4byte	.LASF47
 5138 0895 01       		.byte	0x1
 5139 0896 D502     		.2byte	0x2d5
 5140 0898 40010000 		.4byte	0x140
 5141 089c 02       		.uleb128 0x2
 5142 089d 91       		.byte	0x91
 5143 089e 00       		.sleb128 0
 5144 089f 1F       		.uleb128 0x1f
 5145 08a0 7C040000 		.4byte	.LASF83
 5146 08a4 01       		.byte	0x1
 5147 08a5 D602     		.2byte	0x2d6
 5148 08a7 F8050000 		.4byte	0x5f8
 5149 08ab 02       		.uleb128 0x2
 5150 08ac 91       		.byte	0x91
 5151 08ad 04       		.sleb128 4
 5152 08ae 19       		.uleb128 0x19
 5153 08af 27020000 		.4byte	.LASF84
 5154 08b3 01       		.byte	0x1
 5155 08b4 D802     		.2byte	0x2d8
 5156 08b6 EE040000 		.4byte	0x4ee
 5157 08ba C2030000 		.4byte	.LLST22
 5158 08be 19       		.uleb128 0x19
 5159 08bf 33040000 		.4byte	.LASF74
 5160 08c3 01       		.byte	0x1
 5161 08c4 D902     		.2byte	0x2d9
 5162 08c6 35010000 		.4byte	0x135
 5163 08ca EB030000 		.4byte	.LLST23
 5164 08ce 26       		.uleb128 0x26
 5165 08cf 0E000000 		.4byte	.LBB23
 5166 08d3 24000000 		.4byte	.LBE23-.LBB23
 5167 08d7 26090000 		.4byte	0x926
 5168 08db 19       		.uleb128 0x19
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 199


 5169 08dc 89060000 		.4byte	.LASF48
 5170 08e0 01       		.byte	0x1
 5171 08e1 F602     		.2byte	0x2f6
 5172 08e3 82030000 		.4byte	0x382
 5173 08e7 0A040000 		.4byte	.LLST24
 5174 08eb 22       		.uleb128 0x22
 5175 08ec 14000000 		.4byte	.LVL68
 5176 08f0 001F0000 		.4byte	0x1f00
 5177 08f4 01090000 		.4byte	0x901
 5178 08f8 1E       		.uleb128 0x1e
 5179 08f9 01       		.uleb128 0x1
 5180 08fa 50       		.byte	0x50
 5181 08fb 04       		.uleb128 0x4
 5182 08fc 75       		.byte	0x75
 5183 08fd 00       		.sleb128 0
 5184 08fe 32       		.byte	0x32
 5185 08ff 24       		.byte	0x24
 5186 0900 00       		.byte	0
 5187 0901 22       		.uleb128 0x22
 5188 0902 1E000000 		.4byte	.LVL70
 5189 0906 001F0000 		.4byte	0x1f00
 5190 090a 15090000 		.4byte	0x915
 5191 090e 1E       		.uleb128 0x1e
 5192 090f 01       		.uleb128 0x1
 5193 0910 50       		.byte	0x50
 5194 0911 02       		.uleb128 0x2
 5195 0912 08       		.byte	0x8
 5196 0913 60       		.byte	0x60
 5197 0914 00       		.byte	0
 5198 0915 1D       		.uleb128 0x1d
 5199 0916 2E000000 		.4byte	.LVL72
 5200 091a 981E0000 		.4byte	0x1e98
 5201 091e 1E       		.uleb128 0x1e
 5202 091f 01       		.uleb128 0x1
 5203 0920 50       		.byte	0x50
 5204 0921 02       		.uleb128 0x2
 5205 0922 79       		.byte	0x79
 5206 0923 00       		.sleb128 0
 5207 0924 00       		.byte	0
 5208 0925 00       		.byte	0
 5209 0926 22       		.uleb128 0x22
 5210 0927 4E000000 		.4byte	.LVL75
 5211 092b F4040000 		.4byte	0x4f4
 5212 092f 69090000 		.4byte	0x969
 5213 0933 1E       		.uleb128 0x1e
 5214 0934 01       		.uleb128 0x1
 5215 0935 50       		.byte	0x50
 5216 0936 02       		.uleb128 0x2
 5217 0937 76       		.byte	0x76
 5218 0938 00       		.sleb128 0
 5219 0939 1E       		.uleb128 0x1e
 5220 093a 01       		.uleb128 0x1
 5221 093b 51       		.byte	0x51
 5222 093c 02       		.uleb128 0x2
 5223 093d 77       		.byte	0x77
 5224 093e 00       		.sleb128 0
 5225 093f 1E       		.uleb128 0x1e
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 200


 5226 0940 01       		.uleb128 0x1
 5227 0941 52       		.byte	0x52
 5228 0942 02       		.uleb128 0x2
 5229 0943 75       		.byte	0x75
 5230 0944 00       		.sleb128 0
 5231 0945 1E       		.uleb128 0x1e
 5232 0946 01       		.uleb128 0x1
 5233 0947 53       		.byte	0x53
 5234 0948 02       		.uleb128 0x2
 5235 0949 78       		.byte	0x78
 5236 094a 00       		.sleb128 0
 5237 094b 1E       		.uleb128 0x1e
 5238 094c 02       		.uleb128 0x2
 5239 094d 7D       		.byte	0x7d
 5240 094e 00       		.sleb128 0
 5241 094f 03       		.uleb128 0x3
 5242 0950 91       		.byte	0x91
 5243 0951 00       		.sleb128 0
 5244 0952 06       		.byte	0x6
 5245 0953 1E       		.uleb128 0x1e
 5246 0954 02       		.uleb128 0x2
 5247 0955 7D       		.byte	0x7d
 5248 0956 04       		.sleb128 4
 5249 0957 03       		.uleb128 0x3
 5250 0958 91       		.byte	0x91
 5251 0959 04       		.sleb128 4
 5252 095a 06       		.byte	0x6
 5253 095b 1E       		.uleb128 0x1e
 5254 095c 02       		.uleb128 0x2
 5255 095d 7D       		.byte	0x7d
 5256 095e 08       		.sleb128 8
 5257 095f 02       		.uleb128 0x2
 5258 0960 74       		.byte	0x74
 5259 0961 00       		.sleb128 0
 5260 0962 1E       		.uleb128 0x1e
 5261 0963 02       		.uleb128 0x2
 5262 0964 7D       		.byte	0x7d
 5263 0965 0C       		.sleb128 12
 5264 0966 01       		.uleb128 0x1
 5265 0967 30       		.byte	0x30
 5266 0968 00       		.byte	0
 5267 0969 1D       		.uleb128 0x1d
 5268 096a 54000000 		.4byte	.LVL76
 5269 096e B6060000 		.4byte	0x6b6
 5270 0972 1E       		.uleb128 0x1e
 5271 0973 01       		.uleb128 0x1
 5272 0974 50       		.byte	0x50
 5273 0975 02       		.uleb128 0x2
 5274 0976 74       		.byte	0x74
 5275 0977 00       		.sleb128 0
 5276 0978 00       		.byte	0
 5277 0979 00       		.byte	0
 5278 097a 07       		.uleb128 0x7
 5279 097b D5000000 		.4byte	0xd5
 5280 097f 27       		.uleb128 0x27
 5281 0980 B30B0000 		.4byte	.LASF103
 5282 0984 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 201


 5283 0985 7D04     		.2byte	0x47d
 5284 0987 00000000 		.4byte	.LFB70
 5285 098b 98000000 		.4byte	.LFE70-.LFB70
 5286 098f 01       		.uleb128 0x1
 5287 0990 9C       		.byte	0x9c
 5288 0991 280A0000 		.4byte	0xa28
 5289 0995 18       		.uleb128 0x18
 5290 0996 68080000 		.4byte	.LASF97
 5291 099a 01       		.byte	0x1
 5292 099b 7D04     		.2byte	0x47d
 5293 099d 49020000 		.4byte	0x249
 5294 09a1 33040000 		.4byte	.LLST25
 5295 09a5 19       		.uleb128 0x19
 5296 09a6 2F050000 		.4byte	.LASF75
 5297 09aa 01       		.byte	0x1
 5298 09ab 7F04     		.2byte	0x47f
 5299 09ad EE040000 		.4byte	0x4ee
 5300 09b1 51040000 		.4byte	.LLST26
 5301 09b5 1C       		.uleb128 0x1c
 5302 09b6 08000000 		.4byte	.LVL80
 5303 09ba C61E0000 		.4byte	0x1ec6
 5304 09be 22       		.uleb128 0x22
 5305 09bf 18000000 		.4byte	.LVL82
 5306 09c3 E81E0000 		.4byte	0x1ee8
 5307 09c7 D2090000 		.4byte	0x9d2
 5308 09cb 1E       		.uleb128 0x1e
 5309 09cc 01       		.uleb128 0x1
 5310 09cd 50       		.byte	0x50
 5311 09ce 02       		.uleb128 0x2
 5312 09cf 75       		.byte	0x75
 5313 09d0 00       		.sleb128 0
 5314 09d1 00       		.byte	0
 5315 09d2 22       		.uleb128 0x22
 5316 09d3 24000000 		.4byte	.LVL83
 5317 09d7 E81E0000 		.4byte	0x1ee8
 5318 09db E6090000 		.4byte	0x9e6
 5319 09df 1E       		.uleb128 0x1e
 5320 09e0 01       		.uleb128 0x1
 5321 09e1 50       		.byte	0x50
 5322 09e2 02       		.uleb128 0x2
 5323 09e3 74       		.byte	0x74
 5324 09e4 18       		.sleb128 24
 5325 09e5 00       		.byte	0
 5326 09e6 22       		.uleb128 0x22
 5327 09e7 44000000 		.4byte	.LVL84
 5328 09eb D11E0000 		.4byte	0x1ed1
 5329 09ef 010A0000 		.4byte	0xa01
 5330 09f3 1E       		.uleb128 0x1e
 5331 09f4 01       		.uleb128 0x1
 5332 09f5 50       		.byte	0x50
 5333 09f6 03       		.uleb128 0x3
 5334 09f7 76       		.byte	0x76
 5335 09f8 BC01     		.sleb128 188
 5336 09fa 1E       		.uleb128 0x1e
 5337 09fb 01       		.uleb128 0x1
 5338 09fc 51       		.byte	0x51
 5339 09fd 02       		.uleb128 0x2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 202


 5340 09fe 75       		.byte	0x75
 5341 09ff 00       		.sleb128 0
 5342 0a00 00       		.byte	0
 5343 0a01 22       		.uleb128 0x22
 5344 0a02 62000000 		.4byte	.LVL85
 5345 0a06 AE040000 		.4byte	0x4ae
 5346 0a0a 150A0000 		.4byte	0xa15
 5347 0a0e 1E       		.uleb128 0x1e
 5348 0a0f 01       		.uleb128 0x1
 5349 0a10 50       		.byte	0x50
 5350 0a11 02       		.uleb128 0x2
 5351 0a12 74       		.byte	0x74
 5352 0a13 00       		.sleb128 0
 5353 0a14 00       		.byte	0
 5354 0a15 1C       		.uleb128 0x1c
 5355 0a16 66000000 		.4byte	.LVL86
 5356 0a1a 9C040000 		.4byte	0x49c
 5357 0a1e 1C       		.uleb128 0x1c
 5358 0a1f 6A000000 		.4byte	.LVL87
 5359 0a23 DD1E0000 		.4byte	0x1edd
 5360 0a27 00       		.byte	0
 5361 0a28 25       		.uleb128 0x25
 5362 0a29 740E0000 		.4byte	.LASF99
 5363 0a2d 01       		.byte	0x1
 5364 0a2e BF05     		.2byte	0x5bf
 5365 0a30 40010000 		.4byte	0x140
 5366 0a34 00000000 		.4byte	.LFB73
 5367 0a38 20000000 		.4byte	.LFE73-.LFB73
 5368 0a3c 01       		.uleb128 0x1
 5369 0a3d 9C       		.byte	0x9c
 5370 0a3e 850A0000 		.4byte	0xa85
 5371 0a42 18       		.uleb128 0x18
 5372 0a43 F00A0000 		.4byte	.LASF76
 5373 0a47 01       		.byte	0x1
 5374 0a48 BF05     		.2byte	0x5bf
 5375 0a4a 87040000 		.4byte	0x487
 5376 0a4e 64040000 		.4byte	.LLST27
 5377 0a52 19       		.uleb128 0x19
 5378 0a53 2F050000 		.4byte	.LASF75
 5379 0a57 01       		.byte	0x1
 5380 0a58 C105     		.2byte	0x5c1
 5381 0a5a 8C040000 		.4byte	0x48c
 5382 0a5e 90040000 		.4byte	.LLST28
 5383 0a62 19       		.uleb128 0x19
 5384 0a63 FE050000 		.4byte	.LASF100
 5385 0a67 01       		.byte	0x1
 5386 0a68 C205     		.2byte	0x5c2
 5387 0a6a 40010000 		.4byte	0x140
 5388 0a6e A3040000 		.4byte	.LLST29
 5389 0a72 1C       		.uleb128 0x1c
 5390 0a73 08000000 		.4byte	.LVL90
 5391 0a77 C61E0000 		.4byte	0x1ec6
 5392 0a7b 1C       		.uleb128 0x1c
 5393 0a7c 16000000 		.4byte	.LVL93
 5394 0a80 DD1E0000 		.4byte	0x1edd
 5395 0a84 00       		.byte	0
 5396 0a85 25       		.uleb128 0x25
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 203


 5397 0a86 9E090000 		.4byte	.LASF101
 5398 0a8a 01       		.byte	0x1
 5399 0a8b D505     		.2byte	0x5d5
 5400 0a8d 40010000 		.4byte	0x140
 5401 0a91 00000000 		.4byte	.LFB74
 5402 0a95 28000000 		.4byte	.LFE74-.LFB74
 5403 0a99 01       		.uleb128 0x1
 5404 0a9a 9C       		.byte	0x9c
 5405 0a9b 1D0B0000 		.4byte	0xb1d
 5406 0a9f 18       		.uleb128 0x18
 5407 0aa0 F00A0000 		.4byte	.LASF76
 5408 0aa4 01       		.byte	0x1
 5409 0aa5 D505     		.2byte	0x5d5
 5410 0aa7 87040000 		.4byte	0x487
 5411 0aab C1040000 		.4byte	.LLST30
 5412 0aaf 19       		.uleb128 0x19
 5413 0ab0 2F050000 		.4byte	.LASF75
 5414 0ab4 01       		.byte	0x1
 5415 0ab5 D705     		.2byte	0x5d7
 5416 0ab7 8C040000 		.4byte	0x48c
 5417 0abb E2040000 		.4byte	.LLST31
 5418 0abf 20       		.uleb128 0x20
 5419 0ac0 FE050000 		.4byte	.LASF100
 5420 0ac4 01       		.byte	0x1
 5421 0ac5 D805     		.2byte	0x5d8
 5422 0ac7 40010000 		.4byte	0x140
 5423 0acb 01       		.uleb128 0x1
 5424 0acc 50       		.byte	0x50
 5425 0acd 28       		.uleb128 0x28
 5426 0ace BF0B0000 		.4byte	.LASF102
 5427 0ad2 01       		.byte	0x1
 5428 0ad3 D805     		.2byte	0x5d8
 5429 0ad5 40010000 		.4byte	0x140
 5430 0ad9 29       		.uleb128 0x29
 5431 0ada E5030000 		.4byte	0x3e5
 5432 0ade 00000000 		.4byte	.LBB24
 5433 0ae2 14000000 		.4byte	.LBE24-.LBB24
 5434 0ae6 01       		.byte	0x1
 5435 0ae7 EC05     		.2byte	0x5ec
 5436 0ae9 020B0000 		.4byte	0xb02
 5437 0aed 23       		.uleb128 0x23
 5438 0aee 00000000 		.4byte	.LBB25
 5439 0af2 14000000 		.4byte	.LBE25-.LBB25
 5440 0af6 2A       		.uleb128 0x2a
 5441 0af7 F5030000 		.4byte	0x3f5
 5442 0afb 2A       		.uleb128 0x2a
 5443 0afc 00040000 		.4byte	0x400
 5444 0b00 00       		.byte	0
 5445 0b01 00       		.byte	0
 5446 0b02 2B       		.uleb128 0x2b
 5447 0b03 0C040000 		.4byte	0x40c
 5448 0b07 1E000000 		.4byte	.LBB26
 5449 0b0b 04000000 		.4byte	.LBE26-.LBB26
 5450 0b0f 01       		.byte	0x1
 5451 0b10 F305     		.2byte	0x5f3
 5452 0b12 2C       		.uleb128 0x2c
 5453 0b13 18040000 		.4byte	0x418
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 204


 5454 0b17 F5040000 		.4byte	.LLST32
 5455 0b1b 00       		.byte	0
 5456 0b1c 00       		.byte	0
 5457 0b1d 27       		.uleb128 0x27
 5458 0b1e 87030000 		.4byte	.LASF104
 5459 0b22 01       		.byte	0x1
 5460 0b23 FD05     		.2byte	0x5fd
 5461 0b25 00000000 		.4byte	.LFB75
 5462 0b29 C0000000 		.4byte	.LFE75-.LFB75
 5463 0b2d 01       		.uleb128 0x1
 5464 0b2e 9C       		.byte	0x9c
 5465 0b2f CE0B0000 		.4byte	0xbce
 5466 0b33 18       		.uleb128 0x18
 5467 0b34 F00A0000 		.4byte	.LASF76
 5468 0b38 01       		.byte	0x1
 5469 0b39 FD05     		.2byte	0x5fd
 5470 0b3b 49020000 		.4byte	0x249
 5471 0b3f 08050000 		.4byte	.LLST33
 5472 0b43 18       		.uleb128 0x18
 5473 0b44 83050000 		.4byte	.LASF105
 5474 0b48 01       		.byte	0x1
 5475 0b49 FE05     		.2byte	0x5fe
 5476 0b4b 40010000 		.4byte	0x140
 5477 0b4f 26050000 		.4byte	.LLST34
 5478 0b53 19       		.uleb128 0x19
 5479 0b54 2F050000 		.4byte	.LASF75
 5480 0b58 01       		.byte	0x1
 5481 0b59 0006     		.2byte	0x600
 5482 0b5b EE040000 		.4byte	0x4ee
 5483 0b5f 50050000 		.4byte	.LLST35
 5484 0b63 19       		.uleb128 0x19
 5485 0b64 07090000 		.4byte	.LASF106
 5486 0b68 01       		.byte	0x1
 5487 0b69 0106     		.2byte	0x601
 5488 0b6b 40010000 		.4byte	0x140
 5489 0b6f 63050000 		.4byte	.LLST36
 5490 0b73 19       		.uleb128 0x19
 5491 0b74 73010000 		.4byte	.LASF107
 5492 0b78 01       		.byte	0x1
 5493 0b79 0106     		.2byte	0x601
 5494 0b7b 40010000 		.4byte	0x140
 5495 0b7f 76050000 		.4byte	.LLST37
 5496 0b83 19       		.uleb128 0x19
 5497 0b84 35050000 		.4byte	.LASF108
 5498 0b88 01       		.byte	0x1
 5499 0b89 0206     		.2byte	0x602
 5500 0b8b 35010000 		.4byte	0x135
 5501 0b8f 89050000 		.4byte	.LLST38
 5502 0b93 1C       		.uleb128 0x1c
 5503 0b94 10000000 		.4byte	.LVL102
 5504 0b98 C61E0000 		.4byte	0x1ec6
 5505 0b9c 22       		.uleb128 0x22
 5506 0b9d 78000000 		.4byte	.LVL108
 5507 0ba1 E81E0000 		.4byte	0x1ee8
 5508 0ba5 B00B0000 		.4byte	0xbb0
 5509 0ba9 1E       		.uleb128 0x1e
 5510 0baa 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 205


 5511 0bab 50       		.byte	0x50
 5512 0bac 02       		.uleb128 0x2
 5513 0bad 74       		.byte	0x74
 5514 0bae 00       		.sleb128 0
 5515 0baf 00       		.byte	0
 5516 0bb0 22       		.uleb128 0x22
 5517 0bb1 9A000000 		.4byte	.LVL109
 5518 0bb5 D11E0000 		.4byte	0x1ed1
 5519 0bb9 C40B0000 		.4byte	0xbc4
 5520 0bbd 1E       		.uleb128 0x1e
 5521 0bbe 01       		.uleb128 0x1
 5522 0bbf 51       		.byte	0x51
 5523 0bc0 02       		.uleb128 0x2
 5524 0bc1 74       		.byte	0x74
 5525 0bc2 00       		.sleb128 0
 5526 0bc3 00       		.byte	0
 5527 0bc4 1C       		.uleb128 0x1c
 5528 0bc5 B0000000 		.4byte	.LVL111
 5529 0bc9 DD1E0000 		.4byte	0x1edd
 5530 0bcd 00       		.byte	0
 5531 0bce 27       		.uleb128 0x27
 5532 0bcf E5050000 		.4byte	.LASF109
 5533 0bd3 01       		.byte	0x1
 5534 0bd4 3B07     		.2byte	0x73b
 5535 0bd6 00000000 		.4byte	.LFB78
 5536 0bda 78000000 		.4byte	.LFE78-.LFB78
 5537 0bde 01       		.uleb128 0x1
 5538 0bdf 9C       		.byte	0x9c
 5539 0be0 530C0000 		.4byte	0xc53
 5540 0be4 18       		.uleb128 0x18
 5541 0be5 56090000 		.4byte	.LASF110
 5542 0be9 01       		.byte	0x1
 5543 0bea 3B07     		.2byte	0x73b
 5544 0bec 49020000 		.4byte	0x249
 5545 0bf0 A8050000 		.4byte	.LLST39
 5546 0bf4 19       		.uleb128 0x19
 5547 0bf5 2F050000 		.4byte	.LASF75
 5548 0bf9 01       		.byte	0x1
 5549 0bfa 3D07     		.2byte	0x73d
 5550 0bfc 530C0000 		.4byte	0xc53
 5551 0c00 A8050000 		.4byte	.LLST39
 5552 0c04 1C       		.uleb128 0x1c
 5553 0c05 14000000 		.4byte	.LVL114
 5554 0c09 C61E0000 		.4byte	0x1ec6
 5555 0c0d 22       		.uleb128 0x22
 5556 0c0e 1A000000 		.4byte	.LVL115
 5557 0c12 3C040000 		.4byte	0x43c
 5558 0c16 210C0000 		.4byte	0xc21
 5559 0c1a 1E       		.uleb128 0x1e
 5560 0c1b 01       		.uleb128 0x1
 5561 0c1c 50       		.byte	0x50
 5562 0c1d 02       		.uleb128 0x2
 5563 0c1e 74       		.byte	0x74
 5564 0c1f 00       		.sleb128 0
 5565 0c20 00       		.byte	0
 5566 0c21 22       		.uleb128 0x22
 5567 0c22 24000000 		.4byte	.LVL116
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 206


 5568 0c26 E81E0000 		.4byte	0x1ee8
 5569 0c2a 350C0000 		.4byte	0xc35
 5570 0c2e 1E       		.uleb128 0x1e
 5571 0c2f 01       		.uleb128 0x1
 5572 0c30 50       		.byte	0x50
 5573 0c31 02       		.uleb128 0x2
 5574 0c32 76       		.byte	0x76
 5575 0c33 00       		.sleb128 0
 5576 0c34 00       		.byte	0
 5577 0c35 22       		.uleb128 0x22
 5578 0c36 4A000000 		.4byte	.LVL117
 5579 0c3a D11E0000 		.4byte	0x1ed1
 5580 0c3e 490C0000 		.4byte	0xc49
 5581 0c42 1E       		.uleb128 0x1e
 5582 0c43 01       		.uleb128 0x1
 5583 0c44 51       		.byte	0x51
 5584 0c45 02       		.uleb128 0x2
 5585 0c46 76       		.byte	0x76
 5586 0c47 00       		.sleb128 0
 5587 0c48 00       		.byte	0
 5588 0c49 1C       		.uleb128 0x1c
 5589 0c4a 6A000000 		.4byte	.LVL118
 5590 0c4e DD1E0000 		.4byte	0x1edd
 5591 0c52 00       		.byte	0
 5592 0c53 07       		.uleb128 0x7
 5593 0c54 EE040000 		.4byte	0x4ee
 5594 0c58 25       		.uleb128 0x25
 5595 0c59 450A0000 		.4byte	.LASF111
 5596 0c5d 01       		.byte	0x1
 5597 0c5e 7107     		.2byte	0x771
 5598 0c60 35010000 		.4byte	0x135
 5599 0c64 00000000 		.4byte	.LFB79
 5600 0c68 8C000000 		.4byte	.LFE79-.LFB79
 5601 0c6c 01       		.uleb128 0x1
 5602 0c6d 9C       		.byte	0x9c
 5603 0c6e 4B0D0000 		.4byte	0xd4b
 5604 0c72 18       		.uleb128 0x18
 5605 0c73 56090000 		.4byte	.LASF110
 5606 0c77 01       		.byte	0x1
 5607 0c78 7107     		.2byte	0x771
 5608 0c7a 49020000 		.4byte	0x249
 5609 0c7e D1050000 		.4byte	.LLST41
 5610 0c82 19       		.uleb128 0x19
 5611 0c83 35050000 		.4byte	.LASF108
 5612 0c87 01       		.byte	0x1
 5613 0c88 7307     		.2byte	0x773
 5614 0c8a 35010000 		.4byte	0x135
 5615 0c8e FD050000 		.4byte	.LLST42
 5616 0c92 19       		.uleb128 0x19
 5617 0c93 2F050000 		.4byte	.LASF75
 5618 0c97 01       		.byte	0x1
 5619 0c98 7407     		.2byte	0x774
 5620 0c9a 530C0000 		.4byte	0xc53
 5621 0c9e 3E060000 		.4byte	.LLST43
 5622 0ca2 28       		.uleb128 0x28
 5623 0ca3 AC0A0000 		.4byte	.LASF112
 5624 0ca7 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 207


 5625 0ca8 7507     		.2byte	0x775
 5626 0caa 40010000 		.4byte	0x140
 5627 0cae 29       		.uleb128 0x29
 5628 0caf E5030000 		.4byte	0x3e5
 5629 0cb3 04000000 		.4byte	.LBB28
 5630 0cb7 14000000 		.4byte	.LBE28-.LBB28
 5631 0cbb 01       		.byte	0x1
 5632 0cbc 8B07     		.2byte	0x78b
 5633 0cbe D70C0000 		.4byte	0xcd7
 5634 0cc2 23       		.uleb128 0x23
 5635 0cc3 04000000 		.4byte	.LBB29
 5636 0cc7 14000000 		.4byte	.LBE29-.LBB29
 5637 0ccb 2A       		.uleb128 0x2a
 5638 0ccc F5030000 		.4byte	0x3f5
 5639 0cd0 2A       		.uleb128 0x2a
 5640 0cd1 00040000 		.4byte	0x400
 5641 0cd5 00       		.byte	0
 5642 0cd6 00       		.byte	0
 5643 0cd7 29       		.uleb128 0x29
 5644 0cd8 0C040000 		.4byte	0x40c
 5645 0cdc 76000000 		.4byte	.LBB30
 5646 0ce0 04000000 		.4byte	.LBE30-.LBB30
 5647 0ce4 01       		.byte	0x1
 5648 0ce5 AF07     		.2byte	0x7af
 5649 0ce7 F50C0000 		.4byte	0xcf5
 5650 0ceb 2C       		.uleb128 0x2c
 5651 0cec 18040000 		.4byte	0x418
 5652 0cf0 6A060000 		.4byte	.LLST44
 5653 0cf4 00       		.byte	0
 5654 0cf5 22       		.uleb128 0x22
 5655 0cf6 1C000000 		.4byte	.LVL122
 5656 0cfa 3C040000 		.4byte	0x43c
 5657 0cfe 090D0000 		.4byte	0xd09
 5658 0d02 1E       		.uleb128 0x1e
 5659 0d03 01       		.uleb128 0x1
 5660 0d04 50       		.byte	0x50
 5661 0d05 02       		.uleb128 0x2
 5662 0d06 74       		.byte	0x74
 5663 0d07 00       		.sleb128 0
 5664 0d08 00       		.byte	0
 5665 0d09 22       		.uleb128 0x22
 5666 0d0a 42000000 		.4byte	.LVL124
 5667 0d0e E81E0000 		.4byte	0x1ee8
 5668 0d12 1D0D0000 		.4byte	0xd1d
 5669 0d16 1E       		.uleb128 0x1e
 5670 0d17 01       		.uleb128 0x1
 5671 0d18 50       		.byte	0x50
 5672 0d19 02       		.uleb128 0x2
 5673 0d1a 77       		.byte	0x77
 5674 0d1b 00       		.sleb128 0
 5675 0d1c 00       		.byte	0
 5676 0d1d 22       		.uleb128 0x22
 5677 0d1e 64000000 		.4byte	.LVL125
 5678 0d22 D11E0000 		.4byte	0x1ed1
 5679 0d26 310D0000 		.4byte	0xd31
 5680 0d2a 1E       		.uleb128 0x1e
 5681 0d2b 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 208


 5682 0d2c 51       		.byte	0x51
 5683 0d2d 02       		.uleb128 0x2
 5684 0d2e 77       		.byte	0x77
 5685 0d2f 00       		.sleb128 0
 5686 0d30 00       		.byte	0
 5687 0d31 1D       		.uleb128 0x1d
 5688 0d32 70000000 		.4byte	.LVL127
 5689 0d36 D11E0000 		.4byte	0x1ed1
 5690 0d3a 1E       		.uleb128 0x1e
 5691 0d3b 01       		.uleb128 0x1
 5692 0d3c 50       		.byte	0x50
 5693 0d3d 05       		.uleb128 0x5
 5694 0d3e 03       		.byte	0x3
 5695 0d3f 14000000 		.4byte	.LANCHOR0+20
 5696 0d43 1E       		.uleb128 0x1e
 5697 0d44 01       		.uleb128 0x1
 5698 0d45 51       		.byte	0x51
 5699 0d46 02       		.uleb128 0x2
 5700 0d47 74       		.byte	0x74
 5701 0d48 18       		.sleb128 24
 5702 0d49 00       		.byte	0
 5703 0d4a 00       		.byte	0
 5704 0d4b 27       		.uleb128 0x27
 5705 0d4c A7030000 		.4byte	.LASF113
 5706 0d50 01       		.byte	0x1
 5707 0d51 B707     		.2byte	0x7b7
 5708 0d53 00000000 		.4byte	.LFB80
 5709 0d57 60000000 		.4byte	.LFE80-.LFB80
 5710 0d5b 01       		.uleb128 0x1
 5711 0d5c 9C       		.byte	0x9c
 5712 0d5d E30D0000 		.4byte	0xde3
 5713 0d61 19       		.uleb128 0x19
 5714 0d62 33040000 		.4byte	.LASF74
 5715 0d66 01       		.byte	0x1
 5716 0d67 B907     		.2byte	0x7b9
 5717 0d69 35010000 		.4byte	0x135
 5718 0d6d 7D060000 		.4byte	.LLST45
 5719 0d71 29       		.uleb128 0x29
 5720 0d72 24040000 		.4byte	0x424
 5721 0d76 22000000 		.4byte	.LBB32
 5722 0d7a 10000000 		.4byte	.LBE32-.LBB32
 5723 0d7e 01       		.byte	0x1
 5724 0d7f FF07     		.2byte	0x7ff
 5725 0d81 950D0000 		.4byte	0xd95
 5726 0d85 23       		.uleb128 0x23
 5727 0d86 22000000 		.4byte	.LBB33
 5728 0d8a 10000000 		.4byte	.LBE33-.LBB33
 5729 0d8e 2A       		.uleb128 0x2a
 5730 0d8f 30040000 		.4byte	0x430
 5731 0d93 00       		.byte	0
 5732 0d94 00       		.byte	0
 5733 0d95 22       		.uleb128 0x22
 5734 0d96 16000000 		.4byte	.LVL131
 5735 0d9a 36080000 		.4byte	0x836
 5736 0d9e D00D0000 		.4byte	0xdd0
 5737 0da2 1E       		.uleb128 0x1e
 5738 0da3 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 209


 5739 0da4 50       		.byte	0x50
 5740 0da5 05       		.uleb128 0x5
 5741 0da6 03       		.byte	0x3
 5742 0da7 00000000 		.4byte	prvIdleTask
 5743 0dab 1E       		.uleb128 0x1e
 5744 0dac 01       		.uleb128 0x1
 5745 0dad 51       		.byte	0x51
 5746 0dae 05       		.uleb128 0x5
 5747 0daf 03       		.byte	0x3
 5748 0db0 00000000 		.4byte	.LC0
 5749 0db4 1E       		.uleb128 0x1e
 5750 0db5 01       		.uleb128 0x1
 5751 0db6 52       		.byte	0x52
 5752 0db7 02       		.uleb128 0x2
 5753 0db8 08       		.byte	0x8
 5754 0db9 80       		.byte	0x80
 5755 0dba 1E       		.uleb128 0x1e
 5756 0dbb 01       		.uleb128 0x1
 5757 0dbc 53       		.byte	0x53
 5758 0dbd 01       		.uleb128 0x1
 5759 0dbe 30       		.byte	0x30
 5760 0dbf 1E       		.uleb128 0x1e
 5761 0dc0 02       		.uleb128 0x2
 5762 0dc1 7D       		.byte	0x7d
 5763 0dc2 00       		.sleb128 0
 5764 0dc3 01       		.uleb128 0x1
 5765 0dc4 30       		.byte	0x30
 5766 0dc5 1E       		.uleb128 0x1e
 5767 0dc6 02       		.uleb128 0x2
 5768 0dc7 7D       		.byte	0x7d
 5769 0dc8 04       		.sleb128 4
 5770 0dc9 05       		.uleb128 0x5
 5771 0dca 03       		.byte	0x3
 5772 0dcb F4000000 		.4byte	.LANCHOR0+244
 5773 0dcf 00       		.byte	0
 5774 0dd0 1C       		.uleb128 0x1c
 5775 0dd1 1E000000 		.4byte	.LVL132
 5776 0dd5 0B1F0000 		.4byte	0x1f0b
 5777 0dd9 1C       		.uleb128 0x1c
 5778 0dda 4A000000 		.4byte	.LVL133
 5779 0dde 171F0000 		.4byte	0x1f17
 5780 0de2 00       		.byte	0
 5781 0de3 27       		.uleb128 0x27
 5782 0de4 44090000 		.4byte	.LASF114
 5783 0de8 01       		.byte	0x1
 5784 0de9 3308     		.2byte	0x833
 5785 0deb 00000000 		.4byte	.LFB81
 5786 0def 24000000 		.4byte	.LFE81-.LFB81
 5787 0df3 01       		.uleb128 0x1
 5788 0df4 9C       		.byte	0x9c
 5789 0df5 270E0000 		.4byte	0xe27
 5790 0df9 29       		.uleb128 0x29
 5791 0dfa 24040000 		.4byte	0x424
 5792 0dfe 02000000 		.4byte	.LBB34
 5793 0e02 10000000 		.4byte	.LBE34-.LBB34
 5794 0e06 01       		.byte	0x1
 5795 0e07 3808     		.2byte	0x838
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 210


 5796 0e09 1D0E0000 		.4byte	0xe1d
 5797 0e0d 23       		.uleb128 0x23
 5798 0e0e 02000000 		.4byte	.LBB35
 5799 0e12 10000000 		.4byte	.LBE35-.LBB35
 5800 0e16 2A       		.uleb128 0x2a
 5801 0e17 30040000 		.4byte	0x430
 5802 0e1b 00       		.byte	0
 5803 0e1c 00       		.byte	0
 5804 0e1d 1C       		.uleb128 0x1c
 5805 0e1e 1E000000 		.4byte	.LVL134
 5806 0e22 221F0000 		.4byte	0x1f22
 5807 0e26 00       		.byte	0
 5808 0e27 2D       		.uleb128 0x2d
 5809 0e28 0F0B0000 		.4byte	.LASF155
 5810 0e2c 01       		.byte	0x1
 5811 0e2d 3E08     		.2byte	0x83e
 5812 0e2f 00000000 		.4byte	.LFB82
 5813 0e33 14000000 		.4byte	.LFE82-.LFB82
 5814 0e37 01       		.uleb128 0x1
 5815 0e38 9C       		.byte	0x9c
 5816 0e39 25       		.uleb128 0x25
 5817 0e3a 0E060000 		.4byte	.LASF115
 5818 0e3e 01       		.byte	0x1
 5819 0e3f 0109     		.2byte	0x901
 5820 0e41 4B010000 		.4byte	0x14b
 5821 0e45 00000000 		.4byte	.LFB84
 5822 0e49 0C000000 		.4byte	.LFE84-.LFB84
 5823 0e4d 01       		.uleb128 0x1
 5824 0e4e 9C       		.byte	0x9c
 5825 0e4f 620E0000 		.4byte	0xe62
 5826 0e53 20       		.uleb128 0x20
 5827 0e54 28000000 		.4byte	.LASF116
 5828 0e58 01       		.byte	0x1
 5829 0e59 0309     		.2byte	0x903
 5830 0e5b 4B010000 		.4byte	0x14b
 5831 0e5f 01       		.uleb128 0x1
 5832 0e60 50       		.byte	0x50
 5833 0e61 00       		.byte	0
 5834 0e62 25       		.uleb128 0x25
 5835 0e63 6C020000 		.4byte	.LASF117
 5836 0e67 01       		.byte	0x1
 5837 0e68 1009     		.2byte	0x910
 5838 0e6a 4B010000 		.4byte	0x14b
 5839 0e6e 00000000 		.4byte	.LFB85
 5840 0e72 0C000000 		.4byte	.LFE85-.LFB85
 5841 0e76 01       		.uleb128 0x1
 5842 0e77 9C       		.byte	0x9c
 5843 0e78 980E0000 		.4byte	0xe98
 5844 0e7c 20       		.uleb128 0x20
 5845 0e7d 33040000 		.4byte	.LASF74
 5846 0e81 01       		.byte	0x1
 5847 0e82 1209     		.2byte	0x912
 5848 0e84 4B010000 		.4byte	0x14b
 5849 0e88 01       		.uleb128 0x1
 5850 0e89 50       		.byte	0x50
 5851 0e8a 2E       		.uleb128 0x2e
 5852 0e8b AC0A0000 		.4byte	.LASF112
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 211


 5853 0e8f 01       		.byte	0x1
 5854 0e90 1309     		.2byte	0x913
 5855 0e92 40010000 		.4byte	0x140
 5856 0e96 00       		.byte	0
 5857 0e97 00       		.byte	0
 5858 0e98 2F       		.uleb128 0x2f
 5859 0e99 590C0000 		.4byte	.LASF229
 5860 0e9d 01       		.byte	0x1
 5861 0e9e 2F09     		.2byte	0x92f
 5862 0ea0 40010000 		.4byte	0x140
 5863 0ea4 00000000 		.4byte	.LFB86
 5864 0ea8 0C000000 		.4byte	.LFE86-.LFB86
 5865 0eac 01       		.uleb128 0x1
 5866 0ead 9C       		.byte	0x9c
 5867 0eae 25       		.uleb128 0x25
 5868 0eaf 520B0000 		.4byte	.LASF118
 5869 0eb3 01       		.byte	0x1
 5870 0eb4 3709     		.2byte	0x937
 5871 0eb6 B2000000 		.4byte	0xb2
 5872 0eba 00000000 		.4byte	.LFB87
 5873 0ebe 14000000 		.4byte	.LFE87-.LFB87
 5874 0ec2 01       		.uleb128 0x1
 5875 0ec3 9C       		.byte	0x9c
 5876 0ec4 E70E0000 		.4byte	0xee7
 5877 0ec8 18       		.uleb128 0x18
 5878 0ec9 7A030000 		.4byte	.LASF119
 5879 0ecd 01       		.byte	0x1
 5880 0ece 3709     		.2byte	0x937
 5881 0ed0 49020000 		.4byte	0x249
 5882 0ed4 9B060000 		.4byte	.LLST46
 5883 0ed8 20       		.uleb128 0x20
 5884 0ed9 2F050000 		.4byte	.LASF75
 5885 0edd 01       		.byte	0x1
 5886 0ede 3909     		.2byte	0x939
 5887 0ee0 EE040000 		.4byte	0x4ee
 5888 0ee4 01       		.uleb128 0x1
 5889 0ee5 53       		.byte	0x53
 5890 0ee6 00       		.byte	0
 5891 0ee7 25       		.uleb128 0x25
 5892 0ee8 B6020000 		.4byte	.LASF120
 5893 0eec 01       		.byte	0x1
 5894 0eed 950A     		.2byte	0xa95
 5895 0eef 35010000 		.4byte	0x135
 5896 0ef3 00000000 		.4byte	.LFB89
 5897 0ef7 E8000000 		.4byte	.LFE89-.LFB89
 5898 0efb 01       		.uleb128 0x1
 5899 0efc 9C       		.byte	0x9c
 5900 0efd A70F0000 		.4byte	0xfa7
 5901 0f01 19       		.uleb128 0x19
 5902 0f02 2F050000 		.4byte	.LASF75
 5903 0f06 01       		.byte	0x1
 5904 0f07 970A     		.2byte	0xa97
 5905 0f09 EE040000 		.4byte	0x4ee
 5906 0f0d AE060000 		.4byte	.LLST47
 5907 0f11 19       		.uleb128 0x19
 5908 0f12 8B0B0000 		.4byte	.LASF28
 5909 0f16 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 212


 5910 0f17 980A     		.2byte	0xa98
 5911 0f19 4B010000 		.4byte	0x14b
 5912 0f1d CC060000 		.4byte	.LLST48
 5913 0f21 19       		.uleb128 0x19
 5914 0f22 E1010000 		.4byte	.LASF121
 5915 0f26 01       		.byte	0x1
 5916 0f27 990A     		.2byte	0xa99
 5917 0f29 35010000 		.4byte	0x135
 5918 0f2d DF060000 		.4byte	.LLST49
 5919 0f31 30       		.uleb128 0x30
 5920 0f32 00000000 		.4byte	.Ldebug_ranges0+0
 5921 0f36 19       		.uleb128 0x19
 5922 0f37 3B040000 		.4byte	.LASF95
 5923 0f3b 01       		.byte	0x1
 5924 0f3c A40A     		.2byte	0xaa4
 5925 0f3e 31080000 		.4byte	0x831
 5926 0f42 37070000 		.4byte	.LLST50
 5927 0f46 26       		.uleb128 0x26
 5928 0f47 1C000000 		.4byte	.LBB37
 5929 0f4b 1A000000 		.4byte	.LBE37-.LBB37
 5930 0f4f 6D0F0000 		.4byte	0xf6d
 5931 0f53 19       		.uleb128 0x19
 5932 0f54 1E0C0000 		.4byte	.LASF122
 5933 0f58 01       		.byte	0x1
 5934 0f59 AC0A     		.2byte	0xaac
 5935 0f5b A70F0000 		.4byte	0xfa7
 5936 0f5f 55070000 		.4byte	.LLST51
 5937 0f63 1C       		.uleb128 0x1c
 5938 0f64 36000000 		.4byte	.LVL145
 5939 0f68 9C040000 		.4byte	0x49c
 5940 0f6c 00       		.byte	0
 5941 0f6d 22       		.uleb128 0x22
 5942 0f6e 7C000000 		.4byte	.LVL152
 5943 0f72 E81E0000 		.4byte	0x1ee8
 5944 0f76 810F0000 		.4byte	0xf81
 5945 0f7a 1E       		.uleb128 0x1e
 5946 0f7b 01       		.uleb128 0x1
 5947 0f7c 50       		.byte	0x50
 5948 0f7d 02       		.uleb128 0x2
 5949 0f7e 76       		.byte	0x76
 5950 0f7f 00       		.sleb128 0
 5951 0f80 00       		.byte	0
 5952 0f81 22       		.uleb128 0x22
 5953 0f82 88000000 		.4byte	.LVL153
 5954 0f86 E81E0000 		.4byte	0x1ee8
 5955 0f8a 950F0000 		.4byte	0xf95
 5956 0f8e 1E       		.uleb128 0x1e
 5957 0f8f 01       		.uleb128 0x1
 5958 0f90 50       		.byte	0x50
 5959 0f91 02       		.uleb128 0x2
 5960 0f92 74       		.byte	0x74
 5961 0f93 18       		.sleb128 24
 5962 0f94 00       		.byte	0
 5963 0f95 1D       		.uleb128 0x1d
 5964 0f96 AE000000 		.4byte	.LVL154
 5965 0f9a D11E0000 		.4byte	0x1ed1
 5966 0f9e 1E       		.uleb128 0x1e
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 213


 5967 0f9f 01       		.uleb128 0x1
 5968 0fa0 51       		.byte	0x51
 5969 0fa1 02       		.uleb128 0x2
 5970 0fa2 76       		.byte	0x76
 5971 0fa3 00       		.sleb128 0
 5972 0fa4 00       		.byte	0
 5973 0fa5 00       		.byte	0
 5974 0fa6 00       		.byte	0
 5975 0fa7 06       		.uleb128 0x6
 5976 0fa8 04       		.byte	0x4
 5977 0fa9 3E020000 		.4byte	0x23e
 5978 0fad 25       		.uleb128 0x25
 5979 0fae 64090000 		.4byte	.LASF123
 5980 0fb2 01       		.byte	0x1
 5981 0fb3 9208     		.2byte	0x892
 5982 0fb5 35010000 		.4byte	0x135
 5983 0fb9 00000000 		.4byte	.LFB83
 5984 0fbd D8000000 		.4byte	.LFE83-.LFB83
 5985 0fc1 01       		.uleb128 0x1
 5986 0fc2 9C       		.byte	0x9c
 5987 0fc3 66100000 		.4byte	0x1066
 5988 0fc7 19       		.uleb128 0x19
 5989 0fc8 2F050000 		.4byte	.LASF75
 5990 0fcc 01       		.byte	0x1
 5991 0fcd 9408     		.2byte	0x894
 5992 0fcf EE040000 		.4byte	0x4ee
 5993 0fd3 77070000 		.4byte	.LLST52
 5994 0fd7 19       		.uleb128 0x19
 5995 0fd8 FE000000 		.4byte	.LASF124
 5996 0fdc 01       		.byte	0x1
 5997 0fdd 9508     		.2byte	0x895
 5998 0fdf 35010000 		.4byte	0x135
 5999 0fe3 B9070000 		.4byte	.LLST53
 6000 0fe7 26       		.uleb128 0x26
 6001 0fe8 82000000 		.4byte	.LBB40
 6002 0fec 22000000 		.4byte	.LBE40-.LBB40
 6003 0ff0 0E100000 		.4byte	0x100e
 6004 0ff4 19       		.uleb128 0x19
 6005 0ff5 84080000 		.4byte	.LASF125
 6006 0ff9 01       		.byte	0x1
 6007 0ffa CD08     		.2byte	0x8cd
 6008 0ffc 4B010000 		.4byte	0x14b
 6009 1000 FB070000 		.4byte	.LLST54
 6010 1004 1C       		.uleb128 0x1c
 6011 1005 8E000000 		.4byte	.LVL171
 6012 1009 E70E0000 		.4byte	0xee7
 6013 100d 00       		.byte	0
 6014 100e 1C       		.uleb128 0x1c
 6015 100f 06000000 		.4byte	.LVL161
 6016 1013 C61E0000 		.4byte	0x1ec6
 6017 1017 22       		.uleb128 0x22
 6018 1018 34000000 		.4byte	.LVL164
 6019 101c E81E0000 		.4byte	0x1ee8
 6020 1020 2B100000 		.4byte	0x102b
 6021 1024 1E       		.uleb128 0x1e
 6022 1025 01       		.uleb128 0x1
 6023 1026 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 214


 6024 1027 02       		.uleb128 0x2
 6025 1028 74       		.byte	0x74
 6026 1029 18       		.sleb128 24
 6027 102a 00       		.byte	0
 6028 102b 22       		.uleb128 0x22
 6029 102c 3C000000 		.4byte	.LVL165
 6030 1030 E81E0000 		.4byte	0x1ee8
 6031 1034 3F100000 		.4byte	0x103f
 6032 1038 1E       		.uleb128 0x1e
 6033 1039 01       		.uleb128 0x1
 6034 103a 50       		.byte	0x50
 6035 103b 02       		.uleb128 0x2
 6036 103c 76       		.byte	0x76
 6037 103d 00       		.sleb128 0
 6038 103e 00       		.byte	0
 6039 103f 22       		.uleb128 0x22
 6040 1040 5E000000 		.4byte	.LVL166
 6041 1044 D11E0000 		.4byte	0x1ed1
 6042 1048 53100000 		.4byte	0x1053
 6043 104c 1E       		.uleb128 0x1e
 6044 104d 01       		.uleb128 0x1
 6045 104e 51       		.byte	0x51
 6046 104f 02       		.uleb128 0x2
 6047 1050 76       		.byte	0x76
 6048 1051 00       		.sleb128 0
 6049 1052 00       		.byte	0
 6050 1053 1C       		.uleb128 0x1c
 6051 1054 82000000 		.4byte	.LVL169
 6052 1058 9C040000 		.4byte	0x49c
 6053 105c 1C       		.uleb128 0x1c
 6054 105d CA000000 		.4byte	.LVL179
 6055 1061 DD1E0000 		.4byte	0x1edd
 6056 1065 00       		.byte	0
 6057 1066 27       		.uleb128 0x27
 6058 1067 D1080000 		.4byte	.LASF126
 6059 106b 01       		.byte	0x1
 6060 106c DC04     		.2byte	0x4dc
 6061 106e 00000000 		.4byte	.LFB71
 6062 1072 6C000000 		.4byte	.LFE71-.LFB71
 6063 1076 01       		.uleb128 0x1
 6064 1077 9C       		.byte	0x9c
 6065 1078 06110000 		.4byte	0x1106
 6066 107c 18       		.uleb128 0x18
 6067 107d A3080000 		.4byte	.LASF127
 6068 1081 01       		.byte	0x1
 6069 1082 DC04     		.2byte	0x4dc
 6070 1084 0C110000 		.4byte	0x110c
 6071 1088 31080000 		.4byte	.LLST55
 6072 108c 18       		.uleb128 0x18
 6073 108d 3C0D0000 		.4byte	.LASF128
 6074 1091 01       		.byte	0x1
 6075 1092 DD04     		.2byte	0x4dd
 6076 1094 31080000 		.4byte	0x831
 6077 1098 5D080000 		.4byte	.LLST56
 6078 109c 19       		.uleb128 0x19
 6079 109d F2000000 		.4byte	.LASF94
 6080 10a1 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 215


 6081 10a2 DF04     		.2byte	0x4df
 6082 10a4 4B010000 		.4byte	0x14b
 6083 10a8 89080000 		.4byte	.LLST57
 6084 10ac 20       		.uleb128 0x20
 6085 10ad FE000000 		.4byte	.LASF124
 6086 10b1 01       		.byte	0x1
 6087 10b2 E004     		.2byte	0x4e0
 6088 10b4 35010000 		.4byte	0x135
 6089 10b8 01       		.uleb128 0x1
 6090 10b9 50       		.byte	0x50
 6091 10ba 19       		.uleb128 0x19
 6092 10bb C30A0000 		.4byte	.LASF129
 6093 10bf 01       		.byte	0x1
 6094 10c0 E004     		.2byte	0x4e0
 6095 10c2 35010000 		.4byte	0x135
 6096 10c6 9C080000 		.4byte	.LLST58
 6097 10ca 31       		.uleb128 0x31
 6098 10cb 20000000 		.4byte	.Ldebug_ranges0+0x20
 6099 10cf F3100000 		.4byte	0x10f3
 6100 10d3 19       		.uleb128 0x19
 6101 10d4 3B040000 		.4byte	.LASF95
 6102 10d8 01       		.byte	0x1
 6103 10d9 EA04     		.2byte	0x4ea
 6104 10db 31080000 		.4byte	0x831
 6105 10df BB080000 		.4byte	.LLST59
 6106 10e3 1D       		.uleb128 0x1d
 6107 10e4 4A000000 		.4byte	.LVL188
 6108 10e8 A3070000 		.4byte	0x7a3
 6109 10ec 1E       		.uleb128 0x1e
 6110 10ed 01       		.uleb128 0x1
 6111 10ee 51       		.byte	0x51
 6112 10ef 01       		.uleb128 0x1
 6113 10f0 30       		.byte	0x30
 6114 10f1 00       		.byte	0
 6115 10f2 00       		.byte	0
 6116 10f3 1C       		.uleb128 0x1c
 6117 10f4 0A000000 		.4byte	.LVL183
 6118 10f8 270E0000 		.4byte	0xe27
 6119 10fc 1C       		.uleb128 0x1c
 6120 10fd 4E000000 		.4byte	.LVL189
 6121 1101 AD0F0000 		.4byte	0xfad
 6122 1105 00       		.byte	0
 6123 1106 06       		.uleb128 0x6
 6124 1107 04       		.byte	0x4
 6125 1108 4B010000 		.4byte	0x14b
 6126 110c 07       		.uleb128 0x7
 6127 110d 06110000 		.4byte	0x1106
 6128 1111 27       		.uleb128 0x27
 6129 1112 DA000000 		.4byte	.LASF130
 6130 1116 01       		.byte	0x1
 6131 1117 3105     		.2byte	0x531
 6132 1119 00000000 		.4byte	.LFB72
 6133 111d 34000000 		.4byte	.LFE72-.LFB72
 6134 1121 01       		.uleb128 0x1
 6135 1122 9C       		.byte	0x9c
 6136 1123 73110000 		.4byte	0x1173
 6137 1127 18       		.uleb128 0x18
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 216


 6138 1128 180D0000 		.4byte	.LASF131
 6139 112c 01       		.byte	0x1
 6140 112d 3105     		.2byte	0x531
 6141 112f 31080000 		.4byte	0x831
 6142 1133 CE080000 		.4byte	.LLST60
 6143 1137 19       		.uleb128 0x19
 6144 1138 FE000000 		.4byte	.LASF124
 6145 113c 01       		.byte	0x1
 6146 113d 3305     		.2byte	0x533
 6147 113f 35010000 		.4byte	0x135
 6148 1143 05090000 		.4byte	.LLST61
 6149 1147 1C       		.uleb128 0x1c
 6150 1148 0A000000 		.4byte	.LVL193
 6151 114c 270E0000 		.4byte	0xe27
 6152 1150 22       		.uleb128 0x22
 6153 1151 12000000 		.4byte	.LVL194
 6154 1155 A3070000 		.4byte	0x7a3
 6155 1159 69110000 		.4byte	0x1169
 6156 115d 1E       		.uleb128 0x1e
 6157 115e 01       		.uleb128 0x1
 6158 115f 50       		.byte	0x50
 6159 1160 02       		.uleb128 0x2
 6160 1161 74       		.byte	0x74
 6161 1162 00       		.sleb128 0
 6162 1163 1E       		.uleb128 0x1e
 6163 1164 01       		.uleb128 0x1
 6164 1165 51       		.byte	0x51
 6165 1166 01       		.uleb128 0x1
 6166 1167 30       		.byte	0x30
 6167 1168 00       		.byte	0
 6168 1169 1C       		.uleb128 0x1c
 6169 116a 16000000 		.4byte	.LVL195
 6170 116e AD0F0000 		.4byte	0xfad
 6171 1172 00       		.byte	0
 6172 1173 25       		.uleb128 0x25
 6173 1174 4B040000 		.4byte	.LASF132
 6174 1178 01       		.byte	0x1
 6175 1179 330A     		.2byte	0xa33
 6176 117b 35010000 		.4byte	0x135
 6177 117f 00000000 		.4byte	.LFB88
 6178 1183 20000000 		.4byte	.LFE88-.LFB88
 6179 1187 01       		.uleb128 0x1
 6180 1188 9C       		.byte	0x9c
 6181 1189 BE110000 		.4byte	0x11be
 6182 118d 18       		.uleb128 0x18
 6183 118e B8070000 		.4byte	.LASF133
 6184 1192 01       		.byte	0x1
 6185 1193 330A     		.2byte	0xa33
 6186 1195 4B010000 		.4byte	0x14b
 6187 1199 3B090000 		.4byte	.LLST62
 6188 119d 20       		.uleb128 0x20
 6189 119e D4040000 		.4byte	.LASF134
 6190 11a2 01       		.byte	0x1
 6191 11a3 350A     		.2byte	0xa35
 6192 11a5 35010000 		.4byte	0x135
 6193 11a9 01       		.uleb128 0x1
 6194 11aa 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 217


 6195 11ab 1C       		.uleb128 0x1c
 6196 11ac 08000000 		.4byte	.LVL199
 6197 11b0 270E0000 		.4byte	0xe27
 6198 11b4 1C       		.uleb128 0x1c
 6199 11b5 18000000 		.4byte	.LVL201
 6200 11b9 AD0F0000 		.4byte	0xfad
 6201 11bd 00       		.byte	0
 6202 11be 27       		.uleb128 0x27
 6203 11bf 6B060000 		.4byte	.LASF135
 6204 11c3 01       		.byte	0x1
 6205 11c4 B20B     		.2byte	0xbb2
 6206 11c6 00000000 		.4byte	.LFB90
 6207 11ca 80000000 		.4byte	.LFE90-.LFB90
 6208 11ce 01       		.uleb128 0x1
 6209 11cf 9C       		.byte	0x9c
 6210 11d0 0B120000 		.4byte	0x120b
 6211 11d4 30       		.uleb128 0x30
 6212 11d5 40000000 		.4byte	.Ldebug_ranges0+0x40
 6213 11d9 20       		.uleb128 0x20
 6214 11da 3A080000 		.4byte	.LASF136
 6215 11de 01       		.byte	0x1
 6216 11df E70B     		.2byte	0xbe7
 6217 11e1 40010000 		.4byte	0x140
 6218 11e5 01       		.uleb128 0x1
 6219 11e6 53       		.byte	0x53
 6220 11e7 23       		.uleb128 0x23
 6221 11e8 34000000 		.4byte	.LBB45
 6222 11ec 40000000 		.4byte	.LBE45-.LBB45
 6223 11f0 20       		.uleb128 0x20
 6224 11f1 04050000 		.4byte	.LASF137
 6225 11f5 01       		.byte	0x1
 6226 11f6 E70B     		.2byte	0xbe7
 6227 11f8 0B120000 		.4byte	0x120b
 6228 11fc 0B       		.uleb128 0xb
 6229 11fd 73       		.byte	0x73
 6230 11fe 00       		.sleb128 0
 6231 11ff 44       		.byte	0x44
 6232 1200 1E       		.byte	0x1e
 6233 1201 03       		.byte	0x3
 6234 1202 30000000 		.4byte	pxReadyTasksLists
 6235 1206 22       		.byte	0x22
 6236 1207 9F       		.byte	0x9f
 6237 1208 00       		.byte	0
 6238 1209 00       		.byte	0
 6239 120a 00       		.byte	0
 6240 120b 07       		.uleb128 0x7
 6241 120c A70F0000 		.4byte	0xfa7
 6242 1210 27       		.uleb128 0x27
 6243 1211 2F000000 		.4byte	.LASF138
 6244 1215 01       		.byte	0x1
 6245 1216 A306     		.2byte	0x6a3
 6246 1218 00000000 		.4byte	.LFB76
 6247 121c AC000000 		.4byte	.LFE76-.LFB76
 6248 1220 01       		.uleb128 0x1
 6249 1221 9C       		.byte	0x9c
 6250 1222 DE120000 		.4byte	0x12de
 6251 1226 18       		.uleb128 0x18
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 218


 6252 1227 10070000 		.4byte	.LASF139
 6253 122b 01       		.byte	0x1
 6254 122c A306     		.2byte	0x6a3
 6255 122e 49020000 		.4byte	0x249
 6256 1232 67090000 		.4byte	.LLST63
 6257 1236 19       		.uleb128 0x19
 6258 1237 2F050000 		.4byte	.LASF75
 6259 123b 01       		.byte	0x1
 6260 123c A506     		.2byte	0x6a5
 6261 123e EE040000 		.4byte	0x4ee
 6262 1242 85090000 		.4byte	.LLST64
 6263 1246 26       		.uleb128 0x26
 6264 1247 2C000000 		.4byte	.LBB47
 6265 124b 1E000000 		.4byte	.LBE47-.LBB47
 6266 124f 62120000 		.4byte	0x1262
 6267 1253 21       		.uleb128 0x21
 6268 1254 7800     		.ascii	"x\000"
 6269 1256 01       		.byte	0x1
 6270 1257 C806     		.2byte	0x6c8
 6271 1259 35010000 		.4byte	0x135
 6272 125d 98090000 		.4byte	.LLST65
 6273 1261 00       		.byte	0
 6274 1262 1C       		.uleb128 0x1c
 6275 1263 08000000 		.4byte	.LVL206
 6276 1267 C61E0000 		.4byte	0x1ec6
 6277 126b 22       		.uleb128 0x22
 6278 126c 18000000 		.4byte	.LVL208
 6279 1270 E81E0000 		.4byte	0x1ee8
 6280 1274 7F120000 		.4byte	0x127f
 6281 1278 1E       		.uleb128 0x1e
 6282 1279 01       		.uleb128 0x1
 6283 127a 50       		.byte	0x50
 6284 127b 02       		.uleb128 0x2
 6285 127c 75       		.byte	0x75
 6286 127d 00       		.sleb128 0
 6287 127e 00       		.byte	0
 6288 127f 22       		.uleb128 0x22
 6289 1280 24000000 		.4byte	.LVL209
 6290 1284 E81E0000 		.4byte	0x1ee8
 6291 1288 93120000 		.4byte	0x1293
 6292 128c 1E       		.uleb128 0x1e
 6293 128d 01       		.uleb128 0x1
 6294 128e 50       		.byte	0x50
 6295 128f 02       		.uleb128 0x2
 6296 1290 74       		.byte	0x74
 6297 1291 18       		.sleb128 24
 6298 1292 00       		.byte	0
 6299 1293 22       		.uleb128 0x22
 6300 1294 2C000000 		.4byte	.LVL210
 6301 1298 D11E0000 		.4byte	0x1ed1
 6302 129c B0120000 		.4byte	0x12b0
 6303 12a0 1E       		.uleb128 0x1e
 6304 12a1 01       		.uleb128 0x1
 6305 12a2 50       		.byte	0x50
 6306 12a3 05       		.uleb128 0x5
 6307 12a4 03       		.byte	0x3
 6308 12a5 00000000 		.4byte	.LANCHOR0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 219


 6309 12a9 1E       		.uleb128 0x1e
 6310 12aa 01       		.uleb128 0x1
 6311 12ab 51       		.byte	0x51
 6312 12ac 02       		.uleb128 0x2
 6313 12ad 75       		.byte	0x75
 6314 12ae 00       		.sleb128 0
 6315 12af 00       		.byte	0
 6316 12b0 1C       		.uleb128 0x1c
 6317 12b1 4E000000 		.4byte	.LVL213
 6318 12b5 DD1E0000 		.4byte	0x1edd
 6319 12b9 1C       		.uleb128 0x1c
 6320 12ba 5A000000 		.4byte	.LVL214
 6321 12be C61E0000 		.4byte	0x1ec6
 6322 12c2 1C       		.uleb128 0x1c
 6323 12c3 5E000000 		.4byte	.LVL215
 6324 12c7 9C040000 		.4byte	0x49c
 6325 12cb 1C       		.uleb128 0x1c
 6326 12cc 62000000 		.4byte	.LVL216
 6327 12d0 DD1E0000 		.4byte	0x1edd
 6328 12d4 1C       		.uleb128 0x1c
 6329 12d5 A0000000 		.4byte	.LVL219
 6330 12d9 BE110000 		.4byte	0x11be
 6331 12dd 00       		.byte	0
 6332 12de 27       		.uleb128 0x27
 6333 12df C8030000 		.4byte	.LASF140
 6334 12e3 01       		.byte	0x1
 6335 12e4 FE0B     		.2byte	0xbfe
 6336 12e6 00000000 		.4byte	.LFB91
 6337 12ea 20000000 		.4byte	.LFE91-.LFB91
 6338 12ee 01       		.uleb128 0x1
 6339 12ef 9C       		.byte	0x9c
 6340 12f0 3F130000 		.4byte	0x133f
 6341 12f4 18       		.uleb128 0x18
 6342 12f5 20060000 		.4byte	.LASF141
 6343 12f9 01       		.byte	0x1
 6344 12fa FE0B     		.2byte	0xbfe
 6345 12fc 0B120000 		.4byte	0x120b
 6346 1300 B7090000 		.4byte	.LLST66
 6347 1304 18       		.uleb128 0x18
 6348 1305 89010000 		.4byte	.LASF92
 6349 1309 01       		.byte	0x1
 6350 130a FF0B     		.2byte	0xbff
 6351 130c 31080000 		.4byte	0x831
 6352 1310 D8090000 		.4byte	.LLST67
 6353 1314 22       		.uleb128 0x22
 6354 1315 10000000 		.4byte	.LVL223
 6355 1319 F41E0000 		.4byte	0x1ef4
 6356 131d 29130000 		.4byte	0x1329
 6357 1321 1E       		.uleb128 0x1e
 6358 1322 01       		.uleb128 0x1
 6359 1323 50       		.byte	0x50
 6360 1324 03       		.uleb128 0x3
 6361 1325 F3       		.byte	0xf3
 6362 1326 01       		.uleb128 0x1
 6363 1327 50       		.byte	0x50
 6364 1328 00       		.byte	0
 6365 1329 1D       		.uleb128 0x1d
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 220


 6366 132a 18000000 		.4byte	.LVL224
 6367 132e A3070000 		.4byte	0x7a3
 6368 1332 1E       		.uleb128 0x1e
 6369 1333 01       		.uleb128 0x1
 6370 1334 50       		.byte	0x50
 6371 1335 02       		.uleb128 0x2
 6372 1336 74       		.byte	0x74
 6373 1337 00       		.sleb128 0
 6374 1338 1E       		.uleb128 0x1e
 6375 1339 01       		.uleb128 0x1
 6376 133a 51       		.byte	0x51
 6377 133b 01       		.uleb128 0x1
 6378 133c 31       		.byte	0x31
 6379 133d 00       		.byte	0
 6380 133e 00       		.byte	0
 6381 133f 27       		.uleb128 0x27
 6382 1340 5D040000 		.4byte	.LASF142
 6383 1344 01       		.byte	0x1
 6384 1345 100C     		.2byte	0xc10
 6385 1347 00000000 		.4byte	.LFB92
 6386 134b 28000000 		.4byte	.LFE92-.LFB92
 6387 134f 01       		.uleb128 0x1
 6388 1350 9C       		.byte	0x9c
 6389 1351 B0130000 		.4byte	0x13b0
 6390 1355 18       		.uleb128 0x18
 6391 1356 20060000 		.4byte	.LASF141
 6392 135a 01       		.byte	0x1
 6393 135b 100C     		.2byte	0xc10
 6394 135d A70F0000 		.4byte	0xfa7
 6395 1361 040A0000 		.4byte	.LLST68
 6396 1365 18       		.uleb128 0x18
 6397 1366 8B0B0000 		.4byte	.LASF28
 6398 136a 01       		.byte	0x1
 6399 136b 110C     		.2byte	0xc11
 6400 136d 31080000 		.4byte	0x831
 6401 1371 250A0000 		.4byte	.LLST69
 6402 1375 18       		.uleb128 0x18
 6403 1376 89010000 		.4byte	.LASF92
 6404 137a 01       		.byte	0x1
 6405 137b 120C     		.2byte	0xc12
 6406 137d 31080000 		.4byte	0x831
 6407 1381 460A0000 		.4byte	.LLST70
 6408 1385 22       		.uleb128 0x22
 6409 1386 1A000000 		.4byte	.LVL229
 6410 138a D11E0000 		.4byte	0x1ed1
 6411 138e 9A130000 		.4byte	0x139a
 6412 1392 1E       		.uleb128 0x1e
 6413 1393 01       		.uleb128 0x1
 6414 1394 50       		.byte	0x50
 6415 1395 03       		.uleb128 0x3
 6416 1396 F3       		.byte	0xf3
 6417 1397 01       		.uleb128 0x1
 6418 1398 50       		.byte	0x50
 6419 1399 00       		.byte	0
 6420 139a 1D       		.uleb128 0x1d
 6421 139b 22000000 		.4byte	.LVL230
 6422 139f A3070000 		.4byte	0x7a3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 221


 6423 13a3 1E       		.uleb128 0x1e
 6424 13a4 01       		.uleb128 0x1
 6425 13a5 50       		.byte	0x50
 6426 13a6 02       		.uleb128 0x2
 6427 13a7 74       		.byte	0x74
 6428 13a8 00       		.sleb128 0
 6429 13a9 1E       		.uleb128 0x1e
 6430 13aa 01       		.uleb128 0x1
 6431 13ab 51       		.byte	0x51
 6432 13ac 01       		.uleb128 0x1
 6433 13ad 31       		.byte	0x31
 6434 13ae 00       		.byte	0
 6435 13af 00       		.byte	0
 6436 13b0 27       		.uleb128 0x27
 6437 13b1 AE0D0000 		.4byte	.LASF143
 6438 13b5 01       		.byte	0x1
 6439 13b6 2C0C     		.2byte	0xc2c
 6440 13b8 00000000 		.4byte	.LFB93
 6441 13bc 28000000 		.4byte	.LFE93-.LFB93
 6442 13c0 01       		.uleb128 0x1
 6443 13c1 9C       		.byte	0x9c
 6444 13c2 22140000 		.4byte	0x1422
 6445 13c6 18       		.uleb128 0x18
 6446 13c7 20060000 		.4byte	.LASF141
 6447 13cb 01       		.byte	0x1
 6448 13cc 2C0C     		.2byte	0xc2c
 6449 13ce 0B120000 		.4byte	0x120b
 6450 13d2 720A0000 		.4byte	.LLST71
 6451 13d6 18       		.uleb128 0x18
 6452 13d7 89010000 		.4byte	.LASF92
 6453 13db 01       		.byte	0x1
 6454 13dc 2D0C     		.2byte	0xc2d
 6455 13de 4B010000 		.4byte	0x14b
 6456 13e2 930A0000 		.4byte	.LLST72
 6457 13e6 18       		.uleb128 0x18
 6458 13e7 470C0000 		.4byte	.LASF144
 6459 13eb 01       		.byte	0x1
 6460 13ec 2E0C     		.2byte	0xc2e
 6461 13ee 2C080000 		.4byte	0x82c
 6462 13f2 B10A0000 		.4byte	.LLST73
 6463 13f6 22       		.uleb128 0x22
 6464 13f7 12000000 		.4byte	.LVL234
 6465 13fb D11E0000 		.4byte	0x1ed1
 6466 13ff 0B140000 		.4byte	0x140b
 6467 1403 1E       		.uleb128 0x1e
 6468 1404 01       		.uleb128 0x1
 6469 1405 50       		.byte	0x50
 6470 1406 03       		.uleb128 0x3
 6471 1407 F3       		.byte	0xf3
 6472 1408 01       		.uleb128 0x1
 6473 1409 50       		.byte	0x50
 6474 140a 00       		.byte	0
 6475 140b 1D       		.uleb128 0x1d
 6476 140c 20000000 		.4byte	.LVL236
 6477 1410 A3070000 		.4byte	0x7a3
 6478 1414 1E       		.uleb128 0x1e
 6479 1415 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 222


 6480 1416 50       		.byte	0x50
 6481 1417 02       		.uleb128 0x2
 6482 1418 75       		.byte	0x75
 6483 1419 00       		.sleb128 0
 6484 141a 1E       		.uleb128 0x1e
 6485 141b 01       		.uleb128 0x1
 6486 141c 51       		.byte	0x51
 6487 141d 02       		.uleb128 0x2
 6488 141e 74       		.byte	0x74
 6489 141f 00       		.sleb128 0
 6490 1420 00       		.byte	0
 6491 1421 00       		.byte	0
 6492 1422 25       		.uleb128 0x25
 6493 1423 720B0000 		.4byte	.LASF145
 6494 1427 01       		.byte	0x1
 6495 1428 4D0C     		.2byte	0xc4d
 6496 142a 35010000 		.4byte	0x135
 6497 142e 00000000 		.4byte	.LFB94
 6498 1432 74000000 		.4byte	.LFE94-.LFB94
 6499 1436 01       		.uleb128 0x1
 6500 1437 9C       		.byte	0x9c
 6501 1438 C2140000 		.4byte	0x14c2
 6502 143c 18       		.uleb128 0x18
 6503 143d 20060000 		.4byte	.LASF141
 6504 1441 01       		.byte	0x1
 6505 1442 4D0C     		.2byte	0xc4d
 6506 1444 CD140000 		.4byte	0x14cd
 6507 1448 DD0A0000 		.4byte	.LLST74
 6508 144c 19       		.uleb128 0x19
 6509 144d 23090000 		.4byte	.LASF146
 6510 1451 01       		.byte	0x1
 6511 1452 4F0C     		.2byte	0xc4f
 6512 1454 EE040000 		.4byte	0x4ee
 6513 1458 FE0A0000 		.4byte	.LLST75
 6514 145c 19       		.uleb128 0x19
 6515 145d 33040000 		.4byte	.LASF74
 6516 1461 01       		.byte	0x1
 6517 1462 500C     		.2byte	0xc50
 6518 1464 35010000 		.4byte	0x135
 6519 1468 110B0000 		.4byte	.LLST76
 6520 146c 22       		.uleb128 0x22
 6521 146d 10000000 		.4byte	.LVL241
 6522 1471 E81E0000 		.4byte	0x1ee8
 6523 1475 80140000 		.4byte	0x1480
 6524 1479 1E       		.uleb128 0x1e
 6525 147a 01       		.uleb128 0x1
 6526 147b 50       		.byte	0x50
 6527 147c 02       		.uleb128 0x2
 6528 147d 75       		.byte	0x75
 6529 147e 00       		.sleb128 0
 6530 147f 00       		.byte	0
 6531 1480 22       		.uleb128 0x22
 6532 1481 20000000 		.4byte	.LVL242
 6533 1485 E81E0000 		.4byte	0x1ee8
 6534 1489 94140000 		.4byte	0x1494
 6535 148d 1E       		.uleb128 0x1e
 6536 148e 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 223


 6537 148f 50       		.byte	0x50
 6538 1490 02       		.uleb128 0x2
 6539 1491 75       		.byte	0x75
 6540 1492 00       		.sleb128 0
 6541 1493 00       		.byte	0
 6542 1494 22       		.uleb128 0x22
 6543 1495 42000000 		.4byte	.LVL243
 6544 1499 D11E0000 		.4byte	0x1ed1
 6545 149d A8140000 		.4byte	0x14a8
 6546 14a1 1E       		.uleb128 0x1e
 6547 14a2 01       		.uleb128 0x1
 6548 14a3 51       		.byte	0x51
 6549 14a4 02       		.uleb128 0x2
 6550 14a5 75       		.byte	0x75
 6551 14a6 00       		.sleb128 0
 6552 14a7 00       		.byte	0
 6553 14a8 1D       		.uleb128 0x1d
 6554 14a9 4C000000 		.4byte	.LVL244
 6555 14ad D11E0000 		.4byte	0x1ed1
 6556 14b1 1E       		.uleb128 0x1e
 6557 14b2 01       		.uleb128 0x1
 6558 14b3 50       		.byte	0x50
 6559 14b4 05       		.uleb128 0x5
 6560 14b5 03       		.byte	0x3
 6561 14b6 14000000 		.4byte	.LANCHOR0+20
 6562 14ba 1E       		.uleb128 0x1e
 6563 14bb 01       		.uleb128 0x1
 6564 14bc 51       		.byte	0x51
 6565 14bd 02       		.uleb128 0x2
 6566 14be 75       		.byte	0x75
 6567 14bf 00       		.sleb128 0
 6568 14c0 00       		.byte	0
 6569 14c1 00       		.byte	0
 6570 14c2 06       		.uleb128 0x6
 6571 14c3 04       		.byte	0x4
 6572 14c4 C8140000 		.4byte	0x14c8
 6573 14c8 07       		.uleb128 0x7
 6574 14c9 3E020000 		.4byte	0x23e
 6575 14cd 07       		.uleb128 0x7
 6576 14ce C2140000 		.4byte	0x14c2
 6577 14d2 27       		.uleb128 0x27
 6578 14d3 C40E0000 		.4byte	.LASF147
 6579 14d7 01       		.byte	0x1
 6580 14d8 910C     		.2byte	0xc91
 6581 14da 00000000 		.4byte	.LFB95
 6582 14de 54000000 		.4byte	.LFE95-.LFB95
 6583 14e2 01       		.uleb128 0x1
 6584 14e3 9C       		.byte	0x9c
 6585 14e4 52150000 		.4byte	0x1552
 6586 14e8 18       		.uleb128 0x18
 6587 14e9 010C0000 		.4byte	.LASF148
 6588 14ed 01       		.byte	0x1
 6589 14ee 910C     		.2byte	0xc91
 6590 14f0 38020000 		.4byte	0x238
 6591 14f4 300B0000 		.4byte	.LLST77
 6592 14f8 18       		.uleb128 0x18
 6593 14f9 8B0B0000 		.4byte	.LASF28
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 224


 6594 14fd 01       		.byte	0x1
 6595 14fe 920C     		.2byte	0xc92
 6596 1500 31080000 		.4byte	0x831
 6597 1504 510B0000 		.4byte	.LLST78
 6598 1508 19       		.uleb128 0x19
 6599 1509 23090000 		.4byte	.LASF146
 6600 150d 01       		.byte	0x1
 6601 150e 940C     		.2byte	0xc94
 6602 1510 EE040000 		.4byte	0x4ee
 6603 1514 720B0000 		.4byte	.LLST79
 6604 1518 22       		.uleb128 0x22
 6605 1519 0E000000 		.4byte	.LVL252
 6606 151d E81E0000 		.4byte	0x1ee8
 6607 1521 2D150000 		.4byte	0x152d
 6608 1525 1E       		.uleb128 0x1e
 6609 1526 01       		.uleb128 0x1
 6610 1527 50       		.byte	0x50
 6611 1528 03       		.uleb128 0x3
 6612 1529 F3       		.byte	0xf3
 6613 152a 01       		.uleb128 0x1
 6614 152b 50       		.byte	0x50
 6615 152c 00       		.byte	0
 6616 152d 22       		.uleb128 0x22
 6617 152e 16000000 		.4byte	.LVL253
 6618 1532 E81E0000 		.4byte	0x1ee8
 6619 1536 41150000 		.4byte	0x1541
 6620 153a 1E       		.uleb128 0x1e
 6621 153b 01       		.uleb128 0x1
 6622 153c 50       		.byte	0x50
 6623 153d 02       		.uleb128 0x2
 6624 153e 76       		.byte	0x76
 6625 153f 00       		.sleb128 0
 6626 1540 00       		.byte	0
 6627 1541 1D       		.uleb128 0x1d
 6628 1542 3C000000 		.4byte	.LVL254
 6629 1546 D11E0000 		.4byte	0x1ed1
 6630 154a 1E       		.uleb128 0x1e
 6631 154b 01       		.uleb128 0x1
 6632 154c 51       		.byte	0x51
 6633 154d 02       		.uleb128 0x2
 6634 154e 76       		.byte	0x76
 6635 154f 00       		.sleb128 0
 6636 1550 00       		.byte	0
 6637 1551 00       		.byte	0
 6638 1552 27       		.uleb128 0x27
 6639 1553 860E0000 		.4byte	.LASF149
 6640 1557 01       		.byte	0x1
 6641 1558 C20C     		.2byte	0xcc2
 6642 155a 00000000 		.4byte	.LFB96
 6643 155e 20000000 		.4byte	.LFE96-.LFB96
 6644 1562 01       		.uleb128 0x1
 6645 1563 9C       		.byte	0x9c
 6646 1564 8B150000 		.4byte	0x158b
 6647 1568 18       		.uleb128 0x18
 6648 1569 0E010000 		.4byte	.LASF150
 6649 156d 01       		.byte	0x1
 6650 156e C20C     		.2byte	0xcc2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 225


 6651 1570 91150000 		.4byte	0x1591
 6652 1574 850B0000 		.4byte	.LLST80
 6653 1578 1C       		.uleb128 0x1c
 6654 1579 08000000 		.4byte	.LVL257
 6655 157d C61E0000 		.4byte	0x1ec6
 6656 1581 1C       		.uleb128 0x1c
 6657 1582 1A000000 		.4byte	.LVL258
 6658 1586 DD1E0000 		.4byte	0x1edd
 6659 158a 00       		.byte	0
 6660 158b 06       		.uleb128 0x6
 6661 158c 04       		.byte	0x4
 6662 158d 36030000 		.4byte	0x336
 6663 1591 07       		.uleb128 0x7
 6664 1592 8B150000 		.4byte	0x158b
 6665 1596 27       		.uleb128 0x27
 6666 1597 D50C0000 		.4byte	.LASF151
 6667 159b 01       		.byte	0x1
 6668 159c CE0C     		.2byte	0xcce
 6669 159e 00000000 		.4byte	.LFB97
 6670 15a2 14000000 		.4byte	.LFE97-.LFB97
 6671 15a6 01       		.uleb128 0x1
 6672 15a7 9C       		.byte	0x9c
 6673 15a8 BB150000 		.4byte	0x15bb
 6674 15ac 1F       		.uleb128 0x1f
 6675 15ad 0E010000 		.4byte	.LASF150
 6676 15b1 01       		.byte	0x1
 6677 15b2 CE0C     		.2byte	0xcce
 6678 15b4 91150000 		.4byte	0x1591
 6679 15b8 01       		.uleb128 0x1
 6680 15b9 50       		.byte	0x50
 6681 15ba 00       		.byte	0
 6682 15bb 25       		.uleb128 0x25
 6683 15bc DF0B0000 		.4byte	.LASF152
 6684 15c0 01       		.byte	0x1
 6685 15c1 D60C     		.2byte	0xcd6
 6686 15c3 35010000 		.4byte	0x135
 6687 15c7 00000000 		.4byte	.LFB98
 6688 15cb 5C000000 		.4byte	.LFE98-.LFB98
 6689 15cf 01       		.uleb128 0x1
 6690 15d0 9C       		.byte	0x9c
 6691 15d1 56160000 		.4byte	0x1656
 6692 15d5 18       		.uleb128 0x18
 6693 15d6 0E010000 		.4byte	.LASF150
 6694 15da 01       		.byte	0x1
 6695 15db D60C     		.2byte	0xcd6
 6696 15dd 91150000 		.4byte	0x1591
 6697 15e1 B10B0000 		.4byte	.LLST81
 6698 15e5 18       		.uleb128 0x18
 6699 15e6 780D0000 		.4byte	.LASF153
 6700 15ea 01       		.byte	0x1
 6701 15eb D70C     		.2byte	0xcd7
 6702 15ed 0C110000 		.4byte	0x110c
 6703 15f1 280C0000 		.4byte	.LLST82
 6704 15f5 19       		.uleb128 0x19
 6705 15f6 33040000 		.4byte	.LASF74
 6706 15fa 01       		.byte	0x1
 6707 15fb D90C     		.2byte	0xcd9
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 226


 6708 15fd 35010000 		.4byte	0x135
 6709 1601 540C0000 		.4byte	.LLST83
 6710 1605 26       		.uleb128 0x26
 6711 1606 0A000000 		.4byte	.LBB48
 6712 160a 46000000 		.4byte	.LBE48-.LBB48
 6713 160e 43160000 		.4byte	0x1643
 6714 1612 19       		.uleb128 0x19
 6715 1613 3B040000 		.4byte	.LASF95
 6716 1617 01       		.byte	0x1
 6717 1618 E10C     		.2byte	0xce1
 6718 161a 31080000 		.4byte	0x831
 6719 161e 960C0000 		.4byte	.LLST84
 6720 1622 19       		.uleb128 0x19
 6721 1623 5E060000 		.4byte	.LASF154
 6722 1627 01       		.byte	0x1
 6723 1628 E20C     		.2byte	0xce2
 6724 162a 31080000 		.4byte	0x831
 6725 162e B40C0000 		.4byte	.LLST85
 6726 1632 1D       		.uleb128 0x1d
 6727 1633 42000000 		.4byte	.LVL269
 6728 1637 96150000 		.4byte	0x1596
 6729 163b 1E       		.uleb128 0x1e
 6730 163c 01       		.uleb128 0x1
 6731 163d 50       		.byte	0x50
 6732 163e 02       		.uleb128 0x2
 6733 163f 74       		.byte	0x74
 6734 1640 00       		.sleb128 0
 6735 1641 00       		.byte	0
 6736 1642 00       		.byte	0
 6737 1643 1C       		.uleb128 0x1c
 6738 1644 0A000000 		.4byte	.LVL262
 6739 1648 C61E0000 		.4byte	0x1ec6
 6740 164c 1C       		.uleb128 0x1c
 6741 164d 54000000 		.4byte	.LVL276
 6742 1651 DD1E0000 		.4byte	0x1edd
 6743 1655 00       		.byte	0
 6744 1656 2D       		.uleb128 0x2d
 6745 1657 62010000 		.4byte	.LASF156
 6746 165b 01       		.byte	0x1
 6747 165c 170D     		.2byte	0xd17
 6748 165e 00000000 		.4byte	.LFB99
 6749 1662 10000000 		.4byte	.LFE99-.LFB99
 6750 1666 01       		.uleb128 0x1
 6751 1667 9C       		.byte	0x9c
 6752 1668 27       		.uleb128 0x27
 6753 1669 44050000 		.4byte	.LASF157
 6754 166d 01       		.byte	0x1
 6755 166e F60D     		.2byte	0xdf6
 6756 1670 00000000 		.4byte	.LFB101
 6757 1674 1C000000 		.4byte	.LFE101-.LFB101
 6758 1678 01       		.uleb128 0x1
 6759 1679 9C       		.byte	0x9c
 6760 167a BD160000 		.4byte	0x16bd
 6761 167e 18       		.uleb128 0x18
 6762 167f A8010000 		.4byte	.LASF158
 6763 1683 01       		.byte	0x1
 6764 1684 F60D     		.2byte	0xdf6
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 227


 6765 1686 49020000 		.4byte	0x249
 6766 168a E20C0000 		.4byte	.LLST86
 6767 168e 18       		.uleb128 0x18
 6768 168f 07060000 		.4byte	.LASF159
 6769 1693 01       		.byte	0x1
 6770 1694 F70D     		.2byte	0xdf7
 6771 1696 35010000 		.4byte	0x135
 6772 169a F50C0000 		.4byte	.LLST87
 6773 169e 1F       		.uleb128 0x1f
 6774 169f 76080000 		.4byte	.LASF160
 6775 16a3 01       		.byte	0x1
 6776 16a4 F80D     		.2byte	0xdf8
 6777 16a6 B0000000 		.4byte	0xb0
 6778 16aa 01       		.uleb128 0x1
 6779 16ab 52       		.byte	0x52
 6780 16ac 19       		.uleb128 0x19
 6781 16ad 2F050000 		.4byte	.LASF75
 6782 16b1 01       		.byte	0x1
 6783 16b2 FA0D     		.2byte	0xdfa
 6784 16b4 EE040000 		.4byte	0x4ee
 6785 16b8 230D0000 		.4byte	.LLST88
 6786 16bc 00       		.byte	0
 6787 16bd 25       		.uleb128 0x25
 6788 16be 4A0E0000 		.4byte	.LASF161
 6789 16c2 01       		.byte	0x1
 6790 16c3 090E     		.2byte	0xe09
 6791 16c5 B0000000 		.4byte	0xb0
 6792 16c9 00000000 		.4byte	.LFB102
 6793 16cd 20000000 		.4byte	.LFE102-.LFB102
 6794 16d1 01       		.uleb128 0x1
 6795 16d2 9C       		.byte	0x9c
 6796 16d3 18170000 		.4byte	0x1718
 6797 16d7 18       		.uleb128 0x18
 6798 16d8 7A030000 		.4byte	.LASF119
 6799 16dc 01       		.byte	0x1
 6800 16dd 090E     		.2byte	0xe09
 6801 16df 49020000 		.4byte	0x249
 6802 16e3 360D0000 		.4byte	.LLST89
 6803 16e7 18       		.uleb128 0x18
 6804 16e8 07060000 		.4byte	.LASF159
 6805 16ec 01       		.byte	0x1
 6806 16ed 0A0E     		.2byte	0xe0a
 6807 16ef 35010000 		.4byte	0x135
 6808 16f3 620D0000 		.4byte	.LLST90
 6809 16f7 19       		.uleb128 0x19
 6810 16f8 92080000 		.4byte	.LASF162
 6811 16fc 01       		.byte	0x1
 6812 16fd 0C0E     		.2byte	0xe0c
 6813 16ff B0000000 		.4byte	0xb0
 6814 1703 8D0D0000 		.4byte	.LLST91
 6815 1707 19       		.uleb128 0x19
 6816 1708 2F050000 		.4byte	.LASF75
 6817 170c 01       		.byte	0x1
 6818 170d 0D0E     		.2byte	0xe0d
 6819 170f EE040000 		.4byte	0x4ee
 6820 1713 C30D0000 		.4byte	.LLST92
 6821 1717 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 228


 6822 1718 25       		.uleb128 0x25
 6823 1719 1F070000 		.4byte	.LASF163
 6824 171d 01       		.byte	0x1
 6825 171e 9B0F     		.2byte	0xf9b
 6826 1720 49020000 		.4byte	0x249
 6827 1724 00000000 		.4byte	.LFB107
 6828 1728 0C000000 		.4byte	.LFE107-.LFB107
 6829 172c 01       		.uleb128 0x1
 6830 172d 9C       		.byte	0x9c
 6831 172e 41170000 		.4byte	0x1741
 6832 1732 20       		.uleb128 0x20
 6833 1733 33040000 		.4byte	.LASF74
 6834 1737 01       		.byte	0x1
 6835 1738 9D0F     		.2byte	0xf9d
 6836 173a 49020000 		.4byte	0x249
 6837 173e 01       		.uleb128 0x1
 6838 173f 50       		.byte	0x50
 6839 1740 00       		.byte	0
 6840 1741 25       		.uleb128 0x25
 6841 1742 6D0A0000 		.4byte	.LASF164
 6842 1746 01       		.byte	0x1
 6843 1747 AC0F     		.2byte	0xfac
 6844 1749 35010000 		.4byte	0x135
 6845 174d 00000000 		.4byte	.LFB108
 6846 1751 20000000 		.4byte	.LFE108-.LFB108
 6847 1755 01       		.uleb128 0x1
 6848 1756 9C       		.byte	0x9c
 6849 1757 6A170000 		.4byte	0x176a
 6850 175b 20       		.uleb128 0x20
 6851 175c 33040000 		.4byte	.LASF74
 6852 1760 01       		.byte	0x1
 6853 1761 AE0F     		.2byte	0xfae
 6854 1763 35010000 		.4byte	0x135
 6855 1767 01       		.uleb128 0x1
 6856 1768 50       		.byte	0x50
 6857 1769 00       		.byte	0
 6858 176a 25       		.uleb128 0x25
 6859 176b 7B000000 		.4byte	.LASF165
 6860 176f 01       		.byte	0x1
 6861 1770 1B12     		.2byte	0x121b
 6862 1772 4B010000 		.4byte	0x14b
 6863 1776 00000000 		.4byte	.LFB109
 6864 177a 20000000 		.4byte	.LFE109-.LFB109
 6865 177e 01       		.uleb128 0x1
 6866 177f 9C       		.byte	0x9c
 6867 1780 93170000 		.4byte	0x1793
 6868 1784 20       		.uleb128 0x20
 6869 1785 FE050000 		.4byte	.LASF100
 6870 1789 01       		.byte	0x1
 6871 178a 1D12     		.2byte	0x121d
 6872 178c 4B010000 		.4byte	0x14b
 6873 1790 01       		.uleb128 0x1
 6874 1791 50       		.byte	0x50
 6875 1792 00       		.byte	0
 6876 1793 25       		.uleb128 0x25
 6877 1794 02030000 		.4byte	.LASF166
 6878 1798 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 229


 6879 1799 3C12     		.2byte	0x123c
 6880 179b EB000000 		.4byte	0xeb
 6881 179f 00000000 		.4byte	.LFB110
 6882 17a3 A0000000 		.4byte	.LFE110-.LFB110
 6883 17a7 01       		.uleb128 0x1
 6884 17a8 9C       		.byte	0x9c
 6885 17a9 2B180000 		.4byte	0x182b
 6886 17ad 18       		.uleb128 0x18
 6887 17ae 0A0D0000 		.4byte	.LASF167
 6888 17b2 01       		.byte	0x1
 6889 17b3 3C12     		.2byte	0x123c
 6890 17b5 40010000 		.4byte	0x140
 6891 17b9 D60D0000 		.4byte	.LLST93
 6892 17bd 18       		.uleb128 0x18
 6893 17be 96010000 		.4byte	.LASF168
 6894 17c2 01       		.byte	0x1
 6895 17c3 3D12     		.2byte	0x123d
 6896 17c5 35010000 		.4byte	0x135
 6897 17c9 020E0000 		.4byte	.LLST94
 6898 17cd 18       		.uleb128 0x18
 6899 17ce 89010000 		.4byte	.LASF92
 6900 17d2 01       		.byte	0x1
 6901 17d3 3E12     		.2byte	0x123e
 6902 17d5 4B010000 		.4byte	0x14b
 6903 17d9 2E0E0000 		.4byte	.LLST95
 6904 17dd 19       		.uleb128 0x19
 6905 17de 090E0000 		.4byte	.LASF169
 6906 17e2 01       		.byte	0x1
 6907 17e3 4012     		.2byte	0x1240
 6908 17e5 EB000000 		.4byte	0xeb
 6909 17e9 5A0E0000 		.4byte	.LLST96
 6910 17ed 1C       		.uleb128 0x1c
 6911 17ee 0C000000 		.4byte	.LVL294
 6912 17f2 C61E0000 		.4byte	0x1ec6
 6913 17f6 22       		.uleb128 0x22
 6914 17f7 34000000 		.4byte	.LVL295
 6915 17fb A3070000 		.4byte	0x7a3
 6916 17ff 0F180000 		.4byte	0x180f
 6917 1803 1E       		.uleb128 0x1e
 6918 1804 01       		.uleb128 0x1
 6919 1805 50       		.byte	0x50
 6920 1806 02       		.uleb128 0x2
 6921 1807 75       		.byte	0x75
 6922 1808 00       		.sleb128 0
 6923 1809 1E       		.uleb128 0x1e
 6924 180a 01       		.uleb128 0x1
 6925 180b 51       		.byte	0x51
 6926 180c 01       		.uleb128 0x1
 6927 180d 31       		.byte	0x31
 6928 180e 00       		.byte	0
 6929 180f 1C       		.uleb128 0x1c
 6930 1810 48000000 		.4byte	.LVL296
 6931 1814 DD1E0000 		.4byte	0x1edd
 6932 1818 1C       		.uleb128 0x1c
 6933 1819 4C000000 		.4byte	.LVL297
 6934 181d C61E0000 		.4byte	0x1ec6
 6935 1821 1C       		.uleb128 0x1c
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 230


 6936 1822 92000000 		.4byte	.LVL300
 6937 1826 DD1E0000 		.4byte	0x1edd
 6938 182a 00       		.byte	0
 6939 182b 25       		.uleb128 0x25
 6940 182c 91050000 		.4byte	.LASF170
 6941 1830 01       		.byte	0x1
 6942 1831 8412     		.2byte	0x1284
 6943 1833 35010000 		.4byte	0x135
 6944 1837 00000000 		.4byte	.LFB111
 6945 183b C4000000 		.4byte	.LFE111-.LFB111
 6946 183f 01       		.uleb128 0x1
 6947 1840 9C       		.byte	0x9c
 6948 1841 E4180000 		.4byte	0x18e4
 6949 1845 18       		.uleb128 0x18
 6950 1846 0A0D0000 		.4byte	.LASF167
 6951 184a 01       		.byte	0x1
 6952 184b 8412     		.2byte	0x1284
 6953 184d 40010000 		.4byte	0x140
 6954 1851 780E0000 		.4byte	.LLST97
 6955 1855 18       		.uleb128 0x18
 6956 1856 A5060000 		.4byte	.LASF171
 6957 185a 01       		.byte	0x1
 6958 185b 8512     		.2byte	0x1285
 6959 185d EB000000 		.4byte	0xeb
 6960 1861 A40E0000 		.4byte	.LLST98
 6961 1865 18       		.uleb128 0x18
 6962 1866 9B0E0000 		.4byte	.LASF172
 6963 186a 01       		.byte	0x1
 6964 186b 8612     		.2byte	0x1286
 6965 186d EB000000 		.4byte	0xeb
 6966 1871 D00E0000 		.4byte	.LLST99
 6967 1875 18       		.uleb128 0x18
 6968 1876 48080000 		.4byte	.LASF173
 6969 187a 01       		.byte	0x1
 6970 187b 8712     		.2byte	0x1287
 6971 187d E4180000 		.4byte	0x18e4
 6972 1881 150F0000 		.4byte	.LLST100
 6973 1885 18       		.uleb128 0x18
 6974 1886 89010000 		.4byte	.LASF92
 6975 188a 01       		.byte	0x1
 6976 188b 8812     		.2byte	0x1288
 6977 188d 4B010000 		.4byte	0x14b
 6978 1891 410F0000 		.4byte	.LLST101
 6979 1895 19       		.uleb128 0x19
 6980 1896 33040000 		.4byte	.LASF74
 6981 189a 01       		.byte	0x1
 6982 189b 8A12     		.2byte	0x128a
 6983 189d 35010000 		.4byte	0x135
 6984 18a1 610F0000 		.4byte	.LLST102
 6985 18a5 1C       		.uleb128 0x1c
 6986 18a6 0E000000 		.4byte	.LVL303
 6987 18aa C61E0000 		.4byte	0x1ec6
 6988 18ae 22       		.uleb128 0x22
 6989 18af 4E000000 		.4byte	.LVL304
 6990 18b3 A3070000 		.4byte	0x7a3
 6991 18b7 C8180000 		.4byte	0x18c8
 6992 18bb 1E       		.uleb128 0x1e
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 231


 6993 18bc 01       		.uleb128 0x1
 6994 18bd 50       		.byte	0x50
 6995 18be 03       		.uleb128 0x3
 6996 18bf 91       		.byte	0x91
 6997 18c0 00       		.sleb128 0
 6998 18c1 06       		.byte	0x6
 6999 18c2 1E       		.uleb128 0x1e
 7000 18c3 01       		.uleb128 0x1
 7001 18c4 51       		.byte	0x51
 7002 18c5 01       		.uleb128 0x1
 7003 18c6 31       		.byte	0x31
 7004 18c7 00       		.byte	0
 7005 18c8 1C       		.uleb128 0x1c
 7006 18c9 62000000 		.4byte	.LVL305
 7007 18cd DD1E0000 		.4byte	0x1edd
 7008 18d1 1C       		.uleb128 0x1c
 7009 18d2 66000000 		.4byte	.LVL306
 7010 18d6 C61E0000 		.4byte	0x1ec6
 7011 18da 1C       		.uleb128 0x1c
 7012 18db B8000000 		.4byte	.LVL312
 7013 18df DD1E0000 		.4byte	0x1edd
 7014 18e3 00       		.byte	0
 7015 18e4 06       		.uleb128 0x6
 7016 18e5 04       		.byte	0x4
 7017 18e6 EB000000 		.4byte	0xeb
 7018 18ea 25       		.uleb128 0x25
 7019 18eb B70C0000 		.4byte	.LASF174
 7020 18ef 01       		.byte	0x1
 7021 18f0 DA12     		.2byte	0x12da
 7022 18f2 35010000 		.4byte	0x135
 7023 18f6 00000000 		.4byte	.LFB112
 7024 18fa E0000000 		.4byte	.LFE112-.LFB112
 7025 18fe 01       		.uleb128 0x1
 7026 18ff 9C       		.byte	0x9c
 7027 1900 BF190000 		.4byte	0x19bf
 7028 1904 18       		.uleb128 0x18
 7029 1905 AC040000 		.4byte	.LASF175
 7030 1909 01       		.byte	0x1
 7031 190a DA12     		.2byte	0x12da
 7032 190c 49020000 		.4byte	0x249
 7033 1910 8B0F0000 		.4byte	.LLST103
 7034 1914 18       		.uleb128 0x18
 7035 1915 FA0C0000 		.4byte	.LASF176
 7036 1919 01       		.byte	0x1
 7037 191a DB12     		.2byte	0x12db
 7038 191c 40010000 		.4byte	0x140
 7039 1920 B70F0000 		.4byte	.LLST104
 7040 1924 18       		.uleb128 0x18
 7041 1925 73000000 		.4byte	.LASF177
 7042 1929 01       		.byte	0x1
 7043 192a DC12     		.2byte	0x12dc
 7044 192c EB000000 		.4byte	0xeb
 7045 1930 94100000 		.4byte	.LLST105
 7046 1934 18       		.uleb128 0x18
 7047 1935 D9010000 		.4byte	.LASF178
 7048 1939 01       		.byte	0x1
 7049 193a DD12     		.2byte	0x12dd
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 232


 7050 193c 06030000 		.4byte	0x306
 7051 1940 D9100000 		.4byte	.LLST106
 7052 1944 18       		.uleb128 0x18
 7053 1945 29030000 		.4byte	.LASF179
 7054 1949 01       		.byte	0x1
 7055 194a DE12     		.2byte	0x12de
 7056 194c E4180000 		.4byte	0x18e4
 7057 1950 FA100000 		.4byte	.LLST107
 7058 1954 19       		.uleb128 0x19
 7059 1955 2F050000 		.4byte	.LASF75
 7060 1959 01       		.byte	0x1
 7061 195a E012     		.2byte	0x12e0
 7062 195c EE040000 		.4byte	0x4ee
 7063 1960 1A110000 		.4byte	.LLST108
 7064 1964 19       		.uleb128 0x19
 7065 1965 33040000 		.4byte	.LASF74
 7066 1969 01       		.byte	0x1
 7067 196a E112     		.2byte	0x12e1
 7068 196c 35010000 		.4byte	0x135
 7069 1970 46110000 		.4byte	.LLST109
 7070 1974 19       		.uleb128 0x19
 7071 1975 56020000 		.4byte	.LASF180
 7072 1979 01       		.byte	0x1
 7073 197a E212     		.2byte	0x12e2
 7074 197c CA000000 		.4byte	0xca
 7075 1980 70110000 		.4byte	.LLST110
 7076 1984 1C       		.uleb128 0x1c
 7077 1985 14000000 		.4byte	.LVL316
 7078 1989 C61E0000 		.4byte	0x1ec6
 7079 198d 22       		.uleb128 0x22
 7080 198e 8C000000 		.4byte	.LVL334
 7081 1992 E81E0000 		.4byte	0x1ee8
 7082 1996 A1190000 		.4byte	0x19a1
 7083 199a 1E       		.uleb128 0x1e
 7084 199b 01       		.uleb128 0x1
 7085 199c 50       		.byte	0x50
 7086 199d 02       		.uleb128 0x2
 7087 199e 77       		.byte	0x77
 7088 199f 00       		.sleb128 0
 7089 19a0 00       		.byte	0
 7090 19a1 22       		.uleb128 0x22
 7091 19a2 B2000000 		.4byte	.LVL335
 7092 19a6 D11E0000 		.4byte	0x1ed1
 7093 19aa B5190000 		.4byte	0x19b5
 7094 19ae 1E       		.uleb128 0x1e
 7095 19af 01       		.uleb128 0x1
 7096 19b0 51       		.byte	0x51
 7097 19b1 02       		.uleb128 0x2
 7098 19b2 77       		.byte	0x77
 7099 19b3 00       		.sleb128 0
 7100 19b4 00       		.byte	0
 7101 19b5 1C       		.uleb128 0x1c
 7102 19b6 D2000000 		.4byte	.LVL336
 7103 19ba DD1E0000 		.4byte	0x1edd
 7104 19be 00       		.byte	0
 7105 19bf 25       		.uleb128 0x25
 7106 19c0 AD000000 		.4byte	.LASF181
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 233


 7107 19c4 01       		.byte	0x1
 7108 19c5 5513     		.2byte	0x1355
 7109 19c7 35010000 		.4byte	0x135
 7110 19cb 00000000 		.4byte	.LFB113
 7111 19cf F8000000 		.4byte	.LFE113-.LFB113
 7112 19d3 01       		.uleb128 0x1
 7113 19d4 9C       		.byte	0x9c
 7114 19d5 FE1A0000 		.4byte	0x1afe
 7115 19d9 18       		.uleb128 0x18
 7116 19da AC040000 		.4byte	.LASF175
 7117 19de 01       		.byte	0x1
 7118 19df 5513     		.2byte	0x1355
 7119 19e1 49020000 		.4byte	0x249
 7120 19e5 83110000 		.4byte	.LLST111
 7121 19e9 18       		.uleb128 0x18
 7122 19ea FA0C0000 		.4byte	.LASF176
 7123 19ee 01       		.byte	0x1
 7124 19ef 5613     		.2byte	0x1356
 7125 19f1 40010000 		.4byte	0x140
 7126 19f5 C5110000 		.4byte	.LLST112
 7127 19f9 18       		.uleb128 0x18
 7128 19fa 73000000 		.4byte	.LASF177
 7129 19fe 01       		.byte	0x1
 7130 19ff 5713     		.2byte	0x1357
 7131 1a01 EB000000 		.4byte	0xeb
 7132 1a05 46120000 		.4byte	.LLST113
 7133 1a09 18       		.uleb128 0x18
 7134 1a0a D9010000 		.4byte	.LASF178
 7135 1a0e 01       		.byte	0x1
 7136 1a0f 5813     		.2byte	0x1358
 7137 1a11 06030000 		.4byte	0x306
 7138 1a15 80120000 		.4byte	.LLST114
 7139 1a19 18       		.uleb128 0x18
 7140 1a1a 29030000 		.4byte	.LASF179
 7141 1a1e 01       		.byte	0x1
 7142 1a1f 5913     		.2byte	0x1359
 7143 1a21 E4180000 		.4byte	0x18e4
 7144 1a25 A1120000 		.4byte	.LLST115
 7145 1a29 18       		.uleb128 0x18
 7146 1a2a E3040000 		.4byte	.LASF182
 7147 1a2e 01       		.byte	0x1
 7148 1a2f 5A13     		.2byte	0x135a
 7149 1a31 FE1A0000 		.4byte	0x1afe
 7150 1a35 C1120000 		.4byte	.LLST116
 7151 1a39 19       		.uleb128 0x19
 7152 1a3a 2F050000 		.4byte	.LASF75
 7153 1a3e 01       		.byte	0x1
 7154 1a3f 5C13     		.2byte	0x135c
 7155 1a41 EE040000 		.4byte	0x4ee
 7156 1a45 E1120000 		.4byte	.LLST117
 7157 1a49 19       		.uleb128 0x19
 7158 1a4a 56020000 		.4byte	.LASF180
 7159 1a4e 01       		.byte	0x1
 7160 1a4f 5D13     		.2byte	0x135d
 7161 1a51 CA000000 		.4byte	0xca
 7162 1a55 23130000 		.4byte	.LLST118
 7163 1a59 19       		.uleb128 0x19
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 234


 7164 1a5a 33040000 		.4byte	.LASF74
 7165 1a5e 01       		.byte	0x1
 7166 1a5f 5E13     		.2byte	0x135e
 7167 1a61 35010000 		.4byte	0x135
 7168 1a65 36130000 		.4byte	.LLST119
 7169 1a69 28       		.uleb128 0x28
 7170 1a6a AC0A0000 		.4byte	.LASF112
 7171 1a6e 01       		.byte	0x1
 7172 1a6f 5F13     		.2byte	0x135f
 7173 1a71 40010000 		.4byte	0x140
 7174 1a75 29       		.uleb128 0x29
 7175 1a76 E5030000 		.4byte	0x3e5
 7176 1a7a 04000000 		.4byte	.LBB49
 7177 1a7e 14000000 		.4byte	.LBE49-.LBB49
 7178 1a82 01       		.byte	0x1
 7179 1a83 7813     		.2byte	0x1378
 7180 1a85 9E1A0000 		.4byte	0x1a9e
 7181 1a89 23       		.uleb128 0x23
 7182 1a8a 04000000 		.4byte	.LBB50
 7183 1a8e 14000000 		.4byte	.LBE50-.LBB50
 7184 1a92 2A       		.uleb128 0x2a
 7185 1a93 F5030000 		.4byte	0x3f5
 7186 1a97 2A       		.uleb128 0x2a
 7187 1a98 00040000 		.4byte	0x400
 7188 1a9c 00       		.byte	0
 7189 1a9d 00       		.byte	0
 7190 1a9e 29       		.uleb128 0x29
 7191 1a9f 0C040000 		.4byte	0x40c
 7192 1aa3 E2000000 		.4byte	.LBB51
 7193 1aa7 04000000 		.4byte	.LBE51-.LBB51
 7194 1aab 01       		.byte	0x1
 7195 1aac D613     		.2byte	0x13d6
 7196 1aae BC1A0000 		.4byte	0x1abc
 7197 1ab2 2C       		.uleb128 0x2c
 7198 1ab3 18040000 		.4byte	0x418
 7199 1ab7 60130000 		.4byte	.LLST120
 7200 1abb 00       		.byte	0
 7201 1abc 22       		.uleb128 0x22
 7202 1abd 94000000 		.4byte	.LVL354
 7203 1ac1 E81E0000 		.4byte	0x1ee8
 7204 1ac5 D01A0000 		.4byte	0x1ad0
 7205 1ac9 1E       		.uleb128 0x1e
 7206 1aca 01       		.uleb128 0x1
 7207 1acb 50       		.byte	0x50
 7208 1acc 02       		.uleb128 0x2
 7209 1acd 77       		.byte	0x77
 7210 1ace 00       		.sleb128 0
 7211 1acf 00       		.byte	0
 7212 1ad0 22       		.uleb128 0x22
 7213 1ad1 B6000000 		.4byte	.LVL355
 7214 1ad5 D11E0000 		.4byte	0x1ed1
 7215 1ad9 E41A0000 		.4byte	0x1ae4
 7216 1add 1E       		.uleb128 0x1e
 7217 1ade 01       		.uleb128 0x1
 7218 1adf 51       		.byte	0x51
 7219 1ae0 02       		.uleb128 0x2
 7220 1ae1 77       		.byte	0x77
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 235


 7221 1ae2 00       		.sleb128 0
 7222 1ae3 00       		.byte	0
 7223 1ae4 1D       		.uleb128 0x1d
 7224 1ae5 C2000000 		.4byte	.LVL358
 7225 1ae9 D11E0000 		.4byte	0x1ed1
 7226 1aed 1E       		.uleb128 0x1e
 7227 1aee 01       		.uleb128 0x1
 7228 1aef 50       		.byte	0x50
 7229 1af0 05       		.uleb128 0x5
 7230 1af1 03       		.byte	0x3
 7231 1af2 14000000 		.4byte	.LANCHOR0+20
 7232 1af6 1E       		.uleb128 0x1e
 7233 1af7 01       		.uleb128 0x1
 7234 1af8 51       		.byte	0x51
 7235 1af9 02       		.uleb128 0x2
 7236 1afa 74       		.byte	0x74
 7237 1afb 18       		.sleb128 24
 7238 1afc 00       		.byte	0
 7239 1afd 00       		.byte	0
 7240 1afe 06       		.uleb128 0x6
 7241 1aff 04       		.byte	0x4
 7242 1b00 35010000 		.4byte	0x135
 7243 1b04 27       		.uleb128 0x27
 7244 1b05 D9020000 		.4byte	.LASF183
 7245 1b09 01       		.byte	0x1
 7246 1b0a E013     		.2byte	0x13e0
 7247 1b0c 00000000 		.4byte	.LFB114
 7248 1b10 A4000000 		.4byte	.LFE114-.LFB114
 7249 1b14 01       		.uleb128 0x1
 7250 1b15 9C       		.byte	0x9c
 7251 1b16 FF1B0000 		.4byte	0x1bff
 7252 1b1a 18       		.uleb128 0x18
 7253 1b1b AC040000 		.4byte	.LASF175
 7254 1b1f 01       		.byte	0x1
 7255 1b20 E013     		.2byte	0x13e0
 7256 1b22 49020000 		.4byte	0x249
 7257 1b26 73130000 		.4byte	.LLST121
 7258 1b2a 18       		.uleb128 0x18
 7259 1b2b FA0C0000 		.4byte	.LASF176
 7260 1b2f 01       		.byte	0x1
 7261 1b30 E113     		.2byte	0x13e1
 7262 1b32 40010000 		.4byte	0x140
 7263 1b36 B5130000 		.4byte	.LLST122
 7264 1b3a 18       		.uleb128 0x18
 7265 1b3b E3040000 		.4byte	.LASF182
 7266 1b3f 01       		.byte	0x1
 7267 1b40 E213     		.2byte	0x13e2
 7268 1b42 FE1A0000 		.4byte	0x1afe
 7269 1b46 E3130000 		.4byte	.LLST123
 7270 1b4a 19       		.uleb128 0x19
 7271 1b4b 2F050000 		.4byte	.LASF75
 7272 1b4f 01       		.byte	0x1
 7273 1b50 E413     		.2byte	0x13e4
 7274 1b52 EE040000 		.4byte	0x4ee
 7275 1b56 25140000 		.4byte	.LLST124
 7276 1b5a 19       		.uleb128 0x19
 7277 1b5b 56020000 		.4byte	.LASF180
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 236


 7278 1b5f 01       		.byte	0x1
 7279 1b60 E513     		.2byte	0x13e5
 7280 1b62 CA000000 		.4byte	0xca
 7281 1b66 67140000 		.4byte	.LLST125
 7282 1b6a 28       		.uleb128 0x28
 7283 1b6b AC0A0000 		.4byte	.LASF112
 7284 1b6f 01       		.byte	0x1
 7285 1b70 E613     		.2byte	0x13e6
 7286 1b72 40010000 		.4byte	0x140
 7287 1b76 29       		.uleb128 0x29
 7288 1b77 E5030000 		.4byte	0x3e5
 7289 1b7b 02000000 		.4byte	.LBB53
 7290 1b7f 14000000 		.4byte	.LBE53-.LBB53
 7291 1b83 01       		.byte	0x1
 7292 1b84 FF13     		.2byte	0x13ff
 7293 1b86 9F1B0000 		.4byte	0x1b9f
 7294 1b8a 23       		.uleb128 0x23
 7295 1b8b 02000000 		.4byte	.LBB54
 7296 1b8f 14000000 		.4byte	.LBE54-.LBB54
 7297 1b93 2A       		.uleb128 0x2a
 7298 1b94 F5030000 		.4byte	0x3f5
 7299 1b98 2A       		.uleb128 0x2a
 7300 1b99 00040000 		.4byte	0x400
 7301 1b9d 00       		.byte	0
 7302 1b9e 00       		.byte	0
 7303 1b9f 29       		.uleb128 0x29
 7304 1ba0 0C040000 		.4byte	0x40c
 7305 1ba4 92000000 		.4byte	.LBB55
 7306 1ba8 12000000 		.4byte	.LBE55-.LBB55
 7307 1bac 01       		.byte	0x1
 7308 1bad 3114     		.2byte	0x1431
 7309 1baf BD1B0000 		.4byte	0x1bbd
 7310 1bb3 2C       		.uleb128 0x2c
 7311 1bb4 18040000 		.4byte	0x418
 7312 1bb8 7A140000 		.4byte	.LLST126
 7313 1bbc 00       		.byte	0
 7314 1bbd 22       		.uleb128 0x22
 7315 1bbe 48000000 		.4byte	.LVL368
 7316 1bc2 E81E0000 		.4byte	0x1ee8
 7317 1bc6 D11B0000 		.4byte	0x1bd1
 7318 1bca 1E       		.uleb128 0x1e
 7319 1bcb 01       		.uleb128 0x1
 7320 1bcc 50       		.byte	0x50
 7321 1bcd 02       		.uleb128 0x2
 7322 1bce 77       		.byte	0x77
 7323 1bcf 00       		.sleb128 0
 7324 1bd0 00       		.byte	0
 7325 1bd1 22       		.uleb128 0x22
 7326 1bd2 6A000000 		.4byte	.LVL369
 7327 1bd6 D11E0000 		.4byte	0x1ed1
 7328 1bda E51B0000 		.4byte	0x1be5
 7329 1bde 1E       		.uleb128 0x1e
 7330 1bdf 01       		.uleb128 0x1
 7331 1be0 51       		.byte	0x51
 7332 1be1 02       		.uleb128 0x2
 7333 1be2 77       		.byte	0x77
 7334 1be3 00       		.sleb128 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 237


 7335 1be4 00       		.byte	0
 7336 1be5 1D       		.uleb128 0x1d
 7337 1be6 76000000 		.4byte	.LVL372
 7338 1bea D11E0000 		.4byte	0x1ed1
 7339 1bee 1E       		.uleb128 0x1e
 7340 1bef 01       		.uleb128 0x1
 7341 1bf0 50       		.byte	0x50
 7342 1bf1 05       		.uleb128 0x5
 7343 1bf2 03       		.byte	0x3
 7344 1bf3 14000000 		.4byte	.LANCHOR0+20
 7345 1bf7 1E       		.uleb128 0x1e
 7346 1bf8 01       		.uleb128 0x1
 7347 1bf9 51       		.byte	0x51
 7348 1bfa 02       		.uleb128 0x2
 7349 1bfb 76       		.byte	0x76
 7350 1bfc 18       		.sleb128 24
 7351 1bfd 00       		.byte	0
 7352 1bfe 00       		.byte	0
 7353 1bff 25       		.uleb128 0x25
 7354 1c00 EC0D0000 		.4byte	.LASF184
 7355 1c04 01       		.byte	0x1
 7356 1c05 3914     		.2byte	0x1439
 7357 1c07 35010000 		.4byte	0x135
 7358 1c0b 00000000 		.4byte	.LFB115
 7359 1c0f 38000000 		.4byte	.LFE115-.LFB115
 7360 1c13 01       		.uleb128 0x1
 7361 1c14 9C       		.byte	0x9c
 7362 1c15 6C1C0000 		.4byte	0x1c6c
 7363 1c19 18       		.uleb128 0x18
 7364 1c1a F00A0000 		.4byte	.LASF76
 7365 1c1e 01       		.byte	0x1
 7366 1c1f 3914     		.2byte	0x1439
 7367 1c21 49020000 		.4byte	0x249
 7368 1c25 8D140000 		.4byte	.LLST127
 7369 1c29 18       		.uleb128 0x18
 7370 1c2a 30020000 		.4byte	.LASF185
 7371 1c2e 01       		.byte	0x1
 7372 1c2f 3A14     		.2byte	0x143a
 7373 1c31 40010000 		.4byte	0x140
 7374 1c35 A0140000 		.4byte	.LLST128
 7375 1c39 19       		.uleb128 0x19
 7376 1c3a 2F050000 		.4byte	.LASF75
 7377 1c3e 01       		.byte	0x1
 7378 1c3f 3C14     		.2byte	0x143c
 7379 1c41 EE040000 		.4byte	0x4ee
 7380 1c45 E5140000 		.4byte	.LLST129
 7381 1c49 19       		.uleb128 0x19
 7382 1c4a 33040000 		.4byte	.LASF74
 7383 1c4e 01       		.byte	0x1
 7384 1c4f 3D14     		.2byte	0x143d
 7385 1c51 35010000 		.4byte	0x135
 7386 1c55 F8140000 		.4byte	.LLST130
 7387 1c59 1C       		.uleb128 0x1c
 7388 1c5a 12000000 		.4byte	.LVL377
 7389 1c5e C61E0000 		.4byte	0x1ec6
 7390 1c62 1C       		.uleb128 0x1c
 7391 1c63 30000000 		.4byte	.LVL382
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 238


 7392 1c67 DD1E0000 		.4byte	0x1edd
 7393 1c6b 00       		.byte	0
 7394 1c6c 25       		.uleb128 0x25
 7395 1c6d 840A0000 		.4byte	.LASF186
 7396 1c71 01       		.byte	0x1
 7397 1c72 5B14     		.2byte	0x145b
 7398 1c74 EB000000 		.4byte	0xeb
 7399 1c78 00000000 		.4byte	.LFB116
 7400 1c7c 34000000 		.4byte	.LFE116-.LFB116
 7401 1c80 01       		.uleb128 0x1
 7402 1c81 9C       		.byte	0x9c
 7403 1c82 E91C0000 		.4byte	0x1ce9
 7404 1c86 18       		.uleb128 0x18
 7405 1c87 F00A0000 		.4byte	.LASF76
 7406 1c8b 01       		.byte	0x1
 7407 1c8c 5B14     		.2byte	0x145b
 7408 1c8e 49020000 		.4byte	0x249
 7409 1c92 22150000 		.4byte	.LLST131
 7410 1c96 18       		.uleb128 0x18
 7411 1c97 30020000 		.4byte	.LASF185
 7412 1c9b 01       		.byte	0x1
 7413 1c9c 5C14     		.2byte	0x145c
 7414 1c9e 40010000 		.4byte	0x140
 7415 1ca2 35150000 		.4byte	.LLST132
 7416 1ca6 18       		.uleb128 0x18
 7417 1ca7 48020000 		.4byte	.LASF187
 7418 1cab 01       		.byte	0x1
 7419 1cac 5D14     		.2byte	0x145d
 7420 1cae EB000000 		.4byte	0xeb
 7421 1cb2 6E150000 		.4byte	.LLST133
 7422 1cb6 19       		.uleb128 0x19
 7423 1cb7 2F050000 		.4byte	.LASF75
 7424 1cbb 01       		.byte	0x1
 7425 1cbc 5F14     		.2byte	0x145f
 7426 1cbe EE040000 		.4byte	0x4ee
 7427 1cc2 9A150000 		.4byte	.LLST134
 7428 1cc6 19       		.uleb128 0x19
 7429 1cc7 090E0000 		.4byte	.LASF169
 7430 1ccb 01       		.byte	0x1
 7431 1ccc 6014     		.2byte	0x1460
 7432 1cce EB000000 		.4byte	0xeb
 7433 1cd2 AD150000 		.4byte	.LLST135
 7434 1cd6 1C       		.uleb128 0x1c
 7435 1cd7 14000000 		.4byte	.LVL386
 7436 1cdb C61E0000 		.4byte	0x1ec6
 7437 1cdf 1C       		.uleb128 0x1c
 7438 1ce0 2C000000 		.4byte	.LVL388
 7439 1ce4 DD1E0000 		.4byte	0x1edd
 7440 1ce8 00       		.byte	0
 7441 1ce9 0B       		.uleb128 0xb
 7442 1cea 3E020000 		.4byte	0x23e
 7443 1cee F91C0000 		.4byte	0x1cf9
 7444 1cf2 0C       		.uleb128 0xc
 7445 1cf3 A9000000 		.4byte	0xa9
 7446 1cf7 04       		.byte	0x4
 7447 1cf8 00       		.byte	0
 7448 1cf9 20       		.uleb128 0x20
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 239


 7449 1cfa 350C0000 		.4byte	.LASF188
 7450 1cfe 01       		.byte	0x1
 7451 1cff 5801     		.2byte	0x158
 7452 1d01 E91C0000 		.4byte	0x1ce9
 7453 1d05 05       		.uleb128 0x5
 7454 1d06 03       		.byte	0x3
 7455 1d07 30000000 		.4byte	pxReadyTasksLists
 7456 1d0b 20       		.uleb128 0x20
 7457 1d0c 830C0000 		.4byte	.LASF189
 7458 1d10 01       		.byte	0x1
 7459 1d11 5901     		.2byte	0x159
 7460 1d13 3E020000 		.4byte	0x23e
 7461 1d17 05       		.uleb128 0x5
 7462 1d18 03       		.byte	0x3
 7463 1d19 94000000 		.4byte	xDelayedTaskList1
 7464 1d1d 20       		.uleb128 0x20
 7465 1d1e 950C0000 		.4byte	.LASF190
 7466 1d22 01       		.byte	0x1
 7467 1d23 5A01     		.2byte	0x15a
 7468 1d25 3E020000 		.4byte	0x23e
 7469 1d29 05       		.uleb128 0x5
 7470 1d2a 03       		.byte	0x3
 7471 1d2b A8000000 		.4byte	xDelayedTaskList2
 7472 1d2f 20       		.uleb128 0x20
 7473 1d30 380E0000 		.4byte	.LASF191
 7474 1d34 01       		.byte	0x1
 7475 1d35 5B01     		.2byte	0x15b
 7476 1d37 411D0000 		.4byte	0x1d41
 7477 1d3b 05       		.uleb128 0x5
 7478 1d3c 03       		.byte	0x3
 7479 1d3d 28000000 		.4byte	pxDelayedTaskList
 7480 1d41 08       		.uleb128 0x8
 7481 1d42 A70F0000 		.4byte	0xfa7
 7482 1d46 20       		.uleb128 0x20
 7483 1d47 BA060000 		.4byte	.LASF192
 7484 1d4b 01       		.byte	0x1
 7485 1d4c 5C01     		.2byte	0x15c
 7486 1d4e 411D0000 		.4byte	0x1d41
 7487 1d52 05       		.uleb128 0x5
 7488 1d53 03       		.byte	0x3
 7489 1d54 D0000000 		.4byte	pxOverflowDelayedTaskList
 7490 1d58 20       		.uleb128 0x20
 7491 1d59 F2060000 		.4byte	.LASF193
 7492 1d5d 01       		.byte	0x1
 7493 1d5e 5D01     		.2byte	0x15d
 7494 1d60 3E020000 		.4byte	0x23e
 7495 1d64 05       		.uleb128 0x5
 7496 1d65 03       		.byte	0x3
 7497 1d66 14000000 		.4byte	xPendingReadyList
 7498 1d6a 20       		.uleb128 0x20
 7499 1d6b 0E020000 		.4byte	.LASF194
 7500 1d6f 01       		.byte	0x1
 7501 1d70 6101     		.2byte	0x161
 7502 1d72 3E020000 		.4byte	0x23e
 7503 1d76 05       		.uleb128 0x5
 7504 1d77 03       		.byte	0x3
 7505 1d78 BC000000 		.4byte	xTasksWaitingTermination
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 240


 7506 1d7c 20       		.uleb128 0x20
 7507 1d7d 960B0000 		.4byte	.LASF195
 7508 1d81 01       		.byte	0x1
 7509 1d82 6201     		.2byte	0x162
 7510 1d84 33020000 		.4byte	0x233
 7511 1d88 05       		.uleb128 0x5
 7512 1d89 03       		.byte	0x3
 7513 1d8a E8000000 		.4byte	uxDeletedTasksWaitingCleanUp
 7514 1d8e 20       		.uleb128 0x20
 7515 1d8f C7000000 		.4byte	.LASF196
 7516 1d93 01       		.byte	0x1
 7517 1d94 6801     		.2byte	0x168
 7518 1d96 3E020000 		.4byte	0x23e
 7519 1d9a 05       		.uleb128 0x5
 7520 1d9b 03       		.byte	0x3
 7521 1d9c 00000000 		.4byte	xSuspendedTaskList
 7522 1da0 20       		.uleb128 0x20
 7523 1da1 5C000000 		.4byte	.LASF197
 7524 1da5 01       		.byte	0x1
 7525 1da6 7301     		.2byte	0x173
 7526 1da8 33020000 		.4byte	0x233
 7527 1dac 05       		.uleb128 0x5
 7528 1dad 03       		.byte	0x3
 7529 1dae D4000000 		.4byte	uxCurrentNumberOfTasks
 7530 1db2 20       		.uleb128 0x20
 7531 1db3 CA0C0000 		.4byte	.LASF198
 7532 1db7 01       		.byte	0x1
 7533 1db8 7401     		.2byte	0x174
 7534 1dba C41D0000 		.4byte	0x1dc4
 7535 1dbe 05       		.uleb128 0x5
 7536 1dbf 03       		.byte	0x3
 7537 1dc0 EC000000 		.4byte	xTickCount
 7538 1dc4 08       		.uleb128 0x8
 7539 1dc5 4B010000 		.4byte	0x14b
 7540 1dc9 20       		.uleb128 0x20
 7541 1dca C8070000 		.4byte	.LASF199
 7542 1dce 01       		.byte	0x1
 7543 1dcf 7501     		.2byte	0x175
 7544 1dd1 33020000 		.4byte	0x233
 7545 1dd5 05       		.uleb128 0x5
 7546 1dd6 03       		.byte	0x3
 7547 1dd7 E4000000 		.4byte	uxTopReadyPriority
 7548 1ddb 20       		.uleb128 0x20
 7549 1ddc 32090000 		.4byte	.LASF200
 7550 1de0 01       		.byte	0x1
 7551 1de1 7601     		.2byte	0x176
 7552 1de3 ED1D0000 		.4byte	0x1ded
 7553 1de7 05       		.uleb128 0x5
 7554 1de8 03       		.byte	0x3
 7555 1de9 DC000000 		.4byte	xSchedulerRunning
 7556 1ded 08       		.uleb128 0x8
 7557 1dee 35010000 		.4byte	0x135
 7558 1df2 20       		.uleb128 0x20
 7559 1df3 19040000 		.4byte	.LASF201
 7560 1df7 01       		.byte	0x1
 7561 1df8 7701     		.2byte	0x177
 7562 1dfa C41D0000 		.4byte	0x1dc4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 241


 7563 1dfe 05       		.uleb128 0x5
 7564 1dff 03       		.byte	0x3
 7565 1e00 00010000 		.4byte	xPendedTicks
 7566 1e04 20       		.uleb128 0x20
 7567 1e05 95000000 		.4byte	.LASF202
 7568 1e09 01       		.byte	0x1
 7569 1e0a 7801     		.2byte	0x178
 7570 1e0c ED1D0000 		.4byte	0x1ded
 7571 1e10 05       		.uleb128 0x5
 7572 1e11 03       		.byte	0x3
 7573 1e12 FC000000 		.4byte	xYieldPending
 7574 1e16 20       		.uleb128 0x20
 7575 1e17 A70C0000 		.4byte	.LASF203
 7576 1e1b 01       		.byte	0x1
 7577 1e1c 7901     		.2byte	0x179
 7578 1e1e ED1D0000 		.4byte	0x1ded
 7579 1e22 05       		.uleb128 0x5
 7580 1e23 03       		.byte	0x3
 7581 1e24 F8000000 		.4byte	xNumOfOverflows
 7582 1e28 20       		.uleb128 0x20
 7583 1e29 110C0000 		.4byte	.LASF204
 7584 1e2d 01       		.byte	0x1
 7585 1e2e 7A01     		.2byte	0x17a
 7586 1e30 40010000 		.4byte	0x140
 7587 1e34 05       		.uleb128 0x5
 7588 1e35 03       		.byte	0x3
 7589 1e36 E0000000 		.4byte	uxTaskNumber
 7590 1e3a 20       		.uleb128 0x20
 7591 1e3b 7A070000 		.4byte	.LASF205
 7592 1e3f 01       		.byte	0x1
 7593 1e40 7B01     		.2byte	0x17b
 7594 1e42 C41D0000 		.4byte	0x1dc4
 7595 1e46 05       		.uleb128 0x5
 7596 1e47 03       		.byte	0x3
 7597 1e48 2C000000 		.4byte	xNextTaskUnblockTime
 7598 1e4c 20       		.uleb128 0x20
 7599 1e4d 250C0000 		.4byte	.LASF206
 7600 1e51 01       		.byte	0x1
 7601 1e52 7C01     		.2byte	0x17c
 7602 1e54 49020000 		.4byte	0x249
 7603 1e58 05       		.uleb128 0x5
 7604 1e59 03       		.byte	0x3
 7605 1e5a F4000000 		.4byte	xIdleTaskHandle
 7606 1e5e 20       		.uleb128 0x20
 7607 1e5f 04040000 		.4byte	.LASF207
 7608 1e63 01       		.byte	0x1
 7609 1e64 8601     		.2byte	0x186
 7610 1e66 33020000 		.4byte	0x233
 7611 1e6a 05       		.uleb128 0x5
 7612 1e6b 03       		.byte	0x3
 7613 1e6c F0000000 		.4byte	uxSchedulerSuspended
 7614 1e70 32       		.uleb128 0x32
 7615 1e71 21010000 		.4byte	.LASF208
 7616 1e75 09       		.byte	0x9
 7617 1e76 1207     		.2byte	0x712
 7618 1e78 7C1E0000 		.4byte	0x1e7c
 7619 1e7c 08       		.uleb128 0x8
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 242


 7620 1e7d E0000000 		.4byte	0xe0
 7621 1e81 33       		.uleb128 0x33
 7622 1e82 F1050000 		.4byte	.LASF209
 7623 1e86 01       		.byte	0x1
 7624 1e87 5201     		.2byte	0x152
 7625 1e89 931E0000 		.4byte	0x1e93
 7626 1e8d 05       		.uleb128 0x5
 7627 1e8e 03       		.byte	0x3
 7628 1e8f 00000000 		.4byte	pxCurrentTCB
 7629 1e93 08       		.uleb128 0x8
 7630 1e94 EE040000 		.4byte	0x4ee
 7631 1e98 34       		.uleb128 0x34
 7632 1e99 A20A0000 		.4byte	.LASF210
 7633 1e9d A20A0000 		.4byte	.LASF210
 7634 1ea1 0A       		.byte	0xa
 7635 1ea2 B1       		.byte	0xb1
 7636 1ea3 35       		.uleb128 0x35
 7637 1ea4 91060000 		.4byte	.LASF211
 7638 1ea8 91060000 		.4byte	.LASF211
 7639 1eac 07       		.byte	0x7
 7640 1ead 6601     		.2byte	0x166
 7641 1eaf 34       		.uleb128 0x34
 7642 1eb0 260D0000 		.4byte	.LASF212
 7643 1eb4 260D0000 		.4byte	.LASF212
 7644 1eb8 0A       		.byte	0xa
 7645 1eb9 80       		.byte	0x80
 7646 1eba 35       		.uleb128 0x35
 7647 1ebb CE0D0000 		.4byte	.LASF213
 7648 1ebf CE0D0000 		.4byte	.LASF213
 7649 1ec3 07       		.byte	0x7
 7650 1ec4 5B01     		.2byte	0x15b
 7651 1ec6 34       		.uleb128 0x34
 7652 1ec7 700C0000 		.4byte	.LASF214
 7653 1ecb 700C0000 		.4byte	.LASF214
 7654 1ecf 02       		.byte	0x2
 7655 1ed0 62       		.byte	0x62
 7656 1ed1 35       		.uleb128 0x35
 7657 1ed2 1A030000 		.4byte	.LASF215
 7658 1ed6 1A030000 		.4byte	.LASF215
 7659 1eda 07       		.byte	0x7
 7660 1edb 8901     		.2byte	0x189
 7661 1edd 34       		.uleb128 0x34
 7662 1ede 600B0000 		.4byte	.LASF216
 7663 1ee2 600B0000 		.4byte	.LASF216
 7664 1ee6 02       		.byte	0x2
 7665 1ee7 63       		.byte	0x63
 7666 1ee8 35       		.uleb128 0x35
 7667 1ee9 F40B0000 		.4byte	.LASF217
 7668 1eed F40B0000 		.4byte	.LASF217
 7669 1ef1 07       		.byte	0x7
 7670 1ef2 9901     		.2byte	0x199
 7671 1ef4 35       		.uleb128 0x35
 7672 1ef5 030B0000 		.4byte	.LASF218
 7673 1ef9 030B0000 		.4byte	.LASF218
 7674 1efd 07       		.byte	0x7
 7675 1efe 7301     		.2byte	0x173
 7676 1f00 34       		.uleb128 0x34
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 243


 7677 1f01 BB030000 		.4byte	.LASF219
 7678 1f05 BB030000 		.4byte	.LASF219
 7679 1f09 0A       		.byte	0xa
 7680 1f0a B0       		.byte	0xb0
 7681 1f0b 35       		.uleb128 0x35
 7682 1f0c 73090000 		.4byte	.LASF220
 7683 1f10 73090000 		.4byte	.LASF220
 7684 1f14 0B       		.byte	0xb
 7685 1f15 2205     		.2byte	0x522
 7686 1f17 34       		.uleb128 0x34
 7687 1f18 44070000 		.4byte	.LASF221
 7688 1f1c 44070000 		.4byte	.LASF221
 7689 1f20 0A       		.byte	0xa
 7690 1f21 BA       		.byte	0xba
 7691 1f22 34       		.uleb128 0x34
 7692 1f23 A6070000 		.4byte	.LASF222
 7693 1f27 A6070000 		.4byte	.LASF222
 7694 1f2b 0A       		.byte	0xa
 7695 1f2c C1       		.byte	0xc1
 7696 1f2d 00       		.byte	0
 7697              		.section	.debug_abbrev,"",%progbits
 7698              	.Ldebug_abbrev0:
 7699 0000 01       		.uleb128 0x1
 7700 0001 11       		.uleb128 0x11
 7701 0002 01       		.byte	0x1
 7702 0003 25       		.uleb128 0x25
 7703 0004 0E       		.uleb128 0xe
 7704 0005 13       		.uleb128 0x13
 7705 0006 0B       		.uleb128 0xb
 7706 0007 03       		.uleb128 0x3
 7707 0008 0E       		.uleb128 0xe
 7708 0009 1B       		.uleb128 0x1b
 7709 000a 0E       		.uleb128 0xe
 7710 000b 55       		.uleb128 0x55
 7711 000c 17       		.uleb128 0x17
 7712 000d 11       		.uleb128 0x11
 7713 000e 01       		.uleb128 0x1
 7714 000f 10       		.uleb128 0x10
 7715 0010 17       		.uleb128 0x17
 7716 0011 00       		.byte	0
 7717 0012 00       		.byte	0
 7718 0013 02       		.uleb128 0x2
 7719 0014 16       		.uleb128 0x16
 7720 0015 00       		.byte	0
 7721 0016 03       		.uleb128 0x3
 7722 0017 0E       		.uleb128 0xe
 7723 0018 3A       		.uleb128 0x3a
 7724 0019 0B       		.uleb128 0xb
 7725 001a 3B       		.uleb128 0x3b
 7726 001b 0B       		.uleb128 0xb
 7727 001c 49       		.uleb128 0x49
 7728 001d 13       		.uleb128 0x13
 7729 001e 00       		.byte	0
 7730 001f 00       		.byte	0
 7731 0020 03       		.uleb128 0x3
 7732 0021 24       		.uleb128 0x24
 7733 0022 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 244


 7734 0023 0B       		.uleb128 0xb
 7735 0024 0B       		.uleb128 0xb
 7736 0025 3E       		.uleb128 0x3e
 7737 0026 0B       		.uleb128 0xb
 7738 0027 03       		.uleb128 0x3
 7739 0028 0E       		.uleb128 0xe
 7740 0029 00       		.byte	0
 7741 002a 00       		.byte	0
 7742 002b 04       		.uleb128 0x4
 7743 002c 24       		.uleb128 0x24
 7744 002d 00       		.byte	0
 7745 002e 0B       		.uleb128 0xb
 7746 002f 0B       		.uleb128 0xb
 7747 0030 3E       		.uleb128 0x3e
 7748 0031 0B       		.uleb128 0xb
 7749 0032 03       		.uleb128 0x3
 7750 0033 08       		.uleb128 0x8
 7751 0034 00       		.byte	0
 7752 0035 00       		.byte	0
 7753 0036 05       		.uleb128 0x5
 7754 0037 0F       		.uleb128 0xf
 7755 0038 00       		.byte	0
 7756 0039 0B       		.uleb128 0xb
 7757 003a 0B       		.uleb128 0xb
 7758 003b 00       		.byte	0
 7759 003c 00       		.byte	0
 7760 003d 06       		.uleb128 0x6
 7761 003e 0F       		.uleb128 0xf
 7762 003f 00       		.byte	0
 7763 0040 0B       		.uleb128 0xb
 7764 0041 0B       		.uleb128 0xb
 7765 0042 49       		.uleb128 0x49
 7766 0043 13       		.uleb128 0x13
 7767 0044 00       		.byte	0
 7768 0045 00       		.byte	0
 7769 0046 07       		.uleb128 0x7
 7770 0047 26       		.uleb128 0x26
 7771 0048 00       		.byte	0
 7772 0049 49       		.uleb128 0x49
 7773 004a 13       		.uleb128 0x13
 7774 004b 00       		.byte	0
 7775 004c 00       		.byte	0
 7776 004d 08       		.uleb128 0x8
 7777 004e 35       		.uleb128 0x35
 7778 004f 00       		.byte	0
 7779 0050 49       		.uleb128 0x49
 7780 0051 13       		.uleb128 0x13
 7781 0052 00       		.byte	0
 7782 0053 00       		.byte	0
 7783 0054 09       		.uleb128 0x9
 7784 0055 15       		.uleb128 0x15
 7785 0056 01       		.byte	0x1
 7786 0057 27       		.uleb128 0x27
 7787 0058 19       		.uleb128 0x19
 7788 0059 01       		.uleb128 0x1
 7789 005a 13       		.uleb128 0x13
 7790 005b 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 245


 7791 005c 00       		.byte	0
 7792 005d 0A       		.uleb128 0xa
 7793 005e 05       		.uleb128 0x5
 7794 005f 00       		.byte	0
 7795 0060 49       		.uleb128 0x49
 7796 0061 13       		.uleb128 0x13
 7797 0062 00       		.byte	0
 7798 0063 00       		.byte	0
 7799 0064 0B       		.uleb128 0xb
 7800 0065 01       		.uleb128 0x1
 7801 0066 01       		.byte	0x1
 7802 0067 49       		.uleb128 0x49
 7803 0068 13       		.uleb128 0x13
 7804 0069 01       		.uleb128 0x1
 7805 006a 13       		.uleb128 0x13
 7806 006b 00       		.byte	0
 7807 006c 00       		.byte	0
 7808 006d 0C       		.uleb128 0xc
 7809 006e 21       		.uleb128 0x21
 7810 006f 00       		.byte	0
 7811 0070 49       		.uleb128 0x49
 7812 0071 13       		.uleb128 0x13
 7813 0072 2F       		.uleb128 0x2f
 7814 0073 0B       		.uleb128 0xb
 7815 0074 00       		.byte	0
 7816 0075 00       		.byte	0
 7817 0076 0D       		.uleb128 0xd
 7818 0077 13       		.uleb128 0x13
 7819 0078 01       		.byte	0x1
 7820 0079 03       		.uleb128 0x3
 7821 007a 0E       		.uleb128 0xe
 7822 007b 0B       		.uleb128 0xb
 7823 007c 0B       		.uleb128 0xb
 7824 007d 3A       		.uleb128 0x3a
 7825 007e 0B       		.uleb128 0xb
 7826 007f 3B       		.uleb128 0x3b
 7827 0080 0B       		.uleb128 0xb
 7828 0081 01       		.uleb128 0x1
 7829 0082 13       		.uleb128 0x13
 7830 0083 00       		.byte	0
 7831 0084 00       		.byte	0
 7832 0085 0E       		.uleb128 0xe
 7833 0086 0D       		.uleb128 0xd
 7834 0087 00       		.byte	0
 7835 0088 03       		.uleb128 0x3
 7836 0089 0E       		.uleb128 0xe
 7837 008a 3A       		.uleb128 0x3a
 7838 008b 0B       		.uleb128 0xb
 7839 008c 3B       		.uleb128 0x3b
 7840 008d 0B       		.uleb128 0xb
 7841 008e 49       		.uleb128 0x49
 7842 008f 13       		.uleb128 0x13
 7843 0090 38       		.uleb128 0x38
 7844 0091 0B       		.uleb128 0xb
 7845 0092 00       		.byte	0
 7846 0093 00       		.byte	0
 7847 0094 0F       		.uleb128 0xf
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 246


 7848 0095 0D       		.uleb128 0xd
 7849 0096 00       		.byte	0
 7850 0097 03       		.uleb128 0x3
 7851 0098 0E       		.uleb128 0xe
 7852 0099 3A       		.uleb128 0x3a
 7853 009a 0B       		.uleb128 0xb
 7854 009b 3B       		.uleb128 0x3b
 7855 009c 05       		.uleb128 0x5
 7856 009d 49       		.uleb128 0x49
 7857 009e 13       		.uleb128 0x13
 7858 009f 38       		.uleb128 0x38
 7859 00a0 0B       		.uleb128 0xb
 7860 00a1 00       		.byte	0
 7861 00a2 00       		.byte	0
 7862 00a3 10       		.uleb128 0x10
 7863 00a4 04       		.uleb128 0x4
 7864 00a5 01       		.byte	0x1
 7865 00a6 0B       		.uleb128 0xb
 7866 00a7 0B       		.uleb128 0xb
 7867 00a8 49       		.uleb128 0x49
 7868 00a9 13       		.uleb128 0x13
 7869 00aa 3A       		.uleb128 0x3a
 7870 00ab 0B       		.uleb128 0xb
 7871 00ac 3B       		.uleb128 0x3b
 7872 00ad 0B       		.uleb128 0xb
 7873 00ae 01       		.uleb128 0x1
 7874 00af 13       		.uleb128 0x13
 7875 00b0 00       		.byte	0
 7876 00b1 00       		.byte	0
 7877 00b2 11       		.uleb128 0x11
 7878 00b3 28       		.uleb128 0x28
 7879 00b4 00       		.byte	0
 7880 00b5 03       		.uleb128 0x3
 7881 00b6 0E       		.uleb128 0xe
 7882 00b7 1C       		.uleb128 0x1c
 7883 00b8 0B       		.uleb128 0xb
 7884 00b9 00       		.byte	0
 7885 00ba 00       		.byte	0
 7886 00bb 12       		.uleb128 0x12
 7887 00bc 16       		.uleb128 0x16
 7888 00bd 00       		.byte	0
 7889 00be 03       		.uleb128 0x3
 7890 00bf 0E       		.uleb128 0xe
 7891 00c0 3A       		.uleb128 0x3a
 7892 00c1 0B       		.uleb128 0xb
 7893 00c2 3B       		.uleb128 0x3b
 7894 00c3 05       		.uleb128 0x5
 7895 00c4 49       		.uleb128 0x49
 7896 00c5 13       		.uleb128 0x13
 7897 00c6 00       		.byte	0
 7898 00c7 00       		.byte	0
 7899 00c8 13       		.uleb128 0x13
 7900 00c9 2E       		.uleb128 0x2e
 7901 00ca 01       		.byte	0x1
 7902 00cb 03       		.uleb128 0x3
 7903 00cc 0E       		.uleb128 0xe
 7904 00cd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 247


 7905 00ce 0B       		.uleb128 0xb
 7906 00cf 3B       		.uleb128 0x3b
 7907 00d0 0B       		.uleb128 0xb
 7908 00d1 27       		.uleb128 0x27
 7909 00d2 19       		.uleb128 0x19
 7910 00d3 49       		.uleb128 0x49
 7911 00d4 13       		.uleb128 0x13
 7912 00d5 20       		.uleb128 0x20
 7913 00d6 0B       		.uleb128 0xb
 7914 00d7 01       		.uleb128 0x1
 7915 00d8 13       		.uleb128 0x13
 7916 00d9 00       		.byte	0
 7917 00da 00       		.byte	0
 7918 00db 14       		.uleb128 0x14
 7919 00dc 34       		.uleb128 0x34
 7920 00dd 00       		.byte	0
 7921 00de 03       		.uleb128 0x3
 7922 00df 0E       		.uleb128 0xe
 7923 00e0 3A       		.uleb128 0x3a
 7924 00e1 0B       		.uleb128 0xb
 7925 00e2 3B       		.uleb128 0x3b
 7926 00e3 0B       		.uleb128 0xb
 7927 00e4 49       		.uleb128 0x49
 7928 00e5 13       		.uleb128 0x13
 7929 00e6 00       		.byte	0
 7930 00e7 00       		.byte	0
 7931 00e8 15       		.uleb128 0x15
 7932 00e9 2E       		.uleb128 0x2e
 7933 00ea 01       		.byte	0x1
 7934 00eb 03       		.uleb128 0x3
 7935 00ec 0E       		.uleb128 0xe
 7936 00ed 3A       		.uleb128 0x3a
 7937 00ee 0B       		.uleb128 0xb
 7938 00ef 3B       		.uleb128 0x3b
 7939 00f0 0B       		.uleb128 0xb
 7940 00f1 27       		.uleb128 0x27
 7941 00f2 19       		.uleb128 0x19
 7942 00f3 20       		.uleb128 0x20
 7943 00f4 0B       		.uleb128 0xb
 7944 00f5 01       		.uleb128 0x1
 7945 00f6 13       		.uleb128 0x13
 7946 00f7 00       		.byte	0
 7947 00f8 00       		.byte	0
 7948 00f9 16       		.uleb128 0x16
 7949 00fa 05       		.uleb128 0x5
 7950 00fb 00       		.byte	0
 7951 00fc 03       		.uleb128 0x3
 7952 00fd 0E       		.uleb128 0xe
 7953 00fe 3A       		.uleb128 0x3a
 7954 00ff 0B       		.uleb128 0xb
 7955 0100 3B       		.uleb128 0x3b
 7956 0101 0B       		.uleb128 0xb
 7957 0102 49       		.uleb128 0x49
 7958 0103 13       		.uleb128 0x13
 7959 0104 00       		.byte	0
 7960 0105 00       		.byte	0
 7961 0106 17       		.uleb128 0x17
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 248


 7962 0107 2E       		.uleb128 0x2e
 7963 0108 01       		.byte	0x1
 7964 0109 03       		.uleb128 0x3
 7965 010a 0E       		.uleb128 0xe
 7966 010b 3A       		.uleb128 0x3a
 7967 010c 0B       		.uleb128 0xb
 7968 010d 3B       		.uleb128 0x3b
 7969 010e 05       		.uleb128 0x5
 7970 010f 27       		.uleb128 0x27
 7971 0110 19       		.uleb128 0x19
 7972 0111 49       		.uleb128 0x49
 7973 0112 13       		.uleb128 0x13
 7974 0113 11       		.uleb128 0x11
 7975 0114 01       		.uleb128 0x1
 7976 0115 12       		.uleb128 0x12
 7977 0116 06       		.uleb128 0x6
 7978 0117 40       		.uleb128 0x40
 7979 0118 18       		.uleb128 0x18
 7980 0119 9742     		.uleb128 0x2117
 7981 011b 19       		.uleb128 0x19
 7982 011c 01       		.uleb128 0x1
 7983 011d 13       		.uleb128 0x13
 7984 011e 00       		.byte	0
 7985 011f 00       		.byte	0
 7986 0120 18       		.uleb128 0x18
 7987 0121 05       		.uleb128 0x5
 7988 0122 00       		.byte	0
 7989 0123 03       		.uleb128 0x3
 7990 0124 0E       		.uleb128 0xe
 7991 0125 3A       		.uleb128 0x3a
 7992 0126 0B       		.uleb128 0xb
 7993 0127 3B       		.uleb128 0x3b
 7994 0128 05       		.uleb128 0x5
 7995 0129 49       		.uleb128 0x49
 7996 012a 13       		.uleb128 0x13
 7997 012b 02       		.uleb128 0x2
 7998 012c 17       		.uleb128 0x17
 7999 012d 00       		.byte	0
 8000 012e 00       		.byte	0
 8001 012f 19       		.uleb128 0x19
 8002 0130 34       		.uleb128 0x34
 8003 0131 00       		.byte	0
 8004 0132 03       		.uleb128 0x3
 8005 0133 0E       		.uleb128 0xe
 8006 0134 3A       		.uleb128 0x3a
 8007 0135 0B       		.uleb128 0xb
 8008 0136 3B       		.uleb128 0x3b
 8009 0137 05       		.uleb128 0x5
 8010 0138 49       		.uleb128 0x49
 8011 0139 13       		.uleb128 0x13
 8012 013a 02       		.uleb128 0x2
 8013 013b 17       		.uleb128 0x17
 8014 013c 00       		.byte	0
 8015 013d 00       		.byte	0
 8016 013e 1A       		.uleb128 0x1a
 8017 013f 2E       		.uleb128 0x2e
 8018 0140 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 249


 8019 0141 03       		.uleb128 0x3
 8020 0142 0E       		.uleb128 0xe
 8021 0143 3A       		.uleb128 0x3a
 8022 0144 0B       		.uleb128 0xb
 8023 0145 3B       		.uleb128 0x3b
 8024 0146 05       		.uleb128 0x5
 8025 0147 27       		.uleb128 0x27
 8026 0148 19       		.uleb128 0x19
 8027 0149 11       		.uleb128 0x11
 8028 014a 01       		.uleb128 0x1
 8029 014b 12       		.uleb128 0x12
 8030 014c 06       		.uleb128 0x6
 8031 014d 40       		.uleb128 0x40
 8032 014e 18       		.uleb128 0x18
 8033 014f 9742     		.uleb128 0x2117
 8034 0151 19       		.uleb128 0x19
 8035 0152 00       		.byte	0
 8036 0153 00       		.byte	0
 8037 0154 1B       		.uleb128 0x1b
 8038 0155 2E       		.uleb128 0x2e
 8039 0156 01       		.byte	0x1
 8040 0157 03       		.uleb128 0x3
 8041 0158 0E       		.uleb128 0xe
 8042 0159 3A       		.uleb128 0x3a
 8043 015a 0B       		.uleb128 0xb
 8044 015b 3B       		.uleb128 0x3b
 8045 015c 05       		.uleb128 0x5
 8046 015d 27       		.uleb128 0x27
 8047 015e 19       		.uleb128 0x19
 8048 015f 11       		.uleb128 0x11
 8049 0160 01       		.uleb128 0x1
 8050 0161 12       		.uleb128 0x12
 8051 0162 06       		.uleb128 0x6
 8052 0163 40       		.uleb128 0x40
 8053 0164 18       		.uleb128 0x18
 8054 0165 9742     		.uleb128 0x2117
 8055 0167 19       		.uleb128 0x19
 8056 0168 01       		.uleb128 0x1
 8057 0169 13       		.uleb128 0x13
 8058 016a 00       		.byte	0
 8059 016b 00       		.byte	0
 8060 016c 1C       		.uleb128 0x1c
 8061 016d 898201   		.uleb128 0x4109
 8062 0170 00       		.byte	0
 8063 0171 11       		.uleb128 0x11
 8064 0172 01       		.uleb128 0x1
 8065 0173 31       		.uleb128 0x31
 8066 0174 13       		.uleb128 0x13
 8067 0175 00       		.byte	0
 8068 0176 00       		.byte	0
 8069 0177 1D       		.uleb128 0x1d
 8070 0178 898201   		.uleb128 0x4109
 8071 017b 01       		.byte	0x1
 8072 017c 11       		.uleb128 0x11
 8073 017d 01       		.uleb128 0x1
 8074 017e 31       		.uleb128 0x31
 8075 017f 13       		.uleb128 0x13
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 250


 8076 0180 00       		.byte	0
 8077 0181 00       		.byte	0
 8078 0182 1E       		.uleb128 0x1e
 8079 0183 8A8201   		.uleb128 0x410a
 8080 0186 00       		.byte	0
 8081 0187 02       		.uleb128 0x2
 8082 0188 18       		.uleb128 0x18
 8083 0189 9142     		.uleb128 0x2111
 8084 018b 18       		.uleb128 0x18
 8085 018c 00       		.byte	0
 8086 018d 00       		.byte	0
 8087 018e 1F       		.uleb128 0x1f
 8088 018f 05       		.uleb128 0x5
 8089 0190 00       		.byte	0
 8090 0191 03       		.uleb128 0x3
 8091 0192 0E       		.uleb128 0xe
 8092 0193 3A       		.uleb128 0x3a
 8093 0194 0B       		.uleb128 0xb
 8094 0195 3B       		.uleb128 0x3b
 8095 0196 05       		.uleb128 0x5
 8096 0197 49       		.uleb128 0x49
 8097 0198 13       		.uleb128 0x13
 8098 0199 02       		.uleb128 0x2
 8099 019a 18       		.uleb128 0x18
 8100 019b 00       		.byte	0
 8101 019c 00       		.byte	0
 8102 019d 20       		.uleb128 0x20
 8103 019e 34       		.uleb128 0x34
 8104 019f 00       		.byte	0
 8105 01a0 03       		.uleb128 0x3
 8106 01a1 0E       		.uleb128 0xe
 8107 01a2 3A       		.uleb128 0x3a
 8108 01a3 0B       		.uleb128 0xb
 8109 01a4 3B       		.uleb128 0x3b
 8110 01a5 05       		.uleb128 0x5
 8111 01a6 49       		.uleb128 0x49
 8112 01a7 13       		.uleb128 0x13
 8113 01a8 02       		.uleb128 0x2
 8114 01a9 18       		.uleb128 0x18
 8115 01aa 00       		.byte	0
 8116 01ab 00       		.byte	0
 8117 01ac 21       		.uleb128 0x21
 8118 01ad 34       		.uleb128 0x34
 8119 01ae 00       		.byte	0
 8120 01af 03       		.uleb128 0x3
 8121 01b0 08       		.uleb128 0x8
 8122 01b1 3A       		.uleb128 0x3a
 8123 01b2 0B       		.uleb128 0xb
 8124 01b3 3B       		.uleb128 0x3b
 8125 01b4 05       		.uleb128 0x5
 8126 01b5 49       		.uleb128 0x49
 8127 01b6 13       		.uleb128 0x13
 8128 01b7 02       		.uleb128 0x2
 8129 01b8 17       		.uleb128 0x17
 8130 01b9 00       		.byte	0
 8131 01ba 00       		.byte	0
 8132 01bb 22       		.uleb128 0x22
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 251


 8133 01bc 898201   		.uleb128 0x4109
 8134 01bf 01       		.byte	0x1
 8135 01c0 11       		.uleb128 0x11
 8136 01c1 01       		.uleb128 0x1
 8137 01c2 31       		.uleb128 0x31
 8138 01c3 13       		.uleb128 0x13
 8139 01c4 01       		.uleb128 0x1
 8140 01c5 13       		.uleb128 0x13
 8141 01c6 00       		.byte	0
 8142 01c7 00       		.byte	0
 8143 01c8 23       		.uleb128 0x23
 8144 01c9 0B       		.uleb128 0xb
 8145 01ca 01       		.byte	0x1
 8146 01cb 11       		.uleb128 0x11
 8147 01cc 01       		.uleb128 0x1
 8148 01cd 12       		.uleb128 0x12
 8149 01ce 06       		.uleb128 0x6
 8150 01cf 00       		.byte	0
 8151 01d0 00       		.byte	0
 8152 01d1 24       		.uleb128 0x24
 8153 01d2 2E       		.uleb128 0x2e
 8154 01d3 01       		.byte	0x1
 8155 01d4 03       		.uleb128 0x3
 8156 01d5 0E       		.uleb128 0xe
 8157 01d6 3A       		.uleb128 0x3a
 8158 01d7 0B       		.uleb128 0xb
 8159 01d8 3B       		.uleb128 0x3b
 8160 01d9 05       		.uleb128 0x5
 8161 01da 27       		.uleb128 0x27
 8162 01db 19       		.uleb128 0x19
 8163 01dc 8701     		.uleb128 0x87
 8164 01de 19       		.uleb128 0x19
 8165 01df 11       		.uleb128 0x11
 8166 01e0 01       		.uleb128 0x1
 8167 01e1 12       		.uleb128 0x12
 8168 01e2 06       		.uleb128 0x6
 8169 01e3 40       		.uleb128 0x40
 8170 01e4 18       		.uleb128 0x18
 8171 01e5 9742     		.uleb128 0x2117
 8172 01e7 19       		.uleb128 0x19
 8173 01e8 01       		.uleb128 0x1
 8174 01e9 13       		.uleb128 0x13
 8175 01ea 00       		.byte	0
 8176 01eb 00       		.byte	0
 8177 01ec 25       		.uleb128 0x25
 8178 01ed 2E       		.uleb128 0x2e
 8179 01ee 01       		.byte	0x1
 8180 01ef 3F       		.uleb128 0x3f
 8181 01f0 19       		.uleb128 0x19
 8182 01f1 03       		.uleb128 0x3
 8183 01f2 0E       		.uleb128 0xe
 8184 01f3 3A       		.uleb128 0x3a
 8185 01f4 0B       		.uleb128 0xb
 8186 01f5 3B       		.uleb128 0x3b
 8187 01f6 05       		.uleb128 0x5
 8188 01f7 27       		.uleb128 0x27
 8189 01f8 19       		.uleb128 0x19
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 252


 8190 01f9 49       		.uleb128 0x49
 8191 01fa 13       		.uleb128 0x13
 8192 01fb 11       		.uleb128 0x11
 8193 01fc 01       		.uleb128 0x1
 8194 01fd 12       		.uleb128 0x12
 8195 01fe 06       		.uleb128 0x6
 8196 01ff 40       		.uleb128 0x40
 8197 0200 18       		.uleb128 0x18
 8198 0201 9742     		.uleb128 0x2117
 8199 0203 19       		.uleb128 0x19
 8200 0204 01       		.uleb128 0x1
 8201 0205 13       		.uleb128 0x13
 8202 0206 00       		.byte	0
 8203 0207 00       		.byte	0
 8204 0208 26       		.uleb128 0x26
 8205 0209 0B       		.uleb128 0xb
 8206 020a 01       		.byte	0x1
 8207 020b 11       		.uleb128 0x11
 8208 020c 01       		.uleb128 0x1
 8209 020d 12       		.uleb128 0x12
 8210 020e 06       		.uleb128 0x6
 8211 020f 01       		.uleb128 0x1
 8212 0210 13       		.uleb128 0x13
 8213 0211 00       		.byte	0
 8214 0212 00       		.byte	0
 8215 0213 27       		.uleb128 0x27
 8216 0214 2E       		.uleb128 0x2e
 8217 0215 01       		.byte	0x1
 8218 0216 3F       		.uleb128 0x3f
 8219 0217 19       		.uleb128 0x19
 8220 0218 03       		.uleb128 0x3
 8221 0219 0E       		.uleb128 0xe
 8222 021a 3A       		.uleb128 0x3a
 8223 021b 0B       		.uleb128 0xb
 8224 021c 3B       		.uleb128 0x3b
 8225 021d 05       		.uleb128 0x5
 8226 021e 27       		.uleb128 0x27
 8227 021f 19       		.uleb128 0x19
 8228 0220 11       		.uleb128 0x11
 8229 0221 01       		.uleb128 0x1
 8230 0222 12       		.uleb128 0x12
 8231 0223 06       		.uleb128 0x6
 8232 0224 40       		.uleb128 0x40
 8233 0225 18       		.uleb128 0x18
 8234 0226 9742     		.uleb128 0x2117
 8235 0228 19       		.uleb128 0x19
 8236 0229 01       		.uleb128 0x1
 8237 022a 13       		.uleb128 0x13
 8238 022b 00       		.byte	0
 8239 022c 00       		.byte	0
 8240 022d 28       		.uleb128 0x28
 8241 022e 34       		.uleb128 0x34
 8242 022f 00       		.byte	0
 8243 0230 03       		.uleb128 0x3
 8244 0231 0E       		.uleb128 0xe
 8245 0232 3A       		.uleb128 0x3a
 8246 0233 0B       		.uleb128 0xb
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 253


 8247 0234 3B       		.uleb128 0x3b
 8248 0235 05       		.uleb128 0x5
 8249 0236 49       		.uleb128 0x49
 8250 0237 13       		.uleb128 0x13
 8251 0238 00       		.byte	0
 8252 0239 00       		.byte	0
 8253 023a 29       		.uleb128 0x29
 8254 023b 1D       		.uleb128 0x1d
 8255 023c 01       		.byte	0x1
 8256 023d 31       		.uleb128 0x31
 8257 023e 13       		.uleb128 0x13
 8258 023f 11       		.uleb128 0x11
 8259 0240 01       		.uleb128 0x1
 8260 0241 12       		.uleb128 0x12
 8261 0242 06       		.uleb128 0x6
 8262 0243 58       		.uleb128 0x58
 8263 0244 0B       		.uleb128 0xb
 8264 0245 59       		.uleb128 0x59
 8265 0246 05       		.uleb128 0x5
 8266 0247 01       		.uleb128 0x1
 8267 0248 13       		.uleb128 0x13
 8268 0249 00       		.byte	0
 8269 024a 00       		.byte	0
 8270 024b 2A       		.uleb128 0x2a
 8271 024c 34       		.uleb128 0x34
 8272 024d 00       		.byte	0
 8273 024e 31       		.uleb128 0x31
 8274 024f 13       		.uleb128 0x13
 8275 0250 00       		.byte	0
 8276 0251 00       		.byte	0
 8277 0252 2B       		.uleb128 0x2b
 8278 0253 1D       		.uleb128 0x1d
 8279 0254 01       		.byte	0x1
 8280 0255 31       		.uleb128 0x31
 8281 0256 13       		.uleb128 0x13
 8282 0257 11       		.uleb128 0x11
 8283 0258 01       		.uleb128 0x1
 8284 0259 12       		.uleb128 0x12
 8285 025a 06       		.uleb128 0x6
 8286 025b 58       		.uleb128 0x58
 8287 025c 0B       		.uleb128 0xb
 8288 025d 59       		.uleb128 0x59
 8289 025e 05       		.uleb128 0x5
 8290 025f 00       		.byte	0
 8291 0260 00       		.byte	0
 8292 0261 2C       		.uleb128 0x2c
 8293 0262 05       		.uleb128 0x5
 8294 0263 00       		.byte	0
 8295 0264 31       		.uleb128 0x31
 8296 0265 13       		.uleb128 0x13
 8297 0266 02       		.uleb128 0x2
 8298 0267 17       		.uleb128 0x17
 8299 0268 00       		.byte	0
 8300 0269 00       		.byte	0
 8301 026a 2D       		.uleb128 0x2d
 8302 026b 2E       		.uleb128 0x2e
 8303 026c 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 254


 8304 026d 3F       		.uleb128 0x3f
 8305 026e 19       		.uleb128 0x19
 8306 026f 03       		.uleb128 0x3
 8307 0270 0E       		.uleb128 0xe
 8308 0271 3A       		.uleb128 0x3a
 8309 0272 0B       		.uleb128 0xb
 8310 0273 3B       		.uleb128 0x3b
 8311 0274 05       		.uleb128 0x5
 8312 0275 27       		.uleb128 0x27
 8313 0276 19       		.uleb128 0x19
 8314 0277 11       		.uleb128 0x11
 8315 0278 01       		.uleb128 0x1
 8316 0279 12       		.uleb128 0x12
 8317 027a 06       		.uleb128 0x6
 8318 027b 40       		.uleb128 0x40
 8319 027c 18       		.uleb128 0x18
 8320 027d 9742     		.uleb128 0x2117
 8321 027f 19       		.uleb128 0x19
 8322 0280 00       		.byte	0
 8323 0281 00       		.byte	0
 8324 0282 2E       		.uleb128 0x2e
 8325 0283 34       		.uleb128 0x34
 8326 0284 00       		.byte	0
 8327 0285 03       		.uleb128 0x3
 8328 0286 0E       		.uleb128 0xe
 8329 0287 3A       		.uleb128 0x3a
 8330 0288 0B       		.uleb128 0xb
 8331 0289 3B       		.uleb128 0x3b
 8332 028a 05       		.uleb128 0x5
 8333 028b 49       		.uleb128 0x49
 8334 028c 13       		.uleb128 0x13
 8335 028d 1C       		.uleb128 0x1c
 8336 028e 0B       		.uleb128 0xb
 8337 028f 00       		.byte	0
 8338 0290 00       		.byte	0
 8339 0291 2F       		.uleb128 0x2f
 8340 0292 2E       		.uleb128 0x2e
 8341 0293 00       		.byte	0
 8342 0294 3F       		.uleb128 0x3f
 8343 0295 19       		.uleb128 0x19
 8344 0296 03       		.uleb128 0x3
 8345 0297 0E       		.uleb128 0xe
 8346 0298 3A       		.uleb128 0x3a
 8347 0299 0B       		.uleb128 0xb
 8348 029a 3B       		.uleb128 0x3b
 8349 029b 05       		.uleb128 0x5
 8350 029c 27       		.uleb128 0x27
 8351 029d 19       		.uleb128 0x19
 8352 029e 49       		.uleb128 0x49
 8353 029f 13       		.uleb128 0x13
 8354 02a0 11       		.uleb128 0x11
 8355 02a1 01       		.uleb128 0x1
 8356 02a2 12       		.uleb128 0x12
 8357 02a3 06       		.uleb128 0x6
 8358 02a4 40       		.uleb128 0x40
 8359 02a5 18       		.uleb128 0x18
 8360 02a6 9742     		.uleb128 0x2117
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 255


 8361 02a8 19       		.uleb128 0x19
 8362 02a9 00       		.byte	0
 8363 02aa 00       		.byte	0
 8364 02ab 30       		.uleb128 0x30
 8365 02ac 0B       		.uleb128 0xb
 8366 02ad 01       		.byte	0x1
 8367 02ae 55       		.uleb128 0x55
 8368 02af 17       		.uleb128 0x17
 8369 02b0 00       		.byte	0
 8370 02b1 00       		.byte	0
 8371 02b2 31       		.uleb128 0x31
 8372 02b3 0B       		.uleb128 0xb
 8373 02b4 01       		.byte	0x1
 8374 02b5 55       		.uleb128 0x55
 8375 02b6 17       		.uleb128 0x17
 8376 02b7 01       		.uleb128 0x1
 8377 02b8 13       		.uleb128 0x13
 8378 02b9 00       		.byte	0
 8379 02ba 00       		.byte	0
 8380 02bb 32       		.uleb128 0x32
 8381 02bc 34       		.uleb128 0x34
 8382 02bd 00       		.byte	0
 8383 02be 03       		.uleb128 0x3
 8384 02bf 0E       		.uleb128 0xe
 8385 02c0 3A       		.uleb128 0x3a
 8386 02c1 0B       		.uleb128 0xb
 8387 02c2 3B       		.uleb128 0x3b
 8388 02c3 05       		.uleb128 0x5
 8389 02c4 49       		.uleb128 0x49
 8390 02c5 13       		.uleb128 0x13
 8391 02c6 3F       		.uleb128 0x3f
 8392 02c7 19       		.uleb128 0x19
 8393 02c8 3C       		.uleb128 0x3c
 8394 02c9 19       		.uleb128 0x19
 8395 02ca 00       		.byte	0
 8396 02cb 00       		.byte	0
 8397 02cc 33       		.uleb128 0x33
 8398 02cd 34       		.uleb128 0x34
 8399 02ce 00       		.byte	0
 8400 02cf 03       		.uleb128 0x3
 8401 02d0 0E       		.uleb128 0xe
 8402 02d1 3A       		.uleb128 0x3a
 8403 02d2 0B       		.uleb128 0xb
 8404 02d3 3B       		.uleb128 0x3b
 8405 02d4 05       		.uleb128 0x5
 8406 02d5 49       		.uleb128 0x49
 8407 02d6 13       		.uleb128 0x13
 8408 02d7 3F       		.uleb128 0x3f
 8409 02d8 19       		.uleb128 0x19
 8410 02d9 02       		.uleb128 0x2
 8411 02da 18       		.uleb128 0x18
 8412 02db 00       		.byte	0
 8413 02dc 00       		.byte	0
 8414 02dd 34       		.uleb128 0x34
 8415 02de 2E       		.uleb128 0x2e
 8416 02df 00       		.byte	0
 8417 02e0 3F       		.uleb128 0x3f
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 256


 8418 02e1 19       		.uleb128 0x19
 8419 02e2 3C       		.uleb128 0x3c
 8420 02e3 19       		.uleb128 0x19
 8421 02e4 6E       		.uleb128 0x6e
 8422 02e5 0E       		.uleb128 0xe
 8423 02e6 03       		.uleb128 0x3
 8424 02e7 0E       		.uleb128 0xe
 8425 02e8 3A       		.uleb128 0x3a
 8426 02e9 0B       		.uleb128 0xb
 8427 02ea 3B       		.uleb128 0x3b
 8428 02eb 0B       		.uleb128 0xb
 8429 02ec 00       		.byte	0
 8430 02ed 00       		.byte	0
 8431 02ee 35       		.uleb128 0x35
 8432 02ef 2E       		.uleb128 0x2e
 8433 02f0 00       		.byte	0
 8434 02f1 3F       		.uleb128 0x3f
 8435 02f2 19       		.uleb128 0x19
 8436 02f3 3C       		.uleb128 0x3c
 8437 02f4 19       		.uleb128 0x19
 8438 02f5 6E       		.uleb128 0x6e
 8439 02f6 0E       		.uleb128 0xe
 8440 02f7 03       		.uleb128 0x3
 8441 02f8 0E       		.uleb128 0xe
 8442 02f9 3A       		.uleb128 0x3a
 8443 02fa 0B       		.uleb128 0xb
 8444 02fb 3B       		.uleb128 0x3b
 8445 02fc 05       		.uleb128 0x5
 8446 02fd 00       		.byte	0
 8447 02fe 00       		.byte	0
 8448 02ff 00       		.byte	0
 8449              		.section	.debug_loc,"",%progbits
 8450              	.Ldebug_loc0:
 8451              	.LLST0:
 8452 0000 00000000 		.4byte	.LVL0
 8453 0004 14000000 		.4byte	.LVL1
 8454 0008 0100     		.2byte	0x1
 8455 000a 50       		.byte	0x50
 8456 000b 14000000 		.4byte	.LVL1
 8457 000f 16000000 		.4byte	.LVL2
 8458 0013 0400     		.2byte	0x4
 8459 0015 F3       		.byte	0xf3
 8460 0016 01       		.uleb128 0x1
 8461 0017 50       		.byte	0x50
 8462 0018 9F       		.byte	0x9f
 8463 0019 16000000 		.4byte	.LVL2
 8464 001d 18000000 		.4byte	.LVL3
 8465 0021 0100     		.2byte	0x1
 8466 0023 50       		.byte	0x50
 8467 0024 18000000 		.4byte	.LVL3
 8468 0028 1A000000 		.4byte	.LVL4
 8469 002c 0400     		.2byte	0x4
 8470 002e F3       		.byte	0xf3
 8471 002f 01       		.uleb128 0x1
 8472 0030 50       		.byte	0x50
 8473 0031 9F       		.byte	0x9f
 8474 0032 1A000000 		.4byte	.LVL4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 257


 8475 0036 1C000000 		.4byte	.LVL5
 8476 003a 0100     		.2byte	0x1
 8477 003c 50       		.byte	0x50
 8478 003d 1C000000 		.4byte	.LVL5
 8479 0041 1E000000 		.4byte	.LVL6
 8480 0045 0400     		.2byte	0x4
 8481 0047 F3       		.byte	0xf3
 8482 0048 01       		.uleb128 0x1
 8483 0049 50       		.byte	0x50
 8484 004a 9F       		.byte	0x9f
 8485 004b 1E000000 		.4byte	.LVL6
 8486 004f 20000000 		.4byte	.LVL7
 8487 0053 0100     		.2byte	0x1
 8488 0055 50       		.byte	0x50
 8489 0056 20000000 		.4byte	.LVL7
 8490 005a 2C000000 		.4byte	.LFE77
 8491 005e 0400     		.2byte	0x4
 8492 0060 F3       		.byte	0xf3
 8493 0061 01       		.uleb128 0x1
 8494 0062 50       		.byte	0x50
 8495 0063 9F       		.byte	0x9f
 8496 0064 00000000 		.4byte	0
 8497 0068 00000000 		.4byte	0
 8498              	.LLST1:
 8499 006c 00000000 		.4byte	.LVL0
 8500 0070 20000000 		.4byte	.LVL7
 8501 0074 0200     		.2byte	0x2
 8502 0076 30       		.byte	0x30
 8503 0077 9F       		.byte	0x9f
 8504 0078 20000000 		.4byte	.LVL7
 8505 007c 2C000000 		.4byte	.LFE77
 8506 0080 0100     		.2byte	0x1
 8507 0082 50       		.byte	0x50
 8508 0083 00000000 		.4byte	0
 8509 0087 00000000 		.4byte	0
 8510              	.LLST2:
 8511 008b 00000000 		.4byte	.LVL0
 8512 008f 14000000 		.4byte	.LVL1
 8513 0093 0100     		.2byte	0x1
 8514 0095 50       		.byte	0x50
 8515 0096 14000000 		.4byte	.LVL1
 8516 009a 16000000 		.4byte	.LVL2
 8517 009e 0400     		.2byte	0x4
 8518 00a0 F3       		.byte	0xf3
 8519 00a1 01       		.uleb128 0x1
 8520 00a2 50       		.byte	0x50
 8521 00a3 9F       		.byte	0x9f
 8522 00a4 16000000 		.4byte	.LVL2
 8523 00a8 18000000 		.4byte	.LVL3
 8524 00ac 0100     		.2byte	0x1
 8525 00ae 50       		.byte	0x50
 8526 00af 18000000 		.4byte	.LVL3
 8527 00b3 1A000000 		.4byte	.LVL4
 8528 00b7 0400     		.2byte	0x4
 8529 00b9 F3       		.byte	0xf3
 8530 00ba 01       		.uleb128 0x1
 8531 00bb 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 258


 8532 00bc 9F       		.byte	0x9f
 8533 00bd 1A000000 		.4byte	.LVL4
 8534 00c1 1C000000 		.4byte	.LVL5
 8535 00c5 0100     		.2byte	0x1
 8536 00c7 50       		.byte	0x50
 8537 00c8 1C000000 		.4byte	.LVL5
 8538 00cc 1E000000 		.4byte	.LVL6
 8539 00d0 0400     		.2byte	0x4
 8540 00d2 F3       		.byte	0xf3
 8541 00d3 01       		.uleb128 0x1
 8542 00d4 50       		.byte	0x50
 8543 00d5 9F       		.byte	0x9f
 8544 00d6 1E000000 		.4byte	.LVL6
 8545 00da 20000000 		.4byte	.LVL7
 8546 00de 0100     		.2byte	0x1
 8547 00e0 50       		.byte	0x50
 8548 00e1 20000000 		.4byte	.LVL7
 8549 00e5 2C000000 		.4byte	.LFE77
 8550 00e9 0400     		.2byte	0x4
 8551 00eb F3       		.byte	0xf3
 8552 00ec 01       		.uleb128 0x1
 8553 00ed 50       		.byte	0x50
 8554 00ee 9F       		.byte	0x9f
 8555 00ef 00000000 		.4byte	0
 8556 00f3 00000000 		.4byte	0
 8557              	.LLST3:
 8558 00f7 00000000 		.4byte	.LVL8
 8559 00fb 06000000 		.4byte	.LVL9
 8560 00ff 0100     		.2byte	0x1
 8561 0101 50       		.byte	0x50
 8562 0102 06000000 		.4byte	.LVL9
 8563 0106 12000000 		.4byte	.LFE105
 8564 010a 0100     		.2byte	0x1
 8565 010c 54       		.byte	0x54
 8566 010d 00000000 		.4byte	0
 8567 0111 00000000 		.4byte	0
 8568              	.LLST4:
 8569 0115 00000000 		.4byte	.LVL12
 8570 0119 22000000 		.4byte	.LVL18
 8571 011d 0100     		.2byte	0x1
 8572 011f 50       		.byte	0x50
 8573 0120 22000000 		.4byte	.LVL18
 8574 0124 32000000 		.4byte	.LVL20
 8575 0128 0100     		.2byte	0x1
 8576 012a 58       		.byte	0x58
 8577 012b 32000000 		.4byte	.LVL20
 8578 012f 36000000 		.4byte	.LVL21
 8579 0133 0100     		.2byte	0x1
 8580 0135 50       		.byte	0x50
 8581 0136 36000000 		.4byte	.LVL21
 8582 013a 42000000 		.4byte	.LVL23
 8583 013e 0100     		.2byte	0x1
 8584 0140 58       		.byte	0x58
 8585 0141 42000000 		.4byte	.LVL23
 8586 0145 48000000 		.4byte	.LVL24
 8587 0149 0100     		.2byte	0x1
 8588 014b 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 259


 8589 014c 48000000 		.4byte	.LVL24
 8590 0150 8E000000 		.4byte	.LFE68
 8591 0154 0100     		.2byte	0x1
 8592 0156 58       		.byte	0x58
 8593 0157 00000000 		.4byte	0
 8594 015b 00000000 		.4byte	0
 8595              	.LLST5:
 8596 015f 00000000 		.4byte	.LVL12
 8597 0163 22000000 		.4byte	.LVL18
 8598 0167 0100     		.2byte	0x1
 8599 0169 51       		.byte	0x51
 8600 016a 22000000 		.4byte	.LVL18
 8601 016e 32000000 		.4byte	.LVL20
 8602 0172 0100     		.2byte	0x1
 8603 0174 52       		.byte	0x52
 8604 0175 32000000 		.4byte	.LVL20
 8605 0179 36000000 		.4byte	.LVL21
 8606 017d 0100     		.2byte	0x1
 8607 017f 51       		.byte	0x51
 8608 0180 36000000 		.4byte	.LVL21
 8609 0184 42000000 		.4byte	.LVL23
 8610 0188 0100     		.2byte	0x1
 8611 018a 52       		.byte	0x52
 8612 018b 42000000 		.4byte	.LVL23
 8613 018f 48000000 		.4byte	.LVL24
 8614 0193 0100     		.2byte	0x1
 8615 0195 51       		.byte	0x51
 8616 0196 48000000 		.4byte	.LVL24
 8617 019a 8E000000 		.4byte	.LFE68
 8618 019e 0400     		.2byte	0x4
 8619 01a0 F3       		.byte	0xf3
 8620 01a1 01       		.uleb128 0x1
 8621 01a2 51       		.byte	0x51
 8622 01a3 9F       		.byte	0x9f
 8623 01a4 00000000 		.4byte	0
 8624 01a8 00000000 		.4byte	0
 8625              	.LLST6:
 8626 01ac 00000000 		.4byte	.LVL12
 8627 01b0 14000000 		.4byte	.LVL14
 8628 01b4 0100     		.2byte	0x1
 8629 01b6 52       		.byte	0x52
 8630 01b7 14000000 		.4byte	.LVL14
 8631 01bb 16000000 		.4byte	.LVL15
 8632 01bf 0700     		.2byte	0x7
 8633 01c1 72       		.byte	0x72
 8634 01c2 80808080 		.sleb128 -1073741824
 8634      7C
 8635 01c7 9F       		.byte	0x9f
 8636 01c8 16000000 		.4byte	.LVL15
 8637 01cc 22000000 		.4byte	.LVL18
 8638 01d0 0700     		.2byte	0x7
 8639 01d2 72       		.byte	0x72
 8640 01d3 81808080 		.sleb128 -1073741823
 8640      7C
 8641 01d8 9F       		.byte	0x9f
 8642 01d9 22000000 		.4byte	.LVL18
 8643 01dd 8E000000 		.4byte	.LFE68
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 260


 8644 01e1 0400     		.2byte	0x4
 8645 01e3 F3       		.byte	0xf3
 8646 01e4 01       		.uleb128 0x1
 8647 01e5 52       		.byte	0x52
 8648 01e6 9F       		.byte	0x9f
 8649 01e7 00000000 		.4byte	0
 8650 01eb 00000000 		.4byte	0
 8651              	.LLST7:
 8652 01ef 00000000 		.4byte	.LVL12
 8653 01f3 10000000 		.4byte	.LVL13
 8654 01f7 0100     		.2byte	0x1
 8655 01f9 53       		.byte	0x53
 8656 01fa 10000000 		.4byte	.LVL13
 8657 01fe 8E000000 		.4byte	.LFE68
 8658 0202 0100     		.2byte	0x1
 8659 0204 59       		.byte	0x59
 8660 0205 00000000 		.4byte	0
 8661 0209 00000000 		.4byte	0
 8662              	.LLST8:
 8663 020d 00000000 		.4byte	.LVL12
 8664 0211 4E000000 		.4byte	.LVL25
 8665 0215 0200     		.2byte	0x2
 8666 0217 91       		.byte	0x91
 8667 0218 00       		.sleb128 0
 8668 0219 4E000000 		.4byte	.LVL25
 8669 021d 64000000 		.4byte	.LVL28
 8670 0221 0100     		.2byte	0x1
 8671 0223 55       		.byte	0x55
 8672 0224 00000000 		.4byte	0
 8673 0228 00000000 		.4byte	0
 8674              	.LLST9:
 8675 022c 22000000 		.4byte	.LVL18
 8676 0230 32000000 		.4byte	.LVL20
 8677 0234 0100     		.2byte	0x1
 8678 0236 53       		.byte	0x53
 8679 0237 36000000 		.4byte	.LVL21
 8680 023b 3C000000 		.4byte	.LVL22
 8681 023f 0100     		.2byte	0x1
 8682 0241 53       		.byte	0x53
 8683 0242 00000000 		.4byte	0
 8684 0246 00000000 		.4byte	0
 8685              	.LLST10:
 8686 024a 02000000 		.4byte	.LVL30
 8687 024e 06000000 		.4byte	.LVL31
 8688 0252 0200     		.2byte	0x2
 8689 0254 30       		.byte	0x30
 8690 0255 9F       		.byte	0x9f
 8691 0256 06000000 		.4byte	.LVL31
 8692 025a 1C000000 		.4byte	.LVL34
 8693 025e 0100     		.2byte	0x1
 8694 0260 54       		.byte	0x54
 8695 0261 00000000 		.4byte	0
 8696 0265 00000000 		.4byte	0
 8697              	.LLST11:
 8698 0269 00000000 		.4byte	.LVL40
 8699 026d 07000000 		.4byte	.LVL41-1
 8700 0271 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 261


 8701 0273 50       		.byte	0x50
 8702 0274 07000000 		.4byte	.LVL41-1
 8703 0278 A2000000 		.4byte	.LVL45
 8704 027c 0100     		.2byte	0x1
 8705 027e 54       		.byte	0x54
 8706 027f A2000000 		.4byte	.LVL45
 8707 0283 AC000000 		.4byte	.LFE69
 8708 0287 0400     		.2byte	0x4
 8709 0289 F3       		.byte	0xf3
 8710 028a 01       		.uleb128 0x1
 8711 028b 50       		.byte	0x50
 8712 028c 9F       		.byte	0x9f
 8713 028d 00000000 		.4byte	0
 8714 0291 00000000 		.4byte	0
 8715              	.LLST12:
 8716 0295 10000000 		.4byte	.LVL47
 8717 0299 34000000 		.4byte	.LVL50
 8718 029d 0100     		.2byte	0x1
 8719 029f 55       		.byte	0x55
 8720 02a0 00000000 		.4byte	0
 8721 02a4 00000000 		.4byte	0
 8722              	.LLST13:
 8723 02a8 00000000 		.4byte	.LVL51
 8724 02ac 02000000 		.4byte	.LVL52
 8725 02b0 0100     		.2byte	0x1
 8726 02b2 50       		.byte	0x50
 8727 02b3 02000000 		.4byte	.LVL52
 8728 02b7 28000000 		.4byte	.LFE100
 8729 02bb 0400     		.2byte	0x4
 8730 02bd F3       		.byte	0xf3
 8731 02be 01       		.uleb128 0x1
 8732 02bf 50       		.byte	0x50
 8733 02c0 9F       		.byte	0x9f
 8734 02c1 00000000 		.4byte	0
 8735 02c5 00000000 		.4byte	0
 8736              	.LLST14:
 8737 02c9 00000000 		.4byte	.LVL54
 8738 02cd 10000000 		.4byte	.LVL56
 8739 02d1 0100     		.2byte	0x1
 8740 02d3 50       		.byte	0x50
 8741 02d4 10000000 		.4byte	.LVL56
 8742 02d8 2E000000 		.4byte	.LVL60
 8743 02dc 0100     		.2byte	0x1
 8744 02de 54       		.byte	0x54
 8745 02df 2E000000 		.4byte	.LVL60
 8746 02e3 68000000 		.4byte	.LFE117
 8747 02e7 0400     		.2byte	0x4
 8748 02e9 F3       		.byte	0xf3
 8749 02ea 01       		.uleb128 0x1
 8750 02eb 50       		.byte	0x50
 8751 02ec 9F       		.byte	0x9f
 8752 02ed 00000000 		.4byte	0
 8753 02f1 00000000 		.4byte	0
 8754              	.LLST15:
 8755 02f5 00000000 		.4byte	.LVL54
 8756 02f9 15000000 		.4byte	.LVL57-1
 8757 02fd 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 262


 8758 02ff 51       		.byte	0x51
 8759 0300 15000000 		.4byte	.LVL57-1
 8760 0304 64000000 		.4byte	.LVL65
 8761 0308 0100     		.2byte	0x1
 8762 030a 56       		.byte	0x56
 8763 030b 64000000 		.4byte	.LVL65
 8764 030f 68000000 		.4byte	.LFE117
 8765 0313 0400     		.2byte	0x4
 8766 0315 F3       		.byte	0xf3
 8767 0316 01       		.uleb128 0x1
 8768 0317 51       		.byte	0x51
 8769 0318 9F       		.byte	0x9f
 8770 0319 00000000 		.4byte	0
 8771 031d 00000000 		.4byte	0
 8772              	.LLST16:
 8773 0321 2E000000 		.4byte	.LVL60
 8774 0325 64000000 		.4byte	.LVL65
 8775 0329 0100     		.2byte	0x1
 8776 032b 54       		.byte	0x54
 8777 032c 00000000 		.4byte	0
 8778 0330 00000000 		.4byte	0
 8779              	.LLST17:
 8780 0334 0C000000 		.4byte	.LVL55
 8781 0338 4E000000 		.4byte	.LVL63
 8782 033c 0100     		.2byte	0x1
 8783 033e 55       		.byte	0x55
 8784 033f 00000000 		.4byte	0
 8785 0343 00000000 		.4byte	0
 8786              	.LLST18:
 8787 0347 00000000 		.4byte	.LVL66
 8788 034b 10000000 		.4byte	.LVL67
 8789 034f 0100     		.2byte	0x1
 8790 0351 50       		.byte	0x50
 8791 0352 10000000 		.4byte	.LVL67
 8792 0356 62000000 		.4byte	.LFE67
 8793 035a 0100     		.2byte	0x1
 8794 035c 56       		.byte	0x56
 8795 035d 00000000 		.4byte	0
 8796 0361 00000000 		.4byte	0
 8797              	.LLST19:
 8798 0365 00000000 		.4byte	.LVL66
 8799 0369 13000000 		.4byte	.LVL68-1
 8800 036d 0100     		.2byte	0x1
 8801 036f 51       		.byte	0x51
 8802 0370 13000000 		.4byte	.LVL68-1
 8803 0374 62000000 		.4byte	.LFE67
 8804 0378 0100     		.2byte	0x1
 8805 037a 57       		.byte	0x57
 8806 037b 00000000 		.4byte	0
 8807 037f 00000000 		.4byte	0
 8808              	.LLST20:
 8809 0383 00000000 		.4byte	.LVL66
 8810 0387 13000000 		.4byte	.LVL68-1
 8811 038b 0100     		.2byte	0x1
 8812 038d 52       		.byte	0x52
 8813 038e 13000000 		.4byte	.LVL68-1
 8814 0392 62000000 		.4byte	.LFE67
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 263


 8815 0396 0400     		.2byte	0x4
 8816 0398 F3       		.byte	0xf3
 8817 0399 01       		.uleb128 0x1
 8818 039a 52       		.byte	0x52
 8819 039b 9F       		.byte	0x9f
 8820 039c 00000000 		.4byte	0
 8821 03a0 00000000 		.4byte	0
 8822              	.LLST21:
 8823 03a4 00000000 		.4byte	.LVL66
 8824 03a8 13000000 		.4byte	.LVL68-1
 8825 03ac 0100     		.2byte	0x1
 8826 03ae 53       		.byte	0x53
 8827 03af 13000000 		.4byte	.LVL68-1
 8828 03b3 62000000 		.4byte	.LFE67
 8829 03b7 0100     		.2byte	0x1
 8830 03b9 58       		.byte	0x58
 8831 03ba 00000000 		.4byte	0
 8832 03be 00000000 		.4byte	0
 8833              	.LLST22:
 8834 03c2 1E000000 		.4byte	.LVL70
 8835 03c6 2A000000 		.4byte	.LVL71
 8836 03ca 0100     		.2byte	0x1
 8837 03cc 50       		.byte	0x50
 8838 03cd 2A000000 		.4byte	.LVL71
 8839 03d1 30000000 		.4byte	.LVL73
 8840 03d5 0100     		.2byte	0x1
 8841 03d7 54       		.byte	0x54
 8842 03d8 32000000 		.4byte	.LVL74
 8843 03dc 62000000 		.4byte	.LFE67
 8844 03e0 0100     		.2byte	0x1
 8845 03e2 54       		.byte	0x54
 8846 03e3 00000000 		.4byte	0
 8847 03e7 00000000 		.4byte	0
 8848              	.LLST23:
 8849 03eb 54000000 		.4byte	.LVL76
 8850 03ef 58000000 		.4byte	.LVL77
 8851 03f3 0200     		.2byte	0x2
 8852 03f5 31       		.byte	0x31
 8853 03f6 9F       		.byte	0x9f
 8854 03f7 5C000000 		.4byte	.LVL78
 8855 03fb 62000000 		.4byte	.LFE67
 8856 03ff 0100     		.2byte	0x1
 8857 0401 50       		.byte	0x50
 8858 0402 00000000 		.4byte	0
 8859 0406 00000000 		.4byte	0
 8860              	.LLST24:
 8861 040a 14000000 		.4byte	.LVL68
 8862 040e 1A000000 		.4byte	.LVL69
 8863 0412 0100     		.2byte	0x1
 8864 0414 50       		.byte	0x50
 8865 0415 1A000000 		.4byte	.LVL69
 8866 0419 30000000 		.4byte	.LVL73
 8867 041d 0100     		.2byte	0x1
 8868 041f 59       		.byte	0x59
 8869 0420 30000000 		.4byte	.LVL73
 8870 0424 32000000 		.4byte	.LVL74
 8871 0428 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 264


 8872 042a 50       		.byte	0x50
 8873 042b 00000000 		.4byte	0
 8874 042f 00000000 		.4byte	0
 8875              	.LLST25:
 8876 0433 00000000 		.4byte	.LVL79
 8877 0437 07000000 		.4byte	.LVL80-1
 8878 043b 0100     		.2byte	0x1
 8879 043d 50       		.byte	0x50
 8880 043e 07000000 		.4byte	.LVL80-1
 8881 0442 10000000 		.4byte	.LVL81
 8882 0446 0100     		.2byte	0x1
 8883 0448 54       		.byte	0x54
 8884 0449 00000000 		.4byte	0
 8885 044d 00000000 		.4byte	0
 8886              	.LLST26:
 8887 0451 10000000 		.4byte	.LVL81
 8888 0455 8E000000 		.4byte	.LVL88
 8889 0459 0100     		.2byte	0x1
 8890 045b 54       		.byte	0x54
 8891 045c 00000000 		.4byte	0
 8892 0460 00000000 		.4byte	0
 8893              	.LLST27:
 8894 0464 00000000 		.4byte	.LVL89
 8895 0468 07000000 		.4byte	.LVL90-1
 8896 046c 0100     		.2byte	0x1
 8897 046e 50       		.byte	0x50
 8898 046f 07000000 		.4byte	.LVL90-1
 8899 0473 10000000 		.4byte	.LVL91
 8900 0477 0100     		.2byte	0x1
 8901 0479 54       		.byte	0x54
 8902 047a 10000000 		.4byte	.LVL91
 8903 047e 20000000 		.4byte	.LFE73
 8904 0482 0400     		.2byte	0x4
 8905 0484 F3       		.byte	0xf3
 8906 0485 01       		.uleb128 0x1
 8907 0486 50       		.byte	0x50
 8908 0487 9F       		.byte	0x9f
 8909 0488 00000000 		.4byte	0
 8910 048c 00000000 		.4byte	0
 8911              	.LLST28:
 8912 0490 10000000 		.4byte	.LVL91
 8913 0494 12000000 		.4byte	.LVL92
 8914 0498 0100     		.2byte	0x1
 8915 049a 54       		.byte	0x54
 8916 049b 00000000 		.4byte	0
 8917 049f 00000000 		.4byte	0
 8918              	.LLST29:
 8919 04a3 12000000 		.4byte	.LVL92
 8920 04a7 1A000000 		.4byte	.LVL94
 8921 04ab 0100     		.2byte	0x1
 8922 04ad 54       		.byte	0x54
 8923 04ae 1A000000 		.4byte	.LVL94
 8924 04b2 20000000 		.4byte	.LFE73
 8925 04b6 0100     		.2byte	0x1
 8926 04b8 50       		.byte	0x50
 8927 04b9 00000000 		.4byte	0
 8928 04bd 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 265


 8929              	.LLST30:
 8930 04c1 00000000 		.4byte	.LVL95
 8931 04c5 1C000000 		.4byte	.LVL96
 8932 04c9 0100     		.2byte	0x1
 8933 04cb 50       		.byte	0x50
 8934 04cc 1C000000 		.4byte	.LVL96
 8935 04d0 28000000 		.4byte	.LFE74
 8936 04d4 0400     		.2byte	0x4
 8937 04d6 F3       		.byte	0xf3
 8938 04d7 01       		.uleb128 0x1
 8939 04d8 50       		.byte	0x50
 8940 04d9 9F       		.byte	0x9f
 8941 04da 00000000 		.4byte	0
 8942 04de 00000000 		.4byte	0
 8943              	.LLST31:
 8944 04e2 1C000000 		.4byte	.LVL96
 8945 04e6 1E000000 		.4byte	.LVL97
 8946 04ea 0100     		.2byte	0x1
 8947 04ec 50       		.byte	0x50
 8948 04ed 00000000 		.4byte	0
 8949 04f1 00000000 		.4byte	0
 8950              	.LLST32:
 8951 04f5 1E000000 		.4byte	.LVL97
 8952 04f9 22000000 		.4byte	.LVL98
 8953 04fd 0100     		.2byte	0x1
 8954 04ff 53       		.byte	0x53
 8955 0500 00000000 		.4byte	0
 8956 0504 00000000 		.4byte	0
 8957              	.LLST33:
 8958 0508 00000000 		.4byte	.LVL99
 8959 050c 0F000000 		.4byte	.LVL102-1
 8960 0510 0100     		.2byte	0x1
 8961 0512 50       		.byte	0x50
 8962 0513 0F000000 		.4byte	.LVL102-1
 8963 0517 18000000 		.4byte	.LVL103
 8964 051b 0100     		.2byte	0x1
 8965 051d 55       		.byte	0x55
 8966 051e 00000000 		.4byte	0
 8967 0522 00000000 		.4byte	0
 8968              	.LLST34:
 8969 0526 00000000 		.4byte	.LVL99
 8970 052a 0C000000 		.4byte	.LVL101
 8971 052e 0100     		.2byte	0x1
 8972 0530 51       		.byte	0x51
 8973 0531 0C000000 		.4byte	.LVL101
 8974 0535 5E000000 		.4byte	.LVL106
 8975 0539 0100     		.2byte	0x1
 8976 053b 54       		.byte	0x54
 8977 053c 5E000000 		.4byte	.LVL106
 8978 0540 77000000 		.4byte	.LVL108-1
 8979 0544 0200     		.2byte	0x2
 8980 0546 75       		.byte	0x75
 8981 0547 2C       		.sleb128 44
 8982 0548 00000000 		.4byte	0
 8983 054c 00000000 		.4byte	0
 8984              	.LLST35:
 8985 0550 18000000 		.4byte	.LVL103
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 266


 8986 0554 B2000000 		.4byte	.LVL112
 8987 0558 0100     		.2byte	0x1
 8988 055a 55       		.byte	0x55
 8989 055b 00000000 		.4byte	0
 8990 055f 00000000 		.4byte	0
 8991              	.LLST36:
 8992 0563 1A000000 		.4byte	.LVL104
 8993 0567 66000000 		.4byte	.LVL107
 8994 056b 0100     		.2byte	0x1
 8995 056d 53       		.byte	0x53
 8996 056e 00000000 		.4byte	0
 8997 0572 00000000 		.4byte	0
 8998              	.LLST37:
 8999 0576 52000000 		.4byte	.LVL105
 9000 057a 66000000 		.4byte	.LVL107
 9001 057e 0100     		.2byte	0x1
 9002 0580 53       		.byte	0x53
 9003 0581 00000000 		.4byte	0
 9004 0585 00000000 		.4byte	0
 9005              	.LLST38:
 9006 0589 06000000 		.4byte	.LVL100
 9007 058d 52000000 		.4byte	.LVL105
 9008 0591 0200     		.2byte	0x2
 9009 0593 30       		.byte	0x30
 9010 0594 9F       		.byte	0x9f
 9011 0595 52000000 		.4byte	.LVL105
 9012 0599 AC000000 		.4byte	.LVL110
 9013 059d 0100     		.2byte	0x1
 9014 059f 56       		.byte	0x56
 9015 05a0 00000000 		.4byte	0
 9016 05a4 00000000 		.4byte	0
 9017              	.LLST39:
 9018 05a8 00000000 		.4byte	.LVL113
 9019 05ac 13000000 		.4byte	.LVL114-1
 9020 05b0 0100     		.2byte	0x1
 9021 05b2 50       		.byte	0x50
 9022 05b3 13000000 		.4byte	.LVL114-1
 9023 05b7 6C000000 		.4byte	.LVL119
 9024 05bb 0100     		.2byte	0x1
 9025 05bd 54       		.byte	0x54
 9026 05be 6C000000 		.4byte	.LVL119
 9027 05c2 78000000 		.4byte	.LFE78
 9028 05c6 0100     		.2byte	0x1
 9029 05c8 50       		.byte	0x50
 9030 05c9 00000000 		.4byte	0
 9031 05cd 00000000 		.4byte	0
 9032              	.LLST41:
 9033 05d1 00000000 		.4byte	.LVL120
 9034 05d5 1B000000 		.4byte	.LVL122-1
 9035 05d9 0100     		.2byte	0x1
 9036 05db 50       		.byte	0x50
 9037 05dc 1B000000 		.4byte	.LVL122-1
 9038 05e0 7E000000 		.4byte	.LVL130
 9039 05e4 0100     		.2byte	0x1
 9040 05e6 54       		.byte	0x54
 9041 05e7 7E000000 		.4byte	.LVL130
 9042 05eb 8C000000 		.4byte	.LFE79
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 267


 9043 05ef 0400     		.2byte	0x4
 9044 05f1 F3       		.byte	0xf3
 9045 05f2 01       		.uleb128 0x1
 9046 05f3 50       		.byte	0x50
 9047 05f4 9F       		.byte	0x9f
 9048 05f5 00000000 		.4byte	0
 9049 05f9 00000000 		.4byte	0
 9050              	.LLST42:
 9051 05fd 04000000 		.4byte	.LVL121
 9052 0601 3A000000 		.4byte	.LVL123
 9053 0605 0200     		.2byte	0x2
 9054 0607 30       		.byte	0x30
 9055 0608 9F       		.byte	0x9f
 9056 0609 3A000000 		.4byte	.LVL123
 9057 060d 66000000 		.4byte	.LVL126
 9058 0611 0100     		.2byte	0x1
 9059 0613 56       		.byte	0x56
 9060 0614 66000000 		.4byte	.LVL126
 9061 0618 76000000 		.4byte	.LVL128
 9062 061c 0200     		.2byte	0x2
 9063 061e 30       		.byte	0x30
 9064 061f 9F       		.byte	0x9f
 9065 0620 76000000 		.4byte	.LVL128
 9066 0624 7E000000 		.4byte	.LVL130
 9067 0628 0100     		.2byte	0x1
 9068 062a 56       		.byte	0x56
 9069 062b 7E000000 		.4byte	.LVL130
 9070 062f 8C000000 		.4byte	.LFE79
 9071 0633 0100     		.2byte	0x1
 9072 0635 50       		.byte	0x50
 9073 0636 00000000 		.4byte	0
 9074 063a 00000000 		.4byte	0
 9075              	.LLST43:
 9076 063e 04000000 		.4byte	.LVL121
 9077 0642 1B000000 		.4byte	.LVL122-1
 9078 0646 0100     		.2byte	0x1
 9079 0648 50       		.byte	0x50
 9080 0649 1B000000 		.4byte	.LVL122-1
 9081 064d 7E000000 		.4byte	.LVL130
 9082 0651 0100     		.2byte	0x1
 9083 0653 54       		.byte	0x54
 9084 0654 7E000000 		.4byte	.LVL130
 9085 0658 8C000000 		.4byte	.LFE79
 9086 065c 0400     		.2byte	0x4
 9087 065e F3       		.byte	0xf3
 9088 065f 01       		.uleb128 0x1
 9089 0660 50       		.byte	0x50
 9090 0661 9F       		.byte	0x9f
 9091 0662 00000000 		.4byte	0
 9092 0666 00000000 		.4byte	0
 9093              	.LLST44:
 9094 066a 76000000 		.4byte	.LVL128
 9095 066e 7A000000 		.4byte	.LVL129
 9096 0672 0100     		.2byte	0x1
 9097 0674 55       		.byte	0x55
 9098 0675 00000000 		.4byte	0
 9099 0679 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 268


 9100              	.LLST45:
 9101 067d 16000000 		.4byte	.LVL131
 9102 0681 1D000000 		.4byte	.LVL132-1
 9103 0685 0100     		.2byte	0x1
 9104 0687 50       		.byte	0x50
 9105 0688 1E000000 		.4byte	.LVL132
 9106 068c 49000000 		.4byte	.LVL133-1
 9107 0690 0100     		.2byte	0x1
 9108 0692 50       		.byte	0x50
 9109 0693 00000000 		.4byte	0
 9110 0697 00000000 		.4byte	0
 9111              	.LLST46:
 9112 069b 00000000 		.4byte	.LVL138
 9113 069f 0A000000 		.4byte	.LVL139
 9114 06a3 0100     		.2byte	0x1
 9115 06a5 50       		.byte	0x50
 9116 06a6 00000000 		.4byte	0
 9117 06aa 00000000 		.4byte	0
 9118              	.LLST47:
 9119 06ae 44000000 		.4byte	.LVL146
 9120 06b2 4A000000 		.4byte	.LVL148
 9121 06b6 0100     		.2byte	0x1
 9122 06b8 54       		.byte	0x54
 9123 06b9 68000000 		.4byte	.LVL150
 9124 06bd BC000000 		.4byte	.LVL155
 9125 06c1 0100     		.2byte	0x1
 9126 06c3 54       		.byte	0x54
 9127 06c4 00000000 		.4byte	0
 9128 06c8 00000000 		.4byte	0
 9129              	.LLST48:
 9130 06cc 6A000000 		.4byte	.LVL151
 9131 06d0 7B000000 		.4byte	.LVL152-1
 9132 06d4 0100     		.2byte	0x1
 9133 06d6 53       		.byte	0x53
 9134 06d7 00000000 		.4byte	0
 9135 06db 00000000 		.4byte	0
 9136              	.LLST49:
 9137 06df 04000000 		.4byte	.LVL140
 9138 06e3 44000000 		.4byte	.LVL146
 9139 06e7 0200     		.2byte	0x2
 9140 06e9 30       		.byte	0x30
 9141 06ea 9F       		.byte	0x9f
 9142 06eb 44000000 		.4byte	.LVL146
 9143 06ef 48000000 		.4byte	.LVL147
 9144 06f3 0100     		.2byte	0x1
 9145 06f5 58       		.byte	0x58
 9146 06f6 4A000000 		.4byte	.LVL148
 9147 06fa 4E000000 		.4byte	.LVL149
 9148 06fe 0200     		.2byte	0x2
 9149 0700 30       		.byte	0x30
 9150 0701 9F       		.byte	0x9f
 9151 0702 4E000000 		.4byte	.LVL149
 9152 0706 C6000000 		.4byte	.LVL156
 9153 070a 0100     		.2byte	0x1
 9154 070c 58       		.byte	0x58
 9155 070d C6000000 		.4byte	.LVL156
 9156 0711 D8000000 		.4byte	.LVL157
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 269


 9157 0715 0200     		.2byte	0x2
 9158 0717 30       		.byte	0x30
 9159 0718 9F       		.byte	0x9f
 9160 0719 D8000000 		.4byte	.LVL157
 9161 071d E2000000 		.4byte	.LVL159
 9162 0721 0100     		.2byte	0x1
 9163 0723 58       		.byte	0x58
 9164 0724 E2000000 		.4byte	.LVL159
 9165 0728 E8000000 		.4byte	.LFE89
 9166 072c 0100     		.2byte	0x1
 9167 072e 50       		.byte	0x50
 9168 072f 00000000 		.4byte	0
 9169 0733 00000000 		.4byte	0
 9170              	.LLST50:
 9171 0737 16000000 		.4byte	.LVL141
 9172 073b C6000000 		.4byte	.LVL156
 9173 073f 0100     		.2byte	0x1
 9174 0741 57       		.byte	0x57
 9175 0742 D8000000 		.4byte	.LVL157
 9176 0746 DC000000 		.4byte	.LVL158
 9177 074a 0100     		.2byte	0x1
 9178 074c 57       		.byte	0x57
 9179 074d 00000000 		.4byte	0
 9180 0751 00000000 		.4byte	0
 9181              	.LLST51:
 9182 0755 1E000000 		.4byte	.LVL142
 9183 0759 2C000000 		.4byte	.LVL143
 9184 075d 0100     		.2byte	0x1
 9185 075f 52       		.byte	0x52
 9186 0760 2C000000 		.4byte	.LVL143
 9187 0764 32000000 		.4byte	.LVL144
 9188 0768 0500     		.2byte	0x5
 9189 076a 03       		.byte	0x3
 9190 076b D0000000 		.4byte	pxOverflowDelayedTaskList
 9191 076f 00000000 		.4byte	0
 9192 0773 00000000 		.4byte	0
 9193              	.LLST52:
 9194 0777 02000000 		.4byte	.LVL160
 9195 077b 26000000 		.4byte	.LVL162
 9196 077f 0200     		.2byte	0x2
 9197 0781 30       		.byte	0x30
 9198 0782 9F       		.byte	0x9f
 9199 0783 26000000 		.4byte	.LVL162
 9200 0787 72000000 		.4byte	.LVL167
 9201 078b 0100     		.2byte	0x1
 9202 078d 54       		.byte	0x54
 9203 078e 72000000 		.4byte	.LVL167
 9204 0792 74000000 		.4byte	.LVL168
 9205 0796 0200     		.2byte	0x2
 9206 0798 30       		.byte	0x30
 9207 0799 9F       		.byte	0x9f
 9208 079a 74000000 		.4byte	.LVL168
 9209 079e 88000000 		.4byte	.LVL170
 9210 07a2 0100     		.2byte	0x1
 9211 07a4 54       		.byte	0x54
 9212 07a5 C0000000 		.4byte	.LVL176
 9213 07a9 C4000000 		.4byte	.LVL177
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 270


 9214 07ad 0200     		.2byte	0x2
 9215 07af 30       		.byte	0x30
 9216 07b0 9F       		.byte	0x9f
 9217 07b1 00000000 		.4byte	0
 9218 07b5 00000000 		.4byte	0
 9219              	.LLST53:
 9220 07b9 02000000 		.4byte	.LVL160
 9221 07bd AC000000 		.4byte	.LVL174
 9222 07c1 0200     		.2byte	0x2
 9223 07c3 30       		.byte	0x30
 9224 07c4 9F       		.byte	0x9f
 9225 07c5 AC000000 		.4byte	.LVL174
 9226 07c9 C0000000 		.4byte	.LVL176
 9227 07cd 0200     		.2byte	0x2
 9228 07cf 31       		.byte	0x31
 9229 07d0 9F       		.byte	0x9f
 9230 07d1 C0000000 		.4byte	.LVL176
 9231 07d5 C6000000 		.4byte	.LVL178
 9232 07d9 0200     		.2byte	0x2
 9233 07db 30       		.byte	0x30
 9234 07dc 9F       		.byte	0x9f
 9235 07dd C6000000 		.4byte	.LVL178
 9236 07e1 CE000000 		.4byte	.LVL180
 9237 07e5 0100     		.2byte	0x1
 9238 07e7 54       		.byte	0x54
 9239 07e8 CE000000 		.4byte	.LVL180
 9240 07ec D8000000 		.4byte	.LFE83
 9241 07f0 0100     		.2byte	0x1
 9242 07f2 50       		.byte	0x50
 9243 07f3 00000000 		.4byte	0
 9244 07f7 00000000 		.4byte	0
 9245              	.LLST54:
 9246 07fb 88000000 		.4byte	.LVL170
 9247 07ff 98000000 		.4byte	.LVL172
 9248 0803 0100     		.2byte	0x1
 9249 0805 54       		.byte	0x54
 9250 0806 98000000 		.4byte	.LVL172
 9251 080a 9A000000 		.4byte	.LVL173
 9252 080e 0300     		.2byte	0x3
 9253 0810 74       		.byte	0x74
 9254 0811 7F       		.sleb128 -1
 9255 0812 9F       		.byte	0x9f
 9256 0813 9A000000 		.4byte	.LVL173
 9257 0817 BE000000 		.4byte	.LVL175
 9258 081b 0100     		.2byte	0x1
 9259 081d 54       		.byte	0x54
 9260 081e C4000000 		.4byte	.LVL177
 9261 0822 C6000000 		.4byte	.LVL178
 9262 0826 0100     		.2byte	0x1
 9263 0828 54       		.byte	0x54
 9264 0829 00000000 		.4byte	0
 9265 082d 00000000 		.4byte	0
 9266              	.LLST55:
 9267 0831 00000000 		.4byte	.LVL181
 9268 0835 09000000 		.4byte	.LVL183-1
 9269 0839 0100     		.2byte	0x1
 9270 083b 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 271


 9271 083c 09000000 		.4byte	.LVL183-1
 9272 0840 62000000 		.4byte	.LVL190
 9273 0844 0100     		.2byte	0x1
 9274 0846 55       		.byte	0x55
 9275 0847 62000000 		.4byte	.LVL190
 9276 084b 6C000000 		.4byte	.LFE71
 9277 084f 0400     		.2byte	0x4
 9278 0851 F3       		.byte	0xf3
 9279 0852 01       		.uleb128 0x1
 9280 0853 50       		.byte	0x50
 9281 0854 9F       		.byte	0x9f
 9282 0855 00000000 		.4byte	0
 9283 0859 00000000 		.4byte	0
 9284              	.LLST56:
 9285 085d 00000000 		.4byte	.LVL181
 9286 0861 09000000 		.4byte	.LVL183-1
 9287 0865 0100     		.2byte	0x1
 9288 0867 51       		.byte	0x51
 9289 0868 09000000 		.4byte	.LVL183-1
 9290 086c 62000000 		.4byte	.LVL190
 9291 0870 0100     		.2byte	0x1
 9292 0872 54       		.byte	0x54
 9293 0873 62000000 		.4byte	.LVL190
 9294 0877 6C000000 		.4byte	.LFE71
 9295 087b 0400     		.2byte	0x4
 9296 087d F3       		.byte	0xf3
 9297 087e 01       		.uleb128 0x1
 9298 087f 51       		.byte	0x51
 9299 0880 9F       		.byte	0x9f
 9300 0881 00000000 		.4byte	0
 9301 0885 00000000 		.4byte	0
 9302              	.LLST57:
 9303 0889 14000000 		.4byte	.LVL185
 9304 088d 49000000 		.4byte	.LVL188-1
 9305 0891 0100     		.2byte	0x1
 9306 0893 53       		.byte	0x53
 9307 0894 00000000 		.4byte	0
 9308 0898 00000000 		.4byte	0
 9309              	.LLST58:
 9310 089c 06000000 		.4byte	.LVL182
 9311 08a0 3E000000 		.4byte	.LVL186
 9312 08a4 0200     		.2byte	0x2
 9313 08a6 30       		.byte	0x30
 9314 08a7 9F       		.byte	0x9f
 9315 08a8 3E000000 		.4byte	.LVL186
 9316 08ac 49000000 		.4byte	.LVL188-1
 9317 08b0 0100     		.2byte	0x1
 9318 08b2 52       		.byte	0x52
 9319 08b3 00000000 		.4byte	0
 9320 08b7 00000000 		.4byte	0
 9321              	.LLST59:
 9322 08bb 10000000 		.4byte	.LVL184
 9323 08bf 46000000 		.4byte	.LVL187
 9324 08c3 0100     		.2byte	0x1
 9325 08c5 50       		.byte	0x50
 9326 08c6 00000000 		.4byte	0
 9327 08ca 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 272


 9328              	.LLST60:
 9329 08ce 00000000 		.4byte	.LVL191
 9330 08d2 09000000 		.4byte	.LVL193-1
 9331 08d6 0100     		.2byte	0x1
 9332 08d8 50       		.byte	0x50
 9333 08d9 09000000 		.4byte	.LVL193-1
 9334 08dd 18000000 		.4byte	.LVL196
 9335 08e1 0100     		.2byte	0x1
 9336 08e3 54       		.byte	0x54
 9337 08e4 18000000 		.4byte	.LVL196
 9338 08e8 1A000000 		.4byte	.LVL197
 9339 08ec 0100     		.2byte	0x1
 9340 08ee 50       		.byte	0x50
 9341 08ef 1A000000 		.4byte	.LVL197
 9342 08f3 34000000 		.4byte	.LFE72
 9343 08f7 0400     		.2byte	0x4
 9344 08f9 F3       		.byte	0xf3
 9345 08fa 01       		.uleb128 0x1
 9346 08fb 50       		.byte	0x50
 9347 08fc 9F       		.byte	0x9f
 9348 08fd 00000000 		.4byte	0
 9349 0901 00000000 		.4byte	0
 9350              	.LLST61:
 9351 0905 02000000 		.4byte	.LVL192
 9352 0909 16000000 		.4byte	.LVL195
 9353 090d 0200     		.2byte	0x2
 9354 090f 30       		.byte	0x30
 9355 0910 9F       		.byte	0x9f
 9356 0911 16000000 		.4byte	.LVL195
 9357 0915 18000000 		.4byte	.LVL196
 9358 0919 0100     		.2byte	0x1
 9359 091b 50       		.byte	0x50
 9360 091c 18000000 		.4byte	.LVL196
 9361 0920 1A000000 		.4byte	.LVL197
 9362 0924 0200     		.2byte	0x2
 9363 0926 30       		.byte	0x30
 9364 0927 9F       		.byte	0x9f
 9365 0928 1A000000 		.4byte	.LVL197
 9366 092c 34000000 		.4byte	.LFE72
 9367 0930 0100     		.2byte	0x1
 9368 0932 50       		.byte	0x50
 9369 0933 00000000 		.4byte	0
 9370 0937 00000000 		.4byte	0
 9371              	.LLST62:
 9372 093b 00000000 		.4byte	.LVL198
 9373 093f 07000000 		.4byte	.LVL199-1
 9374 0943 0100     		.2byte	0x1
 9375 0945 50       		.byte	0x50
 9376 0946 07000000 		.4byte	.LVL199-1
 9377 094a 10000000 		.4byte	.LVL200
 9378 094e 0100     		.2byte	0x1
 9379 0950 54       		.byte	0x54
 9380 0951 10000000 		.4byte	.LVL200
 9381 0955 20000000 		.4byte	.LFE88
 9382 0959 0400     		.2byte	0x4
 9383 095b F3       		.byte	0xf3
 9384 095c 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 273


 9385 095d 50       		.byte	0x50
 9386 095e 9F       		.byte	0x9f
 9387 095f 00000000 		.4byte	0
 9388 0963 00000000 		.4byte	0
 9389              	.LLST63:
 9390 0967 00000000 		.4byte	.LVL205
 9391 096b 07000000 		.4byte	.LVL206-1
 9392 096f 0100     		.2byte	0x1
 9393 0971 50       		.byte	0x50
 9394 0972 07000000 		.4byte	.LVL206-1
 9395 0976 10000000 		.4byte	.LVL207
 9396 097a 0100     		.2byte	0x1
 9397 097c 54       		.byte	0x54
 9398 097d 00000000 		.4byte	0
 9399 0981 00000000 		.4byte	0
 9400              	.LLST64:
 9401 0985 10000000 		.4byte	.LVL207
 9402 0989 A2000000 		.4byte	.LVL220
 9403 098d 0100     		.2byte	0x1
 9404 098f 54       		.byte	0x54
 9405 0990 00000000 		.4byte	0
 9406 0994 00000000 		.4byte	0
 9407              	.LLST65:
 9408 0998 2C000000 		.4byte	.LVL210
 9409 099c 30000000 		.4byte	.LVL211
 9410 09a0 0200     		.2byte	0x2
 9411 09a2 30       		.byte	0x30
 9412 09a3 9F       		.byte	0x9f
 9413 09a4 30000000 		.4byte	.LVL211
 9414 09a8 4D000000 		.4byte	.LVL213-1
 9415 09ac 0100     		.2byte	0x1
 9416 09ae 53       		.byte	0x53
 9417 09af 00000000 		.4byte	0
 9418 09b3 00000000 		.4byte	0
 9419              	.LLST66:
 9420 09b7 00000000 		.4byte	.LVL221
 9421 09bb 0F000000 		.4byte	.LVL223-1
 9422 09bf 0100     		.2byte	0x1
 9423 09c1 50       		.byte	0x50
 9424 09c2 0F000000 		.4byte	.LVL223-1
 9425 09c6 20000000 		.4byte	.LFE91
 9426 09ca 0400     		.2byte	0x4
 9427 09cc F3       		.byte	0xf3
 9428 09cd 01       		.uleb128 0x1
 9429 09ce 50       		.byte	0x50
 9430 09cf 9F       		.byte	0x9f
 9431 09d0 00000000 		.4byte	0
 9432 09d4 00000000 		.4byte	0
 9433              	.LLST67:
 9434 09d8 00000000 		.4byte	.LVL221
 9435 09dc 0A000000 		.4byte	.LVL222
 9436 09e0 0100     		.2byte	0x1
 9437 09e2 51       		.byte	0x51
 9438 09e3 0A000000 		.4byte	.LVL222
 9439 09e7 1A000000 		.4byte	.LVL225
 9440 09eb 0100     		.2byte	0x1
 9441 09ed 54       		.byte	0x54
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 274


 9442 09ee 1A000000 		.4byte	.LVL225
 9443 09f2 20000000 		.4byte	.LFE91
 9444 09f6 0400     		.2byte	0x4
 9445 09f8 F3       		.byte	0xf3
 9446 09f9 01       		.uleb128 0x1
 9447 09fa 51       		.byte	0x51
 9448 09fb 9F       		.byte	0x9f
 9449 09fc 00000000 		.4byte	0
 9450 0a00 00000000 		.4byte	0
 9451              	.LLST68:
 9452 0a04 00000000 		.4byte	.LVL226
 9453 0a08 19000000 		.4byte	.LVL229-1
 9454 0a0c 0100     		.2byte	0x1
 9455 0a0e 50       		.byte	0x50
 9456 0a0f 19000000 		.4byte	.LVL229-1
 9457 0a13 28000000 		.4byte	.LFE92
 9458 0a17 0400     		.2byte	0x4
 9459 0a19 F3       		.byte	0xf3
 9460 0a1a 01       		.uleb128 0x1
 9461 0a1b 50       		.byte	0x50
 9462 0a1c 9F       		.byte	0x9f
 9463 0a1d 00000000 		.4byte	0
 9464 0a21 00000000 		.4byte	0
 9465              	.LLST69:
 9466 0a25 00000000 		.4byte	.LVL226
 9467 0a29 0E000000 		.4byte	.LVL228
 9468 0a2d 0100     		.2byte	0x1
 9469 0a2f 51       		.byte	0x51
 9470 0a30 0E000000 		.4byte	.LVL228
 9471 0a34 28000000 		.4byte	.LFE92
 9472 0a38 0400     		.2byte	0x4
 9473 0a3a F3       		.byte	0xf3
 9474 0a3b 01       		.uleb128 0x1
 9475 0a3c 51       		.byte	0x51
 9476 0a3d 9F       		.byte	0x9f
 9477 0a3e 00000000 		.4byte	0
 9478 0a42 00000000 		.4byte	0
 9479              	.LLST70:
 9480 0a46 00000000 		.4byte	.LVL226
 9481 0a4a 0A000000 		.4byte	.LVL227
 9482 0a4e 0100     		.2byte	0x1
 9483 0a50 52       		.byte	0x52
 9484 0a51 0A000000 		.4byte	.LVL227
 9485 0a55 24000000 		.4byte	.LVL231
 9486 0a59 0100     		.2byte	0x1
 9487 0a5b 54       		.byte	0x54
 9488 0a5c 24000000 		.4byte	.LVL231
 9489 0a60 28000000 		.4byte	.LFE92
 9490 0a64 0400     		.2byte	0x4
 9491 0a66 F3       		.byte	0xf3
 9492 0a67 01       		.uleb128 0x1
 9493 0a68 52       		.byte	0x52
 9494 0a69 9F       		.byte	0x9f
 9495 0a6a 00000000 		.4byte	0
 9496 0a6e 00000000 		.4byte	0
 9497              	.LLST71:
 9498 0a72 00000000 		.4byte	.LVL232
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 275


 9499 0a76 11000000 		.4byte	.LVL234-1
 9500 0a7a 0100     		.2byte	0x1
 9501 0a7c 50       		.byte	0x50
 9502 0a7d 11000000 		.4byte	.LVL234-1
 9503 0a81 28000000 		.4byte	.LFE93
 9504 0a85 0400     		.2byte	0x4
 9505 0a87 F3       		.byte	0xf3
 9506 0a88 01       		.uleb128 0x1
 9507 0a89 50       		.byte	0x50
 9508 0a8a 9F       		.byte	0x9f
 9509 0a8b 00000000 		.4byte	0
 9510 0a8f 00000000 		.4byte	0
 9511              	.LLST72:
 9512 0a93 00000000 		.4byte	.LVL232
 9513 0a97 0C000000 		.4byte	.LVL233
 9514 0a9b 0100     		.2byte	0x1
 9515 0a9d 51       		.byte	0x51
 9516 0a9e 0C000000 		.4byte	.LVL233
 9517 0aa2 22000000 		.4byte	.LVL237
 9518 0aa6 0100     		.2byte	0x1
 9519 0aa8 55       		.byte	0x55
 9520 0aa9 00000000 		.4byte	0
 9521 0aad 00000000 		.4byte	0
 9522              	.LLST73:
 9523 0ab1 00000000 		.4byte	.LVL232
 9524 0ab5 11000000 		.4byte	.LVL234-1
 9525 0ab9 0100     		.2byte	0x1
 9526 0abb 52       		.byte	0x52
 9527 0abc 11000000 		.4byte	.LVL234-1
 9528 0ac0 22000000 		.4byte	.LVL237
 9529 0ac4 0100     		.2byte	0x1
 9530 0ac6 54       		.byte	0x54
 9531 0ac7 22000000 		.4byte	.LVL237
 9532 0acb 28000000 		.4byte	.LFE93
 9533 0acf 0400     		.2byte	0x4
 9534 0ad1 F3       		.byte	0xf3
 9535 0ad2 01       		.uleb128 0x1
 9536 0ad3 52       		.byte	0x52
 9537 0ad4 9F       		.byte	0x9f
 9538 0ad5 00000000 		.4byte	0
 9539 0ad9 00000000 		.4byte	0
 9540              	.LLST74:
 9541 0add 00000000 		.4byte	.LVL238
 9542 0ae1 0C000000 		.4byte	.LVL240
 9543 0ae5 0100     		.2byte	0x1
 9544 0ae7 50       		.byte	0x50
 9545 0ae8 0C000000 		.4byte	.LVL240
 9546 0aec 74000000 		.4byte	.LFE94
 9547 0af0 0400     		.2byte	0x4
 9548 0af2 F3       		.byte	0xf3
 9549 0af3 01       		.uleb128 0x1
 9550 0af4 50       		.byte	0x50
 9551 0af5 9F       		.byte	0x9f
 9552 0af6 00000000 		.4byte	0
 9553 0afa 00000000 		.4byte	0
 9554              	.LLST75:
 9555 0afe 06000000 		.4byte	.LVL239
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 276


 9556 0b02 68000000 		.4byte	.LVL248
 9557 0b06 0100     		.2byte	0x1
 9558 0b08 54       		.byte	0x54
 9559 0b09 00000000 		.4byte	0
 9560 0b0d 00000000 		.4byte	0
 9561              	.LLST76:
 9562 0b11 5A000000 		.4byte	.LVL245
 9563 0b15 64000000 		.4byte	.LVL246
 9564 0b19 0200     		.2byte	0x2
 9565 0b1b 31       		.byte	0x31
 9566 0b1c 9F       		.byte	0x9f
 9567 0b1d 66000000 		.4byte	.LVL247
 9568 0b21 74000000 		.4byte	.LFE94
 9569 0b25 0100     		.2byte	0x1
 9570 0b27 50       		.byte	0x50
 9571 0b28 00000000 		.4byte	0
 9572 0b2c 00000000 		.4byte	0
 9573              	.LLST77:
 9574 0b30 00000000 		.4byte	.LVL249
 9575 0b34 0D000000 		.4byte	.LVL252-1
 9576 0b38 0100     		.2byte	0x1
 9577 0b3a 50       		.byte	0x50
 9578 0b3b 0D000000 		.4byte	.LVL252-1
 9579 0b3f 54000000 		.4byte	.LFE95
 9580 0b43 0400     		.2byte	0x4
 9581 0b45 F3       		.byte	0xf3
 9582 0b46 01       		.uleb128 0x1
 9583 0b47 50       		.byte	0x50
 9584 0b48 9F       		.byte	0x9f
 9585 0b49 00000000 		.4byte	0
 9586 0b4d 00000000 		.4byte	0
 9587              	.LLST78:
 9588 0b51 00000000 		.4byte	.LVL249
 9589 0b55 06000000 		.4byte	.LVL250
 9590 0b59 0100     		.2byte	0x1
 9591 0b5b 51       		.byte	0x51
 9592 0b5c 06000000 		.4byte	.LVL250
 9593 0b60 54000000 		.4byte	.LFE95
 9594 0b64 0400     		.2byte	0x4
 9595 0b66 F3       		.byte	0xf3
 9596 0b67 01       		.uleb128 0x1
 9597 0b68 51       		.byte	0x51
 9598 0b69 9F       		.byte	0x9f
 9599 0b6a 00000000 		.4byte	0
 9600 0b6e 00000000 		.4byte	0
 9601              	.LLST79:
 9602 0b72 0A000000 		.4byte	.LVL251
 9603 0b76 50000000 		.4byte	.LVL255
 9604 0b7a 0100     		.2byte	0x1
 9605 0b7c 54       		.byte	0x54
 9606 0b7d 00000000 		.4byte	0
 9607 0b81 00000000 		.4byte	0
 9608              	.LLST80:
 9609 0b85 00000000 		.4byte	.LVL256
 9610 0b89 07000000 		.4byte	.LVL257-1
 9611 0b8d 0100     		.2byte	0x1
 9612 0b8f 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 277


 9613 0b90 07000000 		.4byte	.LVL257-1
 9614 0b94 1C000000 		.4byte	.LVL259
 9615 0b98 0100     		.2byte	0x1
 9616 0b9a 54       		.byte	0x54
 9617 0b9b 1C000000 		.4byte	.LVL259
 9618 0b9f 20000000 		.4byte	.LFE96
 9619 0ba3 0400     		.2byte	0x4
 9620 0ba5 F3       		.byte	0xf3
 9621 0ba6 01       		.uleb128 0x1
 9622 0ba7 50       		.byte	0x50
 9623 0ba8 9F       		.byte	0x9f
 9624 0ba9 00000000 		.4byte	0
 9625 0bad 00000000 		.4byte	0
 9626              	.LLST81:
 9627 0bb1 00000000 		.4byte	.LVL261
 9628 0bb5 09000000 		.4byte	.LVL262-1
 9629 0bb9 0100     		.2byte	0x1
 9630 0bbb 50       		.byte	0x50
 9631 0bbc 09000000 		.4byte	.LVL262-1
 9632 0bc0 32000000 		.4byte	.LVL266
 9633 0bc4 0100     		.2byte	0x1
 9634 0bc6 54       		.byte	0x54
 9635 0bc7 32000000 		.4byte	.LVL266
 9636 0bcb 34000000 		.4byte	.LVL267
 9637 0bcf 0400     		.2byte	0x4
 9638 0bd1 F3       		.byte	0xf3
 9639 0bd2 01       		.uleb128 0x1
 9640 0bd3 50       		.byte	0x50
 9641 0bd4 9F       		.byte	0x9f
 9642 0bd5 34000000 		.4byte	.LVL267
 9643 0bd9 44000000 		.4byte	.LVL270
 9644 0bdd 0100     		.2byte	0x1
 9645 0bdf 54       		.byte	0x54
 9646 0be0 44000000 		.4byte	.LVL270
 9647 0be4 46000000 		.4byte	.LVL271
 9648 0be8 0400     		.2byte	0x4
 9649 0bea F3       		.byte	0xf3
 9650 0beb 01       		.uleb128 0x1
 9651 0bec 50       		.byte	0x50
 9652 0bed 9F       		.byte	0x9f
 9653 0bee 46000000 		.4byte	.LVL271
 9654 0bf2 4C000000 		.4byte	.LVL273
 9655 0bf6 0100     		.2byte	0x1
 9656 0bf8 54       		.byte	0x54
 9657 0bf9 4C000000 		.4byte	.LVL273
 9658 0bfd 4E000000 		.4byte	.LVL274
 9659 0c01 0400     		.2byte	0x4
 9660 0c03 F3       		.byte	0xf3
 9661 0c04 01       		.uleb128 0x1
 9662 0c05 50       		.byte	0x50
 9663 0c06 9F       		.byte	0x9f
 9664 0c07 4E000000 		.4byte	.LVL274
 9665 0c0b 50000000 		.4byte	.LVL275
 9666 0c0f 0100     		.2byte	0x1
 9667 0c11 54       		.byte	0x54
 9668 0c12 50000000 		.4byte	.LVL275
 9669 0c16 5C000000 		.4byte	.LFE98
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 278


 9670 0c1a 0400     		.2byte	0x4
 9671 0c1c F3       		.byte	0xf3
 9672 0c1d 01       		.uleb128 0x1
 9673 0c1e 50       		.byte	0x50
 9674 0c1f 9F       		.byte	0x9f
 9675 0c20 00000000 		.4byte	0
 9676 0c24 00000000 		.4byte	0
 9677              	.LLST82:
 9678 0c28 00000000 		.4byte	.LVL261
 9679 0c2c 09000000 		.4byte	.LVL262-1
 9680 0c30 0100     		.2byte	0x1
 9681 0c32 51       		.byte	0x51
 9682 0c33 09000000 		.4byte	.LVL262-1
 9683 0c37 58000000 		.4byte	.LVL277
 9684 0c3b 0100     		.2byte	0x1
 9685 0c3d 55       		.byte	0x55
 9686 0c3e 58000000 		.4byte	.LVL277
 9687 0c42 5C000000 		.4byte	.LFE98
 9688 0c46 0400     		.2byte	0x4
 9689 0c48 F3       		.byte	0xf3
 9690 0c49 01       		.uleb128 0x1
 9691 0c4a 51       		.byte	0x51
 9692 0c4b 9F       		.byte	0x9f
 9693 0c4c 00000000 		.4byte	0
 9694 0c50 00000000 		.4byte	0
 9695              	.LLST83:
 9696 0c54 2C000000 		.4byte	.LVL265
 9697 0c58 34000000 		.4byte	.LVL267
 9698 0c5c 0200     		.2byte	0x2
 9699 0c5e 31       		.byte	0x31
 9700 0c5f 9F       		.byte	0x9f
 9701 0c60 42000000 		.4byte	.LVL269
 9702 0c64 46000000 		.4byte	.LVL271
 9703 0c68 0200     		.2byte	0x2
 9704 0c6a 30       		.byte	0x30
 9705 0c6b 9F       		.byte	0x9f
 9706 0c6c 4A000000 		.4byte	.LVL272
 9707 0c70 4E000000 		.4byte	.LVL274
 9708 0c74 0200     		.2byte	0x2
 9709 0c76 31       		.byte	0x31
 9710 0c77 9F       		.byte	0x9f
 9711 0c78 50000000 		.4byte	.LVL275
 9712 0c7c 58000000 		.4byte	.LVL277
 9713 0c80 0100     		.2byte	0x1
 9714 0c82 54       		.byte	0x54
 9715 0c83 58000000 		.4byte	.LVL277
 9716 0c87 5C000000 		.4byte	.LFE98
 9717 0c8b 0100     		.2byte	0x1
 9718 0c8d 50       		.byte	0x50
 9719 0c8e 00000000 		.4byte	0
 9720 0c92 00000000 		.4byte	0
 9721              	.LLST84:
 9722 0c96 10000000 		.4byte	.LVL263
 9723 0c9a 41000000 		.4byte	.LVL269-1
 9724 0c9e 0100     		.2byte	0x1
 9725 0ca0 51       		.byte	0x51
 9726 0ca1 46000000 		.4byte	.LVL271
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 279


 9727 0ca5 50000000 		.4byte	.LVL275
 9728 0ca9 0100     		.2byte	0x1
 9729 0cab 51       		.byte	0x51
 9730 0cac 00000000 		.4byte	0
 9731 0cb0 00000000 		.4byte	0
 9732              	.LLST85:
 9733 0cb4 14000000 		.4byte	.LVL264
 9734 0cb8 3E000000 		.4byte	.LVL268
 9735 0cbc 0100     		.2byte	0x1
 9736 0cbe 50       		.byte	0x50
 9737 0cbf 3E000000 		.4byte	.LVL268
 9738 0cc3 41000000 		.4byte	.LVL269-1
 9739 0cc7 0600     		.2byte	0x6
 9740 0cc9 71       		.byte	0x71
 9741 0cca 00       		.sleb128 0
 9742 0ccb 72       		.byte	0x72
 9743 0ccc 00       		.sleb128 0
 9744 0ccd 1C       		.byte	0x1c
 9745 0cce 9F       		.byte	0x9f
 9746 0ccf 46000000 		.4byte	.LVL271
 9747 0cd3 50000000 		.4byte	.LVL275
 9748 0cd7 0100     		.2byte	0x1
 9749 0cd9 50       		.byte	0x50
 9750 0cda 00000000 		.4byte	0
 9751 0cde 00000000 		.4byte	0
 9752              	.LLST86:
 9753 0ce2 00000000 		.4byte	.LVL278
 9754 0ce6 0C000000 		.4byte	.LVL279
 9755 0cea 0100     		.2byte	0x1
 9756 0cec 50       		.byte	0x50
 9757 0ced 00000000 		.4byte	0
 9758 0cf1 00000000 		.4byte	0
 9759              	.LLST87:
 9760 0cf5 00000000 		.4byte	.LVL278
 9761 0cf9 0E000000 		.4byte	.LVL280
 9762 0cfd 0100     		.2byte	0x1
 9763 0cff 51       		.byte	0x51
 9764 0d00 0E000000 		.4byte	.LVL280
 9765 0d04 12000000 		.4byte	.LVL281
 9766 0d08 0300     		.2byte	0x3
 9767 0d0a 71       		.byte	0x71
 9768 0d0b 70       		.sleb128 -16
 9769 0d0c 9F       		.byte	0x9f
 9770 0d0d 12000000 		.4byte	.LVL281
 9771 0d11 1C000000 		.4byte	.LFE101
 9772 0d15 0400     		.2byte	0x4
 9773 0d17 F3       		.byte	0xf3
 9774 0d18 01       		.uleb128 0x1
 9775 0d19 51       		.byte	0x51
 9776 0d1a 9F       		.byte	0x9f
 9777 0d1b 00000000 		.4byte	0
 9778 0d1f 00000000 		.4byte	0
 9779              	.LLST88:
 9780 0d23 0C000000 		.4byte	.LVL279
 9781 0d27 14000000 		.4byte	.LVL282
 9782 0d2b 0100     		.2byte	0x1
 9783 0d2d 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 280


 9784 0d2e 00000000 		.4byte	0
 9785 0d32 00000000 		.4byte	0
 9786              	.LLST89:
 9787 0d36 00000000 		.4byte	.LVL283
 9788 0d3a 0C000000 		.4byte	.LVL284
 9789 0d3e 0100     		.2byte	0x1
 9790 0d40 50       		.byte	0x50
 9791 0d41 16000000 		.4byte	.LVL288
 9792 0d45 18000000 		.4byte	.LVL289
 9793 0d49 0100     		.2byte	0x1
 9794 0d4b 50       		.byte	0x50
 9795 0d4c 18000000 		.4byte	.LVL289
 9796 0d50 20000000 		.4byte	.LFE102
 9797 0d54 0400     		.2byte	0x4
 9798 0d56 F3       		.byte	0xf3
 9799 0d57 01       		.uleb128 0x1
 9800 0d58 50       		.byte	0x50
 9801 0d59 9F       		.byte	0x9f
 9802 0d5a 00000000 		.4byte	0
 9803 0d5e 00000000 		.4byte	0
 9804              	.LLST90:
 9805 0d62 00000000 		.4byte	.LVL283
 9806 0d66 0E000000 		.4byte	.LVL285
 9807 0d6a 0100     		.2byte	0x1
 9808 0d6c 51       		.byte	0x51
 9809 0d6d 0E000000 		.4byte	.LVL285
 9810 0d71 16000000 		.4byte	.LVL288
 9811 0d75 0300     		.2byte	0x3
 9812 0d77 71       		.byte	0x71
 9813 0d78 70       		.sleb128 -16
 9814 0d79 9F       		.byte	0x9f
 9815 0d7a 16000000 		.4byte	.LVL288
 9816 0d7e 20000000 		.4byte	.LFE102
 9817 0d82 0100     		.2byte	0x1
 9818 0d84 51       		.byte	0x51
 9819 0d85 00000000 		.4byte	0
 9820 0d89 00000000 		.4byte	0
 9821              	.LLST91:
 9822 0d8d 00000000 		.4byte	.LVL283
 9823 0d91 14000000 		.4byte	.LVL287
 9824 0d95 0200     		.2byte	0x2
 9825 0d97 30       		.byte	0x30
 9826 0d98 9F       		.byte	0x9f
 9827 0d99 14000000 		.4byte	.LVL287
 9828 0d9d 16000000 		.4byte	.LVL288
 9829 0da1 0100     		.2byte	0x1
 9830 0da3 50       		.byte	0x50
 9831 0da4 16000000 		.4byte	.LVL288
 9832 0da8 18000000 		.4byte	.LVL289
 9833 0dac 0200     		.2byte	0x2
 9834 0dae 30       		.byte	0x30
 9835 0daf 9F       		.byte	0x9f
 9836 0db0 18000000 		.4byte	.LVL289
 9837 0db4 20000000 		.4byte	.LFE102
 9838 0db8 0100     		.2byte	0x1
 9839 0dba 50       		.byte	0x50
 9840 0dbb 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 281


 9841 0dbf 00000000 		.4byte	0
 9842              	.LLST92:
 9843 0dc3 0C000000 		.4byte	.LVL284
 9844 0dc7 12000000 		.4byte	.LVL286
 9845 0dcb 0100     		.2byte	0x1
 9846 0dcd 50       		.byte	0x50
 9847 0dce 00000000 		.4byte	0
 9848 0dd2 00000000 		.4byte	0
 9849              	.LLST93:
 9850 0dd6 00000000 		.4byte	.LVL293
 9851 0dda 0B000000 		.4byte	.LVL294-1
 9852 0dde 0100     		.2byte	0x1
 9853 0de0 50       		.byte	0x50
 9854 0de1 0B000000 		.4byte	.LVL294-1
 9855 0de5 88000000 		.4byte	.LVL299
 9856 0de9 0100     		.2byte	0x1
 9857 0deb 54       		.byte	0x54
 9858 0dec 88000000 		.4byte	.LVL299
 9859 0df0 A0000000 		.4byte	.LFE110
 9860 0df4 0400     		.2byte	0x4
 9861 0df6 F3       		.byte	0xf3
 9862 0df7 01       		.uleb128 0x1
 9863 0df8 50       		.byte	0x50
 9864 0df9 9F       		.byte	0x9f
 9865 0dfa 00000000 		.4byte	0
 9866 0dfe 00000000 		.4byte	0
 9867              	.LLST94:
 9868 0e02 00000000 		.4byte	.LVL293
 9869 0e06 0B000000 		.4byte	.LVL294-1
 9870 0e0a 0100     		.2byte	0x1
 9871 0e0c 51       		.byte	0x51
 9872 0e0d 0B000000 		.4byte	.LVL294-1
 9873 0e11 96000000 		.4byte	.LVL301
 9874 0e15 0100     		.2byte	0x1
 9875 0e17 56       		.byte	0x56
 9876 0e18 96000000 		.4byte	.LVL301
 9877 0e1c A0000000 		.4byte	.LFE110
 9878 0e20 0400     		.2byte	0x4
 9879 0e22 F3       		.byte	0xf3
 9880 0e23 01       		.uleb128 0x1
 9881 0e24 51       		.byte	0x51
 9882 0e25 9F       		.byte	0x9f
 9883 0e26 00000000 		.4byte	0
 9884 0e2a 00000000 		.4byte	0
 9885              	.LLST95:
 9886 0e2e 00000000 		.4byte	.LVL293
 9887 0e32 0B000000 		.4byte	.LVL294-1
 9888 0e36 0100     		.2byte	0x1
 9889 0e38 52       		.byte	0x52
 9890 0e39 0B000000 		.4byte	.LVL294-1
 9891 0e3d 5A000000 		.4byte	.LVL298
 9892 0e41 0100     		.2byte	0x1
 9893 0e43 55       		.byte	0x55
 9894 0e44 5A000000 		.4byte	.LVL298
 9895 0e48 A0000000 		.4byte	.LFE110
 9896 0e4c 0400     		.2byte	0x4
 9897 0e4e F3       		.byte	0xf3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 282


 9898 0e4f 01       		.uleb128 0x1
 9899 0e50 52       		.byte	0x52
 9900 0e51 9F       		.byte	0x9f
 9901 0e52 00000000 		.4byte	0
 9902 0e56 00000000 		.4byte	0
 9903              	.LLST96:
 9904 0e5a 5A000000 		.4byte	.LVL298
 9905 0e5e 96000000 		.4byte	.LVL301
 9906 0e62 0100     		.2byte	0x1
 9907 0e64 55       		.byte	0x55
 9908 0e65 96000000 		.4byte	.LVL301
 9909 0e69 A0000000 		.4byte	.LFE110
 9910 0e6d 0100     		.2byte	0x1
 9911 0e6f 50       		.byte	0x50
 9912 0e70 00000000 		.4byte	0
 9913 0e74 00000000 		.4byte	0
 9914              	.LLST97:
 9915 0e78 00000000 		.4byte	.LVL302
 9916 0e7c 0D000000 		.4byte	.LVL303-1
 9917 0e80 0100     		.2byte	0x1
 9918 0e82 50       		.byte	0x50
 9919 0e83 0D000000 		.4byte	.LVL303-1
 9920 0e87 AE000000 		.4byte	.LVL311
 9921 0e8b 0100     		.2byte	0x1
 9922 0e8d 54       		.byte	0x54
 9923 0e8e AE000000 		.4byte	.LVL311
 9924 0e92 C4000000 		.4byte	.LFE111
 9925 0e96 0400     		.2byte	0x4
 9926 0e98 F3       		.byte	0xf3
 9927 0e99 01       		.uleb128 0x1
 9928 0e9a 50       		.byte	0x50
 9929 0e9b 9F       		.byte	0x9f
 9930 0e9c 00000000 		.4byte	0
 9931 0ea0 00000000 		.4byte	0
 9932              	.LLST98:
 9933 0ea4 00000000 		.4byte	.LVL302
 9934 0ea8 0D000000 		.4byte	.LVL303-1
 9935 0eac 0100     		.2byte	0x1
 9936 0eae 51       		.byte	0x51
 9937 0eaf 0D000000 		.4byte	.LVL303-1
 9938 0eb3 BC000000 		.4byte	.LVL313
 9939 0eb7 0100     		.2byte	0x1
 9940 0eb9 57       		.byte	0x57
 9941 0eba BC000000 		.4byte	.LVL313
 9942 0ebe C4000000 		.4byte	.LFE111
 9943 0ec2 0400     		.2byte	0x4
 9944 0ec4 F3       		.byte	0xf3
 9945 0ec5 01       		.uleb128 0x1
 9946 0ec6 51       		.byte	0x51
 9947 0ec7 9F       		.byte	0x9f
 9948 0ec8 00000000 		.4byte	0
 9949 0ecc 00000000 		.4byte	0
 9950              	.LLST99:
 9951 0ed0 00000000 		.4byte	.LVL302
 9952 0ed4 0D000000 		.4byte	.LVL303-1
 9953 0ed8 0100     		.2byte	0x1
 9954 0eda 52       		.byte	0x52
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 283


 9955 0edb 0D000000 		.4byte	.LVL303-1
 9956 0edf 9C000000 		.4byte	.LVL307
 9957 0ee3 0100     		.2byte	0x1
 9958 0ee5 55       		.byte	0x55
 9959 0ee6 9C000000 		.4byte	.LVL307
 9960 0eea A4000000 		.4byte	.LVL309
 9961 0eee 0400     		.2byte	0x4
 9962 0ef0 F3       		.byte	0xf3
 9963 0ef1 01       		.uleb128 0x1
 9964 0ef2 52       		.byte	0x52
 9965 0ef3 9F       		.byte	0x9f
 9966 0ef4 A4000000 		.4byte	.LVL309
 9967 0ef8 A6000000 		.4byte	.LVL310
 9968 0efc 0100     		.2byte	0x1
 9969 0efe 55       		.byte	0x55
 9970 0eff A6000000 		.4byte	.LVL310
 9971 0f03 C4000000 		.4byte	.LFE111
 9972 0f07 0400     		.2byte	0x4
 9973 0f09 F3       		.byte	0xf3
 9974 0f0a 01       		.uleb128 0x1
 9975 0f0b 52       		.byte	0x52
 9976 0f0c 9F       		.byte	0x9f
 9977 0f0d 00000000 		.4byte	0
 9978 0f11 00000000 		.4byte	0
 9979              	.LLST100:
 9980 0f15 00000000 		.4byte	.LVL302
 9981 0f19 0D000000 		.4byte	.LVL303-1
 9982 0f1d 0100     		.2byte	0x1
 9983 0f1f 53       		.byte	0x53
 9984 0f20 0D000000 		.4byte	.LVL303-1
 9985 0f24 BC000000 		.4byte	.LVL313
 9986 0f28 0100     		.2byte	0x1
 9987 0f2a 56       		.byte	0x56
 9988 0f2b BC000000 		.4byte	.LVL313
 9989 0f2f C4000000 		.4byte	.LFE111
 9990 0f33 0400     		.2byte	0x4
 9991 0f35 F3       		.byte	0xf3
 9992 0f36 01       		.uleb128 0x1
 9993 0f37 53       		.byte	0x53
 9994 0f38 9F       		.byte	0x9f
 9995 0f39 00000000 		.4byte	0
 9996 0f3d 00000000 		.4byte	0
 9997              	.LLST101:
 9998 0f41 00000000 		.4byte	.LVL302
 9999 0f45 BC000000 		.4byte	.LVL313
 10000 0f49 0200     		.2byte	0x2
 10001 0f4b 91       		.byte	0x91
 10002 0f4c 00       		.sleb128 0
 10003 0f4d BC000000 		.4byte	.LVL313
 10004 0f51 C4000000 		.4byte	.LFE111
 10005 0f55 0200     		.2byte	0x2
 10006 0f57 7D       		.byte	0x7d
 10007 0f58 00       		.sleb128 0
 10008 0f59 00000000 		.4byte	0
 10009 0f5d 00000000 		.4byte	0
 10010              	.LLST102:
 10011 0f61 A0000000 		.4byte	.LVL308
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 284


 10012 0f65 A4000000 		.4byte	.LVL309
 10013 0f69 0200     		.2byte	0x2
 10014 0f6b 31       		.byte	0x31
 10015 0f6c 9F       		.byte	0x9f
 10016 0f6d A6000000 		.4byte	.LVL310
 10017 0f71 BC000000 		.4byte	.LVL313
 10018 0f75 0100     		.2byte	0x1
 10019 0f77 55       		.byte	0x55
 10020 0f78 BC000000 		.4byte	.LVL313
 10021 0f7c C4000000 		.4byte	.LFE111
 10022 0f80 0100     		.2byte	0x1
 10023 0f82 50       		.byte	0x50
 10024 0f83 00000000 		.4byte	0
 10025 0f87 00000000 		.4byte	0
 10026              	.LLST103:
 10027 0f8b 00000000 		.4byte	.LVL314
 10028 0f8f 13000000 		.4byte	.LVL316-1
 10029 0f93 0100     		.2byte	0x1
 10030 0f95 50       		.byte	0x50
 10031 0f96 13000000 		.4byte	.LVL316-1
 10032 0f9a D8000000 		.4byte	.LVL337
 10033 0f9e 0100     		.2byte	0x1
 10034 0fa0 56       		.byte	0x56
 10035 0fa1 D8000000 		.4byte	.LVL337
 10036 0fa5 E0000000 		.4byte	.LFE112
 10037 0fa9 0400     		.2byte	0x4
 10038 0fab F3       		.byte	0xf3
 10039 0fac 01       		.uleb128 0x1
 10040 0fad 50       		.byte	0x50
 10041 0fae 9F       		.byte	0x9f
 10042 0faf 00000000 		.4byte	0
 10043 0fb3 00000000 		.4byte	0
 10044              	.LLST104:
 10045 0fb7 00000000 		.4byte	.LVL314
 10046 0fbb 13000000 		.4byte	.LVL316-1
 10047 0fbf 0100     		.2byte	0x1
 10048 0fc1 51       		.byte	0x51
 10049 0fc2 13000000 		.4byte	.LVL316-1
 10050 0fc6 44000000 		.4byte	.LVL318
 10051 0fca 0100     		.2byte	0x1
 10052 0fcc 54       		.byte	0x54
 10053 0fcd 44000000 		.4byte	.LVL318
 10054 0fd1 50000000 		.4byte	.LVL320
 10055 0fd5 0300     		.2byte	0x3
 10056 0fd7 74       		.byte	0x74
 10057 0fd8 6A       		.sleb128 -22
 10058 0fd9 9F       		.byte	0x9f
 10059 0fda 50000000 		.4byte	.LVL320
 10060 0fde 52000000 		.4byte	.LVL321
 10061 0fe2 0400     		.2byte	0x4
 10062 0fe4 F3       		.byte	0xf3
 10063 0fe5 01       		.uleb128 0x1
 10064 0fe6 51       		.byte	0x51
 10065 0fe7 9F       		.byte	0x9f
 10066 0fe8 52000000 		.4byte	.LVL321
 10067 0fec 54000000 		.4byte	.LVL322
 10068 0ff0 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 285


 10069 0ff2 54       		.byte	0x54
 10070 0ff3 54000000 		.4byte	.LVL322
 10071 0ff7 60000000 		.4byte	.LVL323
 10072 0ffb 0300     		.2byte	0x3
 10073 0ffd 74       		.byte	0x74
 10074 0ffe 6A       		.sleb128 -22
 10075 0fff 9F       		.byte	0x9f
 10076 1000 60000000 		.4byte	.LVL323
 10077 1004 62000000 		.4byte	.LVL324
 10078 1008 0400     		.2byte	0x4
 10079 100a F3       		.byte	0xf3
 10080 100b 01       		.uleb128 0x1
 10081 100c 51       		.byte	0x51
 10082 100d 9F       		.byte	0x9f
 10083 100e 62000000 		.4byte	.LVL324
 10084 1012 64000000 		.4byte	.LVL325
 10085 1016 0100     		.2byte	0x1
 10086 1018 54       		.byte	0x54
 10087 1019 64000000 		.4byte	.LVL325
 10088 101d 6A000000 		.4byte	.LVL326
 10089 1021 0300     		.2byte	0x3
 10090 1023 74       		.byte	0x74
 10091 1024 6A       		.sleb128 -22
 10092 1025 9F       		.byte	0x9f
 10093 1026 6A000000 		.4byte	.LVL326
 10094 102a 6C000000 		.4byte	.LVL327
 10095 102e 0400     		.2byte	0x4
 10096 1030 F3       		.byte	0xf3
 10097 1031 01       		.uleb128 0x1
 10098 1032 51       		.byte	0x51
 10099 1033 9F       		.byte	0x9f
 10100 1034 6C000000 		.4byte	.LVL327
 10101 1038 72000000 		.4byte	.LVL328
 10102 103c 0100     		.2byte	0x1
 10103 103e 54       		.byte	0x54
 10104 103f 72000000 		.4byte	.LVL328
 10105 1043 78000000 		.4byte	.LVL329
 10106 1047 0300     		.2byte	0x3
 10107 1049 74       		.byte	0x74
 10108 104a 6A       		.sleb128 -22
 10109 104b 9F       		.byte	0x9f
 10110 104c 78000000 		.4byte	.LVL329
 10111 1050 7A000000 		.4byte	.LVL330
 10112 1054 0400     		.2byte	0x4
 10113 1056 F3       		.byte	0xf3
 10114 1057 01       		.uleb128 0x1
 10115 1058 51       		.byte	0x51
 10116 1059 9F       		.byte	0x9f
 10117 105a 7A000000 		.4byte	.LVL330
 10118 105e 7C000000 		.4byte	.LVL331
 10119 1062 0100     		.2byte	0x1
 10120 1064 54       		.byte	0x54
 10121 1065 7C000000 		.4byte	.LVL331
 10122 1069 7E000000 		.4byte	.LVL332
 10123 106d 0400     		.2byte	0x4
 10124 106f F3       		.byte	0xf3
 10125 1070 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 286


 10126 1071 51       		.byte	0x51
 10127 1072 9F       		.byte	0x9f
 10128 1073 7E000000 		.4byte	.LVL332
 10129 1077 80000000 		.4byte	.LVL333
 10130 107b 0100     		.2byte	0x1
 10131 107d 54       		.byte	0x54
 10132 107e 80000000 		.4byte	.LVL333
 10133 1082 E0000000 		.4byte	.LFE112
 10134 1086 0400     		.2byte	0x4
 10135 1088 F3       		.byte	0xf3
 10136 1089 01       		.uleb128 0x1
 10137 108a 51       		.byte	0x51
 10138 108b 9F       		.byte	0x9f
 10139 108c 00000000 		.4byte	0
 10140 1090 00000000 		.4byte	0
 10141              	.LLST105:
 10142 1094 00000000 		.4byte	.LVL314
 10143 1098 13000000 		.4byte	.LVL316-1
 10144 109c 0100     		.2byte	0x1
 10145 109e 52       		.byte	0x52
 10146 109f 13000000 		.4byte	.LVL316-1
 10147 10a3 4A000000 		.4byte	.LVL319
 10148 10a7 0100     		.2byte	0x1
 10149 10a9 57       		.byte	0x57
 10150 10aa 4A000000 		.4byte	.LVL319
 10151 10ae 52000000 		.4byte	.LVL321
 10152 10b2 0400     		.2byte	0x4
 10153 10b4 F3       		.byte	0xf3
 10154 10b5 01       		.uleb128 0x1
 10155 10b6 52       		.byte	0x52
 10156 10b7 9F       		.byte	0x9f
 10157 10b8 52000000 		.4byte	.LVL321
 10158 10bc 80000000 		.4byte	.LVL333
 10159 10c0 0100     		.2byte	0x1
 10160 10c2 57       		.byte	0x57
 10161 10c3 80000000 		.4byte	.LVL333
 10162 10c7 E0000000 		.4byte	.LFE112
 10163 10cb 0400     		.2byte	0x4
 10164 10cd F3       		.byte	0xf3
 10165 10ce 01       		.uleb128 0x1
 10166 10cf 52       		.byte	0x52
 10167 10d0 9F       		.byte	0x9f
 10168 10d1 00000000 		.4byte	0
 10169 10d5 00000000 		.4byte	0
 10170              	.LLST106:
 10171 10d9 00000000 		.4byte	.LVL314
 10172 10dd 13000000 		.4byte	.LVL316-1
 10173 10e1 0100     		.2byte	0x1
 10174 10e3 53       		.byte	0x53
 10175 10e4 13000000 		.4byte	.LVL316-1
 10176 10e8 E0000000 		.4byte	.LFE112
 10177 10ec 0400     		.2byte	0x4
 10178 10ee F3       		.byte	0xf3
 10179 10ef 01       		.uleb128 0x1
 10180 10f0 53       		.byte	0x53
 10181 10f1 9F       		.byte	0x9f
 10182 10f2 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 287


 10183 10f6 00000000 		.4byte	0
 10184              	.LLST107:
 10185 10fa 00000000 		.4byte	.LVL314
 10186 10fe D8000000 		.4byte	.LVL337
 10187 1102 0200     		.2byte	0x2
 10188 1104 91       		.byte	0x91
 10189 1105 00       		.sleb128 0
 10190 1106 D8000000 		.4byte	.LVL337
 10191 110a E0000000 		.4byte	.LFE112
 10192 110e 0200     		.2byte	0x2
 10193 1110 7D       		.byte	0x7d
 10194 1111 00       		.sleb128 0
 10195 1112 00000000 		.4byte	0
 10196 1116 00000000 		.4byte	0
 10197              	.LLST108:
 10198 111a 10000000 		.4byte	.LVL315
 10199 111e 13000000 		.4byte	.LVL316-1
 10200 1122 0100     		.2byte	0x1
 10201 1124 50       		.byte	0x50
 10202 1125 13000000 		.4byte	.LVL316-1
 10203 1129 D8000000 		.4byte	.LVL337
 10204 112d 0100     		.2byte	0x1
 10205 112f 56       		.byte	0x56
 10206 1130 D8000000 		.4byte	.LVL337
 10207 1134 E0000000 		.4byte	.LFE112
 10208 1138 0400     		.2byte	0x4
 10209 113a F3       		.byte	0xf3
 10210 113b 01       		.uleb128 0x1
 10211 113c 50       		.byte	0x50
 10212 113d 9F       		.byte	0x9f
 10213 113e 00000000 		.4byte	0
 10214 1142 00000000 		.4byte	0
 10215              	.LLST109:
 10216 1146 10000000 		.4byte	.LVL315
 10217 114a 80000000 		.4byte	.LVL333
 10218 114e 0200     		.2byte	0x2
 10219 1150 31       		.byte	0x31
 10220 1151 9F       		.byte	0x9f
 10221 1152 80000000 		.4byte	.LVL333
 10222 1156 D8000000 		.4byte	.LVL337
 10223 115a 0100     		.2byte	0x1
 10224 115c 54       		.byte	0x54
 10225 115d D8000000 		.4byte	.LVL337
 10226 1161 E0000000 		.4byte	.LFE112
 10227 1165 0100     		.2byte	0x1
 10228 1167 50       		.byte	0x50
 10229 1168 00000000 		.4byte	0
 10230 116c 00000000 		.4byte	0
 10231              	.LLST110:
 10232 1170 2E000000 		.4byte	.LVL317
 10233 1174 8B000000 		.4byte	.LVL334-1
 10234 1178 0100     		.2byte	0x1
 10235 117a 51       		.byte	0x51
 10236 117b 00000000 		.4byte	0
 10237 117f 00000000 		.4byte	0
 10238              	.LLST111:
 10239 1183 00000000 		.4byte	.LVL338
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 288


 10240 1187 90000000 		.4byte	.LVL353
 10241 118b 0100     		.2byte	0x1
 10242 118d 50       		.byte	0x50
 10243 118e 90000000 		.4byte	.LVL353
 10244 1192 B8000000 		.4byte	.LVL356
 10245 1196 0100     		.2byte	0x1
 10246 1198 54       		.byte	0x54
 10247 1199 B8000000 		.4byte	.LVL356
 10248 119d BE000000 		.4byte	.LVL357
 10249 11a1 0100     		.2byte	0x1
 10250 11a3 50       		.byte	0x50
 10251 11a4 BE000000 		.4byte	.LVL357
 10252 11a8 E2000000 		.4byte	.LVL359
 10253 11ac 0100     		.2byte	0x1
 10254 11ae 54       		.byte	0x54
 10255 11af E2000000 		.4byte	.LVL359
 10256 11b3 F8000000 		.4byte	.LFE113
 10257 11b7 0400     		.2byte	0x4
 10258 11b9 F3       		.byte	0xf3
 10259 11ba 01       		.uleb128 0x1
 10260 11bb 50       		.byte	0x50
 10261 11bc 9F       		.byte	0x9f
 10262 11bd 00000000 		.4byte	0
 10263 11c1 00000000 		.4byte	0
 10264              	.LLST112:
 10265 11c5 00000000 		.4byte	.LVL338
 10266 11c9 42000000 		.4byte	.LVL342
 10267 11cd 0100     		.2byte	0x1
 10268 11cf 51       		.byte	0x51
 10269 11d0 42000000 		.4byte	.LVL342
 10270 11d4 50000000 		.4byte	.LVL344
 10271 11d8 0300     		.2byte	0x3
 10272 11da 71       		.byte	0x71
 10273 11db 6A       		.sleb128 -22
 10274 11dc 9F       		.byte	0x9f
 10275 11dd 50000000 		.4byte	.LVL344
 10276 11e1 52000000 		.4byte	.LVL345
 10277 11e5 0100     		.2byte	0x1
 10278 11e7 51       		.byte	0x51
 10279 11e8 52000000 		.4byte	.LVL345
 10280 11ec 60000000 		.4byte	.LVL346
 10281 11f0 0300     		.2byte	0x3
 10282 11f2 71       		.byte	0x71
 10283 11f3 6A       		.sleb128 -22
 10284 11f4 9F       		.byte	0x9f
 10285 11f5 60000000 		.4byte	.LVL346
 10286 11f9 62000000 		.4byte	.LVL347
 10287 11fd 0100     		.2byte	0x1
 10288 11ff 51       		.byte	0x51
 10289 1200 62000000 		.4byte	.LVL347
 10290 1204 6A000000 		.4byte	.LVL348
 10291 1208 0300     		.2byte	0x3
 10292 120a 71       		.byte	0x71
 10293 120b 6A       		.sleb128 -22
 10294 120c 9F       		.byte	0x9f
 10295 120d 6A000000 		.4byte	.LVL348
 10296 1211 70000000 		.4byte	.LVL349
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 289


 10297 1215 0100     		.2byte	0x1
 10298 1217 51       		.byte	0x51
 10299 1218 70000000 		.4byte	.LVL349
 10300 121c 78000000 		.4byte	.LVL350
 10301 1220 0300     		.2byte	0x3
 10302 1222 71       		.byte	0x71
 10303 1223 6A       		.sleb128 -22
 10304 1224 9F       		.byte	0x9f
 10305 1225 78000000 		.4byte	.LVL350
 10306 1229 7E000000 		.4byte	.LVL351
 10307 122d 0100     		.2byte	0x1
 10308 122f 51       		.byte	0x51
 10309 1230 7E000000 		.4byte	.LVL351
 10310 1234 F8000000 		.4byte	.LFE113
 10311 1238 0400     		.2byte	0x4
 10312 123a F3       		.byte	0xf3
 10313 123b 01       		.uleb128 0x1
 10314 123c 51       		.byte	0x51
 10315 123d 9F       		.byte	0x9f
 10316 123e 00000000 		.4byte	0
 10317 1242 00000000 		.4byte	0
 10318              	.LLST113:
 10319 1246 00000000 		.4byte	.LVL338
 10320 124a 48000000 		.4byte	.LVL343
 10321 124e 0100     		.2byte	0x1
 10322 1250 52       		.byte	0x52
 10323 1251 48000000 		.4byte	.LVL343
 10324 1255 50000000 		.4byte	.LVL344
 10325 1259 0400     		.2byte	0x4
 10326 125b F3       		.byte	0xf3
 10327 125c 01       		.uleb128 0x1
 10328 125d 52       		.byte	0x52
 10329 125e 9F       		.byte	0x9f
 10330 125f 50000000 		.4byte	.LVL344
 10331 1263 7E000000 		.4byte	.LVL351
 10332 1267 0100     		.2byte	0x1
 10333 1269 52       		.byte	0x52
 10334 126a 7E000000 		.4byte	.LVL351
 10335 126e F8000000 		.4byte	.LFE113
 10336 1272 0400     		.2byte	0x4
 10337 1274 F3       		.byte	0xf3
 10338 1275 01       		.uleb128 0x1
 10339 1276 52       		.byte	0x52
 10340 1277 9F       		.byte	0x9f
 10341 1278 00000000 		.4byte	0
 10342 127c 00000000 		.4byte	0
 10343              	.LLST114:
 10344 1280 00000000 		.4byte	.LVL338
 10345 1284 34000000 		.4byte	.LVL341
 10346 1288 0100     		.2byte	0x1
 10347 128a 53       		.byte	0x53
 10348 128b 34000000 		.4byte	.LVL341
 10349 128f F8000000 		.4byte	.LFE113
 10350 1293 0400     		.2byte	0x4
 10351 1295 F3       		.byte	0xf3
 10352 1296 01       		.uleb128 0x1
 10353 1297 53       		.byte	0x53
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 290


 10354 1298 9F       		.byte	0x9f
 10355 1299 00000000 		.4byte	0
 10356 129d 00000000 		.4byte	0
 10357              	.LLST115:
 10358 12a1 00000000 		.4byte	.LVL338
 10359 12a5 EA000000 		.4byte	.LVL361
 10360 12a9 0200     		.2byte	0x2
 10361 12ab 91       		.byte	0x91
 10362 12ac 00       		.sleb128 0
 10363 12ad EA000000 		.4byte	.LVL361
 10364 12b1 F8000000 		.4byte	.LFE113
 10365 12b5 0200     		.2byte	0x2
 10366 12b7 7D       		.byte	0x7d
 10367 12b8 00       		.sleb128 0
 10368 12b9 00000000 		.4byte	0
 10369 12bd 00000000 		.4byte	0
 10370              	.LLST116:
 10371 12c1 00000000 		.4byte	.LVL338
 10372 12c5 EA000000 		.4byte	.LVL361
 10373 12c9 0200     		.2byte	0x2
 10374 12cb 91       		.byte	0x91
 10375 12cc 04       		.sleb128 4
 10376 12cd EA000000 		.4byte	.LVL361
 10377 12d1 F8000000 		.4byte	.LFE113
 10378 12d5 0200     		.2byte	0x2
 10379 12d7 7D       		.byte	0x7d
 10380 12d8 04       		.sleb128 4
 10381 12d9 00000000 		.4byte	0
 10382 12dd 00000000 		.4byte	0
 10383              	.LLST117:
 10384 12e1 04000000 		.4byte	.LVL339
 10385 12e5 90000000 		.4byte	.LVL353
 10386 12e9 0100     		.2byte	0x1
 10387 12eb 50       		.byte	0x50
 10388 12ec 90000000 		.4byte	.LVL353
 10389 12f0 B8000000 		.4byte	.LVL356
 10390 12f4 0100     		.2byte	0x1
 10391 12f6 54       		.byte	0x54
 10392 12f7 B8000000 		.4byte	.LVL356
 10393 12fb BE000000 		.4byte	.LVL357
 10394 12ff 0100     		.2byte	0x1
 10395 1301 50       		.byte	0x50
 10396 1302 BE000000 		.4byte	.LVL357
 10397 1306 E2000000 		.4byte	.LVL359
 10398 130a 0100     		.2byte	0x1
 10399 130c 54       		.byte	0x54
 10400 130d E2000000 		.4byte	.LVL359
 10401 1311 F8000000 		.4byte	.LFE113
 10402 1315 0400     		.2byte	0x4
 10403 1317 F3       		.byte	0xf3
 10404 1318 01       		.uleb128 0x1
 10405 1319 50       		.byte	0x50
 10406 131a 9F       		.byte	0x9f
 10407 131b 00000000 		.4byte	0
 10408 131f 00000000 		.4byte	0
 10409              	.LLST118:
 10410 1323 2C000000 		.4byte	.LVL340
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 291


 10411 1327 84000000 		.4byte	.LVL352
 10412 132b 0100     		.2byte	0x1
 10413 132d 54       		.byte	0x54
 10414 132e 00000000 		.4byte	0
 10415 1332 00000000 		.4byte	0
 10416              	.LLST119:
 10417 1336 04000000 		.4byte	.LVL339
 10418 133a 7E000000 		.4byte	.LVL351
 10419 133e 0200     		.2byte	0x2
 10420 1340 31       		.byte	0x31
 10421 1341 9F       		.byte	0x9f
 10422 1342 7E000000 		.4byte	.LVL351
 10423 1346 EA000000 		.4byte	.LVL361
 10424 134a 0100     		.2byte	0x1
 10425 134c 55       		.byte	0x55
 10426 134d EA000000 		.4byte	.LVL361
 10427 1351 F8000000 		.4byte	.LFE113
 10428 1355 0100     		.2byte	0x1
 10429 1357 50       		.byte	0x50
 10430 1358 00000000 		.4byte	0
 10431 135c 00000000 		.4byte	0
 10432              	.LLST120:
 10433 1360 E2000000 		.4byte	.LVL359
 10434 1364 E6000000 		.4byte	.LVL360
 10435 1368 0100     		.2byte	0x1
 10436 136a 56       		.byte	0x56
 10437 136b 00000000 		.4byte	0
 10438 136f 00000000 		.4byte	0
 10439              	.LLST121:
 10440 1373 00000000 		.4byte	.LVL362
 10441 1377 44000000 		.4byte	.LVL367
 10442 137b 0100     		.2byte	0x1
 10443 137d 50       		.byte	0x50
 10444 137e 44000000 		.4byte	.LVL367
 10445 1382 6C000000 		.4byte	.LVL370
 10446 1386 0100     		.2byte	0x1
 10447 1388 56       		.byte	0x56
 10448 1389 6C000000 		.4byte	.LVL370
 10449 138d 72000000 		.4byte	.LVL371
 10450 1391 0100     		.2byte	0x1
 10451 1393 50       		.byte	0x50
 10452 1394 72000000 		.4byte	.LVL371
 10453 1398 92000000 		.4byte	.LVL373
 10454 139c 0100     		.2byte	0x1
 10455 139e 56       		.byte	0x56
 10456 139f 92000000 		.4byte	.LVL373
 10457 13a3 A4000000 		.4byte	.LFE114
 10458 13a7 0400     		.2byte	0x4
 10459 13a9 F3       		.byte	0xf3
 10460 13aa 01       		.uleb128 0x1
 10461 13ab 50       		.byte	0x50
 10462 13ac 9F       		.byte	0x9f
 10463 13ad 00000000 		.4byte	0
 10464 13b1 00000000 		.4byte	0
 10465              	.LLST122:
 10466 13b5 00000000 		.4byte	.LVL362
 10467 13b9 26000000 		.4byte	.LVL365
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 292


 10468 13bd 0100     		.2byte	0x1
 10469 13bf 51       		.byte	0x51
 10470 13c0 26000000 		.4byte	.LVL365
 10471 13c4 47000000 		.4byte	.LVL368-1
 10472 13c8 0300     		.2byte	0x3
 10473 13ca 71       		.byte	0x71
 10474 13cb 6A       		.sleb128 -22
 10475 13cc 9F       		.byte	0x9f
 10476 13cd 47000000 		.4byte	.LVL368-1
 10477 13d1 A4000000 		.4byte	.LFE114
 10478 13d5 0400     		.2byte	0x4
 10479 13d7 F3       		.byte	0xf3
 10480 13d8 01       		.uleb128 0x1
 10481 13d9 51       		.byte	0x51
 10482 13da 9F       		.byte	0x9f
 10483 13db 00000000 		.4byte	0
 10484 13df 00000000 		.4byte	0
 10485              	.LLST123:
 10486 13e3 00000000 		.4byte	.LVL362
 10487 13e7 47000000 		.4byte	.LVL368-1
 10488 13eb 0100     		.2byte	0x1
 10489 13ed 52       		.byte	0x52
 10490 13ee 47000000 		.4byte	.LVL368-1
 10491 13f2 6C000000 		.4byte	.LVL370
 10492 13f6 0100     		.2byte	0x1
 10493 13f8 54       		.byte	0x54
 10494 13f9 6C000000 		.4byte	.LVL370
 10495 13fd 75000000 		.4byte	.LVL372-1
 10496 1401 0100     		.2byte	0x1
 10497 1403 52       		.byte	0x52
 10498 1404 75000000 		.4byte	.LVL372-1
 10499 1408 92000000 		.4byte	.LVL373
 10500 140c 0100     		.2byte	0x1
 10501 140e 54       		.byte	0x54
 10502 140f 92000000 		.4byte	.LVL373
 10503 1413 A4000000 		.4byte	.LFE114
 10504 1417 0400     		.2byte	0x4
 10505 1419 F3       		.byte	0xf3
 10506 141a 01       		.uleb128 0x1
 10507 141b 52       		.byte	0x52
 10508 141c 9F       		.byte	0x9f
 10509 141d 00000000 		.4byte	0
 10510 1421 00000000 		.4byte	0
 10511              	.LLST124:
 10512 1425 02000000 		.4byte	.LVL363
 10513 1429 44000000 		.4byte	.LVL367
 10514 142d 0100     		.2byte	0x1
 10515 142f 50       		.byte	0x50
 10516 1430 44000000 		.4byte	.LVL367
 10517 1434 6C000000 		.4byte	.LVL370
 10518 1438 0100     		.2byte	0x1
 10519 143a 56       		.byte	0x56
 10520 143b 6C000000 		.4byte	.LVL370
 10521 143f 72000000 		.4byte	.LVL371
 10522 1443 0100     		.2byte	0x1
 10523 1445 50       		.byte	0x50
 10524 1446 72000000 		.4byte	.LVL371
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 293


 10525 144a 92000000 		.4byte	.LVL373
 10526 144e 0100     		.2byte	0x1
 10527 1450 56       		.byte	0x56
 10528 1451 92000000 		.4byte	.LVL373
 10529 1455 A4000000 		.4byte	.LFE114
 10530 1459 0400     		.2byte	0x4
 10531 145b F3       		.byte	0xf3
 10532 145c 01       		.uleb128 0x1
 10533 145d 50       		.byte	0x50
 10534 145e 9F       		.byte	0x9f
 10535 145f 00000000 		.4byte	0
 10536 1463 00000000 		.4byte	0
 10537              	.LLST125:
 10538 1467 1E000000 		.4byte	.LVL364
 10539 146b 3A000000 		.4byte	.LVL366
 10540 146f 0100     		.2byte	0x1
 10541 1471 53       		.byte	0x53
 10542 1472 00000000 		.4byte	0
 10543 1476 00000000 		.4byte	0
 10544              	.LLST126:
 10545 147a 92000000 		.4byte	.LVL373
 10546 147e 96000000 		.4byte	.LVL374
 10547 1482 0100     		.2byte	0x1
 10548 1484 55       		.byte	0x55
 10549 1485 00000000 		.4byte	0
 10550 1489 00000000 		.4byte	0
 10551              	.LLST127:
 10552 148d 00000000 		.4byte	.LVL375
 10553 1491 0E000000 		.4byte	.LVL376
 10554 1495 0100     		.2byte	0x1
 10555 1497 50       		.byte	0x50
 10556 1498 00000000 		.4byte	0
 10557 149c 00000000 		.4byte	0
 10558              	.LLST128:
 10559 14a0 00000000 		.4byte	.LVL375
 10560 14a4 11000000 		.4byte	.LVL377-1
 10561 14a8 0100     		.2byte	0x1
 10562 14aa 51       		.byte	0x51
 10563 14ab 11000000 		.4byte	.LVL377-1
 10564 14af 20000000 		.4byte	.LVL378
 10565 14b3 0100     		.2byte	0x1
 10566 14b5 54       		.byte	0x54
 10567 14b6 20000000 		.4byte	.LVL378
 10568 14ba 2A000000 		.4byte	.LVL380
 10569 14be 0400     		.2byte	0x4
 10570 14c0 F3       		.byte	0xf3
 10571 14c1 01       		.uleb128 0x1
 10572 14c2 51       		.byte	0x51
 10573 14c3 9F       		.byte	0x9f
 10574 14c4 2A000000 		.4byte	.LVL380
 10575 14c8 2C000000 		.4byte	.LVL381
 10576 14cc 0100     		.2byte	0x1
 10577 14ce 54       		.byte	0x54
 10578 14cf 2C000000 		.4byte	.LVL381
 10579 14d3 38000000 		.4byte	.LFE115
 10580 14d7 0400     		.2byte	0x4
 10581 14d9 F3       		.byte	0xf3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 294


 10582 14da 01       		.uleb128 0x1
 10583 14db 51       		.byte	0x51
 10584 14dc 9F       		.byte	0x9f
 10585 14dd 00000000 		.4byte	0
 10586 14e1 00000000 		.4byte	0
 10587              	.LLST129:
 10588 14e5 0E000000 		.4byte	.LVL376
 10589 14e9 34000000 		.4byte	.LVL383
 10590 14ed 0100     		.2byte	0x1
 10591 14ef 55       		.byte	0x55
 10592 14f0 00000000 		.4byte	0
 10593 14f4 00000000 		.4byte	0
 10594              	.LLST130:
 10595 14f8 26000000 		.4byte	.LVL379
 10596 14fc 2A000000 		.4byte	.LVL380
 10597 1500 0200     		.2byte	0x2
 10598 1502 31       		.byte	0x31
 10599 1503 9F       		.byte	0x9f
 10600 1504 2C000000 		.4byte	.LVL381
 10601 1508 34000000 		.4byte	.LVL383
 10602 150c 0100     		.2byte	0x1
 10603 150e 54       		.byte	0x54
 10604 150f 34000000 		.4byte	.LVL383
 10605 1513 38000000 		.4byte	.LFE115
 10606 1517 0100     		.2byte	0x1
 10607 1519 50       		.byte	0x50
 10608 151a 00000000 		.4byte	0
 10609 151e 00000000 		.4byte	0
 10610              	.LLST131:
 10611 1522 00000000 		.4byte	.LVL384
 10612 1526 10000000 		.4byte	.LVL385
 10613 152a 0100     		.2byte	0x1
 10614 152c 50       		.byte	0x50
 10615 152d 00000000 		.4byte	0
 10616 1531 00000000 		.4byte	0
 10617              	.LLST132:
 10618 1535 00000000 		.4byte	.LVL384
 10619 1539 13000000 		.4byte	.LVL386-1
 10620 153d 0100     		.2byte	0x1
 10621 153f 51       		.byte	0x51
 10622 1540 13000000 		.4byte	.LVL386-1
 10623 1544 1C000000 		.4byte	.LVL387
 10624 1548 0100     		.2byte	0x1
 10625 154a 54       		.byte	0x54
 10626 154b 1C000000 		.4byte	.LVL387
 10627 154f 2B000000 		.4byte	.LVL388-1
 10628 1553 0300     		.2byte	0x3
 10629 1555 71       		.byte	0x71
 10630 1556 6A       		.sleb128 -22
 10631 1557 9F       		.byte	0x9f
 10632 1558 2B000000 		.4byte	.LVL388-1
 10633 155c 34000000 		.4byte	.LFE116
 10634 1560 0400     		.2byte	0x4
 10635 1562 F3       		.byte	0xf3
 10636 1563 01       		.uleb128 0x1
 10637 1564 51       		.byte	0x51
 10638 1565 9F       		.byte	0x9f
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 295


 10639 1566 00000000 		.4byte	0
 10640 156a 00000000 		.4byte	0
 10641              	.LLST133:
 10642 156e 00000000 		.4byte	.LVL384
 10643 1572 13000000 		.4byte	.LVL386-1
 10644 1576 0100     		.2byte	0x1
 10645 1578 52       		.byte	0x52
 10646 1579 13000000 		.4byte	.LVL386-1
 10647 157d 30000000 		.4byte	.LVL389
 10648 1581 0100     		.2byte	0x1
 10649 1583 56       		.byte	0x56
 10650 1584 30000000 		.4byte	.LVL389
 10651 1588 34000000 		.4byte	.LFE116
 10652 158c 0400     		.2byte	0x4
 10653 158e F3       		.byte	0xf3
 10654 158f 01       		.uleb128 0x1
 10655 1590 52       		.byte	0x52
 10656 1591 9F       		.byte	0x9f
 10657 1592 00000000 		.4byte	0
 10658 1596 00000000 		.4byte	0
 10659              	.LLST134:
 10660 159a 10000000 		.4byte	.LVL385
 10661 159e 30000000 		.4byte	.LVL389
 10662 15a2 0100     		.2byte	0x1
 10663 15a4 55       		.byte	0x55
 10664 15a5 00000000 		.4byte	0
 10665 15a9 00000000 		.4byte	0
 10666              	.LLST135:
 10667 15ad 1C000000 		.4byte	.LVL387
 10668 15b1 30000000 		.4byte	.LVL389
 10669 15b5 0100     		.2byte	0x1
 10670 15b7 54       		.byte	0x54
 10671 15b8 30000000 		.4byte	.LVL389
 10672 15bc 34000000 		.4byte	.LFE116
 10673 15c0 0100     		.2byte	0x1
 10674 15c2 50       		.byte	0x50
 10675 15c3 00000000 		.4byte	0
 10676 15c7 00000000 		.4byte	0
 10677              		.section	.debug_aranges,"",%progbits
 10678 0000 AC010000 		.4byte	0x1ac
 10679 0004 0200     		.2byte	0x2
 10680 0006 00000000 		.4byte	.Ldebug_info0
 10681 000a 04       		.byte	0x4
 10682 000b 00       		.byte	0
 10683 000c 0000     		.2byte	0
 10684 000e 0000     		.2byte	0
 10685 0010 00000000 		.4byte	.LFB77
 10686 0014 2C000000 		.4byte	.LFE77-.LFB77
 10687 0018 00000000 		.4byte	.LFB106
 10688 001c 24000000 		.4byte	.LFE106-.LFB106
 10689 0020 00000000 		.4byte	.LFB105
 10690 0024 12000000 		.4byte	.LFE105-.LFB105
 10691 0028 00000000 		.4byte	.LFB68
 10692 002c 8E000000 		.4byte	.LFE68-.LFB68
 10693 0030 00000000 		.4byte	.LFB103
 10694 0034 58000000 		.4byte	.LFE103-.LFB103
 10695 0038 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 296


 10696 003c AC000000 		.4byte	.LFE69-.LFB69
 10697 0040 00000000 		.4byte	.LFB104
 10698 0044 44000000 		.4byte	.LFE104-.LFB104
 10699 0048 00000000 		.4byte	.LFB100
 10700 004c 28000000 		.4byte	.LFE100-.LFB100
 10701 0050 00000000 		.4byte	.LFB117
 10702 0054 68000000 		.4byte	.LFE117-.LFB117
 10703 0058 00000000 		.4byte	.LFB67
 10704 005c 62000000 		.4byte	.LFE67-.LFB67
 10705 0060 00000000 		.4byte	.LFB70
 10706 0064 98000000 		.4byte	.LFE70-.LFB70
 10707 0068 00000000 		.4byte	.LFB73
 10708 006c 20000000 		.4byte	.LFE73-.LFB73
 10709 0070 00000000 		.4byte	.LFB74
 10710 0074 28000000 		.4byte	.LFE74-.LFB74
 10711 0078 00000000 		.4byte	.LFB75
 10712 007c C0000000 		.4byte	.LFE75-.LFB75
 10713 0080 00000000 		.4byte	.LFB78
 10714 0084 78000000 		.4byte	.LFE78-.LFB78
 10715 0088 00000000 		.4byte	.LFB79
 10716 008c 8C000000 		.4byte	.LFE79-.LFB79
 10717 0090 00000000 		.4byte	.LFB80
 10718 0094 60000000 		.4byte	.LFE80-.LFB80
 10719 0098 00000000 		.4byte	.LFB81
 10720 009c 24000000 		.4byte	.LFE81-.LFB81
 10721 00a0 00000000 		.4byte	.LFB82
 10722 00a4 14000000 		.4byte	.LFE82-.LFB82
 10723 00a8 00000000 		.4byte	.LFB84
 10724 00ac 0C000000 		.4byte	.LFE84-.LFB84
 10725 00b0 00000000 		.4byte	.LFB85
 10726 00b4 0C000000 		.4byte	.LFE85-.LFB85
 10727 00b8 00000000 		.4byte	.LFB86
 10728 00bc 0C000000 		.4byte	.LFE86-.LFB86
 10729 00c0 00000000 		.4byte	.LFB87
 10730 00c4 14000000 		.4byte	.LFE87-.LFB87
 10731 00c8 00000000 		.4byte	.LFB89
 10732 00cc E8000000 		.4byte	.LFE89-.LFB89
 10733 00d0 00000000 		.4byte	.LFB83
 10734 00d4 D8000000 		.4byte	.LFE83-.LFB83
 10735 00d8 00000000 		.4byte	.LFB71
 10736 00dc 6C000000 		.4byte	.LFE71-.LFB71
 10737 00e0 00000000 		.4byte	.LFB72
 10738 00e4 34000000 		.4byte	.LFE72-.LFB72
 10739 00e8 00000000 		.4byte	.LFB88
 10740 00ec 20000000 		.4byte	.LFE88-.LFB88
 10741 00f0 00000000 		.4byte	.LFB90
 10742 00f4 80000000 		.4byte	.LFE90-.LFB90
 10743 00f8 00000000 		.4byte	.LFB76
 10744 00fc AC000000 		.4byte	.LFE76-.LFB76
 10745 0100 00000000 		.4byte	.LFB91
 10746 0104 20000000 		.4byte	.LFE91-.LFB91
 10747 0108 00000000 		.4byte	.LFB92
 10748 010c 28000000 		.4byte	.LFE92-.LFB92
 10749 0110 00000000 		.4byte	.LFB93
 10750 0114 28000000 		.4byte	.LFE93-.LFB93
 10751 0118 00000000 		.4byte	.LFB94
 10752 011c 74000000 		.4byte	.LFE94-.LFB94
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 297


 10753 0120 00000000 		.4byte	.LFB95
 10754 0124 54000000 		.4byte	.LFE95-.LFB95
 10755 0128 00000000 		.4byte	.LFB96
 10756 012c 20000000 		.4byte	.LFE96-.LFB96
 10757 0130 00000000 		.4byte	.LFB97
 10758 0134 14000000 		.4byte	.LFE97-.LFB97
 10759 0138 00000000 		.4byte	.LFB98
 10760 013c 5C000000 		.4byte	.LFE98-.LFB98
 10761 0140 00000000 		.4byte	.LFB99
 10762 0144 10000000 		.4byte	.LFE99-.LFB99
 10763 0148 00000000 		.4byte	.LFB101
 10764 014c 1C000000 		.4byte	.LFE101-.LFB101
 10765 0150 00000000 		.4byte	.LFB102
 10766 0154 20000000 		.4byte	.LFE102-.LFB102
 10767 0158 00000000 		.4byte	.LFB107
 10768 015c 0C000000 		.4byte	.LFE107-.LFB107
 10769 0160 00000000 		.4byte	.LFB108
 10770 0164 20000000 		.4byte	.LFE108-.LFB108
 10771 0168 00000000 		.4byte	.LFB109
 10772 016c 20000000 		.4byte	.LFE109-.LFB109
 10773 0170 00000000 		.4byte	.LFB110
 10774 0174 A0000000 		.4byte	.LFE110-.LFB110
 10775 0178 00000000 		.4byte	.LFB111
 10776 017c C4000000 		.4byte	.LFE111-.LFB111
 10777 0180 00000000 		.4byte	.LFB112
 10778 0184 E0000000 		.4byte	.LFE112-.LFB112
 10779 0188 00000000 		.4byte	.LFB113
 10780 018c F8000000 		.4byte	.LFE113-.LFB113
 10781 0190 00000000 		.4byte	.LFB114
 10782 0194 A4000000 		.4byte	.LFE114-.LFB114
 10783 0198 00000000 		.4byte	.LFB115
 10784 019c 38000000 		.4byte	.LFE115-.LFB115
 10785 01a0 00000000 		.4byte	.LFB116
 10786 01a4 34000000 		.4byte	.LFE116-.LFB116
 10787 01a8 00000000 		.4byte	0
 10788 01ac 00000000 		.4byte	0
 10789              		.section	.debug_ranges,"",%progbits
 10790              	.Ldebug_ranges0:
 10791 0000 0E000000 		.4byte	.LBB36
 10792 0004 3E000000 		.4byte	.LBE36
 10793 0008 44000000 		.4byte	.LBB38
 10794 000c C6000000 		.4byte	.LBE38
 10795 0010 D8000000 		.4byte	.LBB39
 10796 0014 DC000000 		.4byte	.LBE39
 10797 0018 00000000 		.4byte	0
 10798 001c 00000000 		.4byte	0
 10799 0020 0A000000 		.4byte	.LBB41
 10800 0024 20000000 		.4byte	.LBE41
 10801 0028 24000000 		.4byte	.LBB42
 10802 002c 2C000000 		.4byte	.LBE42
 10803 0030 34000000 		.4byte	.LBB43
 10804 0034 4A000000 		.4byte	.LBE43
 10805 0038 00000000 		.4byte	0
 10806 003c 00000000 		.4byte	0
 10807 0040 1A000000 		.4byte	.LBB44
 10808 0044 32000000 		.4byte	.LBE44
 10809 0048 34000000 		.4byte	.LBB46
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 298


 10810 004c 78000000 		.4byte	.LBE46
 10811 0050 00000000 		.4byte	0
 10812 0054 00000000 		.4byte	0
 10813 0058 00000000 		.4byte	.LFB77
 10814 005c 2C000000 		.4byte	.LFE77
 10815 0060 00000000 		.4byte	.LFB106
 10816 0064 24000000 		.4byte	.LFE106
 10817 0068 00000000 		.4byte	.LFB105
 10818 006c 12000000 		.4byte	.LFE105
 10819 0070 00000000 		.4byte	.LFB68
 10820 0074 8E000000 		.4byte	.LFE68
 10821 0078 00000000 		.4byte	.LFB103
 10822 007c 58000000 		.4byte	.LFE103
 10823 0080 00000000 		.4byte	.LFB69
 10824 0084 AC000000 		.4byte	.LFE69
 10825 0088 00000000 		.4byte	.LFB104
 10826 008c 44000000 		.4byte	.LFE104
 10827 0090 00000000 		.4byte	.LFB100
 10828 0094 28000000 		.4byte	.LFE100
 10829 0098 00000000 		.4byte	.LFB117
 10830 009c 68000000 		.4byte	.LFE117
 10831 00a0 00000000 		.4byte	.LFB67
 10832 00a4 62000000 		.4byte	.LFE67
 10833 00a8 00000000 		.4byte	.LFB70
 10834 00ac 98000000 		.4byte	.LFE70
 10835 00b0 00000000 		.4byte	.LFB73
 10836 00b4 20000000 		.4byte	.LFE73
 10837 00b8 00000000 		.4byte	.LFB74
 10838 00bc 28000000 		.4byte	.LFE74
 10839 00c0 00000000 		.4byte	.LFB75
 10840 00c4 C0000000 		.4byte	.LFE75
 10841 00c8 00000000 		.4byte	.LFB78
 10842 00cc 78000000 		.4byte	.LFE78
 10843 00d0 00000000 		.4byte	.LFB79
 10844 00d4 8C000000 		.4byte	.LFE79
 10845 00d8 00000000 		.4byte	.LFB80
 10846 00dc 60000000 		.4byte	.LFE80
 10847 00e0 00000000 		.4byte	.LFB81
 10848 00e4 24000000 		.4byte	.LFE81
 10849 00e8 00000000 		.4byte	.LFB82
 10850 00ec 14000000 		.4byte	.LFE82
 10851 00f0 00000000 		.4byte	.LFB84
 10852 00f4 0C000000 		.4byte	.LFE84
 10853 00f8 00000000 		.4byte	.LFB85
 10854 00fc 0C000000 		.4byte	.LFE85
 10855 0100 00000000 		.4byte	.LFB86
 10856 0104 0C000000 		.4byte	.LFE86
 10857 0108 00000000 		.4byte	.LFB87
 10858 010c 14000000 		.4byte	.LFE87
 10859 0110 00000000 		.4byte	.LFB89
 10860 0114 E8000000 		.4byte	.LFE89
 10861 0118 00000000 		.4byte	.LFB83
 10862 011c D8000000 		.4byte	.LFE83
 10863 0120 00000000 		.4byte	.LFB71
 10864 0124 6C000000 		.4byte	.LFE71
 10865 0128 00000000 		.4byte	.LFB72
 10866 012c 34000000 		.4byte	.LFE72
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 299


 10867 0130 00000000 		.4byte	.LFB88
 10868 0134 20000000 		.4byte	.LFE88
 10869 0138 00000000 		.4byte	.LFB90
 10870 013c 80000000 		.4byte	.LFE90
 10871 0140 00000000 		.4byte	.LFB76
 10872 0144 AC000000 		.4byte	.LFE76
 10873 0148 00000000 		.4byte	.LFB91
 10874 014c 20000000 		.4byte	.LFE91
 10875 0150 00000000 		.4byte	.LFB92
 10876 0154 28000000 		.4byte	.LFE92
 10877 0158 00000000 		.4byte	.LFB93
 10878 015c 28000000 		.4byte	.LFE93
 10879 0160 00000000 		.4byte	.LFB94
 10880 0164 74000000 		.4byte	.LFE94
 10881 0168 00000000 		.4byte	.LFB95
 10882 016c 54000000 		.4byte	.LFE95
 10883 0170 00000000 		.4byte	.LFB96
 10884 0174 20000000 		.4byte	.LFE96
 10885 0178 00000000 		.4byte	.LFB97
 10886 017c 14000000 		.4byte	.LFE97
 10887 0180 00000000 		.4byte	.LFB98
 10888 0184 5C000000 		.4byte	.LFE98
 10889 0188 00000000 		.4byte	.LFB99
 10890 018c 10000000 		.4byte	.LFE99
 10891 0190 00000000 		.4byte	.LFB101
 10892 0194 1C000000 		.4byte	.LFE101
 10893 0198 00000000 		.4byte	.LFB102
 10894 019c 20000000 		.4byte	.LFE102
 10895 01a0 00000000 		.4byte	.LFB107
 10896 01a4 0C000000 		.4byte	.LFE107
 10897 01a8 00000000 		.4byte	.LFB108
 10898 01ac 20000000 		.4byte	.LFE108
 10899 01b0 00000000 		.4byte	.LFB109
 10900 01b4 20000000 		.4byte	.LFE109
 10901 01b8 00000000 		.4byte	.LFB110
 10902 01bc A0000000 		.4byte	.LFE110
 10903 01c0 00000000 		.4byte	.LFB111
 10904 01c4 C4000000 		.4byte	.LFE111
 10905 01c8 00000000 		.4byte	.LFB112
 10906 01cc E0000000 		.4byte	.LFE112
 10907 01d0 00000000 		.4byte	.LFB113
 10908 01d4 F8000000 		.4byte	.LFE113
 10909 01d8 00000000 		.4byte	.LFB114
 10910 01dc A4000000 		.4byte	.LFE114
 10911 01e0 00000000 		.4byte	.LFB115
 10912 01e4 38000000 		.4byte	.LFE115
 10913 01e8 00000000 		.4byte	.LFB116
 10914 01ec 34000000 		.4byte	.LFE116
 10915 01f0 00000000 		.4byte	0
 10916 01f4 00000000 		.4byte	0
 10917              		.section	.debug_line,"",%progbits
 10918              	.Ldebug_line0:
 10919 0000 BA0A0000 		.section	.debug_str,"MS",%progbits,1
 10919      02009B02 
 10919      00000201 
 10919      FB0E0D00 
 10919      01010101 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 300


 10920              	.LASF93:
 10921 0000 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 10921      426C6F63 
 10921      6B496E64 
 10921      6566696E 
 10921      6974656C 
 10922              	.LASF70:
 10923 0016 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 10923      6967696E 
 10923      616C4241 
 10923      53455052 
 10923      4900
 10924              	.LASF116:
 10925 0028 78546963 		.ascii	"xTicks\000"
 10925      6B7300
 10926              	.LASF138:
 10927 002f 76546173 		.ascii	"vTaskSuspend\000"
 10927      6B537573 
 10927      70656E64 
 10927      00
 10928              	.LASF4:
 10929 003c 73697A65 		.ascii	"size_t\000"
 10929      5F7400
 10930              	.LASF40:
 10931 0043 4D696E69 		.ascii	"MiniListItem_t\000"
 10931      4C697374 
 10931      4974656D 
 10931      5F7400
 10932              	.LASF62:
 10933 0052 54696D65 		.ascii	"TimeOut_t\000"
 10933      4F75745F 
 10933      7400
 10934              	.LASF197:
 10935 005c 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 10935      7272656E 
 10935      744E756D 
 10935      6265724F 
 10935      66546173 
 10936              	.LASF177:
 10937 0073 756C5661 		.ascii	"ulValue\000"
 10937      6C756500 
 10938              	.LASF165:
 10939 007b 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 10939      736B5265 
 10939      73657445 
 10939      76656E74 
 10939      4974656D 
 10940              	.LASF202:
 10941 0095 78596965 		.ascii	"xYieldPending\000"
 10941      6C645065 
 10941      6E64696E 
 10941      6700
 10942              	.LASF5:
 10943 00a3 5F5F7569 		.ascii	"__uint8_t\000"
 10943      6E74385F 
 10943      7400
 10944              	.LASF181:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 301


 10945 00ad 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 10945      6B47656E 
 10945      65726963 
 10945      4E6F7469 
 10945      66794672 
 10946              	.LASF196:
 10947 00c7 78537573 		.ascii	"xSuspendedTaskList\000"
 10947      70656E64 
 10947      65645461 
 10947      736B4C69 
 10947      737400
 10948              	.LASF130:
 10949 00da 76546173 		.ascii	"vTaskDelay\000"
 10949      6B44656C 
 10949      617900
 10950              	.LASF71:
 10951 00e5 756C4E65 		.ascii	"ulNewBASEPRI\000"
 10951      77424153 
 10951      45505249 
 10951      00
 10952              	.LASF94:
 10953 00f2 7854696D 		.ascii	"xTimeToWake\000"
 10953      65546F57 
 10953      616B6500 
 10954              	.LASF124:
 10955 00fe 78416C72 		.ascii	"xAlreadyYielded\000"
 10955      65616479 
 10955      5969656C 
 10955      64656400 
 10956              	.LASF150:
 10957 010e 70785469 		.ascii	"pxTimeOut\000"
 10957      6D654F75 
 10957      7400
 10958              	.LASF37:
 10959 0118 784C6973 		.ascii	"xListEnd\000"
 10959      74456E64 
 10959      00
 10960              	.LASF208:
 10961 0121 49544D5F 		.ascii	"ITM_RxBuffer\000"
 10961      52784275 
 10961      66666572 
 10961      00
 10962              	.LASF59:
 10963 012e 7854494D 		.ascii	"xTIME_OUT\000"
 10963      455F4F55 
 10963      5400
 10964              	.LASF39:
 10965 0138 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 10965      495F4C49 
 10965      53545F49 
 10965      54454D00 
 10966              	.LASF1:
 10967 0148 6C6F6E67 		.ascii	"long long int\000"
 10967      206C6F6E 
 10967      6720696E 
 10967      7400
 10968              	.LASF3:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 302


 10969 0156 7369676E 		.ascii	"signed char\000"
 10969      65642063 
 10969      68617200 
 10970              	.LASF156:
 10971 0162 76546173 		.ascii	"vTaskMissedYield\000"
 10971      6B4D6973 
 10971      73656459 
 10971      69656C64 
 10971      00
 10972              	.LASF107:
 10973 0173 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 10973      696F7269 
 10973      74795573 
 10973      65644F6E 
 10973      456E7472 
 10974              	.LASF92:
 10975 0189 78546963 		.ascii	"xTicksToWait\000"
 10975      6B73546F 
 10975      57616974 
 10975      00
 10976              	.LASF168:
 10977 0196 78436C65 		.ascii	"xClearCountOnExit\000"
 10977      6172436F 
 10977      756E744F 
 10977      6E457869 
 10977      7400
 10978              	.LASF158:
 10979 01a8 78546173 		.ascii	"xTaskToSet\000"
 10979      6B546F53 
 10979      657400
 10980              	.LASF14:
 10981 01b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 10981      206C6F6E 
 10981      6720756E 
 10981      7369676E 
 10981      65642069 
 10982              	.LASF45:
 10983 01ca 78537461 		.ascii	"xStateListItem\000"
 10983      74654C69 
 10983      73744974 
 10983      656D00
 10984              	.LASF178:
 10985 01d9 65416374 		.ascii	"eAction\000"
 10985      696F6E00 
 10986              	.LASF121:
 10987 01e1 78537769 		.ascii	"xSwitchRequired\000"
 10987      74636852 
 10987      65717569 
 10987      72656400 
 10988              	.LASF11:
 10989 01f1 6C6F6E67 		.ascii	"long int\000"
 10989      20696E74 
 10989      00
 10990              	.LASF43:
 10991 01fa 74736B54 		.ascii	"tskTaskControlBlock\000"
 10991      61736B43 
 10991      6F6E7472 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 303


 10991      6F6C426C 
 10991      6F636B00 
 10992              	.LASF194:
 10993 020e 78546173 		.ascii	"xTasksWaitingTermination\000"
 10993      6B735761 
 10993      6974696E 
 10993      67546572 
 10993      6D696E61 
 10994              	.LASF84:
 10995 0227 70784E65 		.ascii	"pxNewTCB\000"
 10995      77544342 
 10995      00
 10996              	.LASF185:
 10997 0230 7578496E 		.ascii	"uxIndexToClear\000"
 10997      64657854 
 10997      6F436C65 
 10997      617200
 10998              	.LASF54:
 10999 023f 65536574 		.ascii	"eSetBits\000"
 10999      42697473 
 10999      00
 11000              	.LASF187:
 11001 0248 756C4269 		.ascii	"ulBitsToClear\000"
 11001      7473546F 
 11001      436C6561 
 11001      7200
 11002              	.LASF180:
 11003 0256 75634F72 		.ascii	"ucOriginalNotifyState\000"
 11003      6967696E 
 11003      616C4E6F 
 11003      74696679 
 11003      53746174 
 11004              	.LASF117:
 11005 026c 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 11005      6B476574 
 11005      5469636B 
 11005      436F756E 
 11005      7446726F 
 11006              	.LASF42:
 11007 0285 5461736B 		.ascii	"TaskHandle_t\000"
 11007      48616E64 
 11007      6C655F74 
 11007      00
 11008              	.LASF27:
 11009 0292 5469636B 		.ascii	"TickType_t\000"
 11009      54797065 
 11009      5F7400
 11010              	.LASF7:
 11011 029d 73686F72 		.ascii	"short int\000"
 11011      7420696E 
 11011      7400
 11012              	.LASF67:
 11013 02a7 4D656D6F 		.ascii	"MemoryRegion_t\000"
 11013      72795265 
 11013      67696F6E 
 11013      5F7400
 11014              	.LASF120:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 304


 11015 02b6 78546173 		.ascii	"xTaskIncrementTick\000"
 11015      6B496E63 
 11015      72656D65 
 11015      6E745469 
 11015      636B00
 11016              	.LASF18:
 11017 02c9 75696E74 		.ascii	"uint16_t\000"
 11017      31365F74 
 11017      00
 11018              	.LASF22:
 11019 02d2 646F7562 		.ascii	"double\000"
 11019      6C6500
 11020              	.LASF183:
 11021 02d9 76546173 		.ascii	"vTaskGenericNotifyGiveFromISR\000"
 11021      6B47656E 
 11021      65726963 
 11021      4E6F7469 
 11021      66794769 
 11022              	.LASF25:
 11023 02f7 42617365 		.ascii	"BaseType_t\000"
 11023      54797065 
 11023      5F7400
 11024              	.LASF166:
 11025 0302 756C5461 		.ascii	"ulTaskGenericNotifyTake\000"
 11025      736B4765 
 11025      6E657269 
 11025      634E6F74 
 11025      69667954 
 11026              	.LASF215:
 11027 031a 764C6973 		.ascii	"vListInsertEnd\000"
 11027      74496E73 
 11027      65727445 
 11027      6E6400
 11028              	.LASF179:
 11029 0329 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 11029      72657669 
 11029      6F75734E 
 11029      6F746966 
 11029      69636174 
 11030              	.LASF228:
 11031 0346 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 11031      65736574 
 11031      4E657874 
 11031      5461736B 
 11031      556E626C 
 11032              	.LASF8:
 11033 0362 5F5F7569 		.ascii	"__uint16_t\000"
 11033      6E743136 
 11033      5F7400
 11034              	.LASF96:
 11035 036d 75735374 		.ascii	"usStackDepth\000"
 11035      61636B44 
 11035      65707468 
 11035      00
 11036              	.LASF119:
 11037 037a 78546173 		.ascii	"xTaskToQuery\000"
 11037      6B546F51 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 305


 11037      75657279 
 11037      00
 11038              	.LASF104:
 11039 0387 76546173 		.ascii	"vTaskPrioritySet\000"
 11039      6B507269 
 11039      6F726974 
 11039      79536574 
 11039      00
 11040              	.LASF60:
 11041 0398 784F7665 		.ascii	"xOverflowCount\000"
 11041      72666C6F 
 11041      77436F75 
 11041      6E7400
 11042              	.LASF113:
 11043 03a7 76546173 		.ascii	"vTaskStartScheduler\000"
 11043      6B537461 
 11043      72745363 
 11043      68656475 
 11043      6C657200 
 11044              	.LASF219:
 11045 03bb 7076506F 		.ascii	"pvPortMalloc\000"
 11045      72744D61 
 11045      6C6C6F63 
 11045      00
 11046              	.LASF140:
 11047 03c8 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 11047      6B506C61 
 11047      63654F6E 
 11047      4576656E 
 11047      744C6973 
 11048              	.LASF52:
 11049 03de 75634E6F 		.ascii	"ucNotifyState\000"
 11049      74696679 
 11049      53746174 
 11049      6500
 11050              	.LASF81:
 11051 03ec 756C5374 		.ascii	"ulStackDepth\000"
 11051      61636B44 
 11051      65707468 
 11051      00
 11052              	.LASF12:
 11053 03f9 5F5F7569 		.ascii	"__uint32_t\000"
 11053      6E743332 
 11053      5F7400
 11054              	.LASF207:
 11055 0404 75785363 		.ascii	"uxSchedulerSuspended\000"
 11055      68656475 
 11055      6C657253 
 11055      75737065 
 11055      6E646564 
 11056              	.LASF201:
 11057 0419 7850656E 		.ascii	"xPendedTicks\000"
 11057      64656454 
 11057      69636B73 
 11057      00
 11058              	.LASF0:
 11059 0426 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 306


 11059      676E6564 
 11059      20696E74 
 11059      00
 11060              	.LASF74:
 11061 0433 78526574 		.ascii	"xReturn\000"
 11061      75726E00 
 11062              	.LASF95:
 11063 043b 78436F6E 		.ascii	"xConstTickCount\000"
 11063      73745469 
 11063      636B436F 
 11063      756E7400 
 11064              	.LASF132:
 11065 044b 78546173 		.ascii	"xTaskCatchUpTicks\000"
 11065      6B436174 
 11065      63685570 
 11065      5469636B 
 11065      7300
 11066              	.LASF142:
 11067 045d 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 11067      6B506C61 
 11067      63654F6E 
 11067      556E6F72 
 11067      64657265 
 11068              	.LASF83:
 11069 047c 70784372 		.ascii	"pxCreatedTask\000"
 11069      65617465 
 11069      64546173 
 11069      6B00
 11070              	.LASF35:
 11071 048a 75784E75 		.ascii	"uxNumberOfItems\000"
 11071      6D626572 
 11071      4F664974 
 11071      656D7300 
 11072              	.LASF13:
 11073 049a 6C6F6E67 		.ascii	"long unsigned int\000"
 11073      20756E73 
 11073      69676E65 
 11073      6420696E 
 11073      7400
 11074              	.LASF175:
 11075 04ac 78546173 		.ascii	"xTaskToNotify\000"
 11075      6B546F4E 
 11075      6F746966 
 11075      7900
 11076              	.LASF44:
 11077 04ba 7078546F 		.ascii	"pxTopOfStack\000"
 11077      704F6653 
 11077      7461636B 
 11077      00
 11078              	.LASF82:
 11079 04c7 70765061 		.ascii	"pvParameters\000"
 11079      72616D65 
 11079      74657273 
 11079      00
 11080              	.LASF134:
 11081 04d4 78596965 		.ascii	"xYieldOccurred\000"
 11081      6C644F63 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 307


 11081      63757272 
 11081      656400
 11082              	.LASF182:
 11083 04e3 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 11083      67686572 
 11083      5072696F 
 11083      72697479 
 11083      5461736B 
 11084              	.LASF68:
 11085 04fd 74736B54 		.ascii	"tskTCB\000"
 11085      434200
 11086              	.LASF137:
 11087 0504 7078436F 		.ascii	"pxConstList\000"
 11087      6E73744C 
 11087      69737400 
 11088              	.LASF9:
 11089 0510 73686F72 		.ascii	"short unsigned int\000"
 11089      7420756E 
 11089      7369676E 
 11089      65642069 
 11089      6E7400
 11090              	.LASF24:
 11091 0523 53746163 		.ascii	"StackType_t\000"
 11091      6B547970 
 11091      655F7400 
 11092              	.LASF75:
 11093 052f 70785443 		.ascii	"pxTCB\000"
 11093      4200
 11094              	.LASF108:
 11095 0535 78596965 		.ascii	"xYieldRequired\000"
 11095      6C645265 
 11095      71756972 
 11095      656400
 11096              	.LASF157:
 11097 0544 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 11097      6B536574 
 11097      54687265 
 11097      61644C6F 
 11097      63616C53 
 11098              	.LASF50:
 11099 0566 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 11099      72656164 
 11099      4C6F6361 
 11099      6C53746F 
 11099      72616765 
 11100              	.LASF105:
 11101 0583 75784E65 		.ascii	"uxNewPriority\000"
 11101      77507269 
 11101      6F726974 
 11101      7900
 11102              	.LASF170:
 11103 0591 78546173 		.ascii	"xTaskGenericNotifyWait\000"
 11103      6B47656E 
 11103      65726963 
 11103      4E6F7469 
 11103      66795761 
 11104              	.LASF224:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 308


 11105 05a8 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTOS_tasks.c\000"
 11105      72617465 
 11105      645F536F 
 11105      75726365 
 11105      5C50536F 
 11106              	.LASF87:
 11107 05cc 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 11107      64644E65 
 11107      77546173 
 11107      6B546F52 
 11107      65616479 
 11108              	.LASF109:
 11109 05e5 76546173 		.ascii	"vTaskResume\000"
 11109      6B526573 
 11109      756D6500 
 11110              	.LASF209:
 11111 05f1 70784375 		.ascii	"pxCurrentTCB\000"
 11111      7272656E 
 11111      74544342 
 11111      00
 11112              	.LASF100:
 11113 05fe 75785265 		.ascii	"uxReturn\000"
 11113      7475726E 
 11113      00
 11114              	.LASF159:
 11115 0607 78496E64 		.ascii	"xIndex\000"
 11115      657800
 11116              	.LASF115:
 11117 060e 78546173 		.ascii	"xTaskGetTickCount\000"
 11117      6B476574 
 11117      5469636B 
 11117      436F756E 
 11117      7400
 11118              	.LASF141:
 11119 0620 70784576 		.ascii	"pxEventList\000"
 11119      656E744C 
 11119      69737400 
 11120              	.LASF73:
 11121 062c 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 11121      74526169 
 11121      73654241 
 11121      53455052 
 11121      4900
 11122              	.LASF41:
 11123 063e 4C697374 		.ascii	"List_t\000"
 11123      5F7400
 11124              	.LASF77:
 11125 0645 70727644 		.ascii	"prvDeleteTCB\000"
 11125      656C6574 
 11125      65544342 
 11125      00
 11126              	.LASF90:
 11127 0652 70727649 		.ascii	"prvIdleTask\000"
 11127      646C6554 
 11127      61736B00 
 11128              	.LASF154:
 11129 065e 78456C61 		.ascii	"xElapsedTime\000"
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 309


 11129      70736564 
 11129      54696D65 
 11129      00
 11130              	.LASF135:
 11131 066b 76546173 		.ascii	"vTaskSwitchContext\000"
 11131      6B537769 
 11131      74636843 
 11131      6F6E7465 
 11131      787400
 11132              	.LASF55:
 11133 067e 65496E63 		.ascii	"eIncrement\000"
 11133      72656D65 
 11133      6E7400
 11134              	.LASF48:
 11135 0689 70785374 		.ascii	"pxStack\000"
 11135      61636B00 
 11136              	.LASF211:
 11137 0691 764C6973 		.ascii	"vListInitialiseItem\000"
 11137      74496E69 
 11137      7469616C 
 11137      69736549 
 11137      74656D00 
 11138              	.LASF171:
 11139 06a5 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 11139      7473546F 
 11139      436C6561 
 11139      724F6E45 
 11139      6E747279 
 11140              	.LASF192:
 11141 06ba 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 11141      6572666C 
 11141      6F774465 
 11141      6C617965 
 11141      64546173 
 11142              	.LASF15:
 11143 06d4 73697A65 		.ascii	"sizetype\000"
 11143      74797065 
 11143      00
 11144              	.LASF2:
 11145 06dd 6C6F6E67 		.ascii	"long double\000"
 11145      20646F75 
 11145      626C6500 
 11146              	.LASF85:
 11147 06e9 78526567 		.ascii	"xRegions\000"
 11147      696F6E73 
 11147      00
 11148              	.LASF193:
 11149 06f2 7850656E 		.ascii	"xPendingReadyList\000"
 11149      64696E67 
 11149      52656164 
 11149      794C6973 
 11149      7400
 11150              	.LASF98:
 11151 0704 78546173 		.ascii	"xTaskCreate\000"
 11151      6B437265 
 11151      61746500 
 11152              	.LASF139:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 310


 11153 0710 78546173 		.ascii	"xTaskToSuspend\000"
 11153      6B546F53 
 11153      75737065 
 11153      6E6400
 11154              	.LASF163:
 11155 071f 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 11155      6B476574 
 11155      43757272 
 11155      656E7454 
 11155      61736B48 
 11156              	.LASF79:
 11157 0739 70785461 		.ascii	"pxTaskCode\000"
 11157      736B436F 
 11157      646500
 11158              	.LASF221:
 11159 0744 78506F72 		.ascii	"xPortStartScheduler\000"
 11159      74537461 
 11159      72745363 
 11159      68656475 
 11159      6C657200 
 11160              	.LASF226:
 11161 0758 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 11161      72745261 
 11161      69736542 
 11161      41534550 
 11161      524900
 11162              	.LASF46:
 11163 076b 78457665 		.ascii	"xEventListItem\000"
 11163      6E744C69 
 11163      73744974 
 11163      656D00
 11164              	.LASF205:
 11165 077a 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 11165      74546173 
 11165      6B556E62 
 11165      6C6F636B 
 11165      54696D65 
 11166              	.LASF56:
 11167 078f 65536574 		.ascii	"eSetValueWithOverwrite\000"
 11167      56616C75 
 11167      65576974 
 11167      684F7665 
 11167      72777269 
 11168              	.LASF222:
 11169 07a6 76506F72 		.ascii	"vPortEndScheduler\000"
 11169      74456E64 
 11169      53636865 
 11169      64756C65 
 11169      7200
 11170              	.LASF133:
 11171 07b8 78546963 		.ascii	"xTicksToCatchUp\000"
 11171      6B73546F 
 11171      43617463 
 11171      68557000 
 11172              	.LASF199:
 11173 07c8 7578546F 		.ascii	"uxTopReadyPriority\000"
 11173      70526561 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 311


 11173      64795072 
 11173      696F7269 
 11173      747900
 11174              	.LASF225:
 11175 07db 473A5C70 		.ascii	"G:\\project\\PsocWagen\\PSoC\\PSoCWagen\\PsocWagen."
 11175      726F6A65 
 11175      63745C50 
 11175      736F6357 
 11175      6167656E 
 11176 0809 63796473 		.ascii	"cydsn\000"
 11176      6E00
 11177              	.LASF65:
 11178 080f 756C4C65 		.ascii	"ulLengthInBytes\000"
 11178      6E677468 
 11178      496E4279 
 11178      74657300 
 11179              	.LASF72:
 11180 081f 76506F72 		.ascii	"vPortSetBASEPRI\000"
 11180      74536574 
 11180      42415345 
 11180      50524900 
 11181              	.LASF38:
 11182 082f 4C697374 		.ascii	"ListItem_t\000"
 11182      4974656D 
 11182      5F7400
 11183              	.LASF136:
 11184 083a 7578546F 		.ascii	"uxTopPriority\000"
 11184      70507269 
 11184      6F726974 
 11184      7900
 11185              	.LASF173:
 11186 0848 70756C4E 		.ascii	"pulNotificationValue\000"
 11186      6F746966 
 11186      69636174 
 11186      696F6E56 
 11186      616C7565 
 11187              	.LASF30:
 11188 085d 70785072 		.ascii	"pxPrevious\000"
 11188      6576696F 
 11188      757300
 11189              	.LASF97:
 11190 0868 78546173 		.ascii	"xTaskToDelete\000"
 11190      6B546F44 
 11190      656C6574 
 11190      6500
 11191              	.LASF160:
 11192 0876 70765661 		.ascii	"pvValue\000"
 11192      6C756500 
 11193              	.LASF21:
 11194 087e 666C6F61 		.ascii	"float\000"
 11194      7400
 11195              	.LASF125:
 11196 0884 7850656E 		.ascii	"xPendedCounts\000"
 11196      64656443 
 11196      6F756E74 
 11196      7300
 11197              	.LASF162:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 312


 11198 0892 70765265 		.ascii	"pvReturn\000"
 11198      7475726E 
 11198      00
 11199              	.LASF36:
 11200 089b 7078496E 		.ascii	"pxIndex\000"
 11200      64657800 
 11201              	.LASF127:
 11202 08a3 70785072 		.ascii	"pxPreviousWakeTime\000"
 11202      6576696F 
 11202      75735761 
 11202      6B655469 
 11202      6D6500
 11203              	.LASF32:
 11204 08b6 7078436F 		.ascii	"pxContainer\000"
 11204      6E746169 
 11204      6E657200 
 11205              	.LASF63:
 11206 08c2 784D454D 		.ascii	"xMEMORY_REGION\000"
 11206      4F52595F 
 11206      52454749 
 11206      4F4E00
 11207              	.LASF126:
 11208 08d1 76546173 		.ascii	"vTaskDelayUntil\000"
 11208      6B44656C 
 11208      6179556E 
 11208      74696C00 
 11209              	.LASF19:
 11210 08e1 696E7433 		.ascii	"int32_t\000"
 11210      325F7400 
 11211              	.LASF6:
 11212 08e9 756E7369 		.ascii	"unsigned char\000"
 11212      676E6564 
 11212      20636861 
 11212      7200
 11213              	.LASF51:
 11214 08f7 756C4E6F 		.ascii	"ulNotifiedValue\000"
 11214      74696669 
 11214      65645661 
 11214      6C756500 
 11215              	.LASF106:
 11216 0907 75784375 		.ascii	"uxCurrentBasePriority\000"
 11216      7272656E 
 11216      74426173 
 11216      65507269 
 11216      6F726974 
 11217              	.LASF69:
 11218 091d 5443425F 		.ascii	"TCB_t\000"
 11218      7400
 11219              	.LASF146:
 11220 0923 7078556E 		.ascii	"pxUnblockedTCB\000"
 11220      626C6F63 
 11220      6B656454 
 11220      434200
 11221              	.LASF200:
 11222 0932 78536368 		.ascii	"xSchedulerRunning\000"
 11222      6564756C 
 11222      65725275 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 313


 11222      6E6E696E 
 11222      6700
 11223              	.LASF114:
 11224 0944 76546173 		.ascii	"vTaskEndScheduler\000"
 11224      6B456E64 
 11224      53636865 
 11224      64756C65 
 11224      7200
 11225              	.LASF110:
 11226 0956 78546173 		.ascii	"xTaskToResume\000"
 11226      6B546F52 
 11226      6573756D 
 11226      6500
 11227              	.LASF123:
 11228 0964 78546173 		.ascii	"xTaskResumeAll\000"
 11228      6B526573 
 11228      756D6541 
 11228      6C6C00
 11229              	.LASF220:
 11230 0973 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 11230      65724372 
 11230      65617465 
 11230      54696D65 
 11230      72546173 
 11231              	.LASF23:
 11232 0989 5461736B 		.ascii	"TaskFunction_t\000"
 11232      46756E63 
 11232      74696F6E 
 11232      5F7400
 11233              	.LASF34:
 11234 0998 784C4953 		.ascii	"xLIST\000"
 11234      5400
 11235              	.LASF101:
 11236 099e 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 11236      736B5072 
 11236      696F7269 
 11236      74794765 
 11236      7446726F 
 11237              	.LASF223:
 11238 09b7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11238      43313120 
 11238      352E342E 
 11238      31203230 
 11238      31363036 
 11239 09ea 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 11239      20726576 
 11239      6973696F 
 11239      6E203233 
 11239      37373135 
 11240 0a1d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 11240      66756E63 
 11240      74696F6E 
 11240      2D736563 
 11240      74696F6E 
 11241              	.LASF111:
 11242 0a45 78546173 		.ascii	"xTaskResumeFromISR\000"
 11242      6B526573 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 314


 11242      756D6546 
 11242      726F6D49 
 11242      535200
 11243              	.LASF78:
 11244 0a58 70727649 		.ascii	"prvInitialiseNewTask\000"
 11244      6E697469 
 11244      616C6973 
 11244      654E6577 
 11244      5461736B 
 11245              	.LASF164:
 11246 0a6d 78546173 		.ascii	"xTaskGetSchedulerState\000"
 11246      6B476574 
 11246      53636865 
 11246      64756C65 
 11246      72537461 
 11247              	.LASF186:
 11248 0a84 756C5461 		.ascii	"ulTaskGenericNotifyValueClear\000"
 11248      736B4765 
 11248      6E657269 
 11248      634E6F74 
 11248      69667956 
 11249              	.LASF210:
 11250 0aa2 76506F72 		.ascii	"vPortFree\000"
 11250      74467265 
 11250      6500
 11251              	.LASF112:
 11252 0aac 75785361 		.ascii	"uxSavedInterruptStatus\000"
 11252      76656449 
 11252      6E746572 
 11252      72757074 
 11252      53746174 
 11253              	.LASF129:
 11254 0ac3 7853686F 		.ascii	"xShouldDelay\000"
 11254      756C6444 
 11254      656C6179 
 11254      00
 11255              	.LASF88:
 11256 0ad0 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 11256      6865636B 
 11256      5461736B 
 11256      73576169 
 11256      74696E67 
 11257              	.LASF76:
 11258 0af0 78546173 		.ascii	"xTask\000"
 11258      6B00
 11259              	.LASF66:
 11260 0af6 756C5061 		.ascii	"ulParameters\000"
 11260      72616D65 
 11260      74657273 
 11260      00
 11261              	.LASF218:
 11262 0b03 764C6973 		.ascii	"vListInsert\000"
 11262      74496E73 
 11262      65727400 
 11263              	.LASF155:
 11264 0b0f 76546173 		.ascii	"vTaskSuspendAll\000"
 11264      6B537573 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 315


 11264      70656E64 
 11264      416C6C00 
 11265              	.LASF227:
 11266 0b1f 756C4E65 		.ascii	"ulNewMaskValue\000"
 11266      774D6173 
 11266      6B56616C 
 11266      756500
 11267              	.LASF91:
 11268 0b2e 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 11268      64644375 
 11268      7272656E 
 11268      74546173 
 11268      6B546F44 
 11269              	.LASF16:
 11270 0b4d 63686172 		.ascii	"char\000"
 11270      00
 11271              	.LASF118:
 11272 0b52 70635461 		.ascii	"pcTaskGetName\000"
 11272      736B4765 
 11272      744E616D 
 11272      6500
 11273              	.LASF216:
 11274 0b60 76506F72 		.ascii	"vPortExitCritical\000"
 11274      74457869 
 11274      74437269 
 11274      74696361 
 11274      6C00
 11275              	.LASF145:
 11276 0b72 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 11276      6B52656D 
 11276      6F766546 
 11276      726F6D45 
 11276      76656E74 
 11277              	.LASF28:
 11278 0b8b 78497465 		.ascii	"xItemValue\000"
 11278      6D56616C 
 11278      756500
 11279              	.LASF195:
 11280 0b96 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 11280      6C657465 
 11280      64546173 
 11280      6B735761 
 11280      6974696E 
 11281              	.LASF103:
 11282 0bb3 76546173 		.ascii	"vTaskDelete\000"
 11282      6B44656C 
 11282      65746500 
 11283              	.LASF102:
 11284 0bbf 75785361 		.ascii	"uxSavedInterruptState\000"
 11284      76656449 
 11284      6E746572 
 11284      72757074 
 11284      53746174 
 11285              	.LASF10:
 11286 0bd5 5F5F696E 		.ascii	"__int32_t\000"
 11286      7433325F 
 11286      7400
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 316


 11287              	.LASF152:
 11288 0bdf 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 11288      6B436865 
 11288      636B466F 
 11288      7254696D 
 11288      654F7574 
 11289              	.LASF217:
 11290 0bf4 75784C69 		.ascii	"uxListRemove\000"
 11290      73745265 
 11290      6D6F7665 
 11290      00
 11291              	.LASF148:
 11292 0c01 70784576 		.ascii	"pxEventListItem\000"
 11292      656E744C 
 11292      69737449 
 11292      74656D00 
 11293              	.LASF204:
 11294 0c11 75785461 		.ascii	"uxTaskNumber\000"
 11294      736B4E75 
 11294      6D626572 
 11294      00
 11295              	.LASF122:
 11296 0c1e 70785465 		.ascii	"pxTemp\000"
 11296      6D7000
 11297              	.LASF206:
 11298 0c25 7849646C 		.ascii	"xIdleTaskHandle\000"
 11298      65546173 
 11298      6B48616E 
 11298      646C6500 
 11299              	.LASF188:
 11300 0c35 70785265 		.ascii	"pxReadyTasksLists\000"
 11300      61647954 
 11300      61736B73 
 11300      4C697374 
 11300      7300
 11301              	.LASF144:
 11302 0c47 78576169 		.ascii	"xWaitIndefinitely\000"
 11302      74496E64 
 11302      6566696E 
 11302      6974656C 
 11302      7900
 11303              	.LASF229:
 11304 0c59 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 11304      736B4765 
 11304      744E756D 
 11304      6265724F 
 11304      66546173 
 11305              	.LASF214:
 11306 0c70 76506F72 		.ascii	"vPortEnterCritical\000"
 11306      74456E74 
 11306      65724372 
 11306      69746963 
 11306      616C00
 11307              	.LASF189:
 11308 0c83 7844656C 		.ascii	"xDelayedTaskList1\000"
 11308      61796564 
 11308      5461736B 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 317


 11308      4C697374 
 11308      3100
 11309              	.LASF190:
 11310 0c95 7844656C 		.ascii	"xDelayedTaskList2\000"
 11310      61796564 
 11310      5461736B 
 11310      4C697374 
 11310      3200
 11311              	.LASF203:
 11312 0ca7 784E756D 		.ascii	"xNumOfOverflows\000"
 11312      4F664F76 
 11312      6572666C 
 11312      6F777300 
 11313              	.LASF174:
 11314 0cb7 78546173 		.ascii	"xTaskGenericNotify\000"
 11314      6B47656E 
 11314      65726963 
 11314      4E6F7469 
 11314      667900
 11315              	.LASF198:
 11316 0cca 78546963 		.ascii	"xTickCount\000"
 11316      6B436F75 
 11316      6E7400
 11317              	.LASF151:
 11318 0cd5 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 11318      6B496E74 
 11318      65726E61 
 11318      6C536574 
 11318      54696D65 
 11319              	.LASF31:
 11320 0cf2 70764F77 		.ascii	"pvOwner\000"
 11320      6E657200 
 11321              	.LASF176:
 11322 0cfa 7578496E 		.ascii	"uxIndexToNotify\000"
 11322      64657854 
 11322      6F4E6F74 
 11322      69667900 
 11323              	.LASF167:
 11324 0d0a 7578496E 		.ascii	"uxIndexToWait\000"
 11324      64657854 
 11324      6F576169 
 11324      7400
 11325              	.LASF131:
 11326 0d18 78546963 		.ascii	"xTicksToDelay\000"
 11326      6B73546F 
 11326      44656C61 
 11326      7900
 11327              	.LASF212:
 11328 0d26 7078506F 		.ascii	"pxPortInitialiseStack\000"
 11328      7274496E 
 11328      69746961 
 11328      6C697365 
 11328      53746163 
 11329              	.LASF128:
 11330 0d3c 7854696D 		.ascii	"xTimeIncrement\000"
 11330      65496E63 
 11330      72656D65 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 318


 11330      6E7400
 11331              	.LASF57:
 11332 0d4b 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 11332      56616C75 
 11332      65576974 
 11332      686F7574 
 11332      4F766572 
 11333              	.LASF49:
 11334 0d65 70635461 		.ascii	"pcTaskName\000"
 11334      736B4E61 
 11334      6D6500
 11335              	.LASF17:
 11336 0d70 75696E74 		.ascii	"uint8_t\000"
 11336      385F7400 
 11337              	.LASF153:
 11338 0d78 70785469 		.ascii	"pxTicksToWait\000"
 11338      636B7354 
 11338      6F576169 
 11338      7400
 11339              	.LASF89:
 11340 0d86 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 11340      61736B49 
 11340      73546173 
 11340      6B537573 
 11340      70656E64 
 11341              	.LASF53:
 11342 0d9d 654E6F41 		.ascii	"eNoAction\000"
 11342      6374696F 
 11342      6E00
 11343              	.LASF29:
 11344 0da7 70784E65 		.ascii	"pxNext\000"
 11344      787400
 11345              	.LASF143:
 11346 0dae 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 11346      6B506C61 
 11346      63654F6E 
 11346      4576656E 
 11346      744C6973 
 11347              	.LASF213:
 11348 0dce 764C6973 		.ascii	"vListInitialise\000"
 11348      74496E69 
 11348      7469616C 
 11348      69736500 
 11349              	.LASF58:
 11350 0dde 654E6F74 		.ascii	"eNotifyAction\000"
 11350      69667941 
 11350      6374696F 
 11350      6E00
 11351              	.LASF184:
 11352 0dec 78546173 		.ascii	"xTaskGenericNotifyStateClear\000"
 11352      6B47656E 
 11352      65726963 
 11352      4E6F7469 
 11352      66795374 
 11353              	.LASF169:
 11354 0e09 756C5265 		.ascii	"ulReturn\000"
 11354      7475726E 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 319


 11354      00
 11355              	.LASF61:
 11356 0e12 7854696D 		.ascii	"xTimeOnEntering\000"
 11356      654F6E45 
 11356      6E746572 
 11356      696E6700 
 11357              	.LASF33:
 11358 0e22 784C4953 		.ascii	"xLIST_ITEM\000"
 11358      545F4954 
 11358      454D00
 11359              	.LASF47:
 11360 0e2d 75785072 		.ascii	"uxPriority\000"
 11360      696F7269 
 11360      747900
 11361              	.LASF191:
 11362 0e38 70784465 		.ascii	"pxDelayedTaskList\000"
 11362      6C617965 
 11362      64546173 
 11362      6B4C6973 
 11362      7400
 11363              	.LASF161:
 11364 0e4a 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 11364      736B4765 
 11364      74546872 
 11364      6561644C 
 11364      6F63616C 
 11365              	.LASF80:
 11366 0e6d 70634E61 		.ascii	"pcName\000"
 11366      6D6500
 11367              	.LASF99:
 11368 0e74 75785461 		.ascii	"uxTaskPriorityGet\000"
 11368      736B5072 
 11368      696F7269 
 11368      74794765 
 11368      7400
 11369              	.LASF149:
 11370 0e86 76546173 		.ascii	"vTaskSetTimeOutState\000"
 11370      6B536574 
 11370      54696D65 
 11370      4F757453 
 11370      74617465 
 11371              	.LASF172:
 11372 0e9b 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 11372      7473546F 
 11372      436C6561 
 11372      724F6E45 
 11372      78697400 
 11373              	.LASF26:
 11374 0eaf 55426173 		.ascii	"UBaseType_t\000"
 11374      65547970 
 11374      655F7400 
 11375              	.LASF20:
 11376 0ebb 75696E74 		.ascii	"uint32_t\000"
 11376      33325F74 
 11376      00
 11377              	.LASF147:
 11378 0ec4 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccAEAjiN.s 			page 320


 11378      6B52656D 
 11378      6F766546 
 11378      726F6D55 
 11378      6E6F7264 
 11379              	.LASF64:
 11380 0ee6 70764261 		.ascii	"pvBaseAddress\000"
 11380      73654164 
 11380      64726573 
 11380      7300
 11381              	.LASF86:
 11382 0ef4 70727649 		.ascii	"prvInitialiseTaskLists\000"
 11382      6E697469 
 11382      616C6973 
 11382      65546173 
 11382      6B4C6973 
 11383              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

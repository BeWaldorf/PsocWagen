ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTOS_queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvIsQueueFull,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvIsQueueFull, %function
  24              	prvIsQueueFull:
  25              	.LFB87:
  26              		.file 1 "Generated_Source\\PSoC5\\RTOS_queue.c"
   1:Generated_Source\PSoC5/RTOS_queue.c **** /*
   2:Generated_Source\PSoC5/RTOS_queue.c ****  * FreeRTOS Kernel V10.4.0
   3:Generated_Source\PSoC5/RTOS_queue.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC5/RTOS_queue.c ****  *
   5:Generated_Source\PSoC5/RTOS_queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC5/RTOS_queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC5/RTOS_queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC5/RTOS_queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC5/RTOS_queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC5/RTOS_queue.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC5/RTOS_queue.c ****  *
  12:Generated_Source\PSoC5/RTOS_queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC5/RTOS_queue.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC5/RTOS_queue.c ****  *
  15:Generated_Source\PSoC5/RTOS_queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC5/RTOS_queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC5/RTOS_queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC5/RTOS_queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC5/RTOS_queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC5/RTOS_queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC5/RTOS_queue.c ****  *
  22:Generated_Source\PSoC5/RTOS_queue.c ****  * https://www.FreeRTOS.org
  23:Generated_Source\PSoC5/RTOS_queue.c ****  * https://github.com/FreeRTOS
  24:Generated_Source\PSoC5/RTOS_queue.c ****  *
  25:Generated_Source\PSoC5/RTOS_queue.c ****  */
  26:Generated_Source\PSoC5/RTOS_queue.c **** 
  27:Generated_Source\PSoC5/RTOS_queue.c **** #include <stdlib.h>
  28:Generated_Source\PSoC5/RTOS_queue.c **** #include <string.h>
  29:Generated_Source\PSoC5/RTOS_queue.c **** 
  30:Generated_Source\PSoC5/RTOS_queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:Generated_Source\PSoC5/RTOS_queue.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 2


  32:Generated_Source\PSoC5/RTOS_queue.c ****  * task.h is included from an application file. */
  33:Generated_Source\PSoC5/RTOS_queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:Generated_Source\PSoC5/RTOS_queue.c **** 
  35:Generated_Source\PSoC5/RTOS_queue.c **** #include "RTOS_FreeRTOS.h"
  36:Generated_Source\PSoC5/RTOS_queue.c **** #include "task.h"
  37:Generated_Source\PSoC5/RTOS_queue.c **** #include "queue.h"
  38:Generated_Source\PSoC5/RTOS_queue.c **** 
  39:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  40:Generated_Source\PSoC5/RTOS_queue.c ****     #include "croutine.h"
  41:Generated_Source\PSoC5/RTOS_queue.c **** #endif
  42:Generated_Source\PSoC5/RTOS_queue.c **** 
  43:Generated_Source\PSoC5/RTOS_queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Generated_Source\PSoC5/RTOS_queue.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Generated_Source\PSoC5/RTOS_queue.c ****  * for the header files above, but not in this file, in order to generate the
  46:Generated_Source\PSoC5/RTOS_queue.c ****  * correct privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC5/RTOS_queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Generated_Source\PSoC5/RTOS_queue.c **** 
  49:Generated_Source\PSoC5/RTOS_queue.c **** 
  50:Generated_Source\PSoC5/RTOS_queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  51:Generated_Source\PSoC5/RTOS_queue.c **** #define queueUNLOCKED             ( ( int8_t ) -1 )
  52:Generated_Source\PSoC5/RTOS_queue.c **** #define queueLOCKED_UNMODIFIED    ( ( int8_t ) 0 )
  53:Generated_Source\PSoC5/RTOS_queue.c **** #define queueINT8_MAX             ( ( int8_t ) 127 )
  54:Generated_Source\PSoC5/RTOS_queue.c **** 
  55:Generated_Source\PSoC5/RTOS_queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Generated_Source\PSoC5/RTOS_queue.c ****  * pcTail members are used as pointers into the queue storage area.  When the
  57:Generated_Source\PSoC5/RTOS_queue.c ****  * Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Generated_Source\PSoC5/RTOS_queue.c ****  * not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Generated_Source\PSoC5/RTOS_queue.c ****  * structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Generated_Source\PSoC5/RTOS_queue.c ****  * names to the pcHead and structure member to ensure the readability of the code
  61:Generated_Source\PSoC5/RTOS_queue.c ****  * is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Generated_Source\PSoC5/RTOS_queue.c ****  * a union as their usage is mutually exclusive dependent on what the queue is
  63:Generated_Source\PSoC5/RTOS_queue.c ****  * being used for. */
  64:Generated_Source\PSoC5/RTOS_queue.c **** #define uxQueueType               pcHead
  65:Generated_Source\PSoC5/RTOS_queue.c **** #define queueQUEUE_IS_MUTEX       NULL
  66:Generated_Source\PSoC5/RTOS_queue.c **** 
  67:Generated_Source\PSoC5/RTOS_queue.c **** typedef struct QueuePointers
  68:Generated_Source\PSoC5/RTOS_queue.c **** {
  69:Generated_Source\PSoC5/RTOS_queue.c ****     int8_t * pcTail;     /*< Points to the byte at the end of the queue storage area.  Once more by
  70:Generated_Source\PSoC5/RTOS_queue.c ****     int8_t * pcReadFrom; /*< Points to the last place that a queued item was read from when the str
  71:Generated_Source\PSoC5/RTOS_queue.c **** } QueuePointers_t;
  72:Generated_Source\PSoC5/RTOS_queue.c **** 
  73:Generated_Source\PSoC5/RTOS_queue.c **** typedef struct SemaphoreData
  74:Generated_Source\PSoC5/RTOS_queue.c **** {
  75:Generated_Source\PSoC5/RTOS_queue.c ****     TaskHandle_t xMutexHolder;        /*< The handle of the task that holds the mutex. */
  76:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxRecursiveCallCount; /*< Maintains a count of the number of times a recursive mute
  77:Generated_Source\PSoC5/RTOS_queue.c **** } SemaphoreData_t;
  78:Generated_Source\PSoC5/RTOS_queue.c **** 
  79:Generated_Source\PSoC5/RTOS_queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Generated_Source\PSoC5/RTOS_queue.c ****  * zero. */
  81:Generated_Source\PSoC5/RTOS_queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH    ( ( UBaseType_t ) 0 )
  82:Generated_Source\PSoC5/RTOS_queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME          ( ( TickType_t ) 0U )
  83:Generated_Source\PSoC5/RTOS_queue.c **** 
  84:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_PREEMPTION == 0 )
  85:Generated_Source\PSoC5/RTOS_queue.c **** 
  86:Generated_Source\PSoC5/RTOS_queue.c **** /* If the cooperative scheduler is being used then a yield should not be
  87:Generated_Source\PSoC5/RTOS_queue.c ****  * performed just because a higher priority task has been woken. */
  88:Generated_Source\PSoC5/RTOS_queue.c ****     #define queueYIELD_IF_USING_PREEMPTION()
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 3


  89:Generated_Source\PSoC5/RTOS_queue.c **** #else
  90:Generated_Source\PSoC5/RTOS_queue.c ****     #define queueYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  91:Generated_Source\PSoC5/RTOS_queue.c **** #endif
  92:Generated_Source\PSoC5/RTOS_queue.c **** 
  93:Generated_Source\PSoC5/RTOS_queue.c **** /*
  94:Generated_Source\PSoC5/RTOS_queue.c ****  * Definition of the queue used by the scheduler.
  95:Generated_Source\PSoC5/RTOS_queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  96:Generated_Source\PSoC5/RTOS_queue.c ****  * rationale: https://www.FreeRTOS.org/Embedded-RTOS-Queues.html
  97:Generated_Source\PSoC5/RTOS_queue.c ****  */
  98:Generated_Source\PSoC5/RTOS_queue.c **** typedef struct QueueDefinition /* The old naming convention is used to prevent breaking kernel awar
  99:Generated_Source\PSoC5/RTOS_queue.c **** {
 100:Generated_Source\PSoC5/RTOS_queue.c ****     int8_t * pcHead;           /*< Points to the beginning of the queue storage area. */
 101:Generated_Source\PSoC5/RTOS_queue.c ****     int8_t * pcWriteTo;        /*< Points to the free next place in the storage area. */
 102:Generated_Source\PSoC5/RTOS_queue.c **** 
 103:Generated_Source\PSoC5/RTOS_queue.c ****     union
 104:Generated_Source\PSoC5/RTOS_queue.c ****     {
 105:Generated_Source\PSoC5/RTOS_queue.c ****         QueuePointers_t xQueue;     /*< Data required exclusively when this structure is used as a 
 106:Generated_Source\PSoC5/RTOS_queue.c ****         SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a 
 107:Generated_Source\PSoC5/RTOS_queue.c ****     } u;
 108:Generated_Source\PSoC5/RTOS_queue.c **** 
 109:Generated_Source\PSoC5/RTOS_queue.c ****     List_t xTasksWaitingToSend;             /*< List of tasks that are blocked waiting to post onto
 110:Generated_Source\PSoC5/RTOS_queue.c ****     List_t xTasksWaitingToReceive;          /*< List of tasks that are blocked waiting to read from
 111:Generated_Source\PSoC5/RTOS_queue.c **** 
 112:Generated_Source\PSoC5/RTOS_queue.c ****     volatile UBaseType_t uxMessagesWaiting; /*< The number of items currently in the queue. */
 113:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxLength;                   /*< The length of the queue defined as the number of it
 114:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxItemSize;                 /*< The size of each items that the queue will hold. */
 115:Generated_Source\PSoC5/RTOS_queue.c **** 
 116:Generated_Source\PSoC5/RTOS_queue.c ****     volatile int8_t cRxLock;                /*< Stores the number of items received from the queue 
 117:Generated_Source\PSoC5/RTOS_queue.c ****     volatile int8_t cTxLock;                /*< Stores the number of items transmitted to the queue
 118:Generated_Source\PSoC5/RTOS_queue.c **** 
 119:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 120:Generated_Source\PSoC5/RTOS_queue.c ****         uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the memory used by the queue was static
 121:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
 122:Generated_Source\PSoC5/RTOS_queue.c **** 
 123:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( configUSE_QUEUE_SETS == 1 )
 124:Generated_Source\PSoC5/RTOS_queue.c ****         struct QueueDefinition * pxQueueSetContainer;
 125:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
 126:Generated_Source\PSoC5/RTOS_queue.c **** 
 127:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 128:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t uxQueueNumber;
 129:Generated_Source\PSoC5/RTOS_queue.c ****         uint8_t ucQueueType;
 130:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
 131:Generated_Source\PSoC5/RTOS_queue.c **** } xQUEUE;
 132:Generated_Source\PSoC5/RTOS_queue.c **** 
 133:Generated_Source\PSoC5/RTOS_queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Generated_Source\PSoC5/RTOS_queue.c ****  * name below to enable the use of older kernel aware debuggers. */
 135:Generated_Source\PSoC5/RTOS_queue.c **** typedef xQUEUE Queue_t;
 136:Generated_Source\PSoC5/RTOS_queue.c **** 
 137:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC5/RTOS_queue.c **** 
 139:Generated_Source\PSoC5/RTOS_queue.c **** /*
 140:Generated_Source\PSoC5/RTOS_queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Generated_Source\PSoC5/RTOS_queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Generated_Source\PSoC5/RTOS_queue.c ****  */
 143:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Generated_Source\PSoC5/RTOS_queue.c **** 
 145:Generated_Source\PSoC5/RTOS_queue.c **** /* The type stored within the queue registry array.  This allows a name
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 4


 146:Generated_Source\PSoC5/RTOS_queue.c ****  * to be assigned to each queue making kernel aware debugging a little
 147:Generated_Source\PSoC5/RTOS_queue.c ****  * more user friendly. */
 148:Generated_Source\PSoC5/RTOS_queue.c ****     typedef struct QUEUE_REGISTRY_ITEM
 149:Generated_Source\PSoC5/RTOS_queue.c ****     {
 150:Generated_Source\PSoC5/RTOS_queue.c ****         const char * pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and s
 151:Generated_Source\PSoC5/RTOS_queue.c ****         QueueHandle_t xHandle;
 152:Generated_Source\PSoC5/RTOS_queue.c ****     } xQueueRegistryItem;
 153:Generated_Source\PSoC5/RTOS_queue.c **** 
 154:Generated_Source\PSoC5/RTOS_queue.c **** /* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Generated_Source\PSoC5/RTOS_queue.c ****  * new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Generated_Source\PSoC5/RTOS_queue.c ****  * debuggers. */
 157:Generated_Source\PSoC5/RTOS_queue.c ****     typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Generated_Source\PSoC5/RTOS_queue.c **** 
 159:Generated_Source\PSoC5/RTOS_queue.c **** /* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Generated_Source\PSoC5/RTOS_queue.c ****  * The pcQueueName member of a structure being NULL is indicative of the
 161:Generated_Source\PSoC5/RTOS_queue.c ****  * array position being vacant. */
 162:Generated_Source\PSoC5/RTOS_queue.c ****     PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Generated_Source\PSoC5/RTOS_queue.c **** 
 164:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Generated_Source\PSoC5/RTOS_queue.c **** 
 166:Generated_Source\PSoC5/RTOS_queue.c **** /*
 167:Generated_Source\PSoC5/RTOS_queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Generated_Source\PSoC5/RTOS_queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Generated_Source\PSoC5/RTOS_queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Generated_Source\PSoC5/RTOS_queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Generated_Source\PSoC5/RTOS_queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Generated_Source\PSoC5/RTOS_queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Generated_Source\PSoC5/RTOS_queue.c ****  */
 174:Generated_Source\PSoC5/RTOS_queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Generated_Source\PSoC5/RTOS_queue.c **** 
 176:Generated_Source\PSoC5/RTOS_queue.c **** /*
 177:Generated_Source\PSoC5/RTOS_queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Generated_Source\PSoC5/RTOS_queue.c ****  *
 179:Generated_Source\PSoC5/RTOS_queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Generated_Source\PSoC5/RTOS_queue.c ****  */
 181:Generated_Source\PSoC5/RTOS_queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue ) PRIVILEGED_FUNCTION;
 182:Generated_Source\PSoC5/RTOS_queue.c **** 
 183:Generated_Source\PSoC5/RTOS_queue.c **** /*
 184:Generated_Source\PSoC5/RTOS_queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Generated_Source\PSoC5/RTOS_queue.c ****  *
 186:Generated_Source\PSoC5/RTOS_queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Generated_Source\PSoC5/RTOS_queue.c ****  */
 188:Generated_Source\PSoC5/RTOS_queue.c **** static BaseType_t prvIsQueueFull( const Queue_t * pxQueue ) PRIVILEGED_FUNCTION;
 189:Generated_Source\PSoC5/RTOS_queue.c **** 
 190:Generated_Source\PSoC5/RTOS_queue.c **** /*
 191:Generated_Source\PSoC5/RTOS_queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Generated_Source\PSoC5/RTOS_queue.c ****  * back of the queue.
 193:Generated_Source\PSoC5/RTOS_queue.c ****  */
 194:Generated_Source\PSoC5/RTOS_queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
 195:Generated_Source\PSoC5/RTOS_queue.c ****                                       const void * pvItemToQueue,
 196:Generated_Source\PSoC5/RTOS_queue.c ****                                       const BaseType_t xPosition ) PRIVILEGED_FUNCTION;
 197:Generated_Source\PSoC5/RTOS_queue.c **** 
 198:Generated_Source\PSoC5/RTOS_queue.c **** /*
 199:Generated_Source\PSoC5/RTOS_queue.c ****  * Copies an item out of a queue.
 200:Generated_Source\PSoC5/RTOS_queue.c ****  */
 201:Generated_Source\PSoC5/RTOS_queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue,
 202:Generated_Source\PSoC5/RTOS_queue.c ****                                   void * const pvBuffer ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 5


 203:Generated_Source\PSoC5/RTOS_queue.c **** 
 204:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 205:Generated_Source\PSoC5/RTOS_queue.c **** 
 206:Generated_Source\PSoC5/RTOS_queue.c **** /*
 207:Generated_Source\PSoC5/RTOS_queue.c ****  * Checks to see if a queue is a member of a queue set, and if so, notifies
 208:Generated_Source\PSoC5/RTOS_queue.c ****  * the queue set that the queue contains data.
 209:Generated_Source\PSoC5/RTOS_queue.c ****  */
 210:Generated_Source\PSoC5/RTOS_queue.c ****     static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTI
 211:Generated_Source\PSoC5/RTOS_queue.c **** #endif
 212:Generated_Source\PSoC5/RTOS_queue.c **** 
 213:Generated_Source\PSoC5/RTOS_queue.c **** /*
 214:Generated_Source\PSoC5/RTOS_queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 215:Generated_Source\PSoC5/RTOS_queue.c ****  * dynamically to fill in the structure's members.
 216:Generated_Source\PSoC5/RTOS_queue.c ****  */
 217:Generated_Source\PSoC5/RTOS_queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength,
 218:Generated_Source\PSoC5/RTOS_queue.c ****                                    const UBaseType_t uxItemSize,
 219:Generated_Source\PSoC5/RTOS_queue.c ****                                    uint8_t * pucQueueStorage,
 220:Generated_Source\PSoC5/RTOS_queue.c ****                                    const uint8_t ucQueueType,
 221:Generated_Source\PSoC5/RTOS_queue.c ****                                    Queue_t * pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Generated_Source\PSoC5/RTOS_queue.c **** 
 223:Generated_Source\PSoC5/RTOS_queue.c **** /*
 224:Generated_Source\PSoC5/RTOS_queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 225:Generated_Source\PSoC5/RTOS_queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 226:Generated_Source\PSoC5/RTOS_queue.c ****  * as a mutex.
 227:Generated_Source\PSoC5/RTOS_queue.c ****  */
 228:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_MUTEXES == 1 )
 229:Generated_Source\PSoC5/RTOS_queue.c ****     static void prvInitialiseMutex( Queue_t * pxNewQueue ) PRIVILEGED_FUNCTION;
 230:Generated_Source\PSoC5/RTOS_queue.c **** #endif
 231:Generated_Source\PSoC5/RTOS_queue.c **** 
 232:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_MUTEXES == 1 )
 233:Generated_Source\PSoC5/RTOS_queue.c **** 
 234:Generated_Source\PSoC5/RTOS_queue.c **** /*
 235:Generated_Source\PSoC5/RTOS_queue.c ****  * If a task waiting for a mutex causes the mutex holder to inherit a
 236:Generated_Source\PSoC5/RTOS_queue.c ****  * priority, but the waiting task times out, then the holder should
 237:Generated_Source\PSoC5/RTOS_queue.c ****  * disinherit the priority - but only down to the highest priority of any
 238:Generated_Source\PSoC5/RTOS_queue.c ****  * other tasks that are waiting for the same mutex.  This function returns
 239:Generated_Source\PSoC5/RTOS_queue.c ****  * that priority.
 240:Generated_Source\PSoC5/RTOS_queue.c ****  */
 241:Generated_Source\PSoC5/RTOS_queue.c ****     static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVIL
 242:Generated_Source\PSoC5/RTOS_queue.c **** #endif
 243:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 244:Generated_Source\PSoC5/RTOS_queue.c **** 
 245:Generated_Source\PSoC5/RTOS_queue.c **** /*
 246:Generated_Source\PSoC5/RTOS_queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 247:Generated_Source\PSoC5/RTOS_queue.c ****  * accessing the queue event lists.
 248:Generated_Source\PSoC5/RTOS_queue.c ****  */
 249:Generated_Source\PSoC5/RTOS_queue.c **** #define prvLockQueue( pxQueue )                            \
 250:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();                                  \
 251:Generated_Source\PSoC5/RTOS_queue.c ****     {                                                      \
 252:Generated_Source\PSoC5/RTOS_queue.c ****         if( ( pxQueue )->cRxLock == queueUNLOCKED )        \
 253:Generated_Source\PSoC5/RTOS_queue.c ****         {                                                  \
 254:Generated_Source\PSoC5/RTOS_queue.c ****             ( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED; \
 255:Generated_Source\PSoC5/RTOS_queue.c ****         }                                                  \
 256:Generated_Source\PSoC5/RTOS_queue.c ****         if( ( pxQueue )->cTxLock == queueUNLOCKED )        \
 257:Generated_Source\PSoC5/RTOS_queue.c ****         {                                                  \
 258:Generated_Source\PSoC5/RTOS_queue.c ****             ( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED; \
 259:Generated_Source\PSoC5/RTOS_queue.c ****         }                                                  \
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 6


 260:Generated_Source\PSoC5/RTOS_queue.c ****     }                                                      \
 261:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL()
 262:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 263:Generated_Source\PSoC5/RTOS_queue.c **** 
 264:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue,
 265:Generated_Source\PSoC5/RTOS_queue.c ****                                BaseType_t xNewQueue )
 266:Generated_Source\PSoC5/RTOS_queue.c **** {
 267:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
 268:Generated_Source\PSoC5/RTOS_queue.c **** 
 269:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
 270:Generated_Source\PSoC5/RTOS_queue.c **** 
 271:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();
 272:Generated_Source\PSoC5/RTOS_queue.c ****     {
 273:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /
 274:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 275:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->pcWriteTo = pxQueue->pcHead;
 276:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->ux
 277:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->cRxLock = queueUNLOCKED;
 278:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->cTxLock = queueUNLOCKED;
 279:Generated_Source\PSoC5/RTOS_queue.c **** 
 280:Generated_Source\PSoC5/RTOS_queue.c ****         if( xNewQueue == pdFALSE )
 281:Generated_Source\PSoC5/RTOS_queue.c ****         {
 282:Generated_Source\PSoC5/RTOS_queue.c ****             /* If there are tasks blocked waiting to read from the queue, then
 283:Generated_Source\PSoC5/RTOS_queue.c ****              * the tasks will remain blocked as after this function exits the queue
 284:Generated_Source\PSoC5/RTOS_queue.c ****              * will still be empty.  If there are tasks blocked waiting to write to
 285:Generated_Source\PSoC5/RTOS_queue.c ****              * the queue, then one should be unblocked as after this function exits
 286:Generated_Source\PSoC5/RTOS_queue.c ****              * it will be possible to write to it. */
 287:Generated_Source\PSoC5/RTOS_queue.c ****             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 288:Generated_Source\PSoC5/RTOS_queue.c ****             {
 289:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 290:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 291:Generated_Source\PSoC5/RTOS_queue.c ****                     queueYIELD_IF_USING_PREEMPTION();
 292:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 293:Generated_Source\PSoC5/RTOS_queue.c ****                 else
 294:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 295:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
 296:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 297:Generated_Source\PSoC5/RTOS_queue.c ****             }
 298:Generated_Source\PSoC5/RTOS_queue.c ****             else
 299:Generated_Source\PSoC5/RTOS_queue.c ****             {
 300:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
 301:Generated_Source\PSoC5/RTOS_queue.c ****             }
 302:Generated_Source\PSoC5/RTOS_queue.c ****         }
 303:Generated_Source\PSoC5/RTOS_queue.c ****         else
 304:Generated_Source\PSoC5/RTOS_queue.c ****         {
 305:Generated_Source\PSoC5/RTOS_queue.c ****             /* Ensure the event queues start in the correct state. */
 306:Generated_Source\PSoC5/RTOS_queue.c ****             vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 307:Generated_Source\PSoC5/RTOS_queue.c ****             vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 308:Generated_Source\PSoC5/RTOS_queue.c ****         }
 309:Generated_Source\PSoC5/RTOS_queue.c ****     }
 310:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL();
 311:Generated_Source\PSoC5/RTOS_queue.c **** 
 312:Generated_Source\PSoC5/RTOS_queue.c ****     /* A value is returned for calling semantic consistency with previous
 313:Generated_Source\PSoC5/RTOS_queue.c ****      * versions. */
 314:Generated_Source\PSoC5/RTOS_queue.c ****     return pdPASS;
 315:Generated_Source\PSoC5/RTOS_queue.c **** }
 316:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 7


 317:Generated_Source\PSoC5/RTOS_queue.c **** 
 318:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 319:Generated_Source\PSoC5/RTOS_queue.c **** 
 320:Generated_Source\PSoC5/RTOS_queue.c ****     QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength,
 321:Generated_Source\PSoC5/RTOS_queue.c ****                                              const UBaseType_t uxItemSize,
 322:Generated_Source\PSoC5/RTOS_queue.c ****                                              uint8_t * pucQueueStorage,
 323:Generated_Source\PSoC5/RTOS_queue.c ****                                              StaticQueue_t * pxStaticQueue,
 324:Generated_Source\PSoC5/RTOS_queue.c ****                                              const uint8_t ucQueueType )
 325:Generated_Source\PSoC5/RTOS_queue.c ****     {
 326:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * pxNewQueue;
 327:Generated_Source\PSoC5/RTOS_queue.c **** 
 328:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 329:Generated_Source\PSoC5/RTOS_queue.c **** 
 330:Generated_Source\PSoC5/RTOS_queue.c ****         /* The StaticQueue_t structure and the queue storage area must be
 331:Generated_Source\PSoC5/RTOS_queue.c ****          * supplied. */
 332:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( pxStaticQueue != NULL );
 333:Generated_Source\PSoC5/RTOS_queue.c **** 
 334:Generated_Source\PSoC5/RTOS_queue.c ****         /* A queue storage area should be provided if the item size is not 0, and
 335:Generated_Source\PSoC5/RTOS_queue.c ****          * should not be provided if the item size is 0. */
 336:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 337:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 338:Generated_Source\PSoC5/RTOS_queue.c **** 
 339:Generated_Source\PSoC5/RTOS_queue.c ****         #if ( configASSERT_DEFINED == 1 )
 340:Generated_Source\PSoC5/RTOS_queue.c ****             {
 341:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Sanity check that the size of the structure used to declare a
 342:Generated_Source\PSoC5/RTOS_queue.c ****                  * variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 343:Generated_Source\PSoC5/RTOS_queue.c ****                  * the real queue and semaphore structures. */
 344:Generated_Source\PSoC5/RTOS_queue.c ****                 volatile size_t xSize = sizeof( StaticQueue_t );
 345:Generated_Source\PSoC5/RTOS_queue.c ****                 configASSERT( xSize == sizeof( Queue_t ) );
 346:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 347:Generated_Source\PSoC5/RTOS_queue.c ****             }
 348:Generated_Source\PSoC5/RTOS_queue.c ****         #endif /* configASSERT_DEFINED */
 349:Generated_Source\PSoC5/RTOS_queue.c **** 
 350:Generated_Source\PSoC5/RTOS_queue.c ****         /* The address of a statically allocated queue was passed in, use it.
 351:Generated_Source\PSoC5/RTOS_queue.c ****          * The address of a statically allocated storage area was also passed in
 352:Generated_Source\PSoC5/RTOS_queue.c ****          * but is already set. */
 353:Generated_Source\PSoC5/RTOS_queue.c ****         pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the str
 354:Generated_Source\PSoC5/RTOS_queue.c **** 
 355:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxNewQueue != NULL )
 356:Generated_Source\PSoC5/RTOS_queue.c ****         {
 357:Generated_Source\PSoC5/RTOS_queue.c ****             #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 358:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 359:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Queues can be allocated wither statically or dynamically, so
 360:Generated_Source\PSoC5/RTOS_queue.c ****                      * note this queue was allocated statically in case the queue is
 361:Generated_Source\PSoC5/RTOS_queue.c ****                      * later deleted. */
 362:Generated_Source\PSoC5/RTOS_queue.c ****                     pxNewQueue->ucStaticallyAllocated = pdTRUE;
 363:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 364:Generated_Source\PSoC5/RTOS_queue.c ****             #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 365:Generated_Source\PSoC5/RTOS_queue.c **** 
 366:Generated_Source\PSoC5/RTOS_queue.c ****             prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQu
 367:Generated_Source\PSoC5/RTOS_queue.c ****         }
 368:Generated_Source\PSoC5/RTOS_queue.c ****         else
 369:Generated_Source\PSoC5/RTOS_queue.c ****         {
 370:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_CREATE_FAILED( ucQueueType );
 371:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
 372:Generated_Source\PSoC5/RTOS_queue.c ****         }
 373:Generated_Source\PSoC5/RTOS_queue.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 8


 374:Generated_Source\PSoC5/RTOS_queue.c ****         return pxNewQueue;
 375:Generated_Source\PSoC5/RTOS_queue.c ****     }
 376:Generated_Source\PSoC5/RTOS_queue.c **** 
 377:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 378:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 379:Generated_Source\PSoC5/RTOS_queue.c **** 
 380:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 381:Generated_Source\PSoC5/RTOS_queue.c **** 
 382:Generated_Source\PSoC5/RTOS_queue.c ****     QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength,
 383:Generated_Source\PSoC5/RTOS_queue.c ****                                        const UBaseType_t uxItemSize,
 384:Generated_Source\PSoC5/RTOS_queue.c ****                                        const uint8_t ucQueueType )
 385:Generated_Source\PSoC5/RTOS_queue.c ****     {
 386:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * pxNewQueue;
 387:Generated_Source\PSoC5/RTOS_queue.c ****         size_t xQueueSizeInBytes;
 388:Generated_Source\PSoC5/RTOS_queue.c ****         uint8_t * pucQueueStorage;
 389:Generated_Source\PSoC5/RTOS_queue.c **** 
 390:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 391:Generated_Source\PSoC5/RTOS_queue.c **** 
 392:Generated_Source\PSoC5/RTOS_queue.c ****         /* Allocate enough space to hold the maximum number of items that
 393:Generated_Source\PSoC5/RTOS_queue.c ****          * can be in the queue at any time.  It is valid for uxItemSize to be
 394:Generated_Source\PSoC5/RTOS_queue.c ****          * zero in the case the queue is used as a semaphore. */
 395:Generated_Source\PSoC5/RTOS_queue.c ****         xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception
 396:Generated_Source\PSoC5/RTOS_queue.c **** 
 397:Generated_Source\PSoC5/RTOS_queue.c ****         /* Check for multiplication overflow. */
 398:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( ( uxItemSize == 0 ) || ( uxQueueLength == ( xQueueSizeInBytes / uxItemSize ) 
 399:Generated_Source\PSoC5/RTOS_queue.c **** 
 400:Generated_Source\PSoC5/RTOS_queue.c ****         /* Allocate the queue and storage area.  Justification for MISRA
 401:Generated_Source\PSoC5/RTOS_queue.c ****          * deviation as follows:  pvPortMalloc() always ensures returned memory
 402:Generated_Source\PSoC5/RTOS_queue.c ****          * blocks are aligned per the requirements of the MCU stack.  In this case
 403:Generated_Source\PSoC5/RTOS_queue.c ****          * pvPortMalloc() must return a pointer that is guaranteed to meet the
 404:Generated_Source\PSoC5/RTOS_queue.c ****          * alignment requirements of the Queue_t structure - which in this case
 405:Generated_Source\PSoC5/RTOS_queue.c ****          * is an int8_t *.  Therefore, whenever the stack alignment requirements
 406:Generated_Source\PSoC5/RTOS_queue.c ****          * are greater than or equal to the pointer to char requirements the cast
 407:Generated_Source\PSoC5/RTOS_queue.c ****          * is safe.  In other cases alignment requirements are not strict (one or
 408:Generated_Source\PSoC5/RTOS_queue.c ****          * two bytes). */
 409:Generated_Source\PSoC5/RTOS_queue.c ****         pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e
 410:Generated_Source\PSoC5/RTOS_queue.c **** 
 411:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxNewQueue != NULL )
 412:Generated_Source\PSoC5/RTOS_queue.c ****         {
 413:Generated_Source\PSoC5/RTOS_queue.c ****             /* Jump past the queue structure to find the location of the queue
 414:Generated_Source\PSoC5/RTOS_queue.c ****              * storage area. */
 415:Generated_Source\PSoC5/RTOS_queue.c ****             pucQueueStorage = ( uint8_t * ) pxNewQueue;
 416:Generated_Source\PSoC5/RTOS_queue.c ****             pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char 
 417:Generated_Source\PSoC5/RTOS_queue.c **** 
 418:Generated_Source\PSoC5/RTOS_queue.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 419:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 420:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Queues can be created either statically or dynamically, so
 421:Generated_Source\PSoC5/RTOS_queue.c ****                      * note this task was created dynamically in case it is later
 422:Generated_Source\PSoC5/RTOS_queue.c ****                      * deleted. */
 423:Generated_Source\PSoC5/RTOS_queue.c ****                     pxNewQueue->ucStaticallyAllocated = pdFALSE;
 424:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 425:Generated_Source\PSoC5/RTOS_queue.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 426:Generated_Source\PSoC5/RTOS_queue.c **** 
 427:Generated_Source\PSoC5/RTOS_queue.c ****             prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQu
 428:Generated_Source\PSoC5/RTOS_queue.c ****         }
 429:Generated_Source\PSoC5/RTOS_queue.c ****         else
 430:Generated_Source\PSoC5/RTOS_queue.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 9


 431:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_CREATE_FAILED( ucQueueType );
 432:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
 433:Generated_Source\PSoC5/RTOS_queue.c ****         }
 434:Generated_Source\PSoC5/RTOS_queue.c **** 
 435:Generated_Source\PSoC5/RTOS_queue.c ****         return pxNewQueue;
 436:Generated_Source\PSoC5/RTOS_queue.c ****     }
 437:Generated_Source\PSoC5/RTOS_queue.c **** 
 438:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 439:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 440:Generated_Source\PSoC5/RTOS_queue.c **** 
 441:Generated_Source\PSoC5/RTOS_queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength,
 442:Generated_Source\PSoC5/RTOS_queue.c ****                                    const UBaseType_t uxItemSize,
 443:Generated_Source\PSoC5/RTOS_queue.c ****                                    uint8_t * pucQueueStorage,
 444:Generated_Source\PSoC5/RTOS_queue.c ****                                    const uint8_t ucQueueType,
 445:Generated_Source\PSoC5/RTOS_queue.c ****                                    Queue_t * pxNewQueue )
 446:Generated_Source\PSoC5/RTOS_queue.c **** {
 447:Generated_Source\PSoC5/RTOS_queue.c ****     /* Remove compiler warnings about unused parameters should
 448:Generated_Source\PSoC5/RTOS_queue.c ****      * configUSE_TRACE_FACILITY not be set to 1. */
 449:Generated_Source\PSoC5/RTOS_queue.c ****     ( void ) ucQueueType;
 450:Generated_Source\PSoC5/RTOS_queue.c **** 
 451:Generated_Source\PSoC5/RTOS_queue.c ****     if( uxItemSize == ( UBaseType_t ) 0 )
 452:Generated_Source\PSoC5/RTOS_queue.c ****     {
 453:Generated_Source\PSoC5/RTOS_queue.c ****         /* No RAM was allocated for the queue storage area, but PC head cannot
 454:Generated_Source\PSoC5/RTOS_queue.c ****          * be set to NULL because NULL is used as a key to say the queue is used as
 455:Generated_Source\PSoC5/RTOS_queue.c ****          * a mutex.  Therefore just set pcHead to point to the queue as a benign
 456:Generated_Source\PSoC5/RTOS_queue.c ****          * value that is known to be within the memory map. */
 457:Generated_Source\PSoC5/RTOS_queue.c ****         pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 458:Generated_Source\PSoC5/RTOS_queue.c ****     }
 459:Generated_Source\PSoC5/RTOS_queue.c ****     else
 460:Generated_Source\PSoC5/RTOS_queue.c ****     {
 461:Generated_Source\PSoC5/RTOS_queue.c ****         /* Set the head to the start of the queue storage area. */
 462:Generated_Source\PSoC5/RTOS_queue.c ****         pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 463:Generated_Source\PSoC5/RTOS_queue.c ****     }
 464:Generated_Source\PSoC5/RTOS_queue.c **** 
 465:Generated_Source\PSoC5/RTOS_queue.c ****     /* Initialise the queue members as described where the queue type is
 466:Generated_Source\PSoC5/RTOS_queue.c ****      * defined. */
 467:Generated_Source\PSoC5/RTOS_queue.c ****     pxNewQueue->uxLength = uxQueueLength;
 468:Generated_Source\PSoC5/RTOS_queue.c ****     pxNewQueue->uxItemSize = uxItemSize;
 469:Generated_Source\PSoC5/RTOS_queue.c ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 470:Generated_Source\PSoC5/RTOS_queue.c **** 
 471:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 472:Generated_Source\PSoC5/RTOS_queue.c ****         {
 473:Generated_Source\PSoC5/RTOS_queue.c ****             pxNewQueue->ucQueueType = ucQueueType;
 474:Generated_Source\PSoC5/RTOS_queue.c ****         }
 475:Generated_Source\PSoC5/RTOS_queue.c ****     #endif /* configUSE_TRACE_FACILITY */
 476:Generated_Source\PSoC5/RTOS_queue.c **** 
 477:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( configUSE_QUEUE_SETS == 1 )
 478:Generated_Source\PSoC5/RTOS_queue.c ****         {
 479:Generated_Source\PSoC5/RTOS_queue.c ****             pxNewQueue->pxQueueSetContainer = NULL;
 480:Generated_Source\PSoC5/RTOS_queue.c ****         }
 481:Generated_Source\PSoC5/RTOS_queue.c ****     #endif /* configUSE_QUEUE_SETS */
 482:Generated_Source\PSoC5/RTOS_queue.c **** 
 483:Generated_Source\PSoC5/RTOS_queue.c ****     traceQUEUE_CREATE( pxNewQueue );
 484:Generated_Source\PSoC5/RTOS_queue.c **** }
 485:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 486:Generated_Source\PSoC5/RTOS_queue.c **** 
 487:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_MUTEXES == 1 )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 10


 488:Generated_Source\PSoC5/RTOS_queue.c **** 
 489:Generated_Source\PSoC5/RTOS_queue.c ****     static void prvInitialiseMutex( Queue_t * pxNewQueue )
 490:Generated_Source\PSoC5/RTOS_queue.c ****     {
 491:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxNewQueue != NULL )
 492:Generated_Source\PSoC5/RTOS_queue.c ****         {
 493:Generated_Source\PSoC5/RTOS_queue.c ****             /* The queue create function will set all the queue structure members
 494:Generated_Source\PSoC5/RTOS_queue.c ****             * correctly for a generic queue, but this function is creating a
 495:Generated_Source\PSoC5/RTOS_queue.c ****             * mutex.  Overwrite those members that need to be set differently -
 496:Generated_Source\PSoC5/RTOS_queue.c ****             * in particular the information required for priority inheritance. */
 497:Generated_Source\PSoC5/RTOS_queue.c ****             pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 498:Generated_Source\PSoC5/RTOS_queue.c ****             pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 499:Generated_Source\PSoC5/RTOS_queue.c **** 
 500:Generated_Source\PSoC5/RTOS_queue.c ****             /* In case this is a recursive mutex. */
 501:Generated_Source\PSoC5/RTOS_queue.c ****             pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 502:Generated_Source\PSoC5/RTOS_queue.c **** 
 503:Generated_Source\PSoC5/RTOS_queue.c ****             traceCREATE_MUTEX( pxNewQueue );
 504:Generated_Source\PSoC5/RTOS_queue.c **** 
 505:Generated_Source\PSoC5/RTOS_queue.c ****             /* Start with the semaphore in the expected state. */
 506:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 507:Generated_Source\PSoC5/RTOS_queue.c ****         }
 508:Generated_Source\PSoC5/RTOS_queue.c ****         else
 509:Generated_Source\PSoC5/RTOS_queue.c ****         {
 510:Generated_Source\PSoC5/RTOS_queue.c ****             traceCREATE_MUTEX_FAILED();
 511:Generated_Source\PSoC5/RTOS_queue.c ****         }
 512:Generated_Source\PSoC5/RTOS_queue.c ****     }
 513:Generated_Source\PSoC5/RTOS_queue.c **** 
 514:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_MUTEXES */
 515:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 516:Generated_Source\PSoC5/RTOS_queue.c **** 
 517:Generated_Source\PSoC5/RTOS_queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 518:Generated_Source\PSoC5/RTOS_queue.c **** 
 519:Generated_Source\PSoC5/RTOS_queue.c ****     QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 520:Generated_Source\PSoC5/RTOS_queue.c ****     {
 521:Generated_Source\PSoC5/RTOS_queue.c ****         QueueHandle_t xNewQueue;
 522:Generated_Source\PSoC5/RTOS_queue.c ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 523:Generated_Source\PSoC5/RTOS_queue.c **** 
 524:Generated_Source\PSoC5/RTOS_queue.c ****         xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 525:Generated_Source\PSoC5/RTOS_queue.c ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 526:Generated_Source\PSoC5/RTOS_queue.c **** 
 527:Generated_Source\PSoC5/RTOS_queue.c ****         return xNewQueue;
 528:Generated_Source\PSoC5/RTOS_queue.c ****     }
 529:Generated_Source\PSoC5/RTOS_queue.c **** 
 530:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_MUTEXES */
 531:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 532:Generated_Source\PSoC5/RTOS_queue.c **** 
 533:Generated_Source\PSoC5/RTOS_queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 534:Generated_Source\PSoC5/RTOS_queue.c **** 
 535:Generated_Source\PSoC5/RTOS_queue.c ****     QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType,
 536:Generated_Source\PSoC5/RTOS_queue.c ****                                            StaticQueue_t * pxStaticQueue )
 537:Generated_Source\PSoC5/RTOS_queue.c ****     {
 538:Generated_Source\PSoC5/RTOS_queue.c ****         QueueHandle_t xNewQueue;
 539:Generated_Source\PSoC5/RTOS_queue.c ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 540:Generated_Source\PSoC5/RTOS_queue.c **** 
 541:Generated_Source\PSoC5/RTOS_queue.c ****         /* Prevent compiler warnings about unused parameters if
 542:Generated_Source\PSoC5/RTOS_queue.c ****          * configUSE_TRACE_FACILITY does not equal 1. */
 543:Generated_Source\PSoC5/RTOS_queue.c ****         ( void ) ucQueueType;
 544:Generated_Source\PSoC5/RTOS_queue.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 11


 545:Generated_Source\PSoC5/RTOS_queue.c ****         xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQ
 546:Generated_Source\PSoC5/RTOS_queue.c ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 547:Generated_Source\PSoC5/RTOS_queue.c **** 
 548:Generated_Source\PSoC5/RTOS_queue.c ****         return xNewQueue;
 549:Generated_Source\PSoC5/RTOS_queue.c ****     }
 550:Generated_Source\PSoC5/RTOS_queue.c **** 
 551:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_MUTEXES */
 552:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 553:Generated_Source\PSoC5/RTOS_queue.c **** 
 554:Generated_Source\PSoC5/RTOS_queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 555:Generated_Source\PSoC5/RTOS_queue.c **** 
 556:Generated_Source\PSoC5/RTOS_queue.c ****     TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 557:Generated_Source\PSoC5/RTOS_queue.c ****     {
 558:Generated_Source\PSoC5/RTOS_queue.c ****         TaskHandle_t pxReturn;
 559:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 560:Generated_Source\PSoC5/RTOS_queue.c **** 
 561:Generated_Source\PSoC5/RTOS_queue.c ****         /* This function is called by xSemaphoreGetMutexHolder(), and should not
 562:Generated_Source\PSoC5/RTOS_queue.c ****          * be called directly.  Note:  This is a good way of determining if the
 563:Generated_Source\PSoC5/RTOS_queue.c ****          * calling task is the mutex holder, but not a good way of determining the
 564:Generated_Source\PSoC5/RTOS_queue.c ****          * identity of the mutex holder, as the holder may change between the
 565:Generated_Source\PSoC5/RTOS_queue.c ****          * following critical section exiting and the function returning. */
 566:Generated_Source\PSoC5/RTOS_queue.c ****         taskENTER_CRITICAL();
 567:Generated_Source\PSoC5/RTOS_queue.c ****         {
 568:Generated_Source\PSoC5/RTOS_queue.c ****             if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 569:Generated_Source\PSoC5/RTOS_queue.c ****             {
 570:Generated_Source\PSoC5/RTOS_queue.c ****                 pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 571:Generated_Source\PSoC5/RTOS_queue.c ****             }
 572:Generated_Source\PSoC5/RTOS_queue.c ****             else
 573:Generated_Source\PSoC5/RTOS_queue.c ****             {
 574:Generated_Source\PSoC5/RTOS_queue.c ****                 pxReturn = NULL;
 575:Generated_Source\PSoC5/RTOS_queue.c ****             }
 576:Generated_Source\PSoC5/RTOS_queue.c ****         }
 577:Generated_Source\PSoC5/RTOS_queue.c ****         taskEXIT_CRITICAL();
 578:Generated_Source\PSoC5/RTOS_queue.c **** 
 579:Generated_Source\PSoC5/RTOS_queue.c ****         return pxReturn;
 580:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 581:Generated_Source\PSoC5/RTOS_queue.c **** 
 582:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) ) */
 583:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 584:Generated_Source\PSoC5/RTOS_queue.c **** 
 585:Generated_Source\PSoC5/RTOS_queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 586:Generated_Source\PSoC5/RTOS_queue.c **** 
 587:Generated_Source\PSoC5/RTOS_queue.c ****     TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 588:Generated_Source\PSoC5/RTOS_queue.c ****     {
 589:Generated_Source\PSoC5/RTOS_queue.c ****         TaskHandle_t pxReturn;
 590:Generated_Source\PSoC5/RTOS_queue.c **** 
 591:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( xSemaphore );
 592:Generated_Source\PSoC5/RTOS_queue.c **** 
 593:Generated_Source\PSoC5/RTOS_queue.c ****         /* Mutexes cannot be used in interrupt service routines, so the mutex
 594:Generated_Source\PSoC5/RTOS_queue.c ****          * holder should not change in an ISR, and therefore a critical section is
 595:Generated_Source\PSoC5/RTOS_queue.c ****          * not required here. */
 596:Generated_Source\PSoC5/RTOS_queue.c ****         if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 597:Generated_Source\PSoC5/RTOS_queue.c ****         {
 598:Generated_Source\PSoC5/RTOS_queue.c ****             pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 599:Generated_Source\PSoC5/RTOS_queue.c ****         }
 600:Generated_Source\PSoC5/RTOS_queue.c ****         else
 601:Generated_Source\PSoC5/RTOS_queue.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 12


 602:Generated_Source\PSoC5/RTOS_queue.c ****             pxReturn = NULL;
 603:Generated_Source\PSoC5/RTOS_queue.c ****         }
 604:Generated_Source\PSoC5/RTOS_queue.c **** 
 605:Generated_Source\PSoC5/RTOS_queue.c ****         return pxReturn;
 606:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 607:Generated_Source\PSoC5/RTOS_queue.c **** 
 608:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) ) */
 609:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 610:Generated_Source\PSoC5/RTOS_queue.c **** 
 611:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 612:Generated_Source\PSoC5/RTOS_queue.c **** 
 613:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 614:Generated_Source\PSoC5/RTOS_queue.c ****     {
 615:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
 616:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 617:Generated_Source\PSoC5/RTOS_queue.c **** 
 618:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( pxMutex );
 619:Generated_Source\PSoC5/RTOS_queue.c **** 
 620:Generated_Source\PSoC5/RTOS_queue.c ****         /* If this is the task that holds the mutex then xMutexHolder will not
 621:Generated_Source\PSoC5/RTOS_queue.c ****          * change outside of this task.  If this task does not hold the mutex then
 622:Generated_Source\PSoC5/RTOS_queue.c ****          * pxMutexHolder can never coincidentally equal the tasks handle, and as
 623:Generated_Source\PSoC5/RTOS_queue.c ****          * this is the only condition we are interested in it does not matter if
 624:Generated_Source\PSoC5/RTOS_queue.c ****          * pxMutexHolder is accessed simultaneously by another task.  Therefore no
 625:Generated_Source\PSoC5/RTOS_queue.c ****          * mutual exclusion is required to test the pxMutexHolder variable. */
 626:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 627:Generated_Source\PSoC5/RTOS_queue.c ****         {
 628:Generated_Source\PSoC5/RTOS_queue.c ****             traceGIVE_MUTEX_RECURSIVE( pxMutex );
 629:Generated_Source\PSoC5/RTOS_queue.c **** 
 630:Generated_Source\PSoC5/RTOS_queue.c ****             /* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 631:Generated_Source\PSoC5/RTOS_queue.c ****              * the task handle, therefore no underflow check is required.  Also,
 632:Generated_Source\PSoC5/RTOS_queue.c ****              * uxRecursiveCallCount is only modified by the mutex holder, and as
 633:Generated_Source\PSoC5/RTOS_queue.c ****              * there can only be one, no mutual exclusion is required to modify the
 634:Generated_Source\PSoC5/RTOS_queue.c ****              * uxRecursiveCallCount member. */
 635:Generated_Source\PSoC5/RTOS_queue.c ****             ( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 636:Generated_Source\PSoC5/RTOS_queue.c **** 
 637:Generated_Source\PSoC5/RTOS_queue.c ****             /* Has the recursive call count unwound to 0? */
 638:Generated_Source\PSoC5/RTOS_queue.c ****             if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 639:Generated_Source\PSoC5/RTOS_queue.c ****             {
 640:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Return the mutex.  This will automatically unblock any other
 641:Generated_Source\PSoC5/RTOS_queue.c ****                  * task that might be waiting to access the mutex. */
 642:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO
 643:Generated_Source\PSoC5/RTOS_queue.c ****             }
 644:Generated_Source\PSoC5/RTOS_queue.c ****             else
 645:Generated_Source\PSoC5/RTOS_queue.c ****             {
 646:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
 647:Generated_Source\PSoC5/RTOS_queue.c ****             }
 648:Generated_Source\PSoC5/RTOS_queue.c **** 
 649:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
 650:Generated_Source\PSoC5/RTOS_queue.c ****         }
 651:Generated_Source\PSoC5/RTOS_queue.c ****         else
 652:Generated_Source\PSoC5/RTOS_queue.c ****         {
 653:Generated_Source\PSoC5/RTOS_queue.c ****             /* The mutex cannot be given because the calling task is not the
 654:Generated_Source\PSoC5/RTOS_queue.c ****              * holder. */
 655:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFAIL;
 656:Generated_Source\PSoC5/RTOS_queue.c **** 
 657:Generated_Source\PSoC5/RTOS_queue.c ****             traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:Generated_Source\PSoC5/RTOS_queue.c ****         }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 13


 659:Generated_Source\PSoC5/RTOS_queue.c **** 
 660:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
 661:Generated_Source\PSoC5/RTOS_queue.c ****     }
 662:Generated_Source\PSoC5/RTOS_queue.c **** 
 663:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 664:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 665:Generated_Source\PSoC5/RTOS_queue.c **** 
 666:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 667:Generated_Source\PSoC5/RTOS_queue.c **** 
 668:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex,
 669:Generated_Source\PSoC5/RTOS_queue.c ****                                          TickType_t xTicksToWait )
 670:Generated_Source\PSoC5/RTOS_queue.c ****     {
 671:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
 672:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 673:Generated_Source\PSoC5/RTOS_queue.c **** 
 674:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( pxMutex );
 675:Generated_Source\PSoC5/RTOS_queue.c **** 
 676:Generated_Source\PSoC5/RTOS_queue.c ****         /* Comments regarding mutual exclusion as per those within
 677:Generated_Source\PSoC5/RTOS_queue.c ****          * xQueueGiveMutexRecursive(). */
 678:Generated_Source\PSoC5/RTOS_queue.c **** 
 679:Generated_Source\PSoC5/RTOS_queue.c ****         traceTAKE_MUTEX_RECURSIVE( pxMutex );
 680:Generated_Source\PSoC5/RTOS_queue.c **** 
 681:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 682:Generated_Source\PSoC5/RTOS_queue.c ****         {
 683:Generated_Source\PSoC5/RTOS_queue.c ****             ( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 684:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
 685:Generated_Source\PSoC5/RTOS_queue.c ****         }
 686:Generated_Source\PSoC5/RTOS_queue.c ****         else
 687:Generated_Source\PSoC5/RTOS_queue.c ****         {
 688:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 689:Generated_Source\PSoC5/RTOS_queue.c **** 
 690:Generated_Source\PSoC5/RTOS_queue.c ****             /* pdPASS will only be returned if the mutex was successfully
 691:Generated_Source\PSoC5/RTOS_queue.c ****              * obtained.  The calling task may have entered the Blocked state
 692:Generated_Source\PSoC5/RTOS_queue.c ****              * before reaching here. */
 693:Generated_Source\PSoC5/RTOS_queue.c ****             if( xReturn != pdFAIL )
 694:Generated_Source\PSoC5/RTOS_queue.c ****             {
 695:Generated_Source\PSoC5/RTOS_queue.c ****                 ( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 696:Generated_Source\PSoC5/RTOS_queue.c ****             }
 697:Generated_Source\PSoC5/RTOS_queue.c ****             else
 698:Generated_Source\PSoC5/RTOS_queue.c ****             {
 699:Generated_Source\PSoC5/RTOS_queue.c ****                 traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 700:Generated_Source\PSoC5/RTOS_queue.c ****             }
 701:Generated_Source\PSoC5/RTOS_queue.c ****         }
 702:Generated_Source\PSoC5/RTOS_queue.c **** 
 703:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
 704:Generated_Source\PSoC5/RTOS_queue.c ****     }
 705:Generated_Source\PSoC5/RTOS_queue.c **** 
 706:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 707:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 708:Generated_Source\PSoC5/RTOS_queue.c **** 
 709:Generated_Source\PSoC5/RTOS_queue.c **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 710:Generated_Source\PSoC5/RTOS_queue.c **** 
 711:Generated_Source\PSoC5/RTOS_queue.c ****     QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount,
 712:Generated_Source\PSoC5/RTOS_queue.c ****                                                        const UBaseType_t uxInitialCount,
 713:Generated_Source\PSoC5/RTOS_queue.c ****                                                        StaticQueue_t * pxStaticQueue )
 714:Generated_Source\PSoC5/RTOS_queue.c ****     {
 715:Generated_Source\PSoC5/RTOS_queue.c ****         QueueHandle_t xHandle;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 14


 716:Generated_Source\PSoC5/RTOS_queue.c **** 
 717:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( uxMaxCount != 0 );
 718:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( uxInitialCount <= uxMaxCount );
 719:Generated_Source\PSoC5/RTOS_queue.c **** 
 720:Generated_Source\PSoC5/RTOS_queue.c ****         xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, px
 721:Generated_Source\PSoC5/RTOS_queue.c **** 
 722:Generated_Source\PSoC5/RTOS_queue.c ****         if( xHandle != NULL )
 723:Generated_Source\PSoC5/RTOS_queue.c ****         {
 724:Generated_Source\PSoC5/RTOS_queue.c ****             ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 725:Generated_Source\PSoC5/RTOS_queue.c **** 
 726:Generated_Source\PSoC5/RTOS_queue.c ****             traceCREATE_COUNTING_SEMAPHORE();
 727:Generated_Source\PSoC5/RTOS_queue.c ****         }
 728:Generated_Source\PSoC5/RTOS_queue.c ****         else
 729:Generated_Source\PSoC5/RTOS_queue.c ****         {
 730:Generated_Source\PSoC5/RTOS_queue.c ****             traceCREATE_COUNTING_SEMAPHORE_FAILED();
 731:Generated_Source\PSoC5/RTOS_queue.c ****         }
 732:Generated_Source\PSoC5/RTOS_queue.c **** 
 733:Generated_Source\PSoC5/RTOS_queue.c ****         return xHandle;
 734:Generated_Source\PSoC5/RTOS_queue.c ****     }
 735:Generated_Source\PSoC5/RTOS_queue.c **** 
 736:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 737:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 738:Generated_Source\PSoC5/RTOS_queue.c **** 
 739:Generated_Source\PSoC5/RTOS_queue.c **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 740:Generated_Source\PSoC5/RTOS_queue.c **** 
 741:Generated_Source\PSoC5/RTOS_queue.c ****     QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount,
 742:Generated_Source\PSoC5/RTOS_queue.c ****                                                  const UBaseType_t uxInitialCount )
 743:Generated_Source\PSoC5/RTOS_queue.c ****     {
 744:Generated_Source\PSoC5/RTOS_queue.c ****         QueueHandle_t xHandle;
 745:Generated_Source\PSoC5/RTOS_queue.c **** 
 746:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( uxMaxCount != 0 );
 747:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( uxInitialCount <= uxMaxCount );
 748:Generated_Source\PSoC5/RTOS_queue.c **** 
 749:Generated_Source\PSoC5/RTOS_queue.c ****         xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYP
 750:Generated_Source\PSoC5/RTOS_queue.c **** 
 751:Generated_Source\PSoC5/RTOS_queue.c ****         if( xHandle != NULL )
 752:Generated_Source\PSoC5/RTOS_queue.c ****         {
 753:Generated_Source\PSoC5/RTOS_queue.c ****             ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 754:Generated_Source\PSoC5/RTOS_queue.c **** 
 755:Generated_Source\PSoC5/RTOS_queue.c ****             traceCREATE_COUNTING_SEMAPHORE();
 756:Generated_Source\PSoC5/RTOS_queue.c ****         }
 757:Generated_Source\PSoC5/RTOS_queue.c ****         else
 758:Generated_Source\PSoC5/RTOS_queue.c ****         {
 759:Generated_Source\PSoC5/RTOS_queue.c ****             traceCREATE_COUNTING_SEMAPHORE_FAILED();
 760:Generated_Source\PSoC5/RTOS_queue.c ****         }
 761:Generated_Source\PSoC5/RTOS_queue.c **** 
 762:Generated_Source\PSoC5/RTOS_queue.c ****         return xHandle;
 763:Generated_Source\PSoC5/RTOS_queue.c ****     }
 764:Generated_Source\PSoC5/RTOS_queue.c **** 
 765:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 766:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 767:Generated_Source\PSoC5/RTOS_queue.c **** 
 768:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue,
 769:Generated_Source\PSoC5/RTOS_queue.c ****                               const void * const pvItemToQueue,
 770:Generated_Source\PSoC5/RTOS_queue.c ****                               TickType_t xTicksToWait,
 771:Generated_Source\PSoC5/RTOS_queue.c ****                               const BaseType_t xCopyPosition )
 772:Generated_Source\PSoC5/RTOS_queue.c **** {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 15


 773:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 774:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
 775:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
 776:Generated_Source\PSoC5/RTOS_queue.c **** 
 777:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
 778:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 779:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 780:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 781:Generated_Source\PSoC5/RTOS_queue.c ****         {
 782:Generated_Source\PSoC5/RTOS_queue.c ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
 783:Generated_Source\PSoC5/RTOS_queue.c ****         }
 784:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
 785:Generated_Source\PSoC5/RTOS_queue.c **** 
 786:Generated_Source\PSoC5/RTOS_queue.c ****     /*lint -save -e904 This function relaxes the coding standard somewhat to
 787:Generated_Source\PSoC5/RTOS_queue.c ****      * allow return statements within the function itself.  This is done in the
 788:Generated_Source\PSoC5/RTOS_queue.c ****      * interest of execution time efficiency. */
 789:Generated_Source\PSoC5/RTOS_queue.c ****     for( ; ; )
 790:Generated_Source\PSoC5/RTOS_queue.c ****     {
 791:Generated_Source\PSoC5/RTOS_queue.c ****         taskENTER_CRITICAL();
 792:Generated_Source\PSoC5/RTOS_queue.c ****         {
 793:Generated_Source\PSoC5/RTOS_queue.c ****             /* Is there room on the queue now?  The running task must be the
 794:Generated_Source\PSoC5/RTOS_queue.c ****              * highest priority task wanting to access the queue.  If the head item
 795:Generated_Source\PSoC5/RTOS_queue.c ****              * in the queue is to be overwritten then it does not matter if the
 796:Generated_Source\PSoC5/RTOS_queue.c ****              * queue is full. */
 797:Generated_Source\PSoC5/RTOS_queue.c ****             if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERW
 798:Generated_Source\PSoC5/RTOS_queue.c ****             {
 799:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_SEND( pxQueue );
 800:Generated_Source\PSoC5/RTOS_queue.c **** 
 801:Generated_Source\PSoC5/RTOS_queue.c ****                 #if ( configUSE_QUEUE_SETS == 1 )
 802:Generated_Source\PSoC5/RTOS_queue.c ****                     {
 803:Generated_Source\PSoC5/RTOS_queue.c ****                         const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 804:Generated_Source\PSoC5/RTOS_queue.c **** 
 805:Generated_Source\PSoC5/RTOS_queue.c ****                         xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition 
 806:Generated_Source\PSoC5/RTOS_queue.c **** 
 807:Generated_Source\PSoC5/RTOS_queue.c ****                         if( pxQueue->pxQueueSetContainer != NULL )
 808:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 809:Generated_Source\PSoC5/RTOS_queue.c ****                             if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting 
 810:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 811:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* Do not notify the queue set as an existing item
 812:Generated_Source\PSoC5/RTOS_queue.c ****                                  * was overwritten in the queue so the number of items
 813:Generated_Source\PSoC5/RTOS_queue.c ****                                  * in the queue has not changed. */
 814:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
 815:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 816:Generated_Source\PSoC5/RTOS_queue.c ****                             else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 817:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 818:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* The queue is a member of a queue set, and posting
 819:Generated_Source\PSoC5/RTOS_queue.c ****                                  * to the queue set caused a higher priority task to
 820:Generated_Source\PSoC5/RTOS_queue.c ****                                  * unblock. A context switch is required. */
 821:Generated_Source\PSoC5/RTOS_queue.c ****                                 queueYIELD_IF_USING_PREEMPTION();
 822:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 823:Generated_Source\PSoC5/RTOS_queue.c ****                             else
 824:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 825:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
 826:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 827:Generated_Source\PSoC5/RTOS_queue.c ****                         }
 828:Generated_Source\PSoC5/RTOS_queue.c ****                         else
 829:Generated_Source\PSoC5/RTOS_queue.c ****                         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 16


 830:Generated_Source\PSoC5/RTOS_queue.c ****                             /* If there was a task waiting for data to arrive on the
 831:Generated_Source\PSoC5/RTOS_queue.c ****                              * queue then unblock it now. */
 832:Generated_Source\PSoC5/RTOS_queue.c ****                             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALS
 833:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 834:Generated_Source\PSoC5/RTOS_queue.c ****                                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) 
 835:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
 836:Generated_Source\PSoC5/RTOS_queue.c ****                                     /* The unblocked task has a priority higher than
 837:Generated_Source\PSoC5/RTOS_queue.c ****                                      * our own so yield immediately.  Yes it is ok to
 838:Generated_Source\PSoC5/RTOS_queue.c ****                                      * do this from within the critical section - the
 839:Generated_Source\PSoC5/RTOS_queue.c ****                                      * kernel takes care of that. */
 840:Generated_Source\PSoC5/RTOS_queue.c ****                                     queueYIELD_IF_USING_PREEMPTION();
 841:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
 842:Generated_Source\PSoC5/RTOS_queue.c ****                                 else
 843:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
 844:Generated_Source\PSoC5/RTOS_queue.c ****                                     mtCOVERAGE_TEST_MARKER();
 845:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
 846:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 847:Generated_Source\PSoC5/RTOS_queue.c ****                             else if( xYieldRequired != pdFALSE )
 848:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 849:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* This path is a special case that will only get
 850:Generated_Source\PSoC5/RTOS_queue.c ****                                  * executed if the task was holding multiple mutexes
 851:Generated_Source\PSoC5/RTOS_queue.c ****                                  * and the mutexes were given back in an order that is
 852:Generated_Source\PSoC5/RTOS_queue.c ****                                  * different to that in which they were taken. */
 853:Generated_Source\PSoC5/RTOS_queue.c ****                                 queueYIELD_IF_USING_PREEMPTION();
 854:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 855:Generated_Source\PSoC5/RTOS_queue.c ****                             else
 856:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 857:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
 858:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 859:Generated_Source\PSoC5/RTOS_queue.c ****                         }
 860:Generated_Source\PSoC5/RTOS_queue.c ****                     }
 861:Generated_Source\PSoC5/RTOS_queue.c ****                 #else /* configUSE_QUEUE_SETS */
 862:Generated_Source\PSoC5/RTOS_queue.c ****                     {
 863:Generated_Source\PSoC5/RTOS_queue.c ****                         xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition 
 864:Generated_Source\PSoC5/RTOS_queue.c **** 
 865:Generated_Source\PSoC5/RTOS_queue.c ****                         /* If there was a task waiting for data to arrive on the
 866:Generated_Source\PSoC5/RTOS_queue.c ****                          * queue then unblock it now. */
 867:Generated_Source\PSoC5/RTOS_queue.c ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 868:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 869:Generated_Source\PSoC5/RTOS_queue.c ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
 870:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 871:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* The unblocked task has a priority higher than
 872:Generated_Source\PSoC5/RTOS_queue.c ****                                  * our own so yield immediately.  Yes it is ok to do
 873:Generated_Source\PSoC5/RTOS_queue.c ****                                  * this from within the critical section - the kernel
 874:Generated_Source\PSoC5/RTOS_queue.c ****                                  * takes care of that. */
 875:Generated_Source\PSoC5/RTOS_queue.c ****                                 queueYIELD_IF_USING_PREEMPTION();
 876:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 877:Generated_Source\PSoC5/RTOS_queue.c ****                             else
 878:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 879:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
 880:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 881:Generated_Source\PSoC5/RTOS_queue.c ****                         }
 882:Generated_Source\PSoC5/RTOS_queue.c ****                         else if( xYieldRequired != pdFALSE )
 883:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 884:Generated_Source\PSoC5/RTOS_queue.c ****                             /* This path is a special case that will only get
 885:Generated_Source\PSoC5/RTOS_queue.c ****                              * executed if the task was holding multiple mutexes and
 886:Generated_Source\PSoC5/RTOS_queue.c ****                              * the mutexes were given back in an order that is
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 17


 887:Generated_Source\PSoC5/RTOS_queue.c ****                              * different to that in which they were taken. */
 888:Generated_Source\PSoC5/RTOS_queue.c ****                             queueYIELD_IF_USING_PREEMPTION();
 889:Generated_Source\PSoC5/RTOS_queue.c ****                         }
 890:Generated_Source\PSoC5/RTOS_queue.c ****                         else
 891:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 892:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
 893:Generated_Source\PSoC5/RTOS_queue.c ****                         }
 894:Generated_Source\PSoC5/RTOS_queue.c ****                     }
 895:Generated_Source\PSoC5/RTOS_queue.c ****                 #endif /* configUSE_QUEUE_SETS */
 896:Generated_Source\PSoC5/RTOS_queue.c **** 
 897:Generated_Source\PSoC5/RTOS_queue.c ****                 taskEXIT_CRITICAL();
 898:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
 899:Generated_Source\PSoC5/RTOS_queue.c ****             }
 900:Generated_Source\PSoC5/RTOS_queue.c ****             else
 901:Generated_Source\PSoC5/RTOS_queue.c ****             {
 902:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
 903:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 904:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The queue was full and no block time is specified (or
 905:Generated_Source\PSoC5/RTOS_queue.c ****                      * the block time has expired) so leave now. */
 906:Generated_Source\PSoC5/RTOS_queue.c ****                     taskEXIT_CRITICAL();
 907:Generated_Source\PSoC5/RTOS_queue.c **** 
 908:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Return to the original privilege level before exiting
 909:Generated_Source\PSoC5/RTOS_queue.c ****                      * the function. */
 910:Generated_Source\PSoC5/RTOS_queue.c ****                     traceQUEUE_SEND_FAILED( pxQueue );
 911:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_FULL;
 912:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 913:Generated_Source\PSoC5/RTOS_queue.c ****                 else if( xEntryTimeSet == pdFALSE )
 914:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 915:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The queue was full and a block time was specified so
 916:Generated_Source\PSoC5/RTOS_queue.c ****                      * configure the timeout structure. */
 917:Generated_Source\PSoC5/RTOS_queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
 918:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
 919:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 920:Generated_Source\PSoC5/RTOS_queue.c ****                 else
 921:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 922:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Entry time was already set. */
 923:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
 924:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 925:Generated_Source\PSoC5/RTOS_queue.c ****             }
 926:Generated_Source\PSoC5/RTOS_queue.c ****         }
 927:Generated_Source\PSoC5/RTOS_queue.c ****         taskEXIT_CRITICAL();
 928:Generated_Source\PSoC5/RTOS_queue.c **** 
 929:Generated_Source\PSoC5/RTOS_queue.c ****         /* Interrupts and other tasks can send to and receive from the queue
 930:Generated_Source\PSoC5/RTOS_queue.c ****          * now the critical section has been exited. */
 931:Generated_Source\PSoC5/RTOS_queue.c **** 
 932:Generated_Source\PSoC5/RTOS_queue.c ****         vTaskSuspendAll();
 933:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
 934:Generated_Source\PSoC5/RTOS_queue.c **** 
 935:Generated_Source\PSoC5/RTOS_queue.c ****         /* Update the timeout state to see if it has expired yet. */
 936:Generated_Source\PSoC5/RTOS_queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 937:Generated_Source\PSoC5/RTOS_queue.c ****         {
 938:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueFull( pxQueue ) != pdFALSE )
 939:Generated_Source\PSoC5/RTOS_queue.c ****             {
 940:Generated_Source\PSoC5/RTOS_queue.c ****                 traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 941:Generated_Source\PSoC5/RTOS_queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 942:Generated_Source\PSoC5/RTOS_queue.c **** 
 943:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Unlocking the queue means queue events can effect the
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 18


 944:Generated_Source\PSoC5/RTOS_queue.c ****                  * event list.  It is possible that interrupts occurring now
 945:Generated_Source\PSoC5/RTOS_queue.c ****                  * remove this task from the event list again - but as the
 946:Generated_Source\PSoC5/RTOS_queue.c ****                  * scheduler is suspended the task will go onto the pending
 947:Generated_Source\PSoC5/RTOS_queue.c ****                  * ready last instead of the actual ready list. */
 948:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
 949:Generated_Source\PSoC5/RTOS_queue.c **** 
 950:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Resuming the scheduler will move tasks from the pending
 951:Generated_Source\PSoC5/RTOS_queue.c ****                  * ready list into the ready list - so it is feasible that this
 952:Generated_Source\PSoC5/RTOS_queue.c ****                  * task is already in a ready list before it yields - in which
 953:Generated_Source\PSoC5/RTOS_queue.c ****                  * case the yield will not cause a context switch unless there
 954:Generated_Source\PSoC5/RTOS_queue.c ****                  * is also a higher priority task in the pending ready list. */
 955:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTaskResumeAll() == pdFALSE )
 956:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 957:Generated_Source\PSoC5/RTOS_queue.c ****                     portYIELD_WITHIN_API();
 958:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 959:Generated_Source\PSoC5/RTOS_queue.c ****             }
 960:Generated_Source\PSoC5/RTOS_queue.c ****             else
 961:Generated_Source\PSoC5/RTOS_queue.c ****             {
 962:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Try again. */
 963:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
 964:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
 965:Generated_Source\PSoC5/RTOS_queue.c ****             }
 966:Generated_Source\PSoC5/RTOS_queue.c ****         }
 967:Generated_Source\PSoC5/RTOS_queue.c ****         else
 968:Generated_Source\PSoC5/RTOS_queue.c ****         {
 969:Generated_Source\PSoC5/RTOS_queue.c ****             /* The timeout has expired. */
 970:Generated_Source\PSoC5/RTOS_queue.c ****             prvUnlockQueue( pxQueue );
 971:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
 972:Generated_Source\PSoC5/RTOS_queue.c **** 
 973:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_SEND_FAILED( pxQueue );
 974:Generated_Source\PSoC5/RTOS_queue.c ****             return errQUEUE_FULL;
 975:Generated_Source\PSoC5/RTOS_queue.c ****         }
 976:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint -restore */
 977:Generated_Source\PSoC5/RTOS_queue.c **** }
 978:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 979:Generated_Source\PSoC5/RTOS_queue.c **** 
 980:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue,
 981:Generated_Source\PSoC5/RTOS_queue.c ****                                      const void * const pvItemToQueue,
 982:Generated_Source\PSoC5/RTOS_queue.c ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 983:Generated_Source\PSoC5/RTOS_queue.c ****                                      const BaseType_t xCopyPosition )
 984:Generated_Source\PSoC5/RTOS_queue.c **** {
 985:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
 986:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxSavedInterruptStatus;
 987:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
 988:Generated_Source\PSoC5/RTOS_queue.c **** 
 989:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
 990:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 991:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 992:Generated_Source\PSoC5/RTOS_queue.c **** 
 993:Generated_Source\PSoC5/RTOS_queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
 994:Generated_Source\PSoC5/RTOS_queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
 995:Generated_Source\PSoC5/RTOS_queue.c ****      * above the maximum system call priority are kept permanently enabled, even
 996:Generated_Source\PSoC5/RTOS_queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
 997:Generated_Source\PSoC5/RTOS_queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 998:Generated_Source\PSoC5/RTOS_queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 999:Generated_Source\PSoC5/RTOS_queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1000:Generated_Source\PSoC5/RTOS_queue.c ****      * assigned a priority above the configured maximum system call priority.
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 19


1001:Generated_Source\PSoC5/RTOS_queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1002:Generated_Source\PSoC5/RTOS_queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1003:Generated_Source\PSoC5/RTOS_queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1004:Generated_Source\PSoC5/RTOS_queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1005:Generated_Source\PSoC5/RTOS_queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
1006:Generated_Source\PSoC5/RTOS_queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1007:Generated_Source\PSoC5/RTOS_queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1008:Generated_Source\PSoC5/RTOS_queue.c **** 
1009:Generated_Source\PSoC5/RTOS_queue.c ****     /* Similar to xQueueGenericSend, except without blocking if there is no room
1010:Generated_Source\PSoC5/RTOS_queue.c ****      * in the queue.  Also don't directly wake a task that was blocked on a queue
1011:Generated_Source\PSoC5/RTOS_queue.c ****      * read, instead return a flag to say whether a context switch is required or
1012:Generated_Source\PSoC5/RTOS_queue.c ****      * not (i.e. has a task with a higher priority than us been woken by this
1013:Generated_Source\PSoC5/RTOS_queue.c ****      * post). */
1014:Generated_Source\PSoC5/RTOS_queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1015:Generated_Source\PSoC5/RTOS_queue.c ****     {
1016:Generated_Source\PSoC5/RTOS_queue.c ****         if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE
1017:Generated_Source\PSoC5/RTOS_queue.c ****         {
1018:Generated_Source\PSoC5/RTOS_queue.c ****             const int8_t cTxLock = pxQueue->cTxLock;
1019:Generated_Source\PSoC5/RTOS_queue.c ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
1020:Generated_Source\PSoC5/RTOS_queue.c **** 
1021:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_SEND_FROM_ISR( pxQueue );
1022:Generated_Source\PSoC5/RTOS_queue.c **** 
1023:Generated_Source\PSoC5/RTOS_queue.c ****             /* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
1024:Generated_Source\PSoC5/RTOS_queue.c ****              *  semaphore or mutex.  That means prvCopyDataToQueue() cannot result
1025:Generated_Source\PSoC5/RTOS_queue.c ****              *  in a task disinheriting a priority and prvCopyDataToQueue() can be
1026:Generated_Source\PSoC5/RTOS_queue.c ****              *  called here even though the disinherit function does not check if
1027:Generated_Source\PSoC5/RTOS_queue.c ****              *  the scheduler is suspended before accessing the ready lists. */
1028:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
1029:Generated_Source\PSoC5/RTOS_queue.c **** 
1030:Generated_Source\PSoC5/RTOS_queue.c ****             /* The event list is not altered if the queue is locked.  This will
1031:Generated_Source\PSoC5/RTOS_queue.c ****              * be done when the queue is unlocked later. */
1032:Generated_Source\PSoC5/RTOS_queue.c ****             if( cTxLock == queueUNLOCKED )
1033:Generated_Source\PSoC5/RTOS_queue.c ****             {
1034:Generated_Source\PSoC5/RTOS_queue.c ****                 #if ( configUSE_QUEUE_SETS == 1 )
1035:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1036:Generated_Source\PSoC5/RTOS_queue.c ****                         if( pxQueue->pxQueueSetContainer != NULL )
1037:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1038:Generated_Source\PSoC5/RTOS_queue.c ****                             if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting 
1039:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1040:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* Do not notify the queue set as an existing item
1041:Generated_Source\PSoC5/RTOS_queue.c ****                                  * was overwritten in the queue so the number of items
1042:Generated_Source\PSoC5/RTOS_queue.c ****                                  * in the queue has not changed. */
1043:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1044:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1045:Generated_Source\PSoC5/RTOS_queue.c ****                             else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1046:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1047:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* The queue is a member of a queue set, and posting
1048:Generated_Source\PSoC5/RTOS_queue.c ****                                  * to the queue set caused a higher priority task to
1049:Generated_Source\PSoC5/RTOS_queue.c ****                                  * unblock.  A context switch is required. */
1050:Generated_Source\PSoC5/RTOS_queue.c ****                                 if( pxHigherPriorityTaskWoken != NULL )
1051:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1052:Generated_Source\PSoC5/RTOS_queue.c ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1053:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1054:Generated_Source\PSoC5/RTOS_queue.c ****                                 else
1055:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1056:Generated_Source\PSoC5/RTOS_queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1057:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 20


1058:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1059:Generated_Source\PSoC5/RTOS_queue.c ****                             else
1060:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1061:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1062:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1063:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1064:Generated_Source\PSoC5/RTOS_queue.c ****                         else
1065:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1066:Generated_Source\PSoC5/RTOS_queue.c ****                             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALS
1067:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1068:Generated_Source\PSoC5/RTOS_queue.c ****                                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) 
1069:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1070:Generated_Source\PSoC5/RTOS_queue.c ****                                     /* The task waiting has a higher priority so
1071:Generated_Source\PSoC5/RTOS_queue.c ****                                      *  record that a context switch is required. */
1072:Generated_Source\PSoC5/RTOS_queue.c ****                                     if( pxHigherPriorityTaskWoken != NULL )
1073:Generated_Source\PSoC5/RTOS_queue.c ****                                     {
1074:Generated_Source\PSoC5/RTOS_queue.c ****                                         *pxHigherPriorityTaskWoken = pdTRUE;
1075:Generated_Source\PSoC5/RTOS_queue.c ****                                     }
1076:Generated_Source\PSoC5/RTOS_queue.c ****                                     else
1077:Generated_Source\PSoC5/RTOS_queue.c ****                                     {
1078:Generated_Source\PSoC5/RTOS_queue.c ****                                         mtCOVERAGE_TEST_MARKER();
1079:Generated_Source\PSoC5/RTOS_queue.c ****                                     }
1080:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1081:Generated_Source\PSoC5/RTOS_queue.c ****                                 else
1082:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1083:Generated_Source\PSoC5/RTOS_queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1084:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1085:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1086:Generated_Source\PSoC5/RTOS_queue.c ****                             else
1087:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1088:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1089:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1090:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1091:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1092:Generated_Source\PSoC5/RTOS_queue.c ****                 #else /* configUSE_QUEUE_SETS */
1093:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1094:Generated_Source\PSoC5/RTOS_queue.c ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1095:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1096:Generated_Source\PSoC5/RTOS_queue.c ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
1097:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1098:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* The task waiting has a higher priority so record that a
1099:Generated_Source\PSoC5/RTOS_queue.c ****                                  * context switch is required. */
1100:Generated_Source\PSoC5/RTOS_queue.c ****                                 if( pxHigherPriorityTaskWoken != NULL )
1101:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1102:Generated_Source\PSoC5/RTOS_queue.c ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1103:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1104:Generated_Source\PSoC5/RTOS_queue.c ****                                 else
1105:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1106:Generated_Source\PSoC5/RTOS_queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1107:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1108:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1109:Generated_Source\PSoC5/RTOS_queue.c ****                             else
1110:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1111:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1112:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1113:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1114:Generated_Source\PSoC5/RTOS_queue.c ****                         else
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 21


1115:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1116:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
1117:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1118:Generated_Source\PSoC5/RTOS_queue.c **** 
1119:Generated_Source\PSoC5/RTOS_queue.c ****                         /* Not used in this path. */
1120:Generated_Source\PSoC5/RTOS_queue.c ****                         ( void ) uxPreviousMessagesWaiting;
1121:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1122:Generated_Source\PSoC5/RTOS_queue.c ****                 #endif /* configUSE_QUEUE_SETS */
1123:Generated_Source\PSoC5/RTOS_queue.c ****             }
1124:Generated_Source\PSoC5/RTOS_queue.c ****             else
1125:Generated_Source\PSoC5/RTOS_queue.c ****             {
1126:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Increment the lock count so the task that unlocks the queue
1127:Generated_Source\PSoC5/RTOS_queue.c ****                  * knows that data was posted while it was locked. */
1128:Generated_Source\PSoC5/RTOS_queue.c ****                 configASSERT( cTxLock != queueINT8_MAX );
1129:Generated_Source\PSoC5/RTOS_queue.c **** 
1130:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1131:Generated_Source\PSoC5/RTOS_queue.c ****             }
1132:Generated_Source\PSoC5/RTOS_queue.c **** 
1133:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
1134:Generated_Source\PSoC5/RTOS_queue.c ****         }
1135:Generated_Source\PSoC5/RTOS_queue.c ****         else
1136:Generated_Source\PSoC5/RTOS_queue.c ****         {
1137:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1138:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = errQUEUE_FULL;
1139:Generated_Source\PSoC5/RTOS_queue.c ****         }
1140:Generated_Source\PSoC5/RTOS_queue.c ****     }
1141:Generated_Source\PSoC5/RTOS_queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1142:Generated_Source\PSoC5/RTOS_queue.c **** 
1143:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
1144:Generated_Source\PSoC5/RTOS_queue.c **** }
1145:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
1146:Generated_Source\PSoC5/RTOS_queue.c **** 
1147:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue,
1148:Generated_Source\PSoC5/RTOS_queue.c ****                               BaseType_t * const pxHigherPriorityTaskWoken )
1149:Generated_Source\PSoC5/RTOS_queue.c **** {
1150:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
1151:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxSavedInterruptStatus;
1152:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
1153:Generated_Source\PSoC5/RTOS_queue.c **** 
1154:Generated_Source\PSoC5/RTOS_queue.c ****     /* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1155:Generated_Source\PSoC5/RTOS_queue.c ****      * item size is 0.  Don't directly wake a task that was blocked on a queue
1156:Generated_Source\PSoC5/RTOS_queue.c ****      * read, instead return a flag to say whether a context switch is required or
1157:Generated_Source\PSoC5/RTOS_queue.c ****      * not (i.e. has a task with a higher priority than us been woken by this
1158:Generated_Source\PSoC5/RTOS_queue.c ****      * post). */
1159:Generated_Source\PSoC5/RTOS_queue.c **** 
1160:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
1161:Generated_Source\PSoC5/RTOS_queue.c **** 
1162:Generated_Source\PSoC5/RTOS_queue.c ****     /* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1163:Generated_Source\PSoC5/RTOS_queue.c ****      * if the item size is not 0. */
1164:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue->uxItemSize == 0 );
1165:Generated_Source\PSoC5/RTOS_queue.c **** 
1166:Generated_Source\PSoC5/RTOS_queue.c ****     /* Normally a mutex would not be given from an interrupt, especially if
1167:Generated_Source\PSoC5/RTOS_queue.c ****      * there is a mutex holder, as priority inheritance makes no sense for an
1168:Generated_Source\PSoC5/RTOS_queue.c ****      * interrupts, only tasks. */
1169:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMu
1170:Generated_Source\PSoC5/RTOS_queue.c **** 
1171:Generated_Source\PSoC5/RTOS_queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 22


1172:Generated_Source\PSoC5/RTOS_queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1173:Generated_Source\PSoC5/RTOS_queue.c ****      * above the maximum system call priority are kept permanently enabled, even
1174:Generated_Source\PSoC5/RTOS_queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1175:Generated_Source\PSoC5/RTOS_queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1176:Generated_Source\PSoC5/RTOS_queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1177:Generated_Source\PSoC5/RTOS_queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1178:Generated_Source\PSoC5/RTOS_queue.c ****      * assigned a priority above the configured maximum system call priority.
1179:Generated_Source\PSoC5/RTOS_queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1180:Generated_Source\PSoC5/RTOS_queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1181:Generated_Source\PSoC5/RTOS_queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1182:Generated_Source\PSoC5/RTOS_queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1183:Generated_Source\PSoC5/RTOS_queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
1184:Generated_Source\PSoC5/RTOS_queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1185:Generated_Source\PSoC5/RTOS_queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1186:Generated_Source\PSoC5/RTOS_queue.c **** 
1187:Generated_Source\PSoC5/RTOS_queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1188:Generated_Source\PSoC5/RTOS_queue.c ****     {
1189:Generated_Source\PSoC5/RTOS_queue.c ****         const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1190:Generated_Source\PSoC5/RTOS_queue.c **** 
1191:Generated_Source\PSoC5/RTOS_queue.c ****         /* When the queue is used to implement a semaphore no data is ever
1192:Generated_Source\PSoC5/RTOS_queue.c ****          * moved through the queue but it is still valid to see if the queue 'has
1193:Generated_Source\PSoC5/RTOS_queue.c ****          * space'. */
1194:Generated_Source\PSoC5/RTOS_queue.c ****         if( uxMessagesWaiting < pxQueue->uxLength )
1195:Generated_Source\PSoC5/RTOS_queue.c ****         {
1196:Generated_Source\PSoC5/RTOS_queue.c ****             const int8_t cTxLock = pxQueue->cTxLock;
1197:Generated_Source\PSoC5/RTOS_queue.c **** 
1198:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_SEND_FROM_ISR( pxQueue );
1199:Generated_Source\PSoC5/RTOS_queue.c **** 
1200:Generated_Source\PSoC5/RTOS_queue.c ****             /* A task can only have an inherited priority if it is a mutex
1201:Generated_Source\PSoC5/RTOS_queue.c ****              * holder - and if there is a mutex holder then the mutex cannot be
1202:Generated_Source\PSoC5/RTOS_queue.c ****              * given from an ISR.  As this is the ISR version of the function it
1203:Generated_Source\PSoC5/RTOS_queue.c ****              * can be assumed there is no mutex holder and no need to determine if
1204:Generated_Source\PSoC5/RTOS_queue.c ****              * priority disinheritance is needed.  Simply increase the count of
1205:Generated_Source\PSoC5/RTOS_queue.c ****              * messages (semaphores) available. */
1206:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1207:Generated_Source\PSoC5/RTOS_queue.c **** 
1208:Generated_Source\PSoC5/RTOS_queue.c ****             /* The event list is not altered if the queue is locked.  This will
1209:Generated_Source\PSoC5/RTOS_queue.c ****              * be done when the queue is unlocked later. */
1210:Generated_Source\PSoC5/RTOS_queue.c ****             if( cTxLock == queueUNLOCKED )
1211:Generated_Source\PSoC5/RTOS_queue.c ****             {
1212:Generated_Source\PSoC5/RTOS_queue.c ****                 #if ( configUSE_QUEUE_SETS == 1 )
1213:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1214:Generated_Source\PSoC5/RTOS_queue.c ****                         if( pxQueue->pxQueueSetContainer != NULL )
1215:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1216:Generated_Source\PSoC5/RTOS_queue.c ****                             if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1217:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1218:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* The semaphore is a member of a queue set, and
1219:Generated_Source\PSoC5/RTOS_queue.c ****                                  * posting to the queue set caused a higher priority
1220:Generated_Source\PSoC5/RTOS_queue.c ****                                  * task to unblock.  A context switch is required. */
1221:Generated_Source\PSoC5/RTOS_queue.c ****                                 if( pxHigherPriorityTaskWoken != NULL )
1222:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1223:Generated_Source\PSoC5/RTOS_queue.c ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1224:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1225:Generated_Source\PSoC5/RTOS_queue.c ****                                 else
1226:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1227:Generated_Source\PSoC5/RTOS_queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1228:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 23


1229:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1230:Generated_Source\PSoC5/RTOS_queue.c ****                             else
1231:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1232:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1233:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1234:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1235:Generated_Source\PSoC5/RTOS_queue.c ****                         else
1236:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1237:Generated_Source\PSoC5/RTOS_queue.c ****                             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALS
1238:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1239:Generated_Source\PSoC5/RTOS_queue.c ****                                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) 
1240:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1241:Generated_Source\PSoC5/RTOS_queue.c ****                                     /* The task waiting has a higher priority so
1242:Generated_Source\PSoC5/RTOS_queue.c ****                                      *  record that a context switch is required. */
1243:Generated_Source\PSoC5/RTOS_queue.c ****                                     if( pxHigherPriorityTaskWoken != NULL )
1244:Generated_Source\PSoC5/RTOS_queue.c ****                                     {
1245:Generated_Source\PSoC5/RTOS_queue.c ****                                         *pxHigherPriorityTaskWoken = pdTRUE;
1246:Generated_Source\PSoC5/RTOS_queue.c ****                                     }
1247:Generated_Source\PSoC5/RTOS_queue.c ****                                     else
1248:Generated_Source\PSoC5/RTOS_queue.c ****                                     {
1249:Generated_Source\PSoC5/RTOS_queue.c ****                                         mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC5/RTOS_queue.c ****                                     }
1251:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1252:Generated_Source\PSoC5/RTOS_queue.c ****                                 else
1253:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1254:Generated_Source\PSoC5/RTOS_queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1255:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1256:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1257:Generated_Source\PSoC5/RTOS_queue.c ****                             else
1258:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1259:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1260:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1261:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1262:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1263:Generated_Source\PSoC5/RTOS_queue.c ****                 #else /* configUSE_QUEUE_SETS */
1264:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1265:Generated_Source\PSoC5/RTOS_queue.c ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1266:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1267:Generated_Source\PSoC5/RTOS_queue.c ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
1268:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1269:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* The task waiting has a higher priority so record that a
1270:Generated_Source\PSoC5/RTOS_queue.c ****                                  * context switch is required. */
1271:Generated_Source\PSoC5/RTOS_queue.c ****                                 if( pxHigherPriorityTaskWoken != NULL )
1272:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1273:Generated_Source\PSoC5/RTOS_queue.c ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1274:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1275:Generated_Source\PSoC5/RTOS_queue.c ****                                 else
1276:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
1277:Generated_Source\PSoC5/RTOS_queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1278:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
1279:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1280:Generated_Source\PSoC5/RTOS_queue.c ****                             else
1281:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1282:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1283:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1284:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1285:Generated_Source\PSoC5/RTOS_queue.c ****                         else
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 24


1286:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1287:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
1288:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1289:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1290:Generated_Source\PSoC5/RTOS_queue.c ****                 #endif /* configUSE_QUEUE_SETS */
1291:Generated_Source\PSoC5/RTOS_queue.c ****             }
1292:Generated_Source\PSoC5/RTOS_queue.c ****             else
1293:Generated_Source\PSoC5/RTOS_queue.c ****             {
1294:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Increment the lock count so the task that unlocks the queue
1295:Generated_Source\PSoC5/RTOS_queue.c ****                  * knows that data was posted while it was locked. */
1296:Generated_Source\PSoC5/RTOS_queue.c ****                 configASSERT( cTxLock != queueINT8_MAX );
1297:Generated_Source\PSoC5/RTOS_queue.c **** 
1298:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1299:Generated_Source\PSoC5/RTOS_queue.c ****             }
1300:Generated_Source\PSoC5/RTOS_queue.c **** 
1301:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
1302:Generated_Source\PSoC5/RTOS_queue.c ****         }
1303:Generated_Source\PSoC5/RTOS_queue.c ****         else
1304:Generated_Source\PSoC5/RTOS_queue.c ****         {
1305:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1306:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = errQUEUE_FULL;
1307:Generated_Source\PSoC5/RTOS_queue.c ****         }
1308:Generated_Source\PSoC5/RTOS_queue.c ****     }
1309:Generated_Source\PSoC5/RTOS_queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1310:Generated_Source\PSoC5/RTOS_queue.c **** 
1311:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
1312:Generated_Source\PSoC5/RTOS_queue.c **** }
1313:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
1314:Generated_Source\PSoC5/RTOS_queue.c **** 
1315:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue,
1316:Generated_Source\PSoC5/RTOS_queue.c ****                           void * const pvBuffer,
1317:Generated_Source\PSoC5/RTOS_queue.c ****                           TickType_t xTicksToWait )
1318:Generated_Source\PSoC5/RTOS_queue.c **** {
1319:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
1320:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
1321:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
1322:Generated_Source\PSoC5/RTOS_queue.c **** 
1323:Generated_Source\PSoC5/RTOS_queue.c ****     /* Check the pointer is not NULL. */
1324:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( ( pxQueue ) );
1325:Generated_Source\PSoC5/RTOS_queue.c **** 
1326:Generated_Source\PSoC5/RTOS_queue.c ****     /* The buffer into which data is received can only be NULL if the data size
1327:Generated_Source\PSoC5/RTOS_queue.c ****      * is zero (so no data is copied into the buffer). */
1328:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) 
1329:Generated_Source\PSoC5/RTOS_queue.c **** 
1330:Generated_Source\PSoC5/RTOS_queue.c ****     /* Cannot block if the scheduler is suspended. */
1331:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1332:Generated_Source\PSoC5/RTOS_queue.c ****         {
1333:Generated_Source\PSoC5/RTOS_queue.c ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
1334:Generated_Source\PSoC5/RTOS_queue.c ****         }
1335:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
1336:Generated_Source\PSoC5/RTOS_queue.c **** 
1337:Generated_Source\PSoC5/RTOS_queue.c ****     /*lint -save -e904  This function relaxes the coding standard somewhat to
1338:Generated_Source\PSoC5/RTOS_queue.c ****      * allow return statements within the function itself.  This is done in the
1339:Generated_Source\PSoC5/RTOS_queue.c ****      * interest of execution time efficiency. */
1340:Generated_Source\PSoC5/RTOS_queue.c ****     for( ; ; )
1341:Generated_Source\PSoC5/RTOS_queue.c ****     {
1342:Generated_Source\PSoC5/RTOS_queue.c ****         taskENTER_CRITICAL();
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 25


1343:Generated_Source\PSoC5/RTOS_queue.c ****         {
1344:Generated_Source\PSoC5/RTOS_queue.c ****             const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1345:Generated_Source\PSoC5/RTOS_queue.c **** 
1346:Generated_Source\PSoC5/RTOS_queue.c ****             /* Is there data in the queue now?  To be running the calling task
1347:Generated_Source\PSoC5/RTOS_queue.c ****              * must be the highest priority task wanting to access the queue. */
1348:Generated_Source\PSoC5/RTOS_queue.c ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1349:Generated_Source\PSoC5/RTOS_queue.c ****             {
1350:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Data available, remove one item. */
1351:Generated_Source\PSoC5/RTOS_queue.c ****                 prvCopyDataFromQueue( pxQueue, pvBuffer );
1352:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_RECEIVE( pxQueue );
1353:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1354:Generated_Source\PSoC5/RTOS_queue.c **** 
1355:Generated_Source\PSoC5/RTOS_queue.c ****                 /* There is now space in the queue, were any tasks waiting to
1356:Generated_Source\PSoC5/RTOS_queue.c ****                  * post to the queue?  If so, unblock the highest priority waiting
1357:Generated_Source\PSoC5/RTOS_queue.c ****                  * task. */
1358:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1359:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1360:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1361:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1362:Generated_Source\PSoC5/RTOS_queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
1363:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1364:Generated_Source\PSoC5/RTOS_queue.c ****                     else
1365:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1366:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
1367:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1368:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1369:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1370:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1371:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1372:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1373:Generated_Source\PSoC5/RTOS_queue.c **** 
1374:Generated_Source\PSoC5/RTOS_queue.c ****                 taskEXIT_CRITICAL();
1375:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
1376:Generated_Source\PSoC5/RTOS_queue.c ****             }
1377:Generated_Source\PSoC5/RTOS_queue.c ****             else
1378:Generated_Source\PSoC5/RTOS_queue.c ****             {
1379:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
1380:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1381:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The queue was empty and no block time is specified (or
1382:Generated_Source\PSoC5/RTOS_queue.c ****                      * the block time has expired) so leave now. */
1383:Generated_Source\PSoC5/RTOS_queue.c ****                     taskEXIT_CRITICAL();
1384:Generated_Source\PSoC5/RTOS_queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
1385:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_EMPTY;
1386:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1387:Generated_Source\PSoC5/RTOS_queue.c ****                 else if( xEntryTimeSet == pdFALSE )
1388:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1389:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The queue was empty and a block time was specified so
1390:Generated_Source\PSoC5/RTOS_queue.c ****                      * configure the timeout structure. */
1391:Generated_Source\PSoC5/RTOS_queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1392:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
1393:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1394:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1395:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1396:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Entry time was already set. */
1397:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1398:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1399:Generated_Source\PSoC5/RTOS_queue.c ****             }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 26


1400:Generated_Source\PSoC5/RTOS_queue.c ****         }
1401:Generated_Source\PSoC5/RTOS_queue.c ****         taskEXIT_CRITICAL();
1402:Generated_Source\PSoC5/RTOS_queue.c **** 
1403:Generated_Source\PSoC5/RTOS_queue.c ****         /* Interrupts and other tasks can send to and receive from the queue
1404:Generated_Source\PSoC5/RTOS_queue.c ****          * now the critical section has been exited. */
1405:Generated_Source\PSoC5/RTOS_queue.c **** 
1406:Generated_Source\PSoC5/RTOS_queue.c ****         vTaskSuspendAll();
1407:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
1408:Generated_Source\PSoC5/RTOS_queue.c **** 
1409:Generated_Source\PSoC5/RTOS_queue.c ****         /* Update the timeout state to see if it has expired yet. */
1410:Generated_Source\PSoC5/RTOS_queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1411:Generated_Source\PSoC5/RTOS_queue.c ****         {
1412:Generated_Source\PSoC5/RTOS_queue.c ****             /* The timeout has not expired.  If the queue is still empty place
1413:Generated_Source\PSoC5/RTOS_queue.c ****              * the task on the list of tasks waiting to receive from the queue. */
1414:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1415:Generated_Source\PSoC5/RTOS_queue.c ****             {
1416:Generated_Source\PSoC5/RTOS_queue.c ****                 traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1417:Generated_Source\PSoC5/RTOS_queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1418:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
1419:Generated_Source\PSoC5/RTOS_queue.c **** 
1420:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTaskResumeAll() == pdFALSE )
1421:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1422:Generated_Source\PSoC5/RTOS_queue.c ****                     portYIELD_WITHIN_API();
1423:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1424:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1425:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1426:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1427:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1428:Generated_Source\PSoC5/RTOS_queue.c ****             }
1429:Generated_Source\PSoC5/RTOS_queue.c ****             else
1430:Generated_Source\PSoC5/RTOS_queue.c ****             {
1431:Generated_Source\PSoC5/RTOS_queue.c ****                 /* The queue contains data again.  Loop back to try and read the
1432:Generated_Source\PSoC5/RTOS_queue.c ****                  * data. */
1433:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
1434:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
1435:Generated_Source\PSoC5/RTOS_queue.c ****             }
1436:Generated_Source\PSoC5/RTOS_queue.c ****         }
1437:Generated_Source\PSoC5/RTOS_queue.c ****         else
1438:Generated_Source\PSoC5/RTOS_queue.c ****         {
1439:Generated_Source\PSoC5/RTOS_queue.c ****             /* Timed out.  If there is no data in the queue exit, otherwise loop
1440:Generated_Source\PSoC5/RTOS_queue.c ****              * back and attempt to read the data. */
1441:Generated_Source\PSoC5/RTOS_queue.c ****             prvUnlockQueue( pxQueue );
1442:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
1443:Generated_Source\PSoC5/RTOS_queue.c **** 
1444:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1445:Generated_Source\PSoC5/RTOS_queue.c ****             {
1446:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_RECEIVE_FAILED( pxQueue );
1447:Generated_Source\PSoC5/RTOS_queue.c ****                 return errQUEUE_EMPTY;
1448:Generated_Source\PSoC5/RTOS_queue.c ****             }
1449:Generated_Source\PSoC5/RTOS_queue.c ****             else
1450:Generated_Source\PSoC5/RTOS_queue.c ****             {
1451:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
1452:Generated_Source\PSoC5/RTOS_queue.c ****             }
1453:Generated_Source\PSoC5/RTOS_queue.c ****         }
1454:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint -restore */
1455:Generated_Source\PSoC5/RTOS_queue.c **** }
1456:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 27


1457:Generated_Source\PSoC5/RTOS_queue.c **** 
1458:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue,
1459:Generated_Source\PSoC5/RTOS_queue.c ****                                 TickType_t xTicksToWait )
1460:Generated_Source\PSoC5/RTOS_queue.c **** {
1461:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
1462:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
1463:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
1464:Generated_Source\PSoC5/RTOS_queue.c **** 
1465:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( configUSE_MUTEXES == 1 )
1466:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xInheritanceOccurred = pdFALSE;
1467:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
1468:Generated_Source\PSoC5/RTOS_queue.c **** 
1469:Generated_Source\PSoC5/RTOS_queue.c ****     /* Check the queue pointer is not NULL. */
1470:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( ( pxQueue ) );
1471:Generated_Source\PSoC5/RTOS_queue.c **** 
1472:Generated_Source\PSoC5/RTOS_queue.c ****     /* Check this really is a semaphore, in which case the item size will be
1473:Generated_Source\PSoC5/RTOS_queue.c ****      * 0. */
1474:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue->uxItemSize == 0 );
1475:Generated_Source\PSoC5/RTOS_queue.c **** 
1476:Generated_Source\PSoC5/RTOS_queue.c ****     /* Cannot block if the scheduler is suspended. */
1477:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1478:Generated_Source\PSoC5/RTOS_queue.c ****         {
1479:Generated_Source\PSoC5/RTOS_queue.c ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
1480:Generated_Source\PSoC5/RTOS_queue.c ****         }
1481:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
1482:Generated_Source\PSoC5/RTOS_queue.c **** 
1483:Generated_Source\PSoC5/RTOS_queue.c ****     /*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1484:Generated_Source\PSoC5/RTOS_queue.c ****      * statements within the function itself.  This is done in the interest
1485:Generated_Source\PSoC5/RTOS_queue.c ****      * of execution time efficiency. */
1486:Generated_Source\PSoC5/RTOS_queue.c ****     for( ; ; )
1487:Generated_Source\PSoC5/RTOS_queue.c ****     {
1488:Generated_Source\PSoC5/RTOS_queue.c ****         taskENTER_CRITICAL();
1489:Generated_Source\PSoC5/RTOS_queue.c ****         {
1490:Generated_Source\PSoC5/RTOS_queue.c ****             /* Semaphores are queues with an item size of 0, and where the
1491:Generated_Source\PSoC5/RTOS_queue.c ****              * number of messages in the queue is the semaphore's count value. */
1492:Generated_Source\PSoC5/RTOS_queue.c ****             const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1493:Generated_Source\PSoC5/RTOS_queue.c **** 
1494:Generated_Source\PSoC5/RTOS_queue.c ****             /* Is there data in the queue now?  To be running the calling task
1495:Generated_Source\PSoC5/RTOS_queue.c ****              * must be the highest priority task wanting to access the queue. */
1496:Generated_Source\PSoC5/RTOS_queue.c ****             if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1497:Generated_Source\PSoC5/RTOS_queue.c ****             {
1498:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_RECEIVE( pxQueue );
1499:Generated_Source\PSoC5/RTOS_queue.c **** 
1500:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Semaphores are queues with a data size of zero and where the
1501:Generated_Source\PSoC5/RTOS_queue.c ****                  * messages waiting is the semaphore's count.  Reduce the count. */
1502:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1503:Generated_Source\PSoC5/RTOS_queue.c **** 
1504:Generated_Source\PSoC5/RTOS_queue.c ****                 #if ( configUSE_MUTEXES == 1 )
1505:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1506:Generated_Source\PSoC5/RTOS_queue.c ****                         if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1507:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1508:Generated_Source\PSoC5/RTOS_queue.c ****                             /* Record the information required to implement
1509:Generated_Source\PSoC5/RTOS_queue.c ****                              * priority inheritance should it become necessary. */
1510:Generated_Source\PSoC5/RTOS_queue.c ****                             pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1511:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1512:Generated_Source\PSoC5/RTOS_queue.c ****                         else
1513:Generated_Source\PSoC5/RTOS_queue.c ****                         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 28


1514:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
1515:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1516:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1517:Generated_Source\PSoC5/RTOS_queue.c ****                 #endif /* configUSE_MUTEXES */
1518:Generated_Source\PSoC5/RTOS_queue.c **** 
1519:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Check to see if other tasks are blocked waiting to give the
1520:Generated_Source\PSoC5/RTOS_queue.c ****                  * semaphore, and if so, unblock the highest priority such task. */
1521:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1522:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1523:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1524:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1525:Generated_Source\PSoC5/RTOS_queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
1526:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1527:Generated_Source\PSoC5/RTOS_queue.c ****                     else
1528:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1529:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
1530:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1531:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1532:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1533:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1534:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1535:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1536:Generated_Source\PSoC5/RTOS_queue.c **** 
1537:Generated_Source\PSoC5/RTOS_queue.c ****                 taskEXIT_CRITICAL();
1538:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
1539:Generated_Source\PSoC5/RTOS_queue.c ****             }
1540:Generated_Source\PSoC5/RTOS_queue.c ****             else
1541:Generated_Source\PSoC5/RTOS_queue.c ****             {
1542:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
1543:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1544:Generated_Source\PSoC5/RTOS_queue.c ****                     /* For inheritance to have occurred there must have been an
1545:Generated_Source\PSoC5/RTOS_queue.c ****                      * initial timeout, and an adjusted timeout cannot become 0, as
1546:Generated_Source\PSoC5/RTOS_queue.c ****                      * if it were 0 the function would have exited. */
1547:Generated_Source\PSoC5/RTOS_queue.c ****                     #if ( configUSE_MUTEXES == 1 )
1548:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1549:Generated_Source\PSoC5/RTOS_queue.c ****                             configASSERT( xInheritanceOccurred == pdFALSE );
1550:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1551:Generated_Source\PSoC5/RTOS_queue.c ****                     #endif /* configUSE_MUTEXES */
1552:Generated_Source\PSoC5/RTOS_queue.c **** 
1553:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The semaphore count was 0 and no block time is specified
1554:Generated_Source\PSoC5/RTOS_queue.c ****                      * (or the block time has expired) so exit now. */
1555:Generated_Source\PSoC5/RTOS_queue.c ****                     taskEXIT_CRITICAL();
1556:Generated_Source\PSoC5/RTOS_queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
1557:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_EMPTY;
1558:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1559:Generated_Source\PSoC5/RTOS_queue.c ****                 else if( xEntryTimeSet == pdFALSE )
1560:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1561:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The semaphore count was 0 and a block time was specified
1562:Generated_Source\PSoC5/RTOS_queue.c ****                      * so configure the timeout structure ready to block. */
1563:Generated_Source\PSoC5/RTOS_queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1564:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
1565:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1566:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1567:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1568:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Entry time was already set. */
1569:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1570:Generated_Source\PSoC5/RTOS_queue.c ****                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 29


1571:Generated_Source\PSoC5/RTOS_queue.c ****             }
1572:Generated_Source\PSoC5/RTOS_queue.c ****         }
1573:Generated_Source\PSoC5/RTOS_queue.c ****         taskEXIT_CRITICAL();
1574:Generated_Source\PSoC5/RTOS_queue.c **** 
1575:Generated_Source\PSoC5/RTOS_queue.c ****         /* Interrupts and other tasks can give to and take from the semaphore
1576:Generated_Source\PSoC5/RTOS_queue.c ****          * now the critical section has been exited. */
1577:Generated_Source\PSoC5/RTOS_queue.c **** 
1578:Generated_Source\PSoC5/RTOS_queue.c ****         vTaskSuspendAll();
1579:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
1580:Generated_Source\PSoC5/RTOS_queue.c **** 
1581:Generated_Source\PSoC5/RTOS_queue.c ****         /* Update the timeout state to see if it has expired yet. */
1582:Generated_Source\PSoC5/RTOS_queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1583:Generated_Source\PSoC5/RTOS_queue.c ****         {
1584:Generated_Source\PSoC5/RTOS_queue.c ****             /* A block time is specified and not expired.  If the semaphore
1585:Generated_Source\PSoC5/RTOS_queue.c ****              * count is 0 then enter the Blocked state to wait for a semaphore to
1586:Generated_Source\PSoC5/RTOS_queue.c ****              * become available.  As semaphores are implemented with queues the
1587:Generated_Source\PSoC5/RTOS_queue.c ****              * queue being empty is equivalent to the semaphore count being 0. */
1588:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1589:Generated_Source\PSoC5/RTOS_queue.c ****             {
1590:Generated_Source\PSoC5/RTOS_queue.c ****                 traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1591:Generated_Source\PSoC5/RTOS_queue.c **** 
1592:Generated_Source\PSoC5/RTOS_queue.c ****                 #if ( configUSE_MUTEXES == 1 )
1593:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1594:Generated_Source\PSoC5/RTOS_queue.c ****                         if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1595:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1596:Generated_Source\PSoC5/RTOS_queue.c ****                             taskENTER_CRITICAL();
1597:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1598:Generated_Source\PSoC5/RTOS_queue.c ****                                 xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.
1599:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1600:Generated_Source\PSoC5/RTOS_queue.c ****                             taskEXIT_CRITICAL();
1601:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1602:Generated_Source\PSoC5/RTOS_queue.c ****                         else
1603:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1604:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
1605:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1606:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1607:Generated_Source\PSoC5/RTOS_queue.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1608:Generated_Source\PSoC5/RTOS_queue.c **** 
1609:Generated_Source\PSoC5/RTOS_queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1610:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
1611:Generated_Source\PSoC5/RTOS_queue.c **** 
1612:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTaskResumeAll() == pdFALSE )
1613:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1614:Generated_Source\PSoC5/RTOS_queue.c ****                     portYIELD_WITHIN_API();
1615:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1616:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1617:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1618:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1619:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1620:Generated_Source\PSoC5/RTOS_queue.c ****             }
1621:Generated_Source\PSoC5/RTOS_queue.c ****             else
1622:Generated_Source\PSoC5/RTOS_queue.c ****             {
1623:Generated_Source\PSoC5/RTOS_queue.c ****                 /* There was no timeout and the semaphore count was not 0, so
1624:Generated_Source\PSoC5/RTOS_queue.c ****                  * attempt to take the semaphore again. */
1625:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
1626:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
1627:Generated_Source\PSoC5/RTOS_queue.c ****             }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 30


1628:Generated_Source\PSoC5/RTOS_queue.c ****         }
1629:Generated_Source\PSoC5/RTOS_queue.c ****         else
1630:Generated_Source\PSoC5/RTOS_queue.c ****         {
1631:Generated_Source\PSoC5/RTOS_queue.c ****             /* Timed out. */
1632:Generated_Source\PSoC5/RTOS_queue.c ****             prvUnlockQueue( pxQueue );
1633:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
1634:Generated_Source\PSoC5/RTOS_queue.c **** 
1635:Generated_Source\PSoC5/RTOS_queue.c ****             /* If the semaphore count is 0 exit now as the timeout has
1636:Generated_Source\PSoC5/RTOS_queue.c ****              * expired.  Otherwise return to attempt to take the semaphore that is
1637:Generated_Source\PSoC5/RTOS_queue.c ****              * known to be available.  As semaphores are implemented by queues the
1638:Generated_Source\PSoC5/RTOS_queue.c ****              * queue being empty is equivalent to the semaphore count being 0. */
1639:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1640:Generated_Source\PSoC5/RTOS_queue.c ****             {
1641:Generated_Source\PSoC5/RTOS_queue.c ****                 #if ( configUSE_MUTEXES == 1 )
1642:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1643:Generated_Source\PSoC5/RTOS_queue.c ****                         /* xInheritanceOccurred could only have be set if
1644:Generated_Source\PSoC5/RTOS_queue.c ****                          * pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1645:Generated_Source\PSoC5/RTOS_queue.c ****                          * test the mutex type again to check it is actually a mutex. */
1646:Generated_Source\PSoC5/RTOS_queue.c ****                         if( xInheritanceOccurred != pdFALSE )
1647:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1648:Generated_Source\PSoC5/RTOS_queue.c ****                             taskENTER_CRITICAL();
1649:Generated_Source\PSoC5/RTOS_queue.c ****                             {
1650:Generated_Source\PSoC5/RTOS_queue.c ****                                 UBaseType_t uxHighestWaitingPriority;
1651:Generated_Source\PSoC5/RTOS_queue.c **** 
1652:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* This task blocking on the mutex caused another
1653:Generated_Source\PSoC5/RTOS_queue.c ****                                  * task to inherit this task's priority.  Now this task
1654:Generated_Source\PSoC5/RTOS_queue.c ****                                  * has timed out the priority should be disinherited
1655:Generated_Source\PSoC5/RTOS_queue.c ****                                  * again, but only as low as the next highest priority
1656:Generated_Source\PSoC5/RTOS_queue.c ****                                  * task that is waiting for the same mutex. */
1657:Generated_Source\PSoC5/RTOS_queue.c ****                                 uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( px
1658:Generated_Source\PSoC5/RTOS_queue.c ****                                 vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHo
1659:Generated_Source\PSoC5/RTOS_queue.c ****                             }
1660:Generated_Source\PSoC5/RTOS_queue.c ****                             taskEXIT_CRITICAL();
1661:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1662:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1663:Generated_Source\PSoC5/RTOS_queue.c ****                 #endif /* configUSE_MUTEXES */
1664:Generated_Source\PSoC5/RTOS_queue.c **** 
1665:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_RECEIVE_FAILED( pxQueue );
1666:Generated_Source\PSoC5/RTOS_queue.c ****                 return errQUEUE_EMPTY;
1667:Generated_Source\PSoC5/RTOS_queue.c ****             }
1668:Generated_Source\PSoC5/RTOS_queue.c ****             else
1669:Generated_Source\PSoC5/RTOS_queue.c ****             {
1670:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
1671:Generated_Source\PSoC5/RTOS_queue.c ****             }
1672:Generated_Source\PSoC5/RTOS_queue.c ****         }
1673:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint -restore */
1674:Generated_Source\PSoC5/RTOS_queue.c **** }
1675:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
1676:Generated_Source\PSoC5/RTOS_queue.c **** 
1677:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue,
1678:Generated_Source\PSoC5/RTOS_queue.c ****                        void * const pvBuffer,
1679:Generated_Source\PSoC5/RTOS_queue.c ****                        TickType_t xTicksToWait )
1680:Generated_Source\PSoC5/RTOS_queue.c **** {
1681:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
1682:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
1683:Generated_Source\PSoC5/RTOS_queue.c ****     int8_t * pcOriginalReadPosition;
1684:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 31


1685:Generated_Source\PSoC5/RTOS_queue.c **** 
1686:Generated_Source\PSoC5/RTOS_queue.c ****     /* Check the pointer is not NULL. */
1687:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( ( pxQueue ) );
1688:Generated_Source\PSoC5/RTOS_queue.c **** 
1689:Generated_Source\PSoC5/RTOS_queue.c ****     /* The buffer into which data is received can only be NULL if the data size
1690:Generated_Source\PSoC5/RTOS_queue.c ****      * is zero (so no data is copied into the buffer. */
1691:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) 
1692:Generated_Source\PSoC5/RTOS_queue.c **** 
1693:Generated_Source\PSoC5/RTOS_queue.c ****     /* Cannot block if the scheduler is suspended. */
1694:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1695:Generated_Source\PSoC5/RTOS_queue.c ****         {
1696:Generated_Source\PSoC5/RTOS_queue.c ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
1697:Generated_Source\PSoC5/RTOS_queue.c ****         }
1698:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
1699:Generated_Source\PSoC5/RTOS_queue.c **** 
1700:Generated_Source\PSoC5/RTOS_queue.c ****     /*lint -save -e904  This function relaxes the coding standard somewhat to
1701:Generated_Source\PSoC5/RTOS_queue.c ****      * allow return statements within the function itself.  This is done in the
1702:Generated_Source\PSoC5/RTOS_queue.c ****      * interest of execution time efficiency. */
1703:Generated_Source\PSoC5/RTOS_queue.c ****     for( ; ; )
1704:Generated_Source\PSoC5/RTOS_queue.c ****     {
1705:Generated_Source\PSoC5/RTOS_queue.c ****         taskENTER_CRITICAL();
1706:Generated_Source\PSoC5/RTOS_queue.c ****         {
1707:Generated_Source\PSoC5/RTOS_queue.c ****             const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1708:Generated_Source\PSoC5/RTOS_queue.c **** 
1709:Generated_Source\PSoC5/RTOS_queue.c ****             /* Is there data in the queue now?  To be running the calling task
1710:Generated_Source\PSoC5/RTOS_queue.c ****              * must be the highest priority task wanting to access the queue. */
1711:Generated_Source\PSoC5/RTOS_queue.c ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1712:Generated_Source\PSoC5/RTOS_queue.c ****             {
1713:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Remember the read position so it can be reset after the data
1714:Generated_Source\PSoC5/RTOS_queue.c ****                  * is read from the queue as this function is only peeking the
1715:Generated_Source\PSoC5/RTOS_queue.c ****                  * data, not removing it. */
1716:Generated_Source\PSoC5/RTOS_queue.c ****                 pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1717:Generated_Source\PSoC5/RTOS_queue.c **** 
1718:Generated_Source\PSoC5/RTOS_queue.c ****                 prvCopyDataFromQueue( pxQueue, pvBuffer );
1719:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_PEEK( pxQueue );
1720:Generated_Source\PSoC5/RTOS_queue.c **** 
1721:Generated_Source\PSoC5/RTOS_queue.c ****                 /* The data is not being removed, so reset the read pointer. */
1722:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1723:Generated_Source\PSoC5/RTOS_queue.c **** 
1724:Generated_Source\PSoC5/RTOS_queue.c ****                 /* The data is being left in the queue, so see if there are
1725:Generated_Source\PSoC5/RTOS_queue.c ****                  * any other tasks waiting for the data. */
1726:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1727:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1728:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE
1729:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1730:Generated_Source\PSoC5/RTOS_queue.c ****                         /* The task waiting has a higher priority than this task. */
1731:Generated_Source\PSoC5/RTOS_queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
1732:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1733:Generated_Source\PSoC5/RTOS_queue.c ****                     else
1734:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1735:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
1736:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1737:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1738:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1739:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1740:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1741:Generated_Source\PSoC5/RTOS_queue.c ****                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 32


1742:Generated_Source\PSoC5/RTOS_queue.c **** 
1743:Generated_Source\PSoC5/RTOS_queue.c ****                 taskEXIT_CRITICAL();
1744:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
1745:Generated_Source\PSoC5/RTOS_queue.c ****             }
1746:Generated_Source\PSoC5/RTOS_queue.c ****             else
1747:Generated_Source\PSoC5/RTOS_queue.c ****             {
1748:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
1749:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1750:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The queue was empty and no block time is specified (or
1751:Generated_Source\PSoC5/RTOS_queue.c ****                      * the block time has expired) so leave now. */
1752:Generated_Source\PSoC5/RTOS_queue.c ****                     taskEXIT_CRITICAL();
1753:Generated_Source\PSoC5/RTOS_queue.c ****                     traceQUEUE_PEEK_FAILED( pxQueue );
1754:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_EMPTY;
1755:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1756:Generated_Source\PSoC5/RTOS_queue.c ****                 else if( xEntryTimeSet == pdFALSE )
1757:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1758:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The queue was empty and a block time was specified so
1759:Generated_Source\PSoC5/RTOS_queue.c ****                      * configure the timeout structure ready to enter the blocked
1760:Generated_Source\PSoC5/RTOS_queue.c ****                      * state. */
1761:Generated_Source\PSoC5/RTOS_queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1762:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
1763:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1764:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1765:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1766:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Entry time was already set. */
1767:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1768:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1769:Generated_Source\PSoC5/RTOS_queue.c ****             }
1770:Generated_Source\PSoC5/RTOS_queue.c ****         }
1771:Generated_Source\PSoC5/RTOS_queue.c ****         taskEXIT_CRITICAL();
1772:Generated_Source\PSoC5/RTOS_queue.c **** 
1773:Generated_Source\PSoC5/RTOS_queue.c ****         /* Interrupts and other tasks can send to and receive from the queue
1774:Generated_Source\PSoC5/RTOS_queue.c ****          * now the critical section has been exited. */
1775:Generated_Source\PSoC5/RTOS_queue.c **** 
1776:Generated_Source\PSoC5/RTOS_queue.c ****         vTaskSuspendAll();
1777:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
1778:Generated_Source\PSoC5/RTOS_queue.c **** 
1779:Generated_Source\PSoC5/RTOS_queue.c ****         /* Update the timeout state to see if it has expired yet. */
1780:Generated_Source\PSoC5/RTOS_queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1781:Generated_Source\PSoC5/RTOS_queue.c ****         {
1782:Generated_Source\PSoC5/RTOS_queue.c ****             /* Timeout has not expired yet, check to see if there is data in the
1783:Generated_Source\PSoC5/RTOS_queue.c ****             * queue now, and if not enter the Blocked state to wait for data. */
1784:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1785:Generated_Source\PSoC5/RTOS_queue.c ****             {
1786:Generated_Source\PSoC5/RTOS_queue.c ****                 traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1787:Generated_Source\PSoC5/RTOS_queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1788:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
1789:Generated_Source\PSoC5/RTOS_queue.c **** 
1790:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTaskResumeAll() == pdFALSE )
1791:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1792:Generated_Source\PSoC5/RTOS_queue.c ****                     portYIELD_WITHIN_API();
1793:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1794:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1795:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1796:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1797:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1798:Generated_Source\PSoC5/RTOS_queue.c ****             }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 33


1799:Generated_Source\PSoC5/RTOS_queue.c ****             else
1800:Generated_Source\PSoC5/RTOS_queue.c ****             {
1801:Generated_Source\PSoC5/RTOS_queue.c ****                 /* There is data in the queue now, so don't enter the blocked
1802:Generated_Source\PSoC5/RTOS_queue.c ****                  * state, instead return to try and obtain the data. */
1803:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
1804:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
1805:Generated_Source\PSoC5/RTOS_queue.c ****             }
1806:Generated_Source\PSoC5/RTOS_queue.c ****         }
1807:Generated_Source\PSoC5/RTOS_queue.c ****         else
1808:Generated_Source\PSoC5/RTOS_queue.c ****         {
1809:Generated_Source\PSoC5/RTOS_queue.c ****             /* The timeout has expired.  If there is still no data in the queue
1810:Generated_Source\PSoC5/RTOS_queue.c ****              * exit, otherwise go back and try to read the data again. */
1811:Generated_Source\PSoC5/RTOS_queue.c ****             prvUnlockQueue( pxQueue );
1812:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
1813:Generated_Source\PSoC5/RTOS_queue.c **** 
1814:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1815:Generated_Source\PSoC5/RTOS_queue.c ****             {
1816:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_PEEK_FAILED( pxQueue );
1817:Generated_Source\PSoC5/RTOS_queue.c ****                 return errQUEUE_EMPTY;
1818:Generated_Source\PSoC5/RTOS_queue.c ****             }
1819:Generated_Source\PSoC5/RTOS_queue.c ****             else
1820:Generated_Source\PSoC5/RTOS_queue.c ****             {
1821:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC5/RTOS_queue.c ****             }
1823:Generated_Source\PSoC5/RTOS_queue.c ****         }
1824:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint -restore */
1825:Generated_Source\PSoC5/RTOS_queue.c **** }
1826:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
1827:Generated_Source\PSoC5/RTOS_queue.c **** 
1828:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue,
1829:Generated_Source\PSoC5/RTOS_queue.c ****                                  void * const pvBuffer,
1830:Generated_Source\PSoC5/RTOS_queue.c ****                                  BaseType_t * const pxHigherPriorityTaskWoken )
1831:Generated_Source\PSoC5/RTOS_queue.c **** {
1832:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
1833:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxSavedInterruptStatus;
1834:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
1835:Generated_Source\PSoC5/RTOS_queue.c **** 
1836:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
1837:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1838:Generated_Source\PSoC5/RTOS_queue.c **** 
1839:Generated_Source\PSoC5/RTOS_queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1840:Generated_Source\PSoC5/RTOS_queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1841:Generated_Source\PSoC5/RTOS_queue.c ****      * above the maximum system call priority are kept permanently enabled, even
1842:Generated_Source\PSoC5/RTOS_queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1843:Generated_Source\PSoC5/RTOS_queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1844:Generated_Source\PSoC5/RTOS_queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1845:Generated_Source\PSoC5/RTOS_queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1846:Generated_Source\PSoC5/RTOS_queue.c ****      * assigned a priority above the configured maximum system call priority.
1847:Generated_Source\PSoC5/RTOS_queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1848:Generated_Source\PSoC5/RTOS_queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1849:Generated_Source\PSoC5/RTOS_queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1850:Generated_Source\PSoC5/RTOS_queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1851:Generated_Source\PSoC5/RTOS_queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
1852:Generated_Source\PSoC5/RTOS_queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1853:Generated_Source\PSoC5/RTOS_queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1854:Generated_Source\PSoC5/RTOS_queue.c **** 
1855:Generated_Source\PSoC5/RTOS_queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 34


1856:Generated_Source\PSoC5/RTOS_queue.c ****     {
1857:Generated_Source\PSoC5/RTOS_queue.c ****         const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1858:Generated_Source\PSoC5/RTOS_queue.c **** 
1859:Generated_Source\PSoC5/RTOS_queue.c ****         /* Cannot block in an ISR, so check there is data available. */
1860:Generated_Source\PSoC5/RTOS_queue.c ****         if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1861:Generated_Source\PSoC5/RTOS_queue.c ****         {
1862:Generated_Source\PSoC5/RTOS_queue.c ****             const int8_t cRxLock = pxQueue->cRxLock;
1863:Generated_Source\PSoC5/RTOS_queue.c **** 
1864:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1865:Generated_Source\PSoC5/RTOS_queue.c **** 
1866:Generated_Source\PSoC5/RTOS_queue.c ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
1867:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1868:Generated_Source\PSoC5/RTOS_queue.c **** 
1869:Generated_Source\PSoC5/RTOS_queue.c ****             /* If the queue is locked the event list will not be modified.
1870:Generated_Source\PSoC5/RTOS_queue.c ****              * Instead update the lock count so the task that unlocks the queue
1871:Generated_Source\PSoC5/RTOS_queue.c ****              * will know that an ISR has removed data while the queue was
1872:Generated_Source\PSoC5/RTOS_queue.c ****              * locked. */
1873:Generated_Source\PSoC5/RTOS_queue.c ****             if( cRxLock == queueUNLOCKED )
1874:Generated_Source\PSoC5/RTOS_queue.c ****             {
1875:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1876:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1877:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1878:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1879:Generated_Source\PSoC5/RTOS_queue.c ****                         /* The task waiting has a higher priority than us so
1880:Generated_Source\PSoC5/RTOS_queue.c ****                          * force a context switch. */
1881:Generated_Source\PSoC5/RTOS_queue.c ****                         if( pxHigherPriorityTaskWoken != NULL )
1882:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1883:Generated_Source\PSoC5/RTOS_queue.c ****                             *pxHigherPriorityTaskWoken = pdTRUE;
1884:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1885:Generated_Source\PSoC5/RTOS_queue.c ****                         else
1886:Generated_Source\PSoC5/RTOS_queue.c ****                         {
1887:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
1888:Generated_Source\PSoC5/RTOS_queue.c ****                         }
1889:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1890:Generated_Source\PSoC5/RTOS_queue.c ****                     else
1891:Generated_Source\PSoC5/RTOS_queue.c ****                     {
1892:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
1893:Generated_Source\PSoC5/RTOS_queue.c ****                     }
1894:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1895:Generated_Source\PSoC5/RTOS_queue.c ****                 else
1896:Generated_Source\PSoC5/RTOS_queue.c ****                 {
1897:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
1898:Generated_Source\PSoC5/RTOS_queue.c ****                 }
1899:Generated_Source\PSoC5/RTOS_queue.c ****             }
1900:Generated_Source\PSoC5/RTOS_queue.c ****             else
1901:Generated_Source\PSoC5/RTOS_queue.c ****             {
1902:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Increment the lock count so the task that unlocks the queue
1903:Generated_Source\PSoC5/RTOS_queue.c ****                  * knows that data was removed while it was locked. */
1904:Generated_Source\PSoC5/RTOS_queue.c ****                 configASSERT( cRxLock != queueINT8_MAX );
1905:Generated_Source\PSoC5/RTOS_queue.c **** 
1906:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1907:Generated_Source\PSoC5/RTOS_queue.c ****             }
1908:Generated_Source\PSoC5/RTOS_queue.c **** 
1909:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
1910:Generated_Source\PSoC5/RTOS_queue.c ****         }
1911:Generated_Source\PSoC5/RTOS_queue.c ****         else
1912:Generated_Source\PSoC5/RTOS_queue.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 35


1913:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFAIL;
1914:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1915:Generated_Source\PSoC5/RTOS_queue.c ****         }
1916:Generated_Source\PSoC5/RTOS_queue.c ****     }
1917:Generated_Source\PSoC5/RTOS_queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1918:Generated_Source\PSoC5/RTOS_queue.c **** 
1919:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
1920:Generated_Source\PSoC5/RTOS_queue.c **** }
1921:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
1922:Generated_Source\PSoC5/RTOS_queue.c **** 
1923:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,
1924:Generated_Source\PSoC5/RTOS_queue.c ****                               void * const pvBuffer )
1925:Generated_Source\PSoC5/RTOS_queue.c **** {
1926:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
1927:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxSavedInterruptStatus;
1928:Generated_Source\PSoC5/RTOS_queue.c ****     int8_t * pcOriginalReadPosition;
1929:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
1930:Generated_Source\PSoC5/RTOS_queue.c **** 
1931:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
1932:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1933:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1934:Generated_Source\PSoC5/RTOS_queue.c **** 
1935:Generated_Source\PSoC5/RTOS_queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1936:Generated_Source\PSoC5/RTOS_queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1937:Generated_Source\PSoC5/RTOS_queue.c ****      * above the maximum system call priority are kept permanently enabled, even
1938:Generated_Source\PSoC5/RTOS_queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1939:Generated_Source\PSoC5/RTOS_queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1940:Generated_Source\PSoC5/RTOS_queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1941:Generated_Source\PSoC5/RTOS_queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1942:Generated_Source\PSoC5/RTOS_queue.c ****      * assigned a priority above the configured maximum system call priority.
1943:Generated_Source\PSoC5/RTOS_queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1944:Generated_Source\PSoC5/RTOS_queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1945:Generated_Source\PSoC5/RTOS_queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1946:Generated_Source\PSoC5/RTOS_queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1947:Generated_Source\PSoC5/RTOS_queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
1948:Generated_Source\PSoC5/RTOS_queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1949:Generated_Source\PSoC5/RTOS_queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1950:Generated_Source\PSoC5/RTOS_queue.c **** 
1951:Generated_Source\PSoC5/RTOS_queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1952:Generated_Source\PSoC5/RTOS_queue.c ****     {
1953:Generated_Source\PSoC5/RTOS_queue.c ****         /* Cannot block in an ISR, so check there is data available. */
1954:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1955:Generated_Source\PSoC5/RTOS_queue.c ****         {
1956:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_PEEK_FROM_ISR( pxQueue );
1957:Generated_Source\PSoC5/RTOS_queue.c **** 
1958:Generated_Source\PSoC5/RTOS_queue.c ****             /* Remember the read position so it can be reset as nothing is
1959:Generated_Source\PSoC5/RTOS_queue.c ****              * actually being removed from the queue. */
1960:Generated_Source\PSoC5/RTOS_queue.c ****             pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1961:Generated_Source\PSoC5/RTOS_queue.c ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
1962:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1963:Generated_Source\PSoC5/RTOS_queue.c **** 
1964:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
1965:Generated_Source\PSoC5/RTOS_queue.c ****         }
1966:Generated_Source\PSoC5/RTOS_queue.c ****         else
1967:Generated_Source\PSoC5/RTOS_queue.c ****         {
1968:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFAIL;
1969:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 36


1970:Generated_Source\PSoC5/RTOS_queue.c ****         }
1971:Generated_Source\PSoC5/RTOS_queue.c ****     }
1972:Generated_Source\PSoC5/RTOS_queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1973:Generated_Source\PSoC5/RTOS_queue.c **** 
1974:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
1975:Generated_Source\PSoC5/RTOS_queue.c **** }
1976:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
1977:Generated_Source\PSoC5/RTOS_queue.c **** 
1978:Generated_Source\PSoC5/RTOS_queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1979:Generated_Source\PSoC5/RTOS_queue.c **** {
1980:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxReturn;
1981:Generated_Source\PSoC5/RTOS_queue.c **** 
1982:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( xQueue );
1983:Generated_Source\PSoC5/RTOS_queue.c **** 
1984:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();
1985:Generated_Source\PSoC5/RTOS_queue.c ****     {
1986:Generated_Source\PSoC5/RTOS_queue.c ****         uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1987:Generated_Source\PSoC5/RTOS_queue.c ****     }
1988:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL();
1989:Generated_Source\PSoC5/RTOS_queue.c **** 
1990:Generated_Source\PSoC5/RTOS_queue.c ****     return uxReturn;
1991:Generated_Source\PSoC5/RTOS_queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1992:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
1993:Generated_Source\PSoC5/RTOS_queue.c **** 
1994:Generated_Source\PSoC5/RTOS_queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1995:Generated_Source\PSoC5/RTOS_queue.c **** {
1996:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxReturn;
1997:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
1998:Generated_Source\PSoC5/RTOS_queue.c **** 
1999:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
2000:Generated_Source\PSoC5/RTOS_queue.c **** 
2001:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();
2002:Generated_Source\PSoC5/RTOS_queue.c ****     {
2003:Generated_Source\PSoC5/RTOS_queue.c ****         uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
2004:Generated_Source\PSoC5/RTOS_queue.c ****     }
2005:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL();
2006:Generated_Source\PSoC5/RTOS_queue.c **** 
2007:Generated_Source\PSoC5/RTOS_queue.c ****     return uxReturn;
2008:Generated_Source\PSoC5/RTOS_queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
2009:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2010:Generated_Source\PSoC5/RTOS_queue.c **** 
2011:Generated_Source\PSoC5/RTOS_queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
2012:Generated_Source\PSoC5/RTOS_queue.c **** {
2013:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxReturn;
2014:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
2015:Generated_Source\PSoC5/RTOS_queue.c **** 
2016:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
2017:Generated_Source\PSoC5/RTOS_queue.c ****     uxReturn = pxQueue->uxMessagesWaiting;
2018:Generated_Source\PSoC5/RTOS_queue.c **** 
2019:Generated_Source\PSoC5/RTOS_queue.c ****     return uxReturn;
2020:Generated_Source\PSoC5/RTOS_queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
2021:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2022:Generated_Source\PSoC5/RTOS_queue.c **** 
2023:Generated_Source\PSoC5/RTOS_queue.c **** void vQueueDelete( QueueHandle_t xQueue )
2024:Generated_Source\PSoC5/RTOS_queue.c **** {
2025:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
2026:Generated_Source\PSoC5/RTOS_queue.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 37


2027:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
2028:Generated_Source\PSoC5/RTOS_queue.c ****     traceQUEUE_DELETE( pxQueue );
2029:Generated_Source\PSoC5/RTOS_queue.c **** 
2030:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( configQUEUE_REGISTRY_SIZE > 0 )
2031:Generated_Source\PSoC5/RTOS_queue.c ****         {
2032:Generated_Source\PSoC5/RTOS_queue.c ****             vQueueUnregisterQueue( pxQueue );
2033:Generated_Source\PSoC5/RTOS_queue.c ****         }
2034:Generated_Source\PSoC5/RTOS_queue.c ****     #endif
2035:Generated_Source\PSoC5/RTOS_queue.c **** 
2036:Generated_Source\PSoC5/RTOS_queue.c ****     #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
2037:Generated_Source\PSoC5/RTOS_queue.c ****         {
2038:Generated_Source\PSoC5/RTOS_queue.c ****             /* The queue can only have been allocated dynamically - free it
2039:Generated_Source\PSoC5/RTOS_queue.c ****              * again. */
2040:Generated_Source\PSoC5/RTOS_queue.c ****             vPortFree( pxQueue );
2041:Generated_Source\PSoC5/RTOS_queue.c ****         }
2042:Generated_Source\PSoC5/RTOS_queue.c ****     #elif ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
2043:Generated_Source\PSoC5/RTOS_queue.c ****         {
2044:Generated_Source\PSoC5/RTOS_queue.c ****             /* The queue could have been allocated statically or dynamically, so
2045:Generated_Source\PSoC5/RTOS_queue.c ****              * check before attempting to free the memory. */
2046:Generated_Source\PSoC5/RTOS_queue.c ****             if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
2047:Generated_Source\PSoC5/RTOS_queue.c ****             {
2048:Generated_Source\PSoC5/RTOS_queue.c ****                 vPortFree( pxQueue );
2049:Generated_Source\PSoC5/RTOS_queue.c ****             }
2050:Generated_Source\PSoC5/RTOS_queue.c ****             else
2051:Generated_Source\PSoC5/RTOS_queue.c ****             {
2052:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2053:Generated_Source\PSoC5/RTOS_queue.c ****             }
2054:Generated_Source\PSoC5/RTOS_queue.c ****         }
2055:Generated_Source\PSoC5/RTOS_queue.c ****     #else /* if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION ==
2056:Generated_Source\PSoC5/RTOS_queue.c ****         {
2057:Generated_Source\PSoC5/RTOS_queue.c ****             /* The queue must have been statically allocated, so is not going to be
2058:Generated_Source\PSoC5/RTOS_queue.c ****              * deleted.  Avoid compiler warnings about the unused parameter. */
2059:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) pxQueue;
2060:Generated_Source\PSoC5/RTOS_queue.c ****         }
2061:Generated_Source\PSoC5/RTOS_queue.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2062:Generated_Source\PSoC5/RTOS_queue.c **** }
2063:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2064:Generated_Source\PSoC5/RTOS_queue.c **** 
2065:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2066:Generated_Source\PSoC5/RTOS_queue.c **** 
2067:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2068:Generated_Source\PSoC5/RTOS_queue.c ****     {
2069:Generated_Source\PSoC5/RTOS_queue.c ****         return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2070:Generated_Source\PSoC5/RTOS_queue.c ****     }
2071:Generated_Source\PSoC5/RTOS_queue.c **** 
2072:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_TRACE_FACILITY */
2073:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2074:Generated_Source\PSoC5/RTOS_queue.c **** 
2075:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2076:Generated_Source\PSoC5/RTOS_queue.c **** 
2077:Generated_Source\PSoC5/RTOS_queue.c ****     void vQueueSetQueueNumber( QueueHandle_t xQueue,
2078:Generated_Source\PSoC5/RTOS_queue.c ****                                UBaseType_t uxQueueNumber )
2079:Generated_Source\PSoC5/RTOS_queue.c ****     {
2080:Generated_Source\PSoC5/RTOS_queue.c ****         ( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2081:Generated_Source\PSoC5/RTOS_queue.c ****     }
2082:Generated_Source\PSoC5/RTOS_queue.c **** 
2083:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_TRACE_FACILITY */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 38


2084:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2085:Generated_Source\PSoC5/RTOS_queue.c **** 
2086:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2087:Generated_Source\PSoC5/RTOS_queue.c **** 
2088:Generated_Source\PSoC5/RTOS_queue.c ****     uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2089:Generated_Source\PSoC5/RTOS_queue.c ****     {
2090:Generated_Source\PSoC5/RTOS_queue.c ****         return ( ( Queue_t * ) xQueue )->ucQueueType;
2091:Generated_Source\PSoC5/RTOS_queue.c ****     }
2092:Generated_Source\PSoC5/RTOS_queue.c **** 
2093:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_TRACE_FACILITY */
2094:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2095:Generated_Source\PSoC5/RTOS_queue.c **** 
2096:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_MUTEXES == 1 )
2097:Generated_Source\PSoC5/RTOS_queue.c **** 
2098:Generated_Source\PSoC5/RTOS_queue.c ****     static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2099:Generated_Source\PSoC5/RTOS_queue.c ****     {
2100:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t uxHighestPriorityOfWaitingTasks;
2101:Generated_Source\PSoC5/RTOS_queue.c **** 
2102:Generated_Source\PSoC5/RTOS_queue.c ****         /* If a task waiting for a mutex causes the mutex holder to inherit a
2103:Generated_Source\PSoC5/RTOS_queue.c ****          * priority, but the waiting task times out, then the holder should
2104:Generated_Source\PSoC5/RTOS_queue.c ****          * disinherit the priority - but only down to the highest priority of any
2105:Generated_Source\PSoC5/RTOS_queue.c ****          * other tasks that are waiting for the same mutex.  For this purpose,
2106:Generated_Source\PSoC5/RTOS_queue.c ****          * return the priority of the highest priority task that is waiting for the
2107:Generated_Source\PSoC5/RTOS_queue.c ****          * mutex. */
2108:Generated_Source\PSoC5/RTOS_queue.c ****         if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
2109:Generated_Source\PSoC5/RTOS_queue.c ****         {
2110:Generated_Source\PSoC5/RTOS_queue.c ****             uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t 
2111:Generated_Source\PSoC5/RTOS_queue.c ****         }
2112:Generated_Source\PSoC5/RTOS_queue.c ****         else
2113:Generated_Source\PSoC5/RTOS_queue.c ****         {
2114:Generated_Source\PSoC5/RTOS_queue.c ****             uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2115:Generated_Source\PSoC5/RTOS_queue.c ****         }
2116:Generated_Source\PSoC5/RTOS_queue.c **** 
2117:Generated_Source\PSoC5/RTOS_queue.c ****         return uxHighestPriorityOfWaitingTasks;
2118:Generated_Source\PSoC5/RTOS_queue.c ****     }
2119:Generated_Source\PSoC5/RTOS_queue.c **** 
2120:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_MUTEXES */
2121:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2122:Generated_Source\PSoC5/RTOS_queue.c **** 
2123:Generated_Source\PSoC5/RTOS_queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
2124:Generated_Source\PSoC5/RTOS_queue.c ****                                       const void * pvItemToQueue,
2125:Generated_Source\PSoC5/RTOS_queue.c ****                                       const BaseType_t xPosition )
2126:Generated_Source\PSoC5/RTOS_queue.c **** {
2127:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn = pdFALSE;
2128:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxMessagesWaiting;
2129:Generated_Source\PSoC5/RTOS_queue.c **** 
2130:Generated_Source\PSoC5/RTOS_queue.c ****     /* This function is called from a critical section. */
2131:Generated_Source\PSoC5/RTOS_queue.c **** 
2132:Generated_Source\PSoC5/RTOS_queue.c ****     uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2133:Generated_Source\PSoC5/RTOS_queue.c **** 
2134:Generated_Source\PSoC5/RTOS_queue.c ****     if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2135:Generated_Source\PSoC5/RTOS_queue.c ****     {
2136:Generated_Source\PSoC5/RTOS_queue.c ****         #if ( configUSE_MUTEXES == 1 )
2137:Generated_Source\PSoC5/RTOS_queue.c ****             {
2138:Generated_Source\PSoC5/RTOS_queue.c ****                 if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2139:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2140:Generated_Source\PSoC5/RTOS_queue.c ****                     /* The mutex is no longer being held. */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 39


2141:Generated_Source\PSoC5/RTOS_queue.c ****                     xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2142:Generated_Source\PSoC5/RTOS_queue.c ****                     pxQueue->u.xSemaphore.xMutexHolder = NULL;
2143:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2144:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2145:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2146:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2147:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2148:Generated_Source\PSoC5/RTOS_queue.c ****             }
2149:Generated_Source\PSoC5/RTOS_queue.c ****         #endif /* configUSE_MUTEXES */
2150:Generated_Source\PSoC5/RTOS_queue.c ****     }
2151:Generated_Source\PSoC5/RTOS_queue.c ****     else if( xPosition == queueSEND_TO_BACK )
2152:Generated_Source\PSoC5/RTOS_queue.c ****     {
2153:Generated_Source\PSoC5/RTOS_queue.c ****         ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSi
2154:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
2155:Generated_Source\PSoC5/RTOS_queue.c **** 
2156:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                       
2157:Generated_Source\PSoC5/RTOS_queue.c ****         {
2158:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->pcWriteTo = pxQueue->pcHead;
2159:Generated_Source\PSoC5/RTOS_queue.c ****         }
2160:Generated_Source\PSoC5/RTOS_queue.c ****         else
2161:Generated_Source\PSoC5/RTOS_queue.c ****         {
2162:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
2163:Generated_Source\PSoC5/RTOS_queue.c ****         }
2164:Generated_Source\PSoC5/RTOS_queue.c ****     }
2165:Generated_Source\PSoC5/RTOS_queue.c ****     else
2166:Generated_Source\PSoC5/RTOS_queue.c ****     {
2167:Generated_Source\PSoC5/RTOS_queue.c ****         ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue
2168:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2169:Generated_Source\PSoC5/RTOS_queue.c **** 
2170:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified
2171:Generated_Source\PSoC5/RTOS_queue.c ****         {
2172:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2173:Generated_Source\PSoC5/RTOS_queue.c ****         }
2174:Generated_Source\PSoC5/RTOS_queue.c ****         else
2175:Generated_Source\PSoC5/RTOS_queue.c ****         {
2176:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC5/RTOS_queue.c ****         }
2178:Generated_Source\PSoC5/RTOS_queue.c **** 
2179:Generated_Source\PSoC5/RTOS_queue.c ****         if( xPosition == queueOVERWRITE )
2180:Generated_Source\PSoC5/RTOS_queue.c ****         {
2181:Generated_Source\PSoC5/RTOS_queue.c ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2182:Generated_Source\PSoC5/RTOS_queue.c ****             {
2183:Generated_Source\PSoC5/RTOS_queue.c ****                 /* An item is not being added but overwritten, so subtract
2184:Generated_Source\PSoC5/RTOS_queue.c ****                  * one from the recorded number of items in the queue so when
2185:Generated_Source\PSoC5/RTOS_queue.c ****                  * one is added again below the number of recorded items remains
2186:Generated_Source\PSoC5/RTOS_queue.c ****                  * correct. */
2187:Generated_Source\PSoC5/RTOS_queue.c ****                 --uxMessagesWaiting;
2188:Generated_Source\PSoC5/RTOS_queue.c ****             }
2189:Generated_Source\PSoC5/RTOS_queue.c ****             else
2190:Generated_Source\PSoC5/RTOS_queue.c ****             {
2191:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2192:Generated_Source\PSoC5/RTOS_queue.c ****             }
2193:Generated_Source\PSoC5/RTOS_queue.c ****         }
2194:Generated_Source\PSoC5/RTOS_queue.c ****         else
2195:Generated_Source\PSoC5/RTOS_queue.c ****         {
2196:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
2197:Generated_Source\PSoC5/RTOS_queue.c ****         }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 40


2198:Generated_Source\PSoC5/RTOS_queue.c ****     }
2199:Generated_Source\PSoC5/RTOS_queue.c **** 
2200:Generated_Source\PSoC5/RTOS_queue.c ****     pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2201:Generated_Source\PSoC5/RTOS_queue.c **** 
2202:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
2203:Generated_Source\PSoC5/RTOS_queue.c **** }
2204:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2205:Generated_Source\PSoC5/RTOS_queue.c **** 
2206:Generated_Source\PSoC5/RTOS_queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue,
2207:Generated_Source\PSoC5/RTOS_queue.c ****                                   void * const pvBuffer )
2208:Generated_Source\PSoC5/RTOS_queue.c **** {
2209:Generated_Source\PSoC5/RTOS_queue.c ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2210:Generated_Source\PSoC5/RTOS_queue.c ****     {
2211:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithm
2212:Generated_Source\PSoC5/RTOS_queue.c **** 
2213:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception
2214:Generated_Source\PSoC5/RTOS_queue.c ****         {
2215:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2216:Generated_Source\PSoC5/RTOS_queue.c ****         }
2217:Generated_Source\PSoC5/RTOS_queue.c ****         else
2218:Generated_Source\PSoC5/RTOS_queue.c ****         {
2219:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
2220:Generated_Source\PSoC5/RTOS_queue.c ****         }
2221:Generated_Source\PSoC5/RTOS_queue.c **** 
2222:Generated_Source\PSoC5/RTOS_queue.c ****         ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) p
2223:Generated_Source\PSoC5/RTOS_queue.c ****     }
2224:Generated_Source\PSoC5/RTOS_queue.c **** }
2225:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2226:Generated_Source\PSoC5/RTOS_queue.c **** 
2227:Generated_Source\PSoC5/RTOS_queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2228:Generated_Source\PSoC5/RTOS_queue.c **** {
2229:Generated_Source\PSoC5/RTOS_queue.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2230:Generated_Source\PSoC5/RTOS_queue.c **** 
2231:Generated_Source\PSoC5/RTOS_queue.c ****     /* The lock counts contains the number of extra data items placed or
2232:Generated_Source\PSoC5/RTOS_queue.c ****      * removed from the queue while the queue was locked.  When a queue is
2233:Generated_Source\PSoC5/RTOS_queue.c ****      * locked items can be added or removed, but the event lists cannot be
2234:Generated_Source\PSoC5/RTOS_queue.c ****      * updated. */
2235:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();
2236:Generated_Source\PSoC5/RTOS_queue.c ****     {
2237:Generated_Source\PSoC5/RTOS_queue.c ****         int8_t cTxLock = pxQueue->cTxLock;
2238:Generated_Source\PSoC5/RTOS_queue.c **** 
2239:Generated_Source\PSoC5/RTOS_queue.c ****         /* See if data was added to the queue while it was locked. */
2240:Generated_Source\PSoC5/RTOS_queue.c ****         while( cTxLock > queueLOCKED_UNMODIFIED )
2241:Generated_Source\PSoC5/RTOS_queue.c ****         {
2242:Generated_Source\PSoC5/RTOS_queue.c ****             /* Data was posted while the queue was locked.  Are any tasks
2243:Generated_Source\PSoC5/RTOS_queue.c ****              * blocked waiting for data to become available? */
2244:Generated_Source\PSoC5/RTOS_queue.c ****             #if ( configUSE_QUEUE_SETS == 1 )
2245:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2246:Generated_Source\PSoC5/RTOS_queue.c ****                     if( pxQueue->pxQueueSetContainer != NULL )
2247:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2248:Generated_Source\PSoC5/RTOS_queue.c ****                         if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2249:Generated_Source\PSoC5/RTOS_queue.c ****                         {
2250:Generated_Source\PSoC5/RTOS_queue.c ****                             /* The queue is a member of a queue set, and posting to
2251:Generated_Source\PSoC5/RTOS_queue.c ****                              * the queue set caused a higher priority task to unblock.
2252:Generated_Source\PSoC5/RTOS_queue.c ****                              * A context switch is required. */
2253:Generated_Source\PSoC5/RTOS_queue.c ****                             vTaskMissedYield();
2254:Generated_Source\PSoC5/RTOS_queue.c ****                         }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 41


2255:Generated_Source\PSoC5/RTOS_queue.c ****                         else
2256:Generated_Source\PSoC5/RTOS_queue.c ****                         {
2257:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
2258:Generated_Source\PSoC5/RTOS_queue.c ****                         }
2259:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2260:Generated_Source\PSoC5/RTOS_queue.c ****                     else
2261:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2262:Generated_Source\PSoC5/RTOS_queue.c ****                         /* Tasks that are removed from the event list will get
2263:Generated_Source\PSoC5/RTOS_queue.c ****                          * added to the pending ready list as the scheduler is still
2264:Generated_Source\PSoC5/RTOS_queue.c ****                          * suspended. */
2265:Generated_Source\PSoC5/RTOS_queue.c ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2266:Generated_Source\PSoC5/RTOS_queue.c ****                         {
2267:Generated_Source\PSoC5/RTOS_queue.c ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
2268:Generated_Source\PSoC5/RTOS_queue.c ****                             {
2269:Generated_Source\PSoC5/RTOS_queue.c ****                                 /* The task waiting has a higher priority so record that a
2270:Generated_Source\PSoC5/RTOS_queue.c ****                                  * context switch is required. */
2271:Generated_Source\PSoC5/RTOS_queue.c ****                                 vTaskMissedYield();
2272:Generated_Source\PSoC5/RTOS_queue.c ****                             }
2273:Generated_Source\PSoC5/RTOS_queue.c ****                             else
2274:Generated_Source\PSoC5/RTOS_queue.c ****                             {
2275:Generated_Source\PSoC5/RTOS_queue.c ****                                 mtCOVERAGE_TEST_MARKER();
2276:Generated_Source\PSoC5/RTOS_queue.c ****                             }
2277:Generated_Source\PSoC5/RTOS_queue.c ****                         }
2278:Generated_Source\PSoC5/RTOS_queue.c ****                         else
2279:Generated_Source\PSoC5/RTOS_queue.c ****                         {
2280:Generated_Source\PSoC5/RTOS_queue.c ****                             break;
2281:Generated_Source\PSoC5/RTOS_queue.c ****                         }
2282:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2283:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2284:Generated_Source\PSoC5/RTOS_queue.c ****             #else /* configUSE_QUEUE_SETS */
2285:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2286:Generated_Source\PSoC5/RTOS_queue.c ****                     /* Tasks that are removed from the event list will get added to
2287:Generated_Source\PSoC5/RTOS_queue.c ****                      * the pending ready list as the scheduler is still suspended. */
2288:Generated_Source\PSoC5/RTOS_queue.c ****                     if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2289:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2290:Generated_Source\PSoC5/RTOS_queue.c ****                         if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdF
2291:Generated_Source\PSoC5/RTOS_queue.c ****                         {
2292:Generated_Source\PSoC5/RTOS_queue.c ****                             /* The task waiting has a higher priority so record that
2293:Generated_Source\PSoC5/RTOS_queue.c ****                              * a context switch is required. */
2294:Generated_Source\PSoC5/RTOS_queue.c ****                             vTaskMissedYield();
2295:Generated_Source\PSoC5/RTOS_queue.c ****                         }
2296:Generated_Source\PSoC5/RTOS_queue.c ****                         else
2297:Generated_Source\PSoC5/RTOS_queue.c ****                         {
2298:Generated_Source\PSoC5/RTOS_queue.c ****                             mtCOVERAGE_TEST_MARKER();
2299:Generated_Source\PSoC5/RTOS_queue.c ****                         }
2300:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2301:Generated_Source\PSoC5/RTOS_queue.c ****                     else
2302:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2303:Generated_Source\PSoC5/RTOS_queue.c ****                         break;
2304:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2305:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2306:Generated_Source\PSoC5/RTOS_queue.c ****             #endif /* configUSE_QUEUE_SETS */
2307:Generated_Source\PSoC5/RTOS_queue.c **** 
2308:Generated_Source\PSoC5/RTOS_queue.c ****             --cTxLock;
2309:Generated_Source\PSoC5/RTOS_queue.c ****         }
2310:Generated_Source\PSoC5/RTOS_queue.c **** 
2311:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->cTxLock = queueUNLOCKED;
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 42


2312:Generated_Source\PSoC5/RTOS_queue.c ****     }
2313:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL();
2314:Generated_Source\PSoC5/RTOS_queue.c **** 
2315:Generated_Source\PSoC5/RTOS_queue.c ****     /* Do the same for the Rx lock. */
2316:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();
2317:Generated_Source\PSoC5/RTOS_queue.c ****     {
2318:Generated_Source\PSoC5/RTOS_queue.c ****         int8_t cRxLock = pxQueue->cRxLock;
2319:Generated_Source\PSoC5/RTOS_queue.c **** 
2320:Generated_Source\PSoC5/RTOS_queue.c ****         while( cRxLock > queueLOCKED_UNMODIFIED )
2321:Generated_Source\PSoC5/RTOS_queue.c ****         {
2322:Generated_Source\PSoC5/RTOS_queue.c ****             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2323:Generated_Source\PSoC5/RTOS_queue.c ****             {
2324:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2325:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2326:Generated_Source\PSoC5/RTOS_queue.c ****                     vTaskMissedYield();
2327:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2328:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2329:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2330:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2331:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2332:Generated_Source\PSoC5/RTOS_queue.c **** 
2333:Generated_Source\PSoC5/RTOS_queue.c ****                 --cRxLock;
2334:Generated_Source\PSoC5/RTOS_queue.c ****             }
2335:Generated_Source\PSoC5/RTOS_queue.c ****             else
2336:Generated_Source\PSoC5/RTOS_queue.c ****             {
2337:Generated_Source\PSoC5/RTOS_queue.c ****                 break;
2338:Generated_Source\PSoC5/RTOS_queue.c ****             }
2339:Generated_Source\PSoC5/RTOS_queue.c ****         }
2340:Generated_Source\PSoC5/RTOS_queue.c **** 
2341:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->cRxLock = queueUNLOCKED;
2342:Generated_Source\PSoC5/RTOS_queue.c ****     }
2343:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL();
2344:Generated_Source\PSoC5/RTOS_queue.c **** }
2345:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2346:Generated_Source\PSoC5/RTOS_queue.c **** 
2347:Generated_Source\PSoC5/RTOS_queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
2348:Generated_Source\PSoC5/RTOS_queue.c **** {
2349:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
2350:Generated_Source\PSoC5/RTOS_queue.c **** 
2351:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();
2352:Generated_Source\PSoC5/RTOS_queue.c ****     {
2353:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2354:Generated_Source\PSoC5/RTOS_queue.c ****         {
2355:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdTRUE;
2356:Generated_Source\PSoC5/RTOS_queue.c ****         }
2357:Generated_Source\PSoC5/RTOS_queue.c ****         else
2358:Generated_Source\PSoC5/RTOS_queue.c ****         {
2359:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFALSE;
2360:Generated_Source\PSoC5/RTOS_queue.c ****         }
2361:Generated_Source\PSoC5/RTOS_queue.c ****     }
2362:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL();
2363:Generated_Source\PSoC5/RTOS_queue.c **** 
2364:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
2365:Generated_Source\PSoC5/RTOS_queue.c **** }
2366:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2367:Generated_Source\PSoC5/RTOS_queue.c **** 
2368:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 43


2369:Generated_Source\PSoC5/RTOS_queue.c **** {
2370:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
2371:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
2372:Generated_Source\PSoC5/RTOS_queue.c **** 
2373:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
2374:Generated_Source\PSoC5/RTOS_queue.c **** 
2375:Generated_Source\PSoC5/RTOS_queue.c ****     if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2376:Generated_Source\PSoC5/RTOS_queue.c ****     {
2377:Generated_Source\PSoC5/RTOS_queue.c ****         xReturn = pdTRUE;
2378:Generated_Source\PSoC5/RTOS_queue.c ****     }
2379:Generated_Source\PSoC5/RTOS_queue.c ****     else
2380:Generated_Source\PSoC5/RTOS_queue.c ****     {
2381:Generated_Source\PSoC5/RTOS_queue.c ****         xReturn = pdFALSE;
2382:Generated_Source\PSoC5/RTOS_queue.c ****     }
2383:Generated_Source\PSoC5/RTOS_queue.c **** 
2384:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
2385:Generated_Source\PSoC5/RTOS_queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2386:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2387:Generated_Source\PSoC5/RTOS_queue.c **** 
2388:Generated_Source\PSoC5/RTOS_queue.c **** static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
2389:Generated_Source\PSoC5/RTOS_queue.c **** {
  27              		.loc 1 2389 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 0446     		mov	r4, r0
2390:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
2391:Generated_Source\PSoC5/RTOS_queue.c **** 
2392:Generated_Source\PSoC5/RTOS_queue.c ****     taskENTER_CRITICAL();
  37              		.loc 1 2392 0
  38 0004 FFF7FEFF 		bl	vPortEnterCritical
  39              	.LVL1:
2393:Generated_Source\PSoC5/RTOS_queue.c ****     {
2394:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  40              		.loc 1 2394 0
  41 0008 A26B     		ldr	r2, [r4, #56]
  42 000a E36B     		ldr	r3, [r4, #60]
  43 000c 9A42     		cmp	r2, r3
  44 000e 01D1     		bne	.L3
2395:Generated_Source\PSoC5/RTOS_queue.c ****         {
2396:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdTRUE;
  45              		.loc 1 2396 0
  46 0010 0124     		movs	r4, #1
  47              	.LVL2:
  48 0012 00E0     		b	.L2
  49              	.LVL3:
  50              	.L3:
2397:Generated_Source\PSoC5/RTOS_queue.c ****         }
2398:Generated_Source\PSoC5/RTOS_queue.c ****         else
2399:Generated_Source\PSoC5/RTOS_queue.c ****         {
2400:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFALSE;
  51              		.loc 1 2400 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 44


  52 0014 0024     		movs	r4, #0
  53              	.LVL4:
  54              	.L2:
2401:Generated_Source\PSoC5/RTOS_queue.c ****         }
2402:Generated_Source\PSoC5/RTOS_queue.c ****     }
2403:Generated_Source\PSoC5/RTOS_queue.c ****     taskEXIT_CRITICAL();
  55              		.loc 1 2403 0
  56 0016 FFF7FEFF 		bl	vPortExitCritical
  57              	.LVL5:
2404:Generated_Source\PSoC5/RTOS_queue.c **** 
2405:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
2406:Generated_Source\PSoC5/RTOS_queue.c **** }
  58              		.loc 1 2406 0
  59 001a 2046     		mov	r0, r4
  60 001c 10BD     		pop	{r4, pc}
  61              		.cfi_endproc
  62              	.LFE87:
  63              		.size	prvIsQueueFull, .-prvIsQueueFull
  64 001e 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
  65              		.align	2
  66              		.thumb
  67              		.thumb_func
  68              		.type	prvIsQueueEmpty, %function
  69              	prvIsQueueEmpty:
  70              	.LFB85:
2348:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
  71              		.loc 1 2348 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              	.LVL6:
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
  80 0002 0446     		mov	r4, r0
2351:Generated_Source\PSoC5/RTOS_queue.c ****     {
  81              		.loc 1 2351 0
  82 0004 FFF7FEFF 		bl	vPortEnterCritical
  83              	.LVL7:
2353:Generated_Source\PSoC5/RTOS_queue.c ****         {
  84              		.loc 1 2353 0
  85 0008 A36B     		ldr	r3, [r4, #56]
  86 000a 0BB9     		cbnz	r3, .L7
2355:Generated_Source\PSoC5/RTOS_queue.c ****         }
  87              		.loc 1 2355 0
  88 000c 0124     		movs	r4, #1
  89              	.LVL8:
  90 000e 00E0     		b	.L6
  91              	.LVL9:
  92              	.L7:
2359:Generated_Source\PSoC5/RTOS_queue.c ****         }
  93              		.loc 1 2359 0
  94 0010 0024     		movs	r4, #0
  95              	.LVL10:
  96              	.L6:
2362:Generated_Source\PSoC5/RTOS_queue.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 45


  97              		.loc 1 2362 0
  98 0012 FFF7FEFF 		bl	vPortExitCritical
  99              	.LVL11:
2365:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 100              		.loc 1 2365 0
 101 0016 2046     		mov	r0, r4
 102 0018 10BD     		pop	{r4, pc}
 103              		.cfi_endproc
 104              	.LFE85:
 105              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 106 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 107              		.align	2
 108              		.thumb
 109              		.thumb_func
 110              		.type	prvCopyDataToQueue, %function
 111              	prvCopyDataToQueue:
 112              	.LFB82:
2126:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn = pdFALSE;
 113              		.loc 1 2126 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              	.LVL12:
 118 0000 70B5     		push	{r4, r5, r6, lr}
 119              		.cfi_def_cfa_offset 16
 120              		.cfi_offset 4, -16
 121              		.cfi_offset 5, -12
 122              		.cfi_offset 6, -8
 123              		.cfi_offset 14, -4
 124 0002 0446     		mov	r4, r0
 125 0004 1646     		mov	r6, r2
 126              	.LVL13:
2132:Generated_Source\PSoC5/RTOS_queue.c **** 
 127              		.loc 1 2132 0
 128 0006 856B     		ldr	r5, [r0, #56]
 129              	.LVL14:
2134:Generated_Source\PSoC5/RTOS_queue.c ****     {
 130              		.loc 1 2134 0
 131 0008 026C     		ldr	r2, [r0, #64]
 132              	.LVL15:
 133 000a FAB1     		cbz	r2, .L10
2151:Generated_Source\PSoC5/RTOS_queue.c ****     {
 134              		.loc 1 2151 0
 135 000c 66B9     		cbnz	r6, .L11
2153:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
 136              		.loc 1 2153 0
 137 000e 4068     		ldr	r0, [r0, #4]
 138              	.LVL16:
 139 0010 FFF7FEFF 		bl	memcpy
 140              	.LVL17:
2154:Generated_Source\PSoC5/RTOS_queue.c **** 
 141              		.loc 1 2154 0
 142 0014 6268     		ldr	r2, [r4, #4]
 143 0016 236C     		ldr	r3, [r4, #64]
 144 0018 1344     		add	r3, r3, r2
 145 001a 6360     		str	r3, [r4, #4]
2156:Generated_Source\PSoC5/RTOS_queue.c ****         {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 46


 146              		.loc 1 2156 0
 147 001c A268     		ldr	r2, [r4, #8]
 148 001e 9342     		cmp	r3, r2
 149 0020 14D3     		bcc	.L10
2158:Generated_Source\PSoC5/RTOS_queue.c ****         }
 150              		.loc 1 2158 0
 151 0022 2368     		ldr	r3, [r4]
 152 0024 6360     		str	r3, [r4, #4]
 153 0026 11E0     		b	.L10
 154              	.LVL18:
 155              	.L11:
2167:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 156              		.loc 1 2167 0
 157 0028 C068     		ldr	r0, [r0, #12]
 158              	.LVL19:
 159 002a FFF7FEFF 		bl	memcpy
 160              	.LVL20:
2168:Generated_Source\PSoC5/RTOS_queue.c **** 
 161              		.loc 1 2168 0
 162 002e 236C     		ldr	r3, [r4, #64]
 163 0030 5B42     		negs	r3, r3
 164 0032 E268     		ldr	r2, [r4, #12]
 165 0034 1A44     		add	r2, r2, r3
 166 0036 E260     		str	r2, [r4, #12]
2170:Generated_Source\PSoC5/RTOS_queue.c ****         {
 167              		.loc 1 2170 0
 168 0038 2168     		ldr	r1, [r4]
 169 003a 8A42     		cmp	r2, r1
 170 003c 02D2     		bcs	.L12
2172:Generated_Source\PSoC5/RTOS_queue.c ****         }
 171              		.loc 1 2172 0
 172 003e A268     		ldr	r2, [r4, #8]
 173 0040 1344     		add	r3, r3, r2
 174 0042 E360     		str	r3, [r4, #12]
 175              	.L12:
2179:Generated_Source\PSoC5/RTOS_queue.c ****         {
 176              		.loc 1 2179 0
 177 0044 022E     		cmp	r6, #2
 178 0046 01D1     		bne	.L10
2181:Generated_Source\PSoC5/RTOS_queue.c ****             {
 179              		.loc 1 2181 0
 180 0048 05B1     		cbz	r5, .L10
2187:Generated_Source\PSoC5/RTOS_queue.c ****             }
 181              		.loc 1 2187 0
 182 004a 013D     		subs	r5, r5, #1
 183              	.LVL21:
 184              	.L10:
2200:Generated_Source\PSoC5/RTOS_queue.c **** 
 185              		.loc 1 2200 0
 186 004c 0135     		adds	r5, r5, #1
 187              	.LVL22:
 188 004e A563     		str	r5, [r4, #56]
2203:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 189              		.loc 1 2203 0
 190 0050 0020     		movs	r0, #0
 191 0052 70BD     		pop	{r4, r5, r6, pc}
 192              		.cfi_endproc
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 47


 193              	.LFE82:
 194              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 195              		.section	.text.prvNotifyQueueSetContainer,"ax",%progbits
 196              		.align	2
 197              		.thumb
 198              		.thumb_func
 199              		.type	prvNotifyQueueSetContainer, %function
 200              	prvNotifyQueueSetContainer:
 201              	.LFB98:
2407:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2408:Generated_Source\PSoC5/RTOS_queue.c **** 
2409:Generated_Source\PSoC5/RTOS_queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2410:Generated_Source\PSoC5/RTOS_queue.c **** {
2411:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
2412:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
2413:Generated_Source\PSoC5/RTOS_queue.c **** 
2414:Generated_Source\PSoC5/RTOS_queue.c ****     configASSERT( pxQueue );
2415:Generated_Source\PSoC5/RTOS_queue.c **** 
2416:Generated_Source\PSoC5/RTOS_queue.c ****     if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
2417:Generated_Source\PSoC5/RTOS_queue.c ****     {
2418:Generated_Source\PSoC5/RTOS_queue.c ****         xReturn = pdTRUE;
2419:Generated_Source\PSoC5/RTOS_queue.c ****     }
2420:Generated_Source\PSoC5/RTOS_queue.c ****     else
2421:Generated_Source\PSoC5/RTOS_queue.c ****     {
2422:Generated_Source\PSoC5/RTOS_queue.c ****         xReturn = pdFALSE;
2423:Generated_Source\PSoC5/RTOS_queue.c ****     }
2424:Generated_Source\PSoC5/RTOS_queue.c **** 
2425:Generated_Source\PSoC5/RTOS_queue.c ****     return xReturn;
2426:Generated_Source\PSoC5/RTOS_queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2427:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2428:Generated_Source\PSoC5/RTOS_queue.c **** 
2429:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2430:Generated_Source\PSoC5/RTOS_queue.c **** 
2431:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueCRSend( QueueHandle_t xQueue,
2432:Generated_Source\PSoC5/RTOS_queue.c ****                              const void * pvItemToQueue,
2433:Generated_Source\PSoC5/RTOS_queue.c ****                              TickType_t xTicksToWait )
2434:Generated_Source\PSoC5/RTOS_queue.c ****     {
2435:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
2436:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxQueue = xQueue;
2437:Generated_Source\PSoC5/RTOS_queue.c **** 
2438:Generated_Source\PSoC5/RTOS_queue.c ****         /* If the queue is already full we may have to block.  A critical section
2439:Generated_Source\PSoC5/RTOS_queue.c ****          * is required to prevent an interrupt removing something from the queue
2440:Generated_Source\PSoC5/RTOS_queue.c ****          * between the check to see if the queue is full and blocking on the queue. */
2441:Generated_Source\PSoC5/RTOS_queue.c ****         portDISABLE_INTERRUPTS();
2442:Generated_Source\PSoC5/RTOS_queue.c ****         {
2443:Generated_Source\PSoC5/RTOS_queue.c ****             if( prvIsQueueFull( pxQueue ) != pdFALSE )
2444:Generated_Source\PSoC5/RTOS_queue.c ****             {
2445:Generated_Source\PSoC5/RTOS_queue.c ****                 /* The queue is full - do we want to block or just leave without
2446:Generated_Source\PSoC5/RTOS_queue.c ****                  * posting? */
2447:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
2448:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2449:Generated_Source\PSoC5/RTOS_queue.c ****                     /* As this is called from a coroutine we cannot block directly, but
2450:Generated_Source\PSoC5/RTOS_queue.c ****                      * return indicating that we need to block. */
2451:Generated_Source\PSoC5/RTOS_queue.c ****                     vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2452:Generated_Source\PSoC5/RTOS_queue.c ****                     portENABLE_INTERRUPTS();
2453:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_BLOCKED;
2454:Generated_Source\PSoC5/RTOS_queue.c ****                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 48


2455:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2456:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2457:Generated_Source\PSoC5/RTOS_queue.c ****                     portENABLE_INTERRUPTS();
2458:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_FULL;
2459:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2460:Generated_Source\PSoC5/RTOS_queue.c ****             }
2461:Generated_Source\PSoC5/RTOS_queue.c ****         }
2462:Generated_Source\PSoC5/RTOS_queue.c ****         portENABLE_INTERRUPTS();
2463:Generated_Source\PSoC5/RTOS_queue.c **** 
2464:Generated_Source\PSoC5/RTOS_queue.c ****         portDISABLE_INTERRUPTS();
2465:Generated_Source\PSoC5/RTOS_queue.c ****         {
2466:Generated_Source\PSoC5/RTOS_queue.c ****             if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2467:Generated_Source\PSoC5/RTOS_queue.c ****             {
2468:Generated_Source\PSoC5/RTOS_queue.c ****                 /* There is room in the queue, copy the data into the queue. */
2469:Generated_Source\PSoC5/RTOS_queue.c ****                 prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2470:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = pdPASS;
2471:Generated_Source\PSoC5/RTOS_queue.c **** 
2472:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Were any co-routines waiting for data to become available? */
2473:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2474:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2475:Generated_Source\PSoC5/RTOS_queue.c ****                     /* In this instance the co-routine could be placed directly
2476:Generated_Source\PSoC5/RTOS_queue.c ****                      * into the ready list as we are within a critical section.
2477:Generated_Source\PSoC5/RTOS_queue.c ****                      * Instead the same pending ready list mechanism is used as if
2478:Generated_Source\PSoC5/RTOS_queue.c ****                      * the event were caused from within an interrupt. */
2479:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pd
2480:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2481:Generated_Source\PSoC5/RTOS_queue.c ****                         /* The co-routine waiting has a higher priority so record
2482:Generated_Source\PSoC5/RTOS_queue.c ****                          * that a yield might be appropriate. */
2483:Generated_Source\PSoC5/RTOS_queue.c ****                         xReturn = errQUEUE_YIELD;
2484:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2485:Generated_Source\PSoC5/RTOS_queue.c ****                     else
2486:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2487:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
2488:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2489:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2490:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2491:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2492:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2493:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2494:Generated_Source\PSoC5/RTOS_queue.c ****             }
2495:Generated_Source\PSoC5/RTOS_queue.c ****             else
2496:Generated_Source\PSoC5/RTOS_queue.c ****             {
2497:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = errQUEUE_FULL;
2498:Generated_Source\PSoC5/RTOS_queue.c ****             }
2499:Generated_Source\PSoC5/RTOS_queue.c ****         }
2500:Generated_Source\PSoC5/RTOS_queue.c ****         portENABLE_INTERRUPTS();
2501:Generated_Source\PSoC5/RTOS_queue.c **** 
2502:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
2503:Generated_Source\PSoC5/RTOS_queue.c ****     }
2504:Generated_Source\PSoC5/RTOS_queue.c **** 
2505:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_CO_ROUTINES */
2506:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2507:Generated_Source\PSoC5/RTOS_queue.c **** 
2508:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2509:Generated_Source\PSoC5/RTOS_queue.c **** 
2510:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueCRReceive( QueueHandle_t xQueue,
2511:Generated_Source\PSoC5/RTOS_queue.c ****                                 void * pvBuffer,
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 49


2512:Generated_Source\PSoC5/RTOS_queue.c ****                                 TickType_t xTicksToWait )
2513:Generated_Source\PSoC5/RTOS_queue.c ****     {
2514:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
2515:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxQueue = xQueue;
2516:Generated_Source\PSoC5/RTOS_queue.c **** 
2517:Generated_Source\PSoC5/RTOS_queue.c ****         /* If the queue is already empty we may have to block.  A critical section
2518:Generated_Source\PSoC5/RTOS_queue.c ****          * is required to prevent an interrupt adding something to the queue
2519:Generated_Source\PSoC5/RTOS_queue.c ****          * between the check to see if the queue is empty and blocking on the queue. */
2520:Generated_Source\PSoC5/RTOS_queue.c ****         portDISABLE_INTERRUPTS();
2521:Generated_Source\PSoC5/RTOS_queue.c ****         {
2522:Generated_Source\PSoC5/RTOS_queue.c ****             if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2523:Generated_Source\PSoC5/RTOS_queue.c ****             {
2524:Generated_Source\PSoC5/RTOS_queue.c ****                 /* There are no messages in the queue, do we want to block or just
2525:Generated_Source\PSoC5/RTOS_queue.c ****                  * leave with nothing? */
2526:Generated_Source\PSoC5/RTOS_queue.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
2527:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2528:Generated_Source\PSoC5/RTOS_queue.c ****                     /* As this is a co-routine we cannot block directly, but return
2529:Generated_Source\PSoC5/RTOS_queue.c ****                      * indicating that we need to block. */
2530:Generated_Source\PSoC5/RTOS_queue.c ****                     vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) 
2531:Generated_Source\PSoC5/RTOS_queue.c ****                     portENABLE_INTERRUPTS();
2532:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_BLOCKED;
2533:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2534:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2535:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2536:Generated_Source\PSoC5/RTOS_queue.c ****                     portENABLE_INTERRUPTS();
2537:Generated_Source\PSoC5/RTOS_queue.c ****                     return errQUEUE_FULL;
2538:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2539:Generated_Source\PSoC5/RTOS_queue.c ****             }
2540:Generated_Source\PSoC5/RTOS_queue.c ****             else
2541:Generated_Source\PSoC5/RTOS_queue.c ****             {
2542:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2543:Generated_Source\PSoC5/RTOS_queue.c ****             }
2544:Generated_Source\PSoC5/RTOS_queue.c ****         }
2545:Generated_Source\PSoC5/RTOS_queue.c ****         portENABLE_INTERRUPTS();
2546:Generated_Source\PSoC5/RTOS_queue.c **** 
2547:Generated_Source\PSoC5/RTOS_queue.c ****         portDISABLE_INTERRUPTS();
2548:Generated_Source\PSoC5/RTOS_queue.c ****         {
2549:Generated_Source\PSoC5/RTOS_queue.c ****             if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2550:Generated_Source\PSoC5/RTOS_queue.c ****             {
2551:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Data is available from the queue. */
2552:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2553:Generated_Source\PSoC5/RTOS_queue.c **** 
2554:Generated_Source\PSoC5/RTOS_queue.c ****                 if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2555:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2556:Generated_Source\PSoC5/RTOS_queue.c ****                     pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2557:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2558:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2559:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2560:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2561:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2562:Generated_Source\PSoC5/RTOS_queue.c **** 
2563:Generated_Source\PSoC5/RTOS_queue.c ****                 --( pxQueue->uxMessagesWaiting );
2564:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( un
2565:Generated_Source\PSoC5/RTOS_queue.c **** 
2566:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = pdPASS;
2567:Generated_Source\PSoC5/RTOS_queue.c **** 
2568:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Were any co-routines waiting for space to become available? */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 50


2569:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2570:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2571:Generated_Source\PSoC5/RTOS_queue.c ****                     /* In this instance the co-routine could be placed directly
2572:Generated_Source\PSoC5/RTOS_queue.c ****                      * into the ready list as we are within a critical section.
2573:Generated_Source\PSoC5/RTOS_queue.c ****                      * Instead the same pending ready list mechanism is used as if
2574:Generated_Source\PSoC5/RTOS_queue.c ****                      * the event were caused from within an interrupt. */
2575:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFAL
2576:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2577:Generated_Source\PSoC5/RTOS_queue.c ****                         xReturn = errQUEUE_YIELD;
2578:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2579:Generated_Source\PSoC5/RTOS_queue.c ****                     else
2580:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2581:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
2582:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2583:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2584:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2585:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2586:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2587:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2588:Generated_Source\PSoC5/RTOS_queue.c ****             }
2589:Generated_Source\PSoC5/RTOS_queue.c ****             else
2590:Generated_Source\PSoC5/RTOS_queue.c ****             {
2591:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = pdFAIL;
2592:Generated_Source\PSoC5/RTOS_queue.c ****             }
2593:Generated_Source\PSoC5/RTOS_queue.c ****         }
2594:Generated_Source\PSoC5/RTOS_queue.c ****         portENABLE_INTERRUPTS();
2595:Generated_Source\PSoC5/RTOS_queue.c **** 
2596:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
2597:Generated_Source\PSoC5/RTOS_queue.c ****     }
2598:Generated_Source\PSoC5/RTOS_queue.c **** 
2599:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_CO_ROUTINES */
2600:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2601:Generated_Source\PSoC5/RTOS_queue.c **** 
2602:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2603:Generated_Source\PSoC5/RTOS_queue.c **** 
2604:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue,
2605:Generated_Source\PSoC5/RTOS_queue.c ****                                     const void * pvItemToQueue,
2606:Generated_Source\PSoC5/RTOS_queue.c ****                                     BaseType_t xCoRoutinePreviouslyWoken )
2607:Generated_Source\PSoC5/RTOS_queue.c ****     {
2608:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxQueue = xQueue;
2609:Generated_Source\PSoC5/RTOS_queue.c **** 
2610:Generated_Source\PSoC5/RTOS_queue.c ****         /* Cannot block within an ISR so if there is no space on the queue then
2611:Generated_Source\PSoC5/RTOS_queue.c ****          * exit without doing anything. */
2612:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2613:Generated_Source\PSoC5/RTOS_queue.c ****         {
2614:Generated_Source\PSoC5/RTOS_queue.c ****             prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2615:Generated_Source\PSoC5/RTOS_queue.c **** 
2616:Generated_Source\PSoC5/RTOS_queue.c ****             /* We only want to wake one co-routine per ISR, so check that a
2617:Generated_Source\PSoC5/RTOS_queue.c ****              * co-routine has not already been woken. */
2618:Generated_Source\PSoC5/RTOS_queue.c ****             if( xCoRoutinePreviouslyWoken == pdFALSE )
2619:Generated_Source\PSoC5/RTOS_queue.c ****             {
2620:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2621:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2622:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pd
2623:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2624:Generated_Source\PSoC5/RTOS_queue.c ****                         return pdTRUE;
2625:Generated_Source\PSoC5/RTOS_queue.c ****                     }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 51


2626:Generated_Source\PSoC5/RTOS_queue.c ****                     else
2627:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2628:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
2629:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2630:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2631:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2632:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2633:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2634:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2635:Generated_Source\PSoC5/RTOS_queue.c ****             }
2636:Generated_Source\PSoC5/RTOS_queue.c ****             else
2637:Generated_Source\PSoC5/RTOS_queue.c ****             {
2638:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2639:Generated_Source\PSoC5/RTOS_queue.c ****             }
2640:Generated_Source\PSoC5/RTOS_queue.c ****         }
2641:Generated_Source\PSoC5/RTOS_queue.c ****         else
2642:Generated_Source\PSoC5/RTOS_queue.c ****         {
2643:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
2644:Generated_Source\PSoC5/RTOS_queue.c ****         }
2645:Generated_Source\PSoC5/RTOS_queue.c **** 
2646:Generated_Source\PSoC5/RTOS_queue.c ****         return xCoRoutinePreviouslyWoken;
2647:Generated_Source\PSoC5/RTOS_queue.c ****     }
2648:Generated_Source\PSoC5/RTOS_queue.c **** 
2649:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_CO_ROUTINES */
2650:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2651:Generated_Source\PSoC5/RTOS_queue.c **** 
2652:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2653:Generated_Source\PSoC5/RTOS_queue.c **** 
2654:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue,
2655:Generated_Source\PSoC5/RTOS_queue.c ****                                        void * pvBuffer,
2656:Generated_Source\PSoC5/RTOS_queue.c ****                                        BaseType_t * pxCoRoutineWoken )
2657:Generated_Source\PSoC5/RTOS_queue.c ****     {
2658:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
2659:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxQueue = xQueue;
2660:Generated_Source\PSoC5/RTOS_queue.c **** 
2661:Generated_Source\PSoC5/RTOS_queue.c ****         /* We cannot block from an ISR, so check there is data available. If
2662:Generated_Source\PSoC5/RTOS_queue.c ****          * not then just leave without doing anything. */
2663:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2664:Generated_Source\PSoC5/RTOS_queue.c ****         {
2665:Generated_Source\PSoC5/RTOS_queue.c ****             /* Copy the data from the queue. */
2666:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2667:Generated_Source\PSoC5/RTOS_queue.c **** 
2668:Generated_Source\PSoC5/RTOS_queue.c ****             if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2669:Generated_Source\PSoC5/RTOS_queue.c ****             {
2670:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2671:Generated_Source\PSoC5/RTOS_queue.c ****             }
2672:Generated_Source\PSoC5/RTOS_queue.c ****             else
2673:Generated_Source\PSoC5/RTOS_queue.c ****             {
2674:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2675:Generated_Source\PSoC5/RTOS_queue.c ****             }
2676:Generated_Source\PSoC5/RTOS_queue.c **** 
2677:Generated_Source\PSoC5/RTOS_queue.c ****             --( pxQueue->uxMessagesWaiting );
2678:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsign
2679:Generated_Source\PSoC5/RTOS_queue.c **** 
2680:Generated_Source\PSoC5/RTOS_queue.c ****             if( ( *pxCoRoutineWoken ) == pdFALSE )
2681:Generated_Source\PSoC5/RTOS_queue.c ****             {
2682:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 52


2683:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2684:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFAL
2685:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2686:Generated_Source\PSoC5/RTOS_queue.c ****                         *pxCoRoutineWoken = pdTRUE;
2687:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2688:Generated_Source\PSoC5/RTOS_queue.c ****                     else
2689:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2690:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
2691:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2692:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2693:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2694:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2695:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2696:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2697:Generated_Source\PSoC5/RTOS_queue.c ****             }
2698:Generated_Source\PSoC5/RTOS_queue.c ****             else
2699:Generated_Source\PSoC5/RTOS_queue.c ****             {
2700:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2701:Generated_Source\PSoC5/RTOS_queue.c ****             }
2702:Generated_Source\PSoC5/RTOS_queue.c **** 
2703:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
2704:Generated_Source\PSoC5/RTOS_queue.c ****         }
2705:Generated_Source\PSoC5/RTOS_queue.c ****         else
2706:Generated_Source\PSoC5/RTOS_queue.c ****         {
2707:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFAIL;
2708:Generated_Source\PSoC5/RTOS_queue.c ****         }
2709:Generated_Source\PSoC5/RTOS_queue.c **** 
2710:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
2711:Generated_Source\PSoC5/RTOS_queue.c ****     }
2712:Generated_Source\PSoC5/RTOS_queue.c **** 
2713:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_CO_ROUTINES */
2714:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2715:Generated_Source\PSoC5/RTOS_queue.c **** 
2716:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2717:Generated_Source\PSoC5/RTOS_queue.c **** 
2718:Generated_Source\PSoC5/RTOS_queue.c ****     void vQueueAddToRegistry( QueueHandle_t xQueue,
2719:Generated_Source\PSoC5/RTOS_queue.c ****                               const char * pcQueueName ) /*lint !e971 Unqualified char types are al
2720:Generated_Source\PSoC5/RTOS_queue.c ****     {
2721:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t ux;
2722:Generated_Source\PSoC5/RTOS_queue.c **** 
2723:Generated_Source\PSoC5/RTOS_queue.c ****         /* See if there is an empty space in the registry.  A NULL name denotes
2724:Generated_Source\PSoC5/RTOS_queue.c ****          * a free slot. */
2725:Generated_Source\PSoC5/RTOS_queue.c ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2726:Generated_Source\PSoC5/RTOS_queue.c ****         {
2727:Generated_Source\PSoC5/RTOS_queue.c ****             if( xQueueRegistry[ ux ].pcQueueName == NULL )
2728:Generated_Source\PSoC5/RTOS_queue.c ****             {
2729:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Store the information on this queue. */
2730:Generated_Source\PSoC5/RTOS_queue.c ****                 xQueueRegistry[ ux ].pcQueueName = pcQueueName;
2731:Generated_Source\PSoC5/RTOS_queue.c ****                 xQueueRegistry[ ux ].xHandle = xQueue;
2732:Generated_Source\PSoC5/RTOS_queue.c **** 
2733:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2734:Generated_Source\PSoC5/RTOS_queue.c ****                 break;
2735:Generated_Source\PSoC5/RTOS_queue.c ****             }
2736:Generated_Source\PSoC5/RTOS_queue.c ****             else
2737:Generated_Source\PSoC5/RTOS_queue.c ****             {
2738:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2739:Generated_Source\PSoC5/RTOS_queue.c ****             }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 53


2740:Generated_Source\PSoC5/RTOS_queue.c ****         }
2741:Generated_Source\PSoC5/RTOS_queue.c ****     }
2742:Generated_Source\PSoC5/RTOS_queue.c **** 
2743:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2744:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2745:Generated_Source\PSoC5/RTOS_queue.c **** 
2746:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2747:Generated_Source\PSoC5/RTOS_queue.c **** 
2748:Generated_Source\PSoC5/RTOS_queue.c ****     const char * pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are all
2749:Generated_Source\PSoC5/RTOS_queue.c ****     {
2750:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t ux;
2751:Generated_Source\PSoC5/RTOS_queue.c ****         const char * pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings a
2752:Generated_Source\PSoC5/RTOS_queue.c **** 
2753:Generated_Source\PSoC5/RTOS_queue.c ****         /* Note there is nothing here to protect against another task adding or
2754:Generated_Source\PSoC5/RTOS_queue.c ****          * removing entries from the registry while it is being searched. */
2755:Generated_Source\PSoC5/RTOS_queue.c **** 
2756:Generated_Source\PSoC5/RTOS_queue.c ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2757:Generated_Source\PSoC5/RTOS_queue.c ****         {
2758:Generated_Source\PSoC5/RTOS_queue.c ****             if( xQueueRegistry[ ux ].xHandle == xQueue )
2759:Generated_Source\PSoC5/RTOS_queue.c ****             {
2760:Generated_Source\PSoC5/RTOS_queue.c ****                 pcReturn = xQueueRegistry[ ux ].pcQueueName;
2761:Generated_Source\PSoC5/RTOS_queue.c ****                 break;
2762:Generated_Source\PSoC5/RTOS_queue.c ****             }
2763:Generated_Source\PSoC5/RTOS_queue.c ****             else
2764:Generated_Source\PSoC5/RTOS_queue.c ****             {
2765:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2766:Generated_Source\PSoC5/RTOS_queue.c ****             }
2767:Generated_Source\PSoC5/RTOS_queue.c ****         }
2768:Generated_Source\PSoC5/RTOS_queue.c **** 
2769:Generated_Source\PSoC5/RTOS_queue.c ****         return pcReturn;
2770:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
2771:Generated_Source\PSoC5/RTOS_queue.c **** 
2772:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2773:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2774:Generated_Source\PSoC5/RTOS_queue.c **** 
2775:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2776:Generated_Source\PSoC5/RTOS_queue.c **** 
2777:Generated_Source\PSoC5/RTOS_queue.c ****     void vQueueUnregisterQueue( QueueHandle_t xQueue )
2778:Generated_Source\PSoC5/RTOS_queue.c ****     {
2779:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t ux;
2780:Generated_Source\PSoC5/RTOS_queue.c **** 
2781:Generated_Source\PSoC5/RTOS_queue.c ****         /* See if the handle of the queue being unregistered in actually in the
2782:Generated_Source\PSoC5/RTOS_queue.c ****          * registry. */
2783:Generated_Source\PSoC5/RTOS_queue.c ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2784:Generated_Source\PSoC5/RTOS_queue.c ****         {
2785:Generated_Source\PSoC5/RTOS_queue.c ****             if( xQueueRegistry[ ux ].xHandle == xQueue )
2786:Generated_Source\PSoC5/RTOS_queue.c ****             {
2787:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Set the name to NULL to show that this slot if free again. */
2788:Generated_Source\PSoC5/RTOS_queue.c ****                 xQueueRegistry[ ux ].pcQueueName = NULL;
2789:Generated_Source\PSoC5/RTOS_queue.c **** 
2790:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Set the handle to NULL to ensure the same queue handle cannot
2791:Generated_Source\PSoC5/RTOS_queue.c ****                  * appear in the registry twice if it is added, removed, then
2792:Generated_Source\PSoC5/RTOS_queue.c ****                  * added again. */
2793:Generated_Source\PSoC5/RTOS_queue.c ****                 xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
2794:Generated_Source\PSoC5/RTOS_queue.c ****                 break;
2795:Generated_Source\PSoC5/RTOS_queue.c ****             }
2796:Generated_Source\PSoC5/RTOS_queue.c ****             else
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 54


2797:Generated_Source\PSoC5/RTOS_queue.c ****             {
2798:Generated_Source\PSoC5/RTOS_queue.c ****                 mtCOVERAGE_TEST_MARKER();
2799:Generated_Source\PSoC5/RTOS_queue.c ****             }
2800:Generated_Source\PSoC5/RTOS_queue.c ****         }
2801:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2802:Generated_Source\PSoC5/RTOS_queue.c **** 
2803:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2804:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2805:Generated_Source\PSoC5/RTOS_queue.c **** 
2806:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_TIMERS == 1 )
2807:Generated_Source\PSoC5/RTOS_queue.c **** 
2808:Generated_Source\PSoC5/RTOS_queue.c ****     void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
2809:Generated_Source\PSoC5/RTOS_queue.c ****                                          TickType_t xTicksToWait,
2810:Generated_Source\PSoC5/RTOS_queue.c ****                                          const BaseType_t xWaitIndefinitely )
2811:Generated_Source\PSoC5/RTOS_queue.c ****     {
2812:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxQueue = xQueue;
2813:Generated_Source\PSoC5/RTOS_queue.c **** 
2814:Generated_Source\PSoC5/RTOS_queue.c ****         /* This function should not be called by application code hence the
2815:Generated_Source\PSoC5/RTOS_queue.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
2816:Generated_Source\PSoC5/RTOS_queue.c ****          * designed for use by kernel code, and has special calling requirements.
2817:Generated_Source\PSoC5/RTOS_queue.c ****          * It can result in vListInsert() being called on a list that can only
2818:Generated_Source\PSoC5/RTOS_queue.c ****          * possibly ever have one item in it, so the list will be fast, but even
2819:Generated_Source\PSoC5/RTOS_queue.c ****          * so it should be called with the scheduler locked and not from a critical
2820:Generated_Source\PSoC5/RTOS_queue.c ****          * section. */
2821:Generated_Source\PSoC5/RTOS_queue.c **** 
2822:Generated_Source\PSoC5/RTOS_queue.c ****         /* Only do anything if there are no messages in the queue.  This function
2823:Generated_Source\PSoC5/RTOS_queue.c ****          *  will not actually cause the task to block, just place it on a blocked
2824:Generated_Source\PSoC5/RTOS_queue.c ****          *  list.  It will not block until the scheduler is unlocked - at which
2825:Generated_Source\PSoC5/RTOS_queue.c ****          *  time a yield will be performed.  If an item is added to the queue while
2826:Generated_Source\PSoC5/RTOS_queue.c ****          *  the queue is locked, and the calling task blocks on the queue, then the
2827:Generated_Source\PSoC5/RTOS_queue.c ****          *  calling task will be immediately unblocked when the queue is unlocked. */
2828:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
2829:Generated_Source\PSoC5/RTOS_queue.c **** 
2830:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
2831:Generated_Source\PSoC5/RTOS_queue.c ****         {
2832:Generated_Source\PSoC5/RTOS_queue.c ****             /* There is nothing in the queue, block for the specified period. */
2833:Generated_Source\PSoC5/RTOS_queue.c ****             vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xW
2834:Generated_Source\PSoC5/RTOS_queue.c ****         }
2835:Generated_Source\PSoC5/RTOS_queue.c ****         else
2836:Generated_Source\PSoC5/RTOS_queue.c ****         {
2837:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
2838:Generated_Source\PSoC5/RTOS_queue.c ****         }
2839:Generated_Source\PSoC5/RTOS_queue.c **** 
2840:Generated_Source\PSoC5/RTOS_queue.c ****         prvUnlockQueue( pxQueue );
2841:Generated_Source\PSoC5/RTOS_queue.c ****     }
2842:Generated_Source\PSoC5/RTOS_queue.c **** 
2843:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_TIMERS */
2844:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2845:Generated_Source\PSoC5/RTOS_queue.c **** 
2846:Generated_Source\PSoC5/RTOS_queue.c **** #if ( ( configUSE_QUEUE_SETS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
2847:Generated_Source\PSoC5/RTOS_queue.c **** 
2848:Generated_Source\PSoC5/RTOS_queue.c ****     QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength )
2849:Generated_Source\PSoC5/RTOS_queue.c ****     {
2850:Generated_Source\PSoC5/RTOS_queue.c ****         QueueSetHandle_t pxQueue;
2851:Generated_Source\PSoC5/RTOS_queue.c **** 
2852:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue = xQueueGenericCreate( uxEventQueueLength, ( UBaseType_t ) sizeof( Queue_t * ), que
2853:Generated_Source\PSoC5/RTOS_queue.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 55


2854:Generated_Source\PSoC5/RTOS_queue.c ****         return pxQueue;
2855:Generated_Source\PSoC5/RTOS_queue.c ****     }
2856:Generated_Source\PSoC5/RTOS_queue.c **** 
2857:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_QUEUE_SETS */
2858:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2859:Generated_Source\PSoC5/RTOS_queue.c **** 
2860:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2861:Generated_Source\PSoC5/RTOS_queue.c **** 
2862:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore,
2863:Generated_Source\PSoC5/RTOS_queue.c ****                                QueueSetHandle_t xQueueSet )
2864:Generated_Source\PSoC5/RTOS_queue.c ****     {
2865:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
2866:Generated_Source\PSoC5/RTOS_queue.c **** 
2867:Generated_Source\PSoC5/RTOS_queue.c ****         taskENTER_CRITICAL();
2868:Generated_Source\PSoC5/RTOS_queue.c ****         {
2869:Generated_Source\PSoC5/RTOS_queue.c ****             if( ( ( Queue_t * ) xQueueOrSemaphore )->pxQueueSetContainer != NULL )
2870:Generated_Source\PSoC5/RTOS_queue.c ****             {
2871:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Cannot add a queue/semaphore to more than one queue set. */
2872:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = pdFAIL;
2873:Generated_Source\PSoC5/RTOS_queue.c ****             }
2874:Generated_Source\PSoC5/RTOS_queue.c ****             else if( ( ( Queue_t * ) xQueueOrSemaphore )->uxMessagesWaiting != ( UBaseType_t ) 0 )
2875:Generated_Source\PSoC5/RTOS_queue.c ****             {
2876:Generated_Source\PSoC5/RTOS_queue.c ****                 /* Cannot add a queue/semaphore to a queue set if there are already
2877:Generated_Source\PSoC5/RTOS_queue.c ****                  * items in the queue/semaphore. */
2878:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = pdFAIL;
2879:Generated_Source\PSoC5/RTOS_queue.c ****             }
2880:Generated_Source\PSoC5/RTOS_queue.c ****             else
2881:Generated_Source\PSoC5/RTOS_queue.c ****             {
2882:Generated_Source\PSoC5/RTOS_queue.c ****                 ( ( Queue_t * ) xQueueOrSemaphore )->pxQueueSetContainer = xQueueSet;
2883:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = pdPASS;
2884:Generated_Source\PSoC5/RTOS_queue.c ****             }
2885:Generated_Source\PSoC5/RTOS_queue.c ****         }
2886:Generated_Source\PSoC5/RTOS_queue.c ****         taskEXIT_CRITICAL();
2887:Generated_Source\PSoC5/RTOS_queue.c **** 
2888:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
2889:Generated_Source\PSoC5/RTOS_queue.c ****     }
2890:Generated_Source\PSoC5/RTOS_queue.c **** 
2891:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_QUEUE_SETS */
2892:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2893:Generated_Source\PSoC5/RTOS_queue.c **** 
2894:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2895:Generated_Source\PSoC5/RTOS_queue.c **** 
2896:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore,
2897:Generated_Source\PSoC5/RTOS_queue.c ****                                     QueueSetHandle_t xQueueSet )
2898:Generated_Source\PSoC5/RTOS_queue.c ****     {
2899:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
2900:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxQueueOrSemaphore = ( Queue_t * ) xQueueOrSemaphore;
2901:Generated_Source\PSoC5/RTOS_queue.c **** 
2902:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueueOrSemaphore->pxQueueSetContainer != xQueueSet )
2903:Generated_Source\PSoC5/RTOS_queue.c ****         {
2904:Generated_Source\PSoC5/RTOS_queue.c ****             /* The queue was not a member of the set. */
2905:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFAIL;
2906:Generated_Source\PSoC5/RTOS_queue.c ****         }
2907:Generated_Source\PSoC5/RTOS_queue.c ****         else if( pxQueueOrSemaphore->uxMessagesWaiting != ( UBaseType_t ) 0 )
2908:Generated_Source\PSoC5/RTOS_queue.c ****         {
2909:Generated_Source\PSoC5/RTOS_queue.c ****             /* It is dangerous to remove a queue from a set when the queue is
2910:Generated_Source\PSoC5/RTOS_queue.c ****              * not empty because the queue set will still hold pending events for
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 56


2911:Generated_Source\PSoC5/RTOS_queue.c ****              * the queue. */
2912:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdFAIL;
2913:Generated_Source\PSoC5/RTOS_queue.c ****         }
2914:Generated_Source\PSoC5/RTOS_queue.c ****         else
2915:Generated_Source\PSoC5/RTOS_queue.c ****         {
2916:Generated_Source\PSoC5/RTOS_queue.c ****             taskENTER_CRITICAL();
2917:Generated_Source\PSoC5/RTOS_queue.c ****             {
2918:Generated_Source\PSoC5/RTOS_queue.c ****                 /* The queue is no longer contained in the set. */
2919:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueueOrSemaphore->pxQueueSetContainer = NULL;
2920:Generated_Source\PSoC5/RTOS_queue.c ****             }
2921:Generated_Source\PSoC5/RTOS_queue.c ****             taskEXIT_CRITICAL();
2922:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
2923:Generated_Source\PSoC5/RTOS_queue.c ****         }
2924:Generated_Source\PSoC5/RTOS_queue.c **** 
2925:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
2926:Generated_Source\PSoC5/RTOS_queue.c ****     } /*lint !e818 xQueueSet could not be declared as pointing to const as it is a typedef. */
2927:Generated_Source\PSoC5/RTOS_queue.c **** 
2928:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_QUEUE_SETS */
2929:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2930:Generated_Source\PSoC5/RTOS_queue.c **** 
2931:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2932:Generated_Source\PSoC5/RTOS_queue.c **** 
2933:Generated_Source\PSoC5/RTOS_queue.c ****     QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet,
2934:Generated_Source\PSoC5/RTOS_queue.c ****                                                 TickType_t const xTicksToWait )
2935:Generated_Source\PSoC5/RTOS_queue.c ****     {
2936:Generated_Source\PSoC5/RTOS_queue.c ****         QueueSetMemberHandle_t xReturn = NULL;
2937:Generated_Source\PSoC5/RTOS_queue.c **** 
2938:Generated_Source\PSoC5/RTOS_queue.c ****         ( void ) xQueueReceive( ( QueueHandle_t ) xQueueSet, &xReturn, xTicksToWait ); /*lint !e961
2939:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
2940:Generated_Source\PSoC5/RTOS_queue.c ****     }
2941:Generated_Source\PSoC5/RTOS_queue.c **** 
2942:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_QUEUE_SETS */
2943:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2944:Generated_Source\PSoC5/RTOS_queue.c **** 
2945:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2946:Generated_Source\PSoC5/RTOS_queue.c **** 
2947:Generated_Source\PSoC5/RTOS_queue.c ****     QueueSetMemberHandle_t xQueueSelectFromSetFromISR( QueueSetHandle_t xQueueSet )
2948:Generated_Source\PSoC5/RTOS_queue.c ****     {
2949:Generated_Source\PSoC5/RTOS_queue.c ****         QueueSetMemberHandle_t xReturn = NULL;
2950:Generated_Source\PSoC5/RTOS_queue.c **** 
2951:Generated_Source\PSoC5/RTOS_queue.c ****         ( void ) xQueueReceiveFromISR( ( QueueHandle_t ) xQueueSet, &xReturn, NULL ); /*lint !e961 
2952:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
2953:Generated_Source\PSoC5/RTOS_queue.c ****     }
2954:Generated_Source\PSoC5/RTOS_queue.c **** 
2955:Generated_Source\PSoC5/RTOS_queue.c **** #endif /* configUSE_QUEUE_SETS */
2956:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
2957:Generated_Source\PSoC5/RTOS_queue.c **** 
2958:Generated_Source\PSoC5/RTOS_queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2959:Generated_Source\PSoC5/RTOS_queue.c **** 
2960:Generated_Source\PSoC5/RTOS_queue.c ****     static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
2961:Generated_Source\PSoC5/RTOS_queue.c ****     {
 202              		.loc 1 2961 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 8
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              	.LVL23:
 207 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 57


 208              		.cfi_def_cfa_offset 16
 209              		.cfi_offset 4, -16
 210              		.cfi_offset 5, -12
 211              		.cfi_offset 6, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 24
 215 0004 0190     		str	r0, [sp, #4]
2962:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
 216              		.loc 1 2962 0
 217 0006 846C     		ldr	r4, [r0, #72]
 218              	.LVL24:
2963:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn = pdFALSE;
2964:Generated_Source\PSoC5/RTOS_queue.c **** 
2965:Generated_Source\PSoC5/RTOS_queue.c ****         /* This function must be called form a critical section. */
2966:Generated_Source\PSoC5/RTOS_queue.c **** 
2967:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( pxQueueSetContainer );
2968:Generated_Source\PSoC5/RTOS_queue.c ****         configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );
2969:Generated_Source\PSoC5/RTOS_queue.c **** 
2970:Generated_Source\PSoC5/RTOS_queue.c ****         if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
 219              		.loc 1 2970 0
 220 0008 A26B     		ldr	r2, [r4, #56]
 221 000a E36B     		ldr	r3, [r4, #60]
 222 000c 9A42     		cmp	r2, r3
 223 000e 18D2     		bcs	.L17
 224              	.LBB23:
2971:Generated_Source\PSoC5/RTOS_queue.c ****         {
2972:Generated_Source\PSoC5/RTOS_queue.c ****             const int8_t cTxLock = pxQueueSetContainer->cTxLock;
 225              		.loc 1 2972 0
 226 0010 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 227 0014 6DB2     		sxtb	r5, r5
 228              	.LVL25:
2973:Generated_Source\PSoC5/RTOS_queue.c **** 
2974:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_SET_SEND( pxQueueSetContainer );
2975:Generated_Source\PSoC5/RTOS_queue.c **** 
2976:Generated_Source\PSoC5/RTOS_queue.c ****             /* The data copied is the handle of the queue that contains data. */
2977:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
 229              		.loc 1 2977 0
 230 0016 0022     		movs	r2, #0
 231 0018 01A9     		add	r1, sp, #4
 232 001a 2046     		mov	r0, r4
 233              	.LVL26:
 234 001c FFF7FEFF 		bl	prvCopyDataToQueue
 235              	.LVL27:
 236 0020 0646     		mov	r6, r0
 237              	.LVL28:
2978:Generated_Source\PSoC5/RTOS_queue.c **** 
2979:Generated_Source\PSoC5/RTOS_queue.c ****             if( cTxLock == queueUNLOCKED )
 238              		.loc 1 2979 0
 239 0022 B5F1FF3F 		cmp	r5, #-1
 240 0026 07D1     		bne	.L16
2980:Generated_Source\PSoC5/RTOS_queue.c ****             {
2981:Generated_Source\PSoC5/RTOS_queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALS
 241              		.loc 1 2981 0
 242 0028 636A     		ldr	r3, [r4, #36]
 243 002a 6BB1     		cbz	r3, .L15
2982:Generated_Source\PSoC5/RTOS_queue.c ****                 {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 58


2983:Generated_Source\PSoC5/RTOS_queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) 
 244              		.loc 1 2983 0
 245 002c 04F12400 		add	r0, r4, #36
 246              	.LVL29:
 247 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 248              	.LVL30:
 249 0034 38B9     		cbnz	r0, .L18
 250 0036 07E0     		b	.L15
 251              	.LVL31:
 252              	.L16:
2984:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2985:Generated_Source\PSoC5/RTOS_queue.c ****                         /* The task waiting has a higher priority. */
2986:Generated_Source\PSoC5/RTOS_queue.c ****                         xReturn = pdTRUE;
2987:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2988:Generated_Source\PSoC5/RTOS_queue.c ****                     else
2989:Generated_Source\PSoC5/RTOS_queue.c ****                     {
2990:Generated_Source\PSoC5/RTOS_queue.c ****                         mtCOVERAGE_TEST_MARKER();
2991:Generated_Source\PSoC5/RTOS_queue.c ****                     }
2992:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2993:Generated_Source\PSoC5/RTOS_queue.c ****                 else
2994:Generated_Source\PSoC5/RTOS_queue.c ****                 {
2995:Generated_Source\PSoC5/RTOS_queue.c ****                     mtCOVERAGE_TEST_MARKER();
2996:Generated_Source\PSoC5/RTOS_queue.c ****                 }
2997:Generated_Source\PSoC5/RTOS_queue.c ****             }
2998:Generated_Source\PSoC5/RTOS_queue.c ****             else
2999:Generated_Source\PSoC5/RTOS_queue.c ****             {
3000:Generated_Source\PSoC5/RTOS_queue.c ****                 configASSERT( cTxLock != queueINT8_MAX );
3001:Generated_Source\PSoC5/RTOS_queue.c **** 
3002:Generated_Source\PSoC5/RTOS_queue.c ****                 pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
 253              		.loc 1 3002 0
 254 0038 0135     		adds	r5, r5, #1
 255              	.LVL32:
 256 003a 6DB2     		sxtb	r5, r5
 257              	.LVL33:
 258 003c 84F84550 		strb	r5, [r4, #69]
 259 0040 02E0     		b	.L15
 260              	.LVL34:
 261              	.L17:
 262              	.LBE23:
2963:Generated_Source\PSoC5/RTOS_queue.c **** 
 263              		.loc 1 2963 0
 264 0042 0026     		movs	r6, #0
 265 0044 00E0     		b	.L15
 266              	.LVL35:
 267              	.L18:
 268              	.LBB24:
2986:Generated_Source\PSoC5/RTOS_queue.c ****                     }
 269              		.loc 1 2986 0
 270 0046 0126     		movs	r6, #1
 271              	.LVL36:
 272              	.L15:
 273              	.LBE24:
3003:Generated_Source\PSoC5/RTOS_queue.c ****             }
3004:Generated_Source\PSoC5/RTOS_queue.c ****         }
3005:Generated_Source\PSoC5/RTOS_queue.c ****         else
3006:Generated_Source\PSoC5/RTOS_queue.c ****         {
3007:Generated_Source\PSoC5/RTOS_queue.c ****             mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 59


3008:Generated_Source\PSoC5/RTOS_queue.c ****         }
3009:Generated_Source\PSoC5/RTOS_queue.c **** 
3010:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
3011:Generated_Source\PSoC5/RTOS_queue.c ****     }
 274              		.loc 1 3011 0
 275 0048 3046     		mov	r0, r6
 276 004a 02B0     		add	sp, sp, #8
 277              		.cfi_def_cfa_offset 16
 278              		@ sp needed
 279 004c 70BD     		pop	{r4, r5, r6, pc}
 280              		.cfi_endproc
 281              	.LFE98:
 282              		.size	prvNotifyQueueSetContainer, .-prvNotifyQueueSetContainer
 283 004e 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 284              		.align	2
 285              		.thumb
 286              		.thumb_func
 287              		.type	prvCopyDataFromQueue, %function
 288              	prvCopyDataFromQueue:
 289              	.LFB83:
2208:Generated_Source\PSoC5/RTOS_queue.c ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 290              		.loc 1 2208 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              	.LVL37:
2209:Generated_Source\PSoC5/RTOS_queue.c ****     {
 295              		.loc 1 2209 0
 296 0000 026C     		ldr	r2, [r0, #64]
 297 0002 72B1     		cbz	r2, .L24
2208:Generated_Source\PSoC5/RTOS_queue.c ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 298              		.loc 1 2208 0
 299 0004 10B5     		push	{r4, lr}
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 4, -8
 302              		.cfi_offset 14, -4
2211:Generated_Source\PSoC5/RTOS_queue.c **** 
 303              		.loc 1 2211 0
 304 0006 C368     		ldr	r3, [r0, #12]
 305 0008 1344     		add	r3, r3, r2
 306 000a C360     		str	r3, [r0, #12]
2213:Generated_Source\PSoC5/RTOS_queue.c ****         {
 307              		.loc 1 2213 0
 308 000c 8468     		ldr	r4, [r0, #8]
 309 000e A342     		cmp	r3, r4
 310 0010 01D3     		bcc	.L22
2215:Generated_Source\PSoC5/RTOS_queue.c ****         }
 311              		.loc 1 2215 0
 312 0012 0368     		ldr	r3, [r0]
 313 0014 C360     		str	r3, [r0, #12]
 314              	.L22:
 315 0016 0C46     		mov	r4, r1
2222:Generated_Source\PSoC5/RTOS_queue.c ****     }
 316              		.loc 1 2222 0
 317 0018 C168     		ldr	r1, [r0, #12]
 318              	.LVL38:
 319 001a 2046     		mov	r0, r4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 60


 320              	.LVL39:
 321 001c FFF7FEFF 		bl	memcpy
 322              	.LVL40:
 323 0020 10BD     		pop	{r4, pc}
 324              	.LVL41:
 325              	.L24:
 326              		.cfi_def_cfa_offset 0
 327              		.cfi_restore 4
 328              		.cfi_restore 14
 329 0022 7047     		bx	lr
 330              		.cfi_endproc
 331              	.LFE83:
 332              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 333              		.section	.text.prvUnlockQueue,"ax",%progbits
 334              		.align	2
 335              		.thumb
 336              		.thumb_func
 337              		.type	prvUnlockQueue, %function
 338              	prvUnlockQueue:
 339              	.LFB84:
2228:Generated_Source\PSoC5/RTOS_queue.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 340              		.loc 1 2228 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              	.LVL42:
 345 0000 38B5     		push	{r3, r4, r5, lr}
 346              		.cfi_def_cfa_offset 16
 347              		.cfi_offset 3, -16
 348              		.cfi_offset 4, -12
 349              		.cfi_offset 5, -8
 350              		.cfi_offset 14, -4
 351 0002 0546     		mov	r5, r0
2235:Generated_Source\PSoC5/RTOS_queue.c ****     {
 352              		.loc 1 2235 0
 353 0004 FFF7FEFF 		bl	vPortEnterCritical
 354              	.LVL43:
 355              	.LBB25:
2237:Generated_Source\PSoC5/RTOS_queue.c **** 
 356              		.loc 1 2237 0
 357 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 358 000c 64B2     		sxtb	r4, r4
 359              	.LVL44:
2240:Generated_Source\PSoC5/RTOS_queue.c ****         {
 360              		.loc 1 2240 0
 361 000e 13E0     		b	.L26
 362              	.L30:
2246:Generated_Source\PSoC5/RTOS_queue.c ****                     {
 363              		.loc 1 2246 0
 364 0010 AB6C     		ldr	r3, [r5, #72]
 365 0012 33B1     		cbz	r3, .L27
2248:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 366              		.loc 1 2248 0
 367 0014 2846     		mov	r0, r5
 368 0016 FFF7FEFF 		bl	prvNotifyQueueSetContainer
 369              	.LVL45:
 370 001a 58B1     		cbz	r0, .L28
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 61


2253:Generated_Source\PSoC5/RTOS_queue.c ****                         }
 371              		.loc 1 2253 0
 372 001c FFF7FEFF 		bl	vTaskMissedYield
 373              	.LVL46:
 374 0020 08E0     		b	.L28
 375              	.L27:
2265:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 376              		.loc 1 2265 0
 377 0022 6B6A     		ldr	r3, [r5, #36]
 378 0024 53B1     		cbz	r3, .L29
2267:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 379              		.loc 1 2267 0
 380 0026 05F12400 		add	r0, r5, #36
 381 002a FFF7FEFF 		bl	xTaskRemoveFromEventList
 382              	.LVL47:
 383 002e 08B1     		cbz	r0, .L28
2271:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 384              		.loc 1 2271 0
 385 0030 FFF7FEFF 		bl	vTaskMissedYield
 386              	.LVL48:
 387              	.L28:
2308:Generated_Source\PSoC5/RTOS_queue.c ****         }
 388              		.loc 1 2308 0
 389 0034 013C     		subs	r4, r4, #1
 390              	.LVL49:
 391 0036 64B2     		sxtb	r4, r4
 392              	.LVL50:
 393              	.L26:
2240:Generated_Source\PSoC5/RTOS_queue.c ****         {
 394              		.loc 1 2240 0
 395 0038 002C     		cmp	r4, #0
 396 003a E9DC     		bgt	.L30
 397              	.L29:
2311:Generated_Source\PSoC5/RTOS_queue.c ****     }
 398              		.loc 1 2311 0
 399 003c FF23     		movs	r3, #255
 400 003e 85F84530 		strb	r3, [r5, #69]
 401              	.LBE25:
2313:Generated_Source\PSoC5/RTOS_queue.c **** 
 402              		.loc 1 2313 0
 403 0042 FFF7FEFF 		bl	vPortExitCritical
 404              	.LVL51:
2316:Generated_Source\PSoC5/RTOS_queue.c ****     {
 405              		.loc 1 2316 0
 406 0046 FFF7FEFF 		bl	vPortEnterCritical
 407              	.LVL52:
 408              	.LBB26:
2318:Generated_Source\PSoC5/RTOS_queue.c **** 
 409              		.loc 1 2318 0
 410 004a 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 411              	.LVL53:
 412 004e 64B2     		sxtb	r4, r4
 413              	.LVL54:
2320:Generated_Source\PSoC5/RTOS_queue.c ****         {
 414              		.loc 1 2320 0
 415 0050 0AE0     		b	.L31
 416              	.L34:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 62


2322:Generated_Source\PSoC5/RTOS_queue.c ****             {
 417              		.loc 1 2322 0
 418 0052 2B69     		ldr	r3, [r5, #16]
 419 0054 53B1     		cbz	r3, .L32
2324:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 420              		.loc 1 2324 0
 421 0056 05F11000 		add	r0, r5, #16
 422 005a FFF7FEFF 		bl	xTaskRemoveFromEventList
 423              	.LVL55:
 424 005e 08B1     		cbz	r0, .L33
2326:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 425              		.loc 1 2326 0
 426 0060 FFF7FEFF 		bl	vTaskMissedYield
 427              	.LVL56:
 428              	.L33:
2333:Generated_Source\PSoC5/RTOS_queue.c ****             }
 429              		.loc 1 2333 0
 430 0064 013C     		subs	r4, r4, #1
 431              	.LVL57:
 432 0066 64B2     		sxtb	r4, r4
 433              	.LVL58:
 434              	.L31:
2320:Generated_Source\PSoC5/RTOS_queue.c ****         {
 435              		.loc 1 2320 0
 436 0068 002C     		cmp	r4, #0
 437 006a F2DC     		bgt	.L34
 438              	.L32:
2341:Generated_Source\PSoC5/RTOS_queue.c ****     }
 439              		.loc 1 2341 0
 440 006c FF23     		movs	r3, #255
 441 006e 85F84430 		strb	r3, [r5, #68]
 442              	.LBE26:
2343:Generated_Source\PSoC5/RTOS_queue.c **** }
 443              		.loc 1 2343 0
 444 0072 FFF7FEFF 		bl	vPortExitCritical
 445              	.LVL59:
 446 0076 38BD     		pop	{r3, r4, r5, pc}
 447              		.cfi_endproc
 448              	.LFE84:
 449              		.size	prvUnlockQueue, .-prvUnlockQueue
 450              		.section	.text.xQueueGenericReset,"ax",%progbits
 451              		.align	2
 452              		.global	xQueueGenericReset
 453              		.thumb
 454              		.thumb_func
 455              		.type	xQueueGenericReset, %function
 456              	xQueueGenericReset:
 457              	.LFB67:
 266:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
 458              		.loc 1 266 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              	.LVL60:
 463 0000 38B5     		push	{r3, r4, r5, lr}
 464              		.cfi_def_cfa_offset 16
 465              		.cfi_offset 3, -16
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 63


 466              		.cfi_offset 4, -12
 467              		.cfi_offset 5, -8
 468              		.cfi_offset 14, -4
 469 0002 0446     		mov	r4, r0
 470 0004 0D46     		mov	r5, r1
 471              	.LVL61:
 271:Generated_Source\PSoC5/RTOS_queue.c ****     {
 472              		.loc 1 271 0
 473 0006 FFF7FEFF 		bl	vPortEnterCritical
 474              	.LVL62:
 273:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 475              		.loc 1 273 0
 476 000a 2168     		ldr	r1, [r4]
 477 000c E26B     		ldr	r2, [r4, #60]
 478 000e 236C     		ldr	r3, [r4, #64]
 479 0010 03FB0210 		mla	r0, r3, r2, r1
 480 0014 A060     		str	r0, [r4, #8]
 274:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->pcWriteTo = pxQueue->pcHead;
 481              		.loc 1 274 0
 482 0016 0020     		movs	r0, #0
 483 0018 A063     		str	r0, [r4, #56]
 275:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->ux
 484              		.loc 1 275 0
 485 001a 6160     		str	r1, [r4, #4]
 276:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->cRxLock = queueUNLOCKED;
 486              		.loc 1 276 0
 487 001c 013A     		subs	r2, r2, #1
 488 001e 02FB0313 		mla	r3, r2, r3, r1
 489 0022 E360     		str	r3, [r4, #12]
 277:Generated_Source\PSoC5/RTOS_queue.c ****         pxQueue->cTxLock = queueUNLOCKED;
 490              		.loc 1 277 0
 491 0024 FF23     		movs	r3, #255
 492 0026 84F84430 		strb	r3, [r4, #68]
 278:Generated_Source\PSoC5/RTOS_queue.c **** 
 493              		.loc 1 278 0
 494 002a 84F84530 		strb	r3, [r4, #69]
 280:Generated_Source\PSoC5/RTOS_queue.c ****         {
 495              		.loc 1 280 0
 496 002e 7DB9     		cbnz	r5, .L37
 287:Generated_Source\PSoC5/RTOS_queue.c ****             {
 497              		.loc 1 287 0
 498 0030 2369     		ldr	r3, [r4, #16]
 499 0032 ABB1     		cbz	r3, .L38
 289:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 500              		.loc 1 289 0
 501 0034 04F11000 		add	r0, r4, #16
 502 0038 FFF7FEFF 		bl	xTaskRemoveFromEventList
 503              	.LVL63:
 504 003c 80B1     		cbz	r0, .L38
 291:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 505              		.loc 1 291 0
 506 003e 4FF08052 		mov	r2, #268435456
 507 0042 094B     		ldr	r3, .L40
 508 0044 1A60     		str	r2, [r3]
 509              		.syntax unified
 510              	@ 291 "Generated_Source\PSoC5\RTOS_queue.c" 1
 511 0046 BFF34F8F 		dsb
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 64


 512              	@ 0 "" 2
 513              	@ 291 "Generated_Source\PSoC5\RTOS_queue.c" 1
 514 004a BFF36F8F 		isb
 515              	@ 0 "" 2
 516              		.thumb
 517              		.syntax unified
 518 004e 07E0     		b	.L38
 519              	.L37:
 306:Generated_Source\PSoC5/RTOS_queue.c ****             vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 520              		.loc 1 306 0
 521 0050 04F11000 		add	r0, r4, #16
 522 0054 FFF7FEFF 		bl	vListInitialise
 523              	.LVL64:
 307:Generated_Source\PSoC5/RTOS_queue.c ****         }
 524              		.loc 1 307 0
 525 0058 04F12400 		add	r0, r4, #36
 526 005c FFF7FEFF 		bl	vListInitialise
 527              	.LVL65:
 528              	.L38:
 310:Generated_Source\PSoC5/RTOS_queue.c **** 
 529              		.loc 1 310 0
 530 0060 FFF7FEFF 		bl	vPortExitCritical
 531              	.LVL66:
 315:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 532              		.loc 1 315 0
 533 0064 0120     		movs	r0, #1
 534 0066 38BD     		pop	{r3, r4, r5, pc}
 535              	.LVL67:
 536              	.L41:
 537              		.align	2
 538              	.L40:
 539 0068 04ED00E0 		.word	-536810236
 540              		.cfi_endproc
 541              	.LFE67:
 542              		.size	xQueueGenericReset, .-xQueueGenericReset
 543              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 544              		.align	2
 545              		.thumb
 546              		.thumb_func
 547              		.type	prvInitialiseNewQueue, %function
 548              	prvInitialiseNewQueue:
 549              	.LFB69:
 446:Generated_Source\PSoC5/RTOS_queue.c ****     /* Remove compiler warnings about unused parameters should
 550              		.loc 1 446 0
 551              		.cfi_startproc
 552              		@ args = 4, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              	.LVL68:
 555 0000 10B5     		push	{r4, lr}
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 4, -8
 558              		.cfi_offset 14, -4
 559 0002 029C     		ldr	r4, [sp, #8]
 451:Generated_Source\PSoC5/RTOS_queue.c ****     {
 560              		.loc 1 451 0
 561 0004 0B46     		mov	r3, r1
 562              	.LVL69:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 65


 563 0006 09B9     		cbnz	r1, .L43
 457:Generated_Source\PSoC5/RTOS_queue.c ****     }
 564              		.loc 1 457 0
 565 0008 2460     		str	r4, [r4]
 566 000a 00E0     		b	.L44
 567              	.L43:
 462:Generated_Source\PSoC5/RTOS_queue.c ****     }
 568              		.loc 1 462 0
 569 000c 2260     		str	r2, [r4]
 570              	.L44:
 467:Generated_Source\PSoC5/RTOS_queue.c ****     pxNewQueue->uxItemSize = uxItemSize;
 571              		.loc 1 467 0
 572 000e E063     		str	r0, [r4, #60]
 468:Generated_Source\PSoC5/RTOS_queue.c ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 573              		.loc 1 468 0
 574 0010 2364     		str	r3, [r4, #64]
 469:Generated_Source\PSoC5/RTOS_queue.c **** 
 575              		.loc 1 469 0
 576 0012 0121     		movs	r1, #1
 577              	.LVL70:
 578 0014 2046     		mov	r0, r4
 579              	.LVL71:
 580 0016 FFF7FEFF 		bl	xQueueGenericReset
 581              	.LVL72:
 479:Generated_Source\PSoC5/RTOS_queue.c ****         }
 582              		.loc 1 479 0
 583 001a 0023     		movs	r3, #0
 584 001c A364     		str	r3, [r4, #72]
 585 001e 10BD     		pop	{r4, pc}
 586              		.cfi_endproc
 587              	.LFE69:
 588              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 589              		.section	.text.xQueueGenericCreate,"ax",%progbits
 590              		.align	2
 591              		.global	xQueueGenericCreate
 592              		.thumb
 593              		.thumb_func
 594              		.type	xQueueGenericCreate, %function
 595              	xQueueGenericCreate:
 596              	.LFB68:
 385:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * pxNewQueue;
 597              		.loc 1 385 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              	.LVL73:
 602 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 603              		.cfi_def_cfa_offset 20
 604              		.cfi_offset 4, -20
 605              		.cfi_offset 5, -16
 606              		.cfi_offset 6, -12
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 83B0     		sub	sp, sp, #12
 610              		.cfi_def_cfa_offset 32
 611 0004 0546     		mov	r5, r0
 612 0006 0E46     		mov	r6, r1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 66


 613 0008 1746     		mov	r7, r2
 395:Generated_Source\PSoC5/RTOS_queue.c **** 
 614              		.loc 1 395 0
 615 000a 01FB00F0 		mul	r0, r1, r0
 616              	.LVL74:
 409:Generated_Source\PSoC5/RTOS_queue.c **** 
 617              		.loc 1 409 0
 618 000e 4C30     		adds	r0, r0, #76
 619              	.LVL75:
 620 0010 FFF7FEFF 		bl	pvPortMalloc
 621              	.LVL76:
 411:Generated_Source\PSoC5/RTOS_queue.c ****         {
 622              		.loc 1 411 0
 623 0014 0446     		mov	r4, r0
 624 0016 38B1     		cbz	r0, .L47
 625              	.LVL77:
 427:Generated_Source\PSoC5/RTOS_queue.c ****         }
 626              		.loc 1 427 0
 627 0018 0090     		str	r0, [sp]
 628 001a 3B46     		mov	r3, r7
 629 001c 00F14C02 		add	r2, r0, #76
 630              	.LVL78:
 631 0020 3146     		mov	r1, r6
 632 0022 2846     		mov	r0, r5
 633              	.LVL79:
 634 0024 FFF7FEFF 		bl	prvInitialiseNewQueue
 635              	.LVL80:
 636              	.L47:
 436:Generated_Source\PSoC5/RTOS_queue.c **** 
 637              		.loc 1 436 0
 638 0028 2046     		mov	r0, r4
 639 002a 03B0     		add	sp, sp, #12
 640              		.cfi_def_cfa_offset 20
 641              		@ sp needed
 642 002c F0BD     		pop	{r4, r5, r6, r7, pc}
 643              		.cfi_endproc
 644              	.LFE68:
 645              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 646 002e 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 647              		.align	2
 648              		.global	xQueueGenericSend
 649              		.thumb
 650              		.thumb_func
 651              		.type	xQueueGenericSend, %function
 652              	xQueueGenericSend:
 653              	.LFB70:
 772:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 654              		.loc 1 772 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 16
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              	.LVL81:
 659 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 660              		.cfi_def_cfa_offset 20
 661              		.cfi_offset 4, -20
 662              		.cfi_offset 5, -16
 663              		.cfi_offset 6, -12
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 67


 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 85B0     		sub	sp, sp, #20
 667              		.cfi_def_cfa_offset 40
 668 0004 0446     		mov	r4, r0
 669 0006 0F46     		mov	r7, r1
 670 0008 0192     		str	r2, [sp, #4]
 671 000a 1E46     		mov	r6, r3
 672              	.LVL82:
 773:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
 673              		.loc 1 773 0
 674 000c 0025     		movs	r5, #0
 675              	.LVL83:
 676              	.L50:
 791:Generated_Source\PSoC5/RTOS_queue.c ****         {
 677              		.loc 1 791 0
 678 000e FFF7FEFF 		bl	vPortEnterCritical
 679              	.LVL84:
 797:Generated_Source\PSoC5/RTOS_queue.c ****             {
 680              		.loc 1 797 0
 681 0012 A26B     		ldr	r2, [r4, #56]
 682 0014 E36B     		ldr	r3, [r4, #60]
 683 0016 9A42     		cmp	r2, r3
 684 0018 01D3     		bcc	.L51
 797:Generated_Source\PSoC5/RTOS_queue.c ****             {
 685              		.loc 1 797 0 is_stmt 0 discriminator 1
 686 001a 022E     		cmp	r6, #2
 687 001c 34D1     		bne	.L52
 688              	.L51:
 689              	.LBB27:
 803:Generated_Source\PSoC5/RTOS_queue.c **** 
 690              		.loc 1 803 0 is_stmt 1
 691 001e A56B     		ldr	r5, [r4, #56]
 692              	.LVL85:
 805:Generated_Source\PSoC5/RTOS_queue.c **** 
 693              		.loc 1 805 0
 694 0020 3246     		mov	r2, r6
 695 0022 3946     		mov	r1, r7
 696 0024 2046     		mov	r0, r4
 697 0026 FFF7FEFF 		bl	prvCopyDataToQueue
 698              	.LVL86:
 807:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 699              		.loc 1 807 0
 700 002a A36C     		ldr	r3, [r4, #72]
 701 002c 7BB1     		cbz	r3, .L53
 809:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 702              		.loc 1 809 0
 703 002e 022E     		cmp	r6, #2
 704 0030 00D1     		bne	.L54
 809:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 705              		.loc 1 809 0 is_stmt 0 discriminator 1
 706 0032 2DBB     		cbnz	r5, .L55
 707              	.L54:
 816:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 708              		.loc 1 816 0 is_stmt 1
 709 0034 2046     		mov	r0, r4
 710              	.LVL87:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 68


 711 0036 FFF7FEFF 		bl	prvNotifyQueueSetContainer
 712              	.LVL88:
 713 003a 08B3     		cbz	r0, .L55
 821:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 714              		.loc 1 821 0
 715 003c 4FF08052 		mov	r2, #268435456
 716 0040 3A4B     		ldr	r3, .L66
 717 0042 1A60     		str	r2, [r3]
 718              		.syntax unified
 719              	@ 821 "Generated_Source\PSoC5\RTOS_queue.c" 1
 720 0044 BFF34F8F 		dsb
 721              	@ 0 "" 2
 722              	@ 821 "Generated_Source\PSoC5\RTOS_queue.c" 1
 723 0048 BFF36F8F 		isb
 724              	@ 0 "" 2
 725              		.thumb
 726              		.syntax unified
 727 004c 18E0     		b	.L55
 728              	.LVL89:
 729              	.L53:
 832:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 730              		.loc 1 832 0
 731 004e 636A     		ldr	r3, [r4, #36]
 732 0050 6BB1     		cbz	r3, .L56
 834:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
 733              		.loc 1 834 0
 734 0052 04F12400 		add	r0, r4, #36
 735              	.LVL90:
 736 0056 FFF7FEFF 		bl	xTaskRemoveFromEventList
 737              	.LVL91:
 738 005a 88B1     		cbz	r0, .L55
 840:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
 739              		.loc 1 840 0
 740 005c 4FF08052 		mov	r2, #268435456
 741 0060 324B     		ldr	r3, .L66
 742 0062 1A60     		str	r2, [r3]
 743              		.syntax unified
 744              	@ 840 "Generated_Source\PSoC5\RTOS_queue.c" 1
 745 0064 BFF34F8F 		dsb
 746              	@ 0 "" 2
 747              	@ 840 "Generated_Source\PSoC5\RTOS_queue.c" 1
 748 0068 BFF36F8F 		isb
 749              	@ 0 "" 2
 750              		.thumb
 751              		.syntax unified
 752 006c 08E0     		b	.L55
 753              	.LVL92:
 754              	.L56:
 847:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 755              		.loc 1 847 0
 756 006e 38B1     		cbz	r0, .L55
 853:Generated_Source\PSoC5/RTOS_queue.c ****                             }
 757              		.loc 1 853 0
 758 0070 4FF08052 		mov	r2, #268435456
 759 0074 2D4B     		ldr	r3, .L66
 760 0076 1A60     		str	r2, [r3]
 761              		.syntax unified
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 69


 762              	@ 853 "Generated_Source\PSoC5\RTOS_queue.c" 1
 763 0078 BFF34F8F 		dsb
 764              	@ 0 "" 2
 765              	@ 853 "Generated_Source\PSoC5\RTOS_queue.c" 1
 766 007c BFF36F8F 		isb
 767              	@ 0 "" 2
 768              	.LVL93:
 769              		.thumb
 770              		.syntax unified
 771              	.L55:
 772              	.LBE27:
 897:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
 773              		.loc 1 897 0
 774 0080 FFF7FEFF 		bl	vPortExitCritical
 775              	.LVL94:
 898:Generated_Source\PSoC5/RTOS_queue.c ****             }
 776              		.loc 1 898 0
 777 0084 0120     		movs	r0, #1
 778 0086 4EE0     		b	.L57
 779              	.LVL95:
 780              	.L52:
 902:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 781              		.loc 1 902 0
 782 0088 019B     		ldr	r3, [sp, #4]
 783 008a 1BB9     		cbnz	r3, .L58
 906:Generated_Source\PSoC5/RTOS_queue.c **** 
 784              		.loc 1 906 0
 785 008c FFF7FEFF 		bl	vPortExitCritical
 786              	.LVL96:
 911:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 787              		.loc 1 911 0
 788 0090 0020     		movs	r0, #0
 789 0092 48E0     		b	.L57
 790              	.L58:
 913:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 791              		.loc 1 913 0
 792 0094 1DB9     		cbnz	r5, .L59
 917:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
 793              		.loc 1 917 0
 794 0096 02A8     		add	r0, sp, #8
 795 0098 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 796              	.LVL97:
 918:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 797              		.loc 1 918 0
 798 009c 0125     		movs	r5, #1
 799              	.LVL98:
 800              	.L59:
 927:Generated_Source\PSoC5/RTOS_queue.c **** 
 801              		.loc 1 927 0
 802 009e FFF7FEFF 		bl	vPortExitCritical
 803              	.LVL99:
 932:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
 804              		.loc 1 932 0
 805 00a2 FFF7FEFF 		bl	vTaskSuspendAll
 806              	.LVL100:
 933:Generated_Source\PSoC5/RTOS_queue.c **** 
 807              		.loc 1 933 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 70


 808 00a6 FFF7FEFF 		bl	vPortEnterCritical
 809              	.LVL101:
 810 00aa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 811 00ae 5BB2     		sxtb	r3, r3
 812 00b0 B3F1FF3F 		cmp	r3, #-1
 813 00b4 02D1     		bne	.L60
 933:Generated_Source\PSoC5/RTOS_queue.c **** 
 814              		.loc 1 933 0 is_stmt 0 discriminator 1
 815 00b6 0023     		movs	r3, #0
 816 00b8 84F84430 		strb	r3, [r4, #68]
 817              	.L60:
 933:Generated_Source\PSoC5/RTOS_queue.c **** 
 818              		.loc 1 933 0 discriminator 3
 819 00bc 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 820 00c0 5BB2     		sxtb	r3, r3
 821 00c2 B3F1FF3F 		cmp	r3, #-1
 822 00c6 02D1     		bne	.L61
 933:Generated_Source\PSoC5/RTOS_queue.c **** 
 823              		.loc 1 933 0 discriminator 4
 824 00c8 0023     		movs	r3, #0
 825 00ca 84F84530 		strb	r3, [r4, #69]
 826              	.L61:
 933:Generated_Source\PSoC5/RTOS_queue.c **** 
 827              		.loc 1 933 0 discriminator 6
 828 00ce FFF7FEFF 		bl	vPortExitCritical
 829              	.LVL102:
 936:Generated_Source\PSoC5/RTOS_queue.c ****         {
 830              		.loc 1 936 0 is_stmt 1 discriminator 6
 831 00d2 01A9     		add	r1, sp, #4
 832              	.LVL103:
 833 00d4 02A8     		add	r0, sp, #8
 834 00d6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 835              	.LVL104:
 836 00da F0B9     		cbnz	r0, .L62
 938:Generated_Source\PSoC5/RTOS_queue.c ****             {
 837              		.loc 1 938 0
 838 00dc 2046     		mov	r0, r4
 839 00de FFF7FEFF 		bl	prvIsQueueFull
 840              	.LVL105:
 841 00e2 A0B1     		cbz	r0, .L63
 941:Generated_Source\PSoC5/RTOS_queue.c **** 
 842              		.loc 1 941 0
 843 00e4 0199     		ldr	r1, [sp, #4]
 844 00e6 04F11000 		add	r0, r4, #16
 845 00ea FFF7FEFF 		bl	vTaskPlaceOnEventList
 846              	.LVL106:
 948:Generated_Source\PSoC5/RTOS_queue.c **** 
 847              		.loc 1 948 0
 848 00ee 2046     		mov	r0, r4
 849 00f0 FFF7FEFF 		bl	prvUnlockQueue
 850              	.LVL107:
 955:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 851              		.loc 1 955 0
 852 00f4 FFF7FEFF 		bl	xTaskResumeAll
 853              	.LVL108:
 854 00f8 0028     		cmp	r0, #0
 855 00fa 88D1     		bne	.L50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 71


 957:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 856              		.loc 1 957 0
 857 00fc 4FF08052 		mov	r2, #268435456
 858 0100 0A4B     		ldr	r3, .L66
 859 0102 1A60     		str	r2, [r3]
 860              		.syntax unified
 861              	@ 957 "Generated_Source\PSoC5\RTOS_queue.c" 1
 862 0104 BFF34F8F 		dsb
 863              	@ 0 "" 2
 864              	@ 957 "Generated_Source\PSoC5\RTOS_queue.c" 1
 865 0108 BFF36F8F 		isb
 866              	@ 0 "" 2
 867              		.thumb
 868              		.syntax unified
 869 010c 7FE7     		b	.L50
 870              	.L63:
 963:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
 871              		.loc 1 963 0
 872 010e 2046     		mov	r0, r4
 873 0110 FFF7FEFF 		bl	prvUnlockQueue
 874              	.LVL109:
 964:Generated_Source\PSoC5/RTOS_queue.c ****             }
 875              		.loc 1 964 0
 876 0114 FFF7FEFF 		bl	xTaskResumeAll
 877              	.LVL110:
 878 0118 79E7     		b	.L50
 879              	.L62:
 970:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
 880              		.loc 1 970 0
 881 011a 2046     		mov	r0, r4
 882 011c FFF7FEFF 		bl	prvUnlockQueue
 883              	.LVL111:
 971:Generated_Source\PSoC5/RTOS_queue.c **** 
 884              		.loc 1 971 0
 885 0120 FFF7FEFF 		bl	xTaskResumeAll
 886              	.LVL112:
 974:Generated_Source\PSoC5/RTOS_queue.c ****         }
 887              		.loc 1 974 0
 888 0124 0020     		movs	r0, #0
 889              	.LVL113:
 890              	.L57:
 977:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 891              		.loc 1 977 0
 892 0126 05B0     		add	sp, sp, #20
 893              		.cfi_def_cfa_offset 20
 894              		@ sp needed
 895 0128 F0BD     		pop	{r4, r5, r6, r7, pc}
 896              	.LVL114:
 897              	.L67:
 898 012a 00BF     		.align	2
 899              	.L66:
 900 012c 04ED00E0 		.word	-536810236
 901              		.cfi_endproc
 902              	.LFE70:
 903              		.size	xQueueGenericSend, .-xQueueGenericSend
 904              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 905              		.align	2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 72


 906              		.global	xQueueGenericSendFromISR
 907              		.thumb
 908              		.thumb_func
 909              		.type	xQueueGenericSendFromISR, %function
 910              	xQueueGenericSendFromISR:
 911              	.LFB71:
 984:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
 912              		.loc 1 984 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              	.LVL115:
 917 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 918              		.cfi_def_cfa_offset 32
 919              		.cfi_offset 3, -32
 920              		.cfi_offset 4, -28
 921              		.cfi_offset 5, -24
 922              		.cfi_offset 6, -20
 923              		.cfi_offset 7, -16
 924              		.cfi_offset 8, -12
 925              		.cfi_offset 9, -8
 926              		.cfi_offset 14, -4
 927              	.LVL116:
 928              	.LBB28:
 929              	.LBB29:
 930              		.file 2 "g:\\project\\psocwagen\\psoc\\ucll_koen_lib.cylib\\myfreertos\\source\\portable\\gcc\\arm
   1:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*
   2:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * FreeRTOS Kernel V10.4.0
   3:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
   5:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * subject to the following conditions:
  11:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  12:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * copies or substantial portions of the Software.
  14:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  15:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  22:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * https://www.FreeRTOS.org
  23:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * https://github.com/FreeRTOS
  24:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  25:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * 1 tab == 4 spaces!
  26:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  */
  27:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  28:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  29:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** #ifndef PORTMACRO_H
  30:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define PORTMACRO_H
  31:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 73


  32:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifdef __cplusplus
  33:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         extern "C" {
  34:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
  35:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  36:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------
  37:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * Port specific definitions.
  38:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  39:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * given hardware and compiler.
  41:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *
  42:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * These settings should not be altered.
  43:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  *-----------------------------------------------------------
  44:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  */
  45:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  46:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Type definitions. */
  47:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portCHAR          char
  48:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portFLOAT         float
  49:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portDOUBLE        double
  50:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portLONG          long
  51:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSHORT         short
  52:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portBASE_TYPE     long
  54:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  55:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     typedef long             BaseType_t;
  57:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  59:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         typedef uint16_t     TickType_t;
  61:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #else
  63:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         typedef uint32_t     TickType_t;
  64:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  66:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * not need to be guarded with a critical section. */
  68:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
  70:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
  71:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  72:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Architecture specifics. */
  73:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
  78:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  79:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Scheduler utilities. */
  80:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portYIELD()                                 \
  81:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {                                                   \
  82:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****                                                         \
  85:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile ( "isb" );                                  \
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 74


  89:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
  90:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  91:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
  96:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
  97:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Critical section management. */
  98:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     extern void vPortEnterCritical( void );
  99:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     extern void vPortExitCritical( void );
 100:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 107:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 108:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 109:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****  * (which build with all the ports) will build. */
 112:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 115:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 116:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Tickless idle/low power functionality. */
 117:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 121:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 122:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 123:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Architecture specific optimisations. */
 124:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 127:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 128:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 130:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Generic helper function. */
 131:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         {
 133:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             uint8_t ucReturn;
 134:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 135:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 137:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             return ucReturn;
 138:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         }
 139:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 140:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Check the configuration. */
 141:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #endif
 144:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 145:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* Store/clear the ready priorities in a bit map. */
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 75


 146:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 149:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 150:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 151:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 153:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 155:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 156:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 157:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifdef configASSERT
 158:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 161:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 162:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /* portNOP() is not required by this port. */
 163:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portNOP()
 164:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 165:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #define portINLINE              __inline
 166:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 167:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #ifndef portFORCE_INLINE
 168:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     #endif
 170:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 171:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 172:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 173:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 174:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 175:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         uint32_t ulCurrentInterrupt;
 176:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         BaseType_t xReturn;
 177:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 178:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 179:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 180:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 181:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         if( ulCurrentInterrupt == 0 )
 182:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         {
 183:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             xReturn = pdFALSE;
 184:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         }
 185:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         else
 186:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         {
 187:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             xReturn = pdTRUE;
 188:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         }
 189:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 190:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         return xReturn;
 191:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
 192:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 193:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 194:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 195:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 197:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         uint32_t ulNewBASEPRI;
 198:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 199:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile
 200:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 201:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	mov %0, %1												\n"\
 202:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	msr basepri, %0											\n"\
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 76


 203:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	isb														\n"\
 204:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	dsb														\n"\
 205:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 206:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         );
 207:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
 208:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 209:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 210:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 211:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 213:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile
 931              		.loc 2 215 0
 932              		.syntax unified
 933              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 934 0004 EFF31187 			mrs r7, basepri											
 935 0008 4FF00404 		mov r4, #4												
 936 000c 84F31188 		msr basepri, r4											
 937 0010 BFF36F8F 		isb														
 938 0014 BFF34F8F 		dsb														
 939              	
 940              	@ 0 "" 2
 941              		.thumb
 942              		.syntax unified
 943              	.LBE29:
 944              	.LBE28:
1016:Generated_Source\PSoC5/RTOS_queue.c ****         {
 945              		.loc 1 1016 0
 946 0018 856B     		ldr	r5, [r0, #56]
 947 001a C46B     		ldr	r4, [r0, #60]
 948 001c A542     		cmp	r5, r4
 949 001e 01D3     		bcc	.L69
1016:Generated_Source\PSoC5/RTOS_queue.c ****         {
 950              		.loc 1 1016 0 is_stmt 0 discriminator 1
 951 0020 022B     		cmp	r3, #2
 952 0022 33D1     		bne	.L74
 953              	.L69:
 954 0024 1E46     		mov	r6, r3
 955 0026 9046     		mov	r8, r2
 956 0028 0546     		mov	r5, r0
 957              	.LBB30:
1018:Generated_Source\PSoC5/RTOS_queue.c ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 958              		.loc 1 1018 0 is_stmt 1
 959 002a 90F84540 		ldrb	r4, [r0, #69]	@ zero_extendqisi2
 960 002e 64B2     		sxtb	r4, r4
 961              	.LVL117:
1019:Generated_Source\PSoC5/RTOS_queue.c **** 
 962              		.loc 1 1019 0
 963 0030 D0F83890 		ldr	r9, [r0, #56]
 964              	.LVL118:
1028:Generated_Source\PSoC5/RTOS_queue.c **** 
 965              		.loc 1 1028 0
 966 0034 1A46     		mov	r2, r3
 967              	.LVL119:
 968 0036 FFF7FEFF 		bl	prvCopyDataToQueue
 969              	.LVL120:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 77


1032:Generated_Source\PSoC5/RTOS_queue.c ****             {
 970              		.loc 1 1032 0
 971 003a B4F1FF3F 		cmp	r4, #-1
 972 003e 1FD1     		bne	.L71
1036:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 973              		.loc 1 1036 0
 974 0040 AB6C     		ldr	r3, [r5, #72]
 975 0042 7BB1     		cbz	r3, .L72
1038:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 976              		.loc 1 1038 0
 977 0044 022E     		cmp	r6, #2
 978 0046 02D1     		bne	.L73
1038:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 979              		.loc 1 1038 0 is_stmt 0 discriminator 1
 980 0048 B9F1000F 		cmp	r9, #0
 981 004c 20D1     		bne	.L75
 982              	.L73:
1045:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 983              		.loc 1 1045 0 is_stmt 1
 984 004e 2846     		mov	r0, r5
 985 0050 FFF7FEFF 		bl	prvNotifyQueueSetContainer
 986              	.LVL121:
 987 0054 F0B1     		cbz	r0, .L76
1050:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
 988              		.loc 1 1050 0
 989 0056 B8F1000F 		cmp	r8, #0
 990 005a 1DD0     		beq	.L77
1052:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
 991              		.loc 1 1052 0
 992 005c 0120     		movs	r0, #1
 993 005e C8F80000 		str	r0, [r8]
 994 0062 20E0     		b	.L70
 995              	.L72:
1066:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 996              		.loc 1 1066 0
 997 0064 6B6A     		ldr	r3, [r5, #36]
 998 0066 CBB1     		cbz	r3, .L78
1068:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
 999              		.loc 1 1068 0
 1000 0068 05F12400 		add	r0, r5, #36
 1001 006c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1002              	.LVL122:
 1003 0070 B0B1     		cbz	r0, .L79
1072:Generated_Source\PSoC5/RTOS_queue.c ****                                     {
 1004              		.loc 1 1072 0
 1005 0072 B8F1000F 		cmp	r8, #0
 1006 0076 15D0     		beq	.L80
1074:Generated_Source\PSoC5/RTOS_queue.c ****                                     }
 1007              		.loc 1 1074 0
 1008 0078 0120     		movs	r0, #1
 1009 007a C8F80000 		str	r0, [r8]
 1010 007e 12E0     		b	.L70
 1011              	.L71:
1130:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1012              		.loc 1 1130 0
 1013 0080 0134     		adds	r4, r4, #1
 1014              	.LVL123:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 78


 1015 0082 64B2     		sxtb	r4, r4
 1016              	.LVL124:
 1017 0084 85F84540 		strb	r4, [r5, #69]
1133:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1018              		.loc 1 1133 0
 1019 0088 0120     		movs	r0, #1
 1020 008a 0CE0     		b	.L70
 1021              	.LVL125:
 1022              	.L74:
 1023              	.LBE30:
1138:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1024              		.loc 1 1138 0
 1025 008c 0020     		movs	r0, #0
 1026              	.LVL126:
 1027 008e 0AE0     		b	.L70
 1028              	.LVL127:
 1029              	.L75:
 1030              	.LBB31:
1133:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1031              		.loc 1 1133 0
 1032 0090 0120     		movs	r0, #1
 1033 0092 08E0     		b	.L70
 1034              	.L76:
 1035 0094 0120     		movs	r0, #1
 1036 0096 06E0     		b	.L70
 1037              	.L77:
 1038 0098 0120     		movs	r0, #1
 1039 009a 04E0     		b	.L70
 1040              	.L78:
 1041 009c 0120     		movs	r0, #1
 1042 009e 02E0     		b	.L70
 1043              	.L79:
 1044 00a0 0120     		movs	r0, #1
 1045 00a2 00E0     		b	.L70
 1046              	.L80:
 1047 00a4 0120     		movs	r0, #1
 1048              	.LVL128:
 1049              	.L70:
 1050              	.LBE31:
 1051              	.LBB32:
 1052              	.LBB33:
 216:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 217:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	mrs %0, basepri											\n"\
 218:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	mov %1, %2												\n"\
 219:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	msr basepri, %1											\n"\
 220:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	isb														\n"\
 221:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             "	dsb														\n"\
 222:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 223:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         );
 224:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 225:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 226:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****          * warnings. */
 227:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         return ulOriginalBASEPRI;
 228:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     }
 229:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** /*-----------------------------------------------------------*/
 230:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h **** 
 231:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 79


 232:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****     {
 233:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         __asm volatile
 1053              		.loc 2 233 0
 1054              		.syntax unified
 1055              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1056 00a6 87F31188 			msr basepri, r7	
 1057              	@ 0 "" 2
 1058              	.LVL129:
 1059              		.thumb
 1060              		.syntax unified
 1061              	.LBE33:
 1062              	.LBE32:
1144:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 1063              		.loc 1 1144 0
 1064 00aa BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1065              		.cfi_endproc
 1066              	.LFE71:
 1067              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1068 00ae 00BF     		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1069              		.align	2
 1070              		.global	xQueueGiveFromISR
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	xQueueGiveFromISR, %function
 1074              	xQueueGiveFromISR:
 1075              	.LFB72:
1149:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
 1076              		.loc 1 1149 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              	.LVL130:
 1081 0000 38B5     		push	{r3, r4, r5, lr}
 1082              		.cfi_def_cfa_offset 16
 1083              		.cfi_offset 3, -16
 1084              		.cfi_offset 4, -12
 1085              		.cfi_offset 5, -8
 1086              		.cfi_offset 14, -4
 1087              	.LVL131:
 1088              	.LBB34:
 1089              	.LBB35:
 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 1090              		.loc 2 215 0
 1091              		.syntax unified
 1092              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1093 0002 EFF31184 			mrs r4, basepri											
 1094 0006 4FF00403 		mov r3, #4												
 1095 000a 83F31188 		msr basepri, r3											
 1096 000e BFF36F8F 		isb														
 1097 0012 BFF34F8F 		dsb														
 1098              	
 1099              	@ 0 "" 2
 1100              		.thumb
 1101              		.syntax unified
 1102              	.LBE35:
 1103              	.LBE34:
 1104              	.LBB36:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 80


1189:Generated_Source\PSoC5/RTOS_queue.c **** 
 1105              		.loc 1 1189 0
 1106 0016 826B     		ldr	r2, [r0, #56]
 1107              	.LVL132:
1194:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1108              		.loc 1 1194 0
 1109 0018 C36B     		ldr	r3, [r0, #60]
 1110 001a 9A42     		cmp	r2, r3
 1111 001c 21D2     		bcs	.L86
 1112              	.LBB37:
1196:Generated_Source\PSoC5/RTOS_queue.c **** 
 1113              		.loc 1 1196 0
 1114 001e 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 1115 0022 5BB2     		sxtb	r3, r3
 1116              	.LVL133:
1206:Generated_Source\PSoC5/RTOS_queue.c **** 
 1117              		.loc 1 1206 0
 1118 0024 0132     		adds	r2, r2, #1
 1119              	.LVL134:
 1120 0026 8263     		str	r2, [r0, #56]
1210:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1121              		.loc 1 1210 0
 1122 0028 B3F1FF3F 		cmp	r3, #-1
 1123 002c 13D1     		bne	.L84
 1124 002e 0D46     		mov	r5, r1
1214:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 1125              		.loc 1 1214 0
 1126 0030 836C     		ldr	r3, [r0, #72]
 1127              	.LVL135:
 1128 0032 33B1     		cbz	r3, .L85
1216:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 1129              		.loc 1 1216 0
 1130 0034 FFF7FEFF 		bl	prvNotifyQueueSetContainer
 1131              	.LVL136:
 1132 0038 A8B1     		cbz	r0, .L87
1221:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
 1133              		.loc 1 1221 0
 1134 003a B5B1     		cbz	r5, .L88
1223:Generated_Source\PSoC5/RTOS_queue.c ****                                 }
 1135              		.loc 1 1223 0
 1136 003c 0120     		movs	r0, #1
 1137 003e 2860     		str	r0, [r5]
 1138 0040 1AE0     		b	.L83
 1139              	.LVL137:
 1140              	.L85:
1237:Generated_Source\PSoC5/RTOS_queue.c ****                             {
 1141              		.loc 1 1237 0
 1142 0042 436A     		ldr	r3, [r0, #36]
 1143 0044 9BB1     		cbz	r3, .L89
1239:Generated_Source\PSoC5/RTOS_queue.c ****                                 {
 1144              		.loc 1 1239 0
 1145 0046 2430     		adds	r0, r0, #36
 1146              	.LVL138:
 1147 0048 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1148              	.LVL139:
 1149 004c 88B1     		cbz	r0, .L90
1243:Generated_Source\PSoC5/RTOS_queue.c ****                                     {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 81


 1150              		.loc 1 1243 0
 1151 004e 95B1     		cbz	r5, .L91
1245:Generated_Source\PSoC5/RTOS_queue.c ****                                     }
 1152              		.loc 1 1245 0
 1153 0050 0120     		movs	r0, #1
 1154 0052 2860     		str	r0, [r5]
 1155 0054 10E0     		b	.L83
 1156              	.LVL140:
 1157              	.L84:
1298:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1158              		.loc 1 1298 0
 1159 0056 0133     		adds	r3, r3, #1
 1160              	.LVL141:
 1161 0058 5BB2     		sxtb	r3, r3
 1162              	.LVL142:
 1163 005a 80F84530 		strb	r3, [r0, #69]
1301:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1164              		.loc 1 1301 0
 1165 005e 0120     		movs	r0, #1
 1166              	.LVL143:
 1167 0060 0AE0     		b	.L83
 1168              	.LVL144:
 1169              	.L86:
 1170              	.LBE37:
1306:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1171              		.loc 1 1306 0
 1172 0062 0020     		movs	r0, #0
 1173              	.LVL145:
 1174 0064 08E0     		b	.L83
 1175              	.LVL146:
 1176              	.L87:
 1177              	.LBB38:
1301:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1178              		.loc 1 1301 0
 1179 0066 0120     		movs	r0, #1
 1180 0068 06E0     		b	.L83
 1181              	.L88:
 1182 006a 0120     		movs	r0, #1
 1183 006c 04E0     		b	.L83
 1184              	.LVL147:
 1185              	.L89:
 1186 006e 0120     		movs	r0, #1
 1187              	.LVL148:
 1188 0070 02E0     		b	.L83
 1189              	.LVL149:
 1190              	.L90:
 1191 0072 0120     		movs	r0, #1
 1192 0074 00E0     		b	.L83
 1193              	.L91:
 1194 0076 0120     		movs	r0, #1
 1195              	.LVL150:
 1196              	.L83:
 1197              	.LBE38:
 1198              	.LBE36:
 1199              	.LBB39:
 1200              	.LBB40:
 1201              		.loc 2 233 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 82


 1202              		.syntax unified
 1203              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1204 0078 84F31188 			msr basepri, r4	
 1205              	@ 0 "" 2
 1206              	.LVL151:
 1207              		.thumb
 1208              		.syntax unified
 1209              	.LBE40:
 1210              	.LBE39:
1312:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 1211              		.loc 1 1312 0
 1212 007c 38BD     		pop	{r3, r4, r5, pc}
 1213              		.cfi_endproc
 1214              	.LFE72:
 1215              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1216 007e 00BF     		.section	.text.xQueueReceive,"ax",%progbits
 1217              		.align	2
 1218              		.global	xQueueReceive
 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	xQueueReceive, %function
 1222              	xQueueReceive:
 1223              	.LFB73:
1318:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 1224              		.loc 1 1318 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 16
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              	.LVL152:
 1229 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1230              		.cfi_def_cfa_offset 20
 1231              		.cfi_offset 4, -20
 1232              		.cfi_offset 5, -16
 1233              		.cfi_offset 6, -12
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 85B0     		sub	sp, sp, #20
 1237              		.cfi_def_cfa_offset 40
 1238 0004 0446     		mov	r4, r0
 1239 0006 0F46     		mov	r7, r1
 1240 0008 0192     		str	r2, [sp, #4]
 1241              	.LVL153:
1319:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
 1242              		.loc 1 1319 0
 1243 000a 0026     		movs	r6, #0
 1244              	.LVL154:
 1245              	.L94:
1342:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1246              		.loc 1 1342 0
 1247 000c FFF7FEFF 		bl	vPortEnterCritical
 1248              	.LVL155:
 1249              	.LBB41:
1344:Generated_Source\PSoC5/RTOS_queue.c **** 
 1250              		.loc 1 1344 0
 1251 0010 A56B     		ldr	r5, [r4, #56]
 1252              	.LVL156:
1348:Generated_Source\PSoC5/RTOS_queue.c ****             {
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 83


 1253              		.loc 1 1348 0
 1254 0012 C5B1     		cbz	r5, .L95
1351:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_RECEIVE( pxQueue );
 1255              		.loc 1 1351 0
 1256 0014 3946     		mov	r1, r7
 1257 0016 2046     		mov	r0, r4
 1258 0018 FFF7FEFF 		bl	prvCopyDataFromQueue
 1259              	.LVL157:
1353:Generated_Source\PSoC5/RTOS_queue.c **** 
 1260              		.loc 1 1353 0
 1261 001c 013D     		subs	r5, r5, #1
 1262              	.LVL158:
 1263 001e A563     		str	r5, [r4, #56]
1358:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1264              		.loc 1 1358 0
 1265 0020 2369     		ldr	r3, [r4, #16]
 1266 0022 63B1     		cbz	r3, .L96
1360:Generated_Source\PSoC5/RTOS_queue.c ****                     {
 1267              		.loc 1 1360 0
 1268 0024 04F11000 		add	r0, r4, #16
 1269 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1270              	.LVL159:
 1271 002c 38B1     		cbz	r0, .L96
1362:Generated_Source\PSoC5/RTOS_queue.c ****                     }
 1272              		.loc 1 1362 0
 1273 002e 4FF08052 		mov	r2, #268435456
 1274 0032 304B     		ldr	r3, .L106
 1275 0034 1A60     		str	r2, [r3]
 1276              		.syntax unified
 1277              	@ 1362 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1278 0036 BFF34F8F 		dsb
 1279              	@ 0 "" 2
 1280              	@ 1362 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1281 003a BFF36F8F 		isb
 1282              	@ 0 "" 2
 1283              		.thumb
 1284              		.syntax unified
 1285              	.L96:
1374:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
 1286              		.loc 1 1374 0
 1287 003e FFF7FEFF 		bl	vPortExitCritical
 1288              	.LVL160:
1375:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1289              		.loc 1 1375 0
 1290 0042 0120     		movs	r0, #1
 1291 0044 53E0     		b	.L97
 1292              	.LVL161:
 1293              	.L95:
1379:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1294              		.loc 1 1379 0
 1295 0046 019B     		ldr	r3, [sp, #4]
 1296 0048 1BB9     		cbnz	r3, .L98
1383:Generated_Source\PSoC5/RTOS_queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
 1297              		.loc 1 1383 0
 1298 004a FFF7FEFF 		bl	vPortExitCritical
 1299              	.LVL162:
1385:Generated_Source\PSoC5/RTOS_queue.c ****                 }
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 84


 1300              		.loc 1 1385 0
 1301 004e 0020     		movs	r0, #0
 1302 0050 4DE0     		b	.L97
 1303              	.L98:
1387:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1304              		.loc 1 1387 0
 1305 0052 1EB9     		cbnz	r6, .L99
1391:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
 1306              		.loc 1 1391 0
 1307 0054 02A8     		add	r0, sp, #8
 1308 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1309              	.LVL163:
1392:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1310              		.loc 1 1392 0
 1311 005a 0126     		movs	r6, #1
 1312              	.LVL164:
 1313              	.L99:
 1314              	.LBE41:
1401:Generated_Source\PSoC5/RTOS_queue.c **** 
 1315              		.loc 1 1401 0
 1316 005c FFF7FEFF 		bl	vPortExitCritical
 1317              	.LVL165:
1406:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
 1318              		.loc 1 1406 0
 1319 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1320              	.LVL166:
1407:Generated_Source\PSoC5/RTOS_queue.c **** 
 1321              		.loc 1 1407 0
 1322 0064 FFF7FEFF 		bl	vPortEnterCritical
 1323              	.LVL167:
 1324 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1325 006c 5BB2     		sxtb	r3, r3
 1326 006e B3F1FF3F 		cmp	r3, #-1
 1327 0072 02D1     		bne	.L100
1407:Generated_Source\PSoC5/RTOS_queue.c **** 
 1328              		.loc 1 1407 0 is_stmt 0 discriminator 1
 1329 0074 0023     		movs	r3, #0
 1330 0076 84F84430 		strb	r3, [r4, #68]
 1331              	.L100:
1407:Generated_Source\PSoC5/RTOS_queue.c **** 
 1332              		.loc 1 1407 0 discriminator 3
 1333 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1334 007e 5BB2     		sxtb	r3, r3
 1335 0080 B3F1FF3F 		cmp	r3, #-1
 1336 0084 02D1     		bne	.L101
1407:Generated_Source\PSoC5/RTOS_queue.c **** 
 1337              		.loc 1 1407 0 discriminator 4
 1338 0086 0023     		movs	r3, #0
 1339 0088 84F84530 		strb	r3, [r4, #69]
 1340              	.L101:
1407:Generated_Source\PSoC5/RTOS_queue.c **** 
 1341              		.loc 1 1407 0 discriminator 6
 1342 008c FFF7FEFF 		bl	vPortExitCritical
 1343              	.LVL168:
1410:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1344              		.loc 1 1410 0 is_stmt 1 discriminator 6
 1345 0090 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 85


 1346              	.LVL169:
 1347 0092 02A8     		add	r0, sp, #8
 1348 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1349              	.LVL170:
 1350 0098 F0B9     		cbnz	r0, .L102
1414:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1351              		.loc 1 1414 0
 1352 009a 2046     		mov	r0, r4
 1353 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1354              	.LVL171:
 1355 00a0 A0B1     		cbz	r0, .L103
1417:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
 1356              		.loc 1 1417 0
 1357 00a2 0199     		ldr	r1, [sp, #4]
 1358 00a4 04F12400 		add	r0, r4, #36
 1359 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1360              	.LVL172:
1418:Generated_Source\PSoC5/RTOS_queue.c **** 
 1361              		.loc 1 1418 0
 1362 00ac 2046     		mov	r0, r4
 1363 00ae FFF7FEFF 		bl	prvUnlockQueue
 1364              	.LVL173:
1420:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1365              		.loc 1 1420 0
 1366 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1367              	.LVL174:
 1368 00b6 0028     		cmp	r0, #0
 1369 00b8 A8D1     		bne	.L94
1422:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1370              		.loc 1 1422 0
 1371 00ba 4FF08052 		mov	r2, #268435456
 1372 00be 0D4B     		ldr	r3, .L106
 1373 00c0 1A60     		str	r2, [r3]
 1374              		.syntax unified
 1375              	@ 1422 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1376 00c2 BFF34F8F 		dsb
 1377              	@ 0 "" 2
 1378              	@ 1422 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1379 00c6 BFF36F8F 		isb
 1380              	@ 0 "" 2
 1381              		.thumb
 1382              		.syntax unified
 1383 00ca 9FE7     		b	.L94
 1384              	.L103:
1433:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
 1385              		.loc 1 1433 0
 1386 00cc 2046     		mov	r0, r4
 1387 00ce FFF7FEFF 		bl	prvUnlockQueue
 1388              	.LVL175:
1434:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1389              		.loc 1 1434 0
 1390 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1391              	.LVL176:
 1392 00d6 99E7     		b	.L94
 1393              	.L102:
1441:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
 1394              		.loc 1 1441 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 86


 1395 00d8 2046     		mov	r0, r4
 1396 00da FFF7FEFF 		bl	prvUnlockQueue
 1397              	.LVL177:
1442:Generated_Source\PSoC5/RTOS_queue.c **** 
 1398              		.loc 1 1442 0
 1399 00de FFF7FEFF 		bl	xTaskResumeAll
 1400              	.LVL178:
1444:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1401              		.loc 1 1444 0
 1402 00e2 2046     		mov	r0, r4
 1403 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1404              	.LVL179:
 1405 00e8 0028     		cmp	r0, #0
 1406 00ea 8FD0     		beq	.L94
1447:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1407              		.loc 1 1447 0
 1408 00ec 0020     		movs	r0, #0
 1409              	.LVL180:
 1410              	.L97:
1455:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 1411              		.loc 1 1455 0
 1412 00ee 05B0     		add	sp, sp, #20
 1413              		.cfi_def_cfa_offset 20
 1414              		@ sp needed
 1415 00f0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1416              	.LVL181:
 1417              	.L107:
 1418 00f2 00BF     		.align	2
 1419              	.L106:
 1420 00f4 04ED00E0 		.word	-536810236
 1421              		.cfi_endproc
 1422              	.LFE73:
 1423              		.size	xQueueReceive, .-xQueueReceive
 1424              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1425              		.align	2
 1426              		.global	xQueueSemaphoreTake
 1427              		.thumb
 1428              		.thumb_func
 1429              		.type	xQueueSemaphoreTake, %function
 1430              	xQueueSemaphoreTake:
 1431              	.LFB74:
1460:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 1432              		.loc 1 1460 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 16
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              	.LVL182:
 1437 0000 30B5     		push	{r4, r5, lr}
 1438              		.cfi_def_cfa_offset 12
 1439              		.cfi_offset 4, -12
 1440              		.cfi_offset 5, -8
 1441              		.cfi_offset 14, -4
 1442 0002 85B0     		sub	sp, sp, #20
 1443              		.cfi_def_cfa_offset 32
 1444 0004 0446     		mov	r4, r0
 1445 0006 0191     		str	r1, [sp, #4]
 1446              	.LVL183:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 87


1461:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
 1447              		.loc 1 1461 0
 1448 0008 0025     		movs	r5, #0
 1449              	.LVL184:
 1450              	.L109:
1488:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1451              		.loc 1 1488 0
 1452 000a FFF7FEFF 		bl	vPortEnterCritical
 1453              	.LVL185:
 1454              	.LBB42:
1492:Generated_Source\PSoC5/RTOS_queue.c **** 
 1455              		.loc 1 1492 0
 1456 000e A36B     		ldr	r3, [r4, #56]
 1457              	.LVL186:
1496:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1458              		.loc 1 1496 0
 1459 0010 A3B1     		cbz	r3, .L110
1502:Generated_Source\PSoC5/RTOS_queue.c **** 
 1460              		.loc 1 1502 0
 1461 0012 013B     		subs	r3, r3, #1
 1462              	.LVL187:
 1463 0014 A363     		str	r3, [r4, #56]
1521:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1464              		.loc 1 1521 0
 1465 0016 2369     		ldr	r3, [r4, #16]
 1466              	.LVL188:
 1467 0018 63B1     		cbz	r3, .L111
1523:Generated_Source\PSoC5/RTOS_queue.c ****                     {
 1468              		.loc 1 1523 0
 1469 001a 04F11000 		add	r0, r4, #16
 1470 001e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1471              	.LVL189:
 1472 0022 38B1     		cbz	r0, .L111
1525:Generated_Source\PSoC5/RTOS_queue.c ****                     }
 1473              		.loc 1 1525 0
 1474 0024 4FF08052 		mov	r2, #268435456
 1475 0028 2F4B     		ldr	r3, .L121
 1476 002a 1A60     		str	r2, [r3]
 1477              		.syntax unified
 1478              	@ 1525 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1479 002c BFF34F8F 		dsb
 1480              	@ 0 "" 2
 1481              	@ 1525 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1482 0030 BFF36F8F 		isb
 1483              	@ 0 "" 2
 1484              		.thumb
 1485              		.syntax unified
 1486              	.L111:
1537:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
 1487              		.loc 1 1537 0
 1488 0034 FFF7FEFF 		bl	vPortExitCritical
 1489              	.LVL190:
1538:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1490              		.loc 1 1538 0
 1491 0038 0120     		movs	r0, #1
 1492 003a 53E0     		b	.L112
 1493              	.LVL191:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 88


 1494              	.L110:
1542:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1495              		.loc 1 1542 0
 1496 003c 019B     		ldr	r3, [sp, #4]
 1497              	.LVL192:
 1498 003e 1BB9     		cbnz	r3, .L113
1555:Generated_Source\PSoC5/RTOS_queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
 1499              		.loc 1 1555 0
 1500 0040 FFF7FEFF 		bl	vPortExitCritical
 1501              	.LVL193:
1557:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1502              		.loc 1 1557 0
 1503 0044 0020     		movs	r0, #0
 1504 0046 4DE0     		b	.L112
 1505              	.L113:
1559:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1506              		.loc 1 1559 0
 1507 0048 1DB9     		cbnz	r5, .L114
1563:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
 1508              		.loc 1 1563 0
 1509 004a 02A8     		add	r0, sp, #8
 1510 004c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1511              	.LVL194:
1564:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1512              		.loc 1 1564 0
 1513 0050 0125     		movs	r5, #1
 1514              	.LVL195:
 1515              	.L114:
 1516              	.LBE42:
1573:Generated_Source\PSoC5/RTOS_queue.c **** 
 1517              		.loc 1 1573 0
 1518 0052 FFF7FEFF 		bl	vPortExitCritical
 1519              	.LVL196:
1578:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
 1520              		.loc 1 1578 0
 1521 0056 FFF7FEFF 		bl	vTaskSuspendAll
 1522              	.LVL197:
1579:Generated_Source\PSoC5/RTOS_queue.c **** 
 1523              		.loc 1 1579 0
 1524 005a FFF7FEFF 		bl	vPortEnterCritical
 1525              	.LVL198:
 1526 005e 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1527 0062 5BB2     		sxtb	r3, r3
 1528 0064 B3F1FF3F 		cmp	r3, #-1
 1529 0068 02D1     		bne	.L115
1579:Generated_Source\PSoC5/RTOS_queue.c **** 
 1530              		.loc 1 1579 0 is_stmt 0 discriminator 1
 1531 006a 0023     		movs	r3, #0
 1532 006c 84F84430 		strb	r3, [r4, #68]
 1533              	.L115:
1579:Generated_Source\PSoC5/RTOS_queue.c **** 
 1534              		.loc 1 1579 0 discriminator 3
 1535 0070 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1536 0074 5BB2     		sxtb	r3, r3
 1537 0076 B3F1FF3F 		cmp	r3, #-1
 1538 007a 02D1     		bne	.L116
1579:Generated_Source\PSoC5/RTOS_queue.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 89


 1539              		.loc 1 1579 0 discriminator 4
 1540 007c 0023     		movs	r3, #0
 1541 007e 84F84530 		strb	r3, [r4, #69]
 1542              	.L116:
1579:Generated_Source\PSoC5/RTOS_queue.c **** 
 1543              		.loc 1 1579 0 discriminator 6
 1544 0082 FFF7FEFF 		bl	vPortExitCritical
 1545              	.LVL199:
1582:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1546              		.loc 1 1582 0 is_stmt 1 discriminator 6
 1547 0086 01A9     		add	r1, sp, #4
 1548              	.LVL200:
 1549 0088 02A8     		add	r0, sp, #8
 1550 008a FFF7FEFF 		bl	xTaskCheckForTimeOut
 1551              	.LVL201:
 1552 008e F0B9     		cbnz	r0, .L117
1588:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1553              		.loc 1 1588 0
 1554 0090 2046     		mov	r0, r4
 1555 0092 FFF7FEFF 		bl	prvIsQueueEmpty
 1556              	.LVL202:
 1557 0096 A0B1     		cbz	r0, .L118
1609:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
 1558              		.loc 1 1609 0
 1559 0098 0199     		ldr	r1, [sp, #4]
 1560 009a 04F12400 		add	r0, r4, #36
 1561 009e FFF7FEFF 		bl	vTaskPlaceOnEventList
 1562              	.LVL203:
1610:Generated_Source\PSoC5/RTOS_queue.c **** 
 1563              		.loc 1 1610 0
 1564 00a2 2046     		mov	r0, r4
 1565 00a4 FFF7FEFF 		bl	prvUnlockQueue
 1566              	.LVL204:
1612:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1567              		.loc 1 1612 0
 1568 00a8 FFF7FEFF 		bl	xTaskResumeAll
 1569              	.LVL205:
 1570 00ac 0028     		cmp	r0, #0
 1571 00ae ACD1     		bne	.L109
1614:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1572              		.loc 1 1614 0
 1573 00b0 4FF08052 		mov	r2, #268435456
 1574 00b4 0C4B     		ldr	r3, .L121
 1575 00b6 1A60     		str	r2, [r3]
 1576              		.syntax unified
 1577              	@ 1614 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1578 00b8 BFF34F8F 		dsb
 1579              	@ 0 "" 2
 1580              	@ 1614 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1581 00bc BFF36F8F 		isb
 1582              	@ 0 "" 2
 1583              		.thumb
 1584              		.syntax unified
 1585 00c0 A3E7     		b	.L109
 1586              	.L118:
1625:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
 1587              		.loc 1 1625 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 90


 1588 00c2 2046     		mov	r0, r4
 1589 00c4 FFF7FEFF 		bl	prvUnlockQueue
 1590              	.LVL206:
1626:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1591              		.loc 1 1626 0
 1592 00c8 FFF7FEFF 		bl	xTaskResumeAll
 1593              	.LVL207:
 1594 00cc 9DE7     		b	.L109
 1595              	.L117:
1632:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
 1596              		.loc 1 1632 0
 1597 00ce 2046     		mov	r0, r4
 1598 00d0 FFF7FEFF 		bl	prvUnlockQueue
 1599              	.LVL208:
1633:Generated_Source\PSoC5/RTOS_queue.c **** 
 1600              		.loc 1 1633 0
 1601 00d4 FFF7FEFF 		bl	xTaskResumeAll
 1602              	.LVL209:
1639:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1603              		.loc 1 1639 0
 1604 00d8 2046     		mov	r0, r4
 1605 00da FFF7FEFF 		bl	prvIsQueueEmpty
 1606              	.LVL210:
 1607 00de 0028     		cmp	r0, #0
 1608 00e0 93D0     		beq	.L109
1666:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1609              		.loc 1 1666 0
 1610 00e2 0020     		movs	r0, #0
 1611              	.L112:
1674:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 1612              		.loc 1 1674 0
 1613 00e4 05B0     		add	sp, sp, #20
 1614              		.cfi_def_cfa_offset 12
 1615              		@ sp needed
 1616 00e6 30BD     		pop	{r4, r5, pc}
 1617              	.LVL211:
 1618              	.L122:
 1619              		.align	2
 1620              	.L121:
 1621 00e8 04ED00E0 		.word	-536810236
 1622              		.cfi_endproc
 1623              	.LFE74:
 1624              		.size	xQueueSemaphoreTake, .-xQueueSemaphoreTake
 1625              		.section	.text.xQueuePeek,"ax",%progbits
 1626              		.align	2
 1627              		.global	xQueuePeek
 1628              		.thumb
 1629              		.thumb_func
 1630              		.type	xQueuePeek, %function
 1631              	xQueuePeek:
 1632              	.LFB75:
1680:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 1633              		.loc 1 1680 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 16
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              	.LVL212:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 91


 1638 0000 70B5     		push	{r4, r5, r6, lr}
 1639              		.cfi_def_cfa_offset 16
 1640              		.cfi_offset 4, -16
 1641              		.cfi_offset 5, -12
 1642              		.cfi_offset 6, -8
 1643              		.cfi_offset 14, -4
 1644 0002 84B0     		sub	sp, sp, #16
 1645              		.cfi_def_cfa_offset 32
 1646 0004 0446     		mov	r4, r0
 1647 0006 0E46     		mov	r6, r1
 1648 0008 0192     		str	r2, [sp, #4]
 1649              	.LVL213:
1681:Generated_Source\PSoC5/RTOS_queue.c ****     TimeOut_t xTimeOut;
 1650              		.loc 1 1681 0
 1651 000a 0025     		movs	r5, #0
 1652              	.LVL214:
 1653              	.L124:
1705:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1654              		.loc 1 1705 0
 1655 000c FFF7FEFF 		bl	vPortEnterCritical
 1656              	.LVL215:
 1657              	.LBB43:
1707:Generated_Source\PSoC5/RTOS_queue.c **** 
 1658              		.loc 1 1707 0
 1659 0010 A36B     		ldr	r3, [r4, #56]
 1660              	.LVL216:
1711:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1661              		.loc 1 1711 0
 1662 0012 C3B1     		cbz	r3, .L125
1716:Generated_Source\PSoC5/RTOS_queue.c **** 
 1663              		.loc 1 1716 0
 1664 0014 E568     		ldr	r5, [r4, #12]
 1665              	.LVL217:
1718:Generated_Source\PSoC5/RTOS_queue.c ****                 traceQUEUE_PEEK( pxQueue );
 1666              		.loc 1 1718 0
 1667 0016 3146     		mov	r1, r6
 1668 0018 2046     		mov	r0, r4
 1669 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1670              	.LVL218:
1722:Generated_Source\PSoC5/RTOS_queue.c **** 
 1671              		.loc 1 1722 0
 1672 001e E560     		str	r5, [r4, #12]
1726:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1673              		.loc 1 1726 0
 1674 0020 636A     		ldr	r3, [r4, #36]
 1675 0022 63B1     		cbz	r3, .L126
1728:Generated_Source\PSoC5/RTOS_queue.c ****                     {
 1676              		.loc 1 1728 0
 1677 0024 04F12400 		add	r0, r4, #36
 1678 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1679              	.LVL219:
 1680 002c 38B1     		cbz	r0, .L126
1731:Generated_Source\PSoC5/RTOS_queue.c ****                     }
 1681              		.loc 1 1731 0
 1682 002e 4FF08052 		mov	r2, #268435456
 1683 0032 304B     		ldr	r3, .L136
 1684 0034 1A60     		str	r2, [r3]
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 92


 1685              		.syntax unified
 1686              	@ 1731 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1687 0036 BFF34F8F 		dsb
 1688              	@ 0 "" 2
 1689              	@ 1731 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1690 003a BFF36F8F 		isb
 1691              	@ 0 "" 2
 1692              		.thumb
 1693              		.syntax unified
 1694              	.L126:
1743:Generated_Source\PSoC5/RTOS_queue.c ****                 return pdPASS;
 1695              		.loc 1 1743 0
 1696 003e FFF7FEFF 		bl	vPortExitCritical
 1697              	.LVL220:
1744:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1698              		.loc 1 1744 0
 1699 0042 0120     		movs	r0, #1
 1700 0044 53E0     		b	.L127
 1701              	.LVL221:
 1702              	.L125:
1748:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1703              		.loc 1 1748 0
 1704 0046 019B     		ldr	r3, [sp, #4]
 1705              	.LVL222:
 1706 0048 1BB9     		cbnz	r3, .L128
1752:Generated_Source\PSoC5/RTOS_queue.c ****                     traceQUEUE_PEEK_FAILED( pxQueue );
 1707              		.loc 1 1752 0
 1708 004a FFF7FEFF 		bl	vPortExitCritical
 1709              	.LVL223:
1754:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1710              		.loc 1 1754 0
 1711 004e 0020     		movs	r0, #0
 1712 0050 4DE0     		b	.L127
 1713              	.L128:
1756:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1714              		.loc 1 1756 0
 1715 0052 1DB9     		cbnz	r5, .L129
1761:Generated_Source\PSoC5/RTOS_queue.c ****                     xEntryTimeSet = pdTRUE;
 1716              		.loc 1 1761 0
 1717 0054 02A8     		add	r0, sp, #8
 1718 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1719              	.LVL224:
1762:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1720              		.loc 1 1762 0
 1721 005a 0125     		movs	r5, #1
 1722              	.LVL225:
 1723              	.L129:
 1724              	.LBE43:
1771:Generated_Source\PSoC5/RTOS_queue.c **** 
 1725              		.loc 1 1771 0
 1726 005c FFF7FEFF 		bl	vPortExitCritical
 1727              	.LVL226:
1776:Generated_Source\PSoC5/RTOS_queue.c ****         prvLockQueue( pxQueue );
 1728              		.loc 1 1776 0
 1729 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1730              	.LVL227:
1777:Generated_Source\PSoC5/RTOS_queue.c **** 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 93


 1731              		.loc 1 1777 0
 1732 0064 FFF7FEFF 		bl	vPortEnterCritical
 1733              	.LVL228:
 1734 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1735 006c 5BB2     		sxtb	r3, r3
 1736 006e B3F1FF3F 		cmp	r3, #-1
 1737 0072 02D1     		bne	.L130
1777:Generated_Source\PSoC5/RTOS_queue.c **** 
 1738              		.loc 1 1777 0 is_stmt 0 discriminator 1
 1739 0074 0023     		movs	r3, #0
 1740 0076 84F84430 		strb	r3, [r4, #68]
 1741              	.L130:
1777:Generated_Source\PSoC5/RTOS_queue.c **** 
 1742              		.loc 1 1777 0 discriminator 3
 1743 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1744 007e 5BB2     		sxtb	r3, r3
 1745 0080 B3F1FF3F 		cmp	r3, #-1
 1746 0084 02D1     		bne	.L131
1777:Generated_Source\PSoC5/RTOS_queue.c **** 
 1747              		.loc 1 1777 0 discriminator 4
 1748 0086 0023     		movs	r3, #0
 1749 0088 84F84530 		strb	r3, [r4, #69]
 1750              	.L131:
1777:Generated_Source\PSoC5/RTOS_queue.c **** 
 1751              		.loc 1 1777 0 discriminator 6
 1752 008c FFF7FEFF 		bl	vPortExitCritical
 1753              	.LVL229:
1780:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1754              		.loc 1 1780 0 is_stmt 1 discriminator 6
 1755 0090 01A9     		add	r1, sp, #4
 1756              	.LVL230:
 1757 0092 02A8     		add	r0, sp, #8
 1758 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1759              	.LVL231:
 1760 0098 F0B9     		cbnz	r0, .L132
1784:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1761              		.loc 1 1784 0
 1762 009a 2046     		mov	r0, r4
 1763 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1764              	.LVL232:
 1765 00a0 A0B1     		cbz	r0, .L133
1787:Generated_Source\PSoC5/RTOS_queue.c ****                 prvUnlockQueue( pxQueue );
 1766              		.loc 1 1787 0
 1767 00a2 0199     		ldr	r1, [sp, #4]
 1768 00a4 04F12400 		add	r0, r4, #36
 1769 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1770              	.LVL233:
1788:Generated_Source\PSoC5/RTOS_queue.c **** 
 1771              		.loc 1 1788 0
 1772 00ac 2046     		mov	r0, r4
 1773 00ae FFF7FEFF 		bl	prvUnlockQueue
 1774              	.LVL234:
1790:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1775              		.loc 1 1790 0
 1776 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1777              	.LVL235:
 1778 00b6 0028     		cmp	r0, #0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 94


 1779 00b8 A8D1     		bne	.L124
1792:Generated_Source\PSoC5/RTOS_queue.c ****                 }
 1780              		.loc 1 1792 0
 1781 00ba 4FF08052 		mov	r2, #268435456
 1782 00be 0D4B     		ldr	r3, .L136
 1783 00c0 1A60     		str	r2, [r3]
 1784              		.syntax unified
 1785              	@ 1792 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1786 00c2 BFF34F8F 		dsb
 1787              	@ 0 "" 2
 1788              	@ 1792 "Generated_Source\PSoC5\RTOS_queue.c" 1
 1789 00c6 BFF36F8F 		isb
 1790              	@ 0 "" 2
 1791              		.thumb
 1792              		.syntax unified
 1793 00ca 9FE7     		b	.L124
 1794              	.L133:
1803:Generated_Source\PSoC5/RTOS_queue.c ****                 ( void ) xTaskResumeAll();
 1795              		.loc 1 1803 0
 1796 00cc 2046     		mov	r0, r4
 1797 00ce FFF7FEFF 		bl	prvUnlockQueue
 1798              	.LVL236:
1804:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1799              		.loc 1 1804 0
 1800 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1801              	.LVL237:
 1802 00d6 99E7     		b	.L124
 1803              	.L132:
1811:Generated_Source\PSoC5/RTOS_queue.c ****             ( void ) xTaskResumeAll();
 1804              		.loc 1 1811 0
 1805 00d8 2046     		mov	r0, r4
 1806 00da FFF7FEFF 		bl	prvUnlockQueue
 1807              	.LVL238:
1812:Generated_Source\PSoC5/RTOS_queue.c **** 
 1808              		.loc 1 1812 0
 1809 00de FFF7FEFF 		bl	xTaskResumeAll
 1810              	.LVL239:
1814:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1811              		.loc 1 1814 0
 1812 00e2 2046     		mov	r0, r4
 1813 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1814              	.LVL240:
 1815 00e8 0028     		cmp	r0, #0
 1816 00ea 8FD0     		beq	.L124
1817:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1817              		.loc 1 1817 0
 1818 00ec 0020     		movs	r0, #0
 1819              	.LVL241:
 1820              	.L127:
1825:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 1821              		.loc 1 1825 0
 1822 00ee 04B0     		add	sp, sp, #16
 1823              		.cfi_def_cfa_offset 16
 1824              		@ sp needed
 1825 00f0 70BD     		pop	{r4, r5, r6, pc}
 1826              	.LVL242:
 1827              	.L137:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 95


 1828 00f2 00BF     		.align	2
 1829              	.L136:
 1830 00f4 04ED00E0 		.word	-536810236
 1831              		.cfi_endproc
 1832              	.LFE75:
 1833              		.size	xQueuePeek, .-xQueuePeek
 1834              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1835              		.align	2
 1836              		.global	xQueueReceiveFromISR
 1837              		.thumb
 1838              		.thumb_func
 1839              		.type	xQueueReceiveFromISR, %function
 1840              	xQueueReceiveFromISR:
 1841              	.LFB76:
1831:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
 1842              		.loc 1 1831 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 0
 1845              		@ frame_needed = 0, uses_anonymous_args = 0
 1846              	.LVL243:
 1847 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1848              		.cfi_def_cfa_offset 24
 1849              		.cfi_offset 4, -24
 1850              		.cfi_offset 5, -20
 1851              		.cfi_offset 6, -16
 1852              		.cfi_offset 7, -12
 1853              		.cfi_offset 8, -8
 1854              		.cfi_offset 14, -4
 1855              	.LVL244:
 1856              	.LBB44:
 1857              	.LBB45:
 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 1858              		.loc 2 215 0
 1859              		.syntax unified
 1860              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1861 0004 EFF31186 			mrs r6, basepri											
 1862 0008 4FF00403 		mov r3, #4												
 1863 000c 83F31188 		msr basepri, r3											
 1864 0010 BFF36F8F 		isb														
 1865 0014 BFF34F8F 		dsb														
 1866              	
 1867              	@ 0 "" 2
 1868              		.thumb
 1869              		.syntax unified
 1870              	.LBE45:
 1871              	.LBE44:
 1872              	.LBB46:
1857:Generated_Source\PSoC5/RTOS_queue.c **** 
 1873              		.loc 1 1857 0
 1874 0018 846B     		ldr	r4, [r0, #56]
 1875              	.LVL245:
1860:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1876              		.loc 1 1860 0
 1877 001a FCB1     		cbz	r4, .L141
 1878 001c 9046     		mov	r8, r2
 1879 001e 0746     		mov	r7, r0
 1880              	.LBB47:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 96


1862:Generated_Source\PSoC5/RTOS_queue.c **** 
 1881              		.loc 1 1862 0
 1882 0020 90F84450 		ldrb	r5, [r0, #68]	@ zero_extendqisi2
 1883 0024 6DB2     		sxtb	r5, r5
 1884              	.LVL246:
1866:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 1885              		.loc 1 1866 0
 1886 0026 FFF7FEFF 		bl	prvCopyDataFromQueue
 1887              	.LVL247:
1867:Generated_Source\PSoC5/RTOS_queue.c **** 
 1888              		.loc 1 1867 0
 1889 002a 013C     		subs	r4, r4, #1
 1890              	.LVL248:
 1891 002c BC63     		str	r4, [r7, #56]
1873:Generated_Source\PSoC5/RTOS_queue.c ****             {
 1892              		.loc 1 1873 0
 1893 002e B5F1FF3F 		cmp	r5, #-1
 1894 0032 0DD1     		bne	.L140
1875:Generated_Source\PSoC5/RTOS_queue.c ****                 {
 1895              		.loc 1 1875 0
 1896 0034 3B69     		ldr	r3, [r7, #16]
 1897 0036 9BB1     		cbz	r3, .L142
1877:Generated_Source\PSoC5/RTOS_queue.c ****                     {
 1898              		.loc 1 1877 0
 1899 0038 07F11000 		add	r0, r7, #16
 1900 003c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1901              	.LVL249:
 1902 0040 80B1     		cbz	r0, .L143
1881:Generated_Source\PSoC5/RTOS_queue.c ****                         {
 1903              		.loc 1 1881 0
 1904 0042 B8F1000F 		cmp	r8, #0
 1905 0046 0FD0     		beq	.L144
1883:Generated_Source\PSoC5/RTOS_queue.c ****                         }
 1906              		.loc 1 1883 0
 1907 0048 0120     		movs	r0, #1
 1908 004a C8F80000 		str	r0, [r8]
 1909 004e 0CE0     		b	.L139
 1910              	.L140:
1906:Generated_Source\PSoC5/RTOS_queue.c ****             }
 1911              		.loc 1 1906 0
 1912 0050 0135     		adds	r5, r5, #1
 1913              	.LVL250:
 1914 0052 6DB2     		sxtb	r5, r5
 1915              	.LVL251:
 1916 0054 87F84450 		strb	r5, [r7, #68]
1909:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1917              		.loc 1 1909 0
 1918 0058 0120     		movs	r0, #1
 1919 005a 06E0     		b	.L139
 1920              	.LVL252:
 1921              	.L141:
 1922              	.LBE47:
1913:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 1923              		.loc 1 1913 0
 1924 005c 0020     		movs	r0, #0
 1925              	.LVL253:
 1926 005e 04E0     		b	.L139
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 97


 1927              	.LVL254:
 1928              	.L142:
 1929              	.LBB48:
1909:Generated_Source\PSoC5/RTOS_queue.c ****         }
 1930              		.loc 1 1909 0
 1931 0060 0120     		movs	r0, #1
 1932 0062 02E0     		b	.L139
 1933              	.L143:
 1934 0064 0120     		movs	r0, #1
 1935 0066 00E0     		b	.L139
 1936              	.L144:
 1937 0068 0120     		movs	r0, #1
 1938              	.LVL255:
 1939              	.L139:
 1940              	.LBE48:
 1941              	.LBE46:
 1942              	.LBB49:
 1943              	.LBB50:
 1944              		.loc 2 233 0
 1945              		.syntax unified
 1946              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1947 006a 86F31188 			msr basepri, r6	
 1948              	@ 0 "" 2
 1949              	.LVL256:
 1950              		.thumb
 1951              		.syntax unified
 1952              	.LBE50:
 1953              	.LBE49:
1920:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 1954              		.loc 1 1920 0
 1955 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1956              		.cfi_endproc
 1957              	.LFE76:
 1958              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1959 0072 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1960              		.align	2
 1961              		.global	xQueuePeekFromISR
 1962              		.thumb
 1963              		.thumb_func
 1964              		.type	xQueuePeekFromISR, %function
 1965              	xQueuePeekFromISR:
 1966              	.LFB77:
1925:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
 1967              		.loc 1 1925 0
 1968              		.cfi_startproc
 1969              		@ args = 0, pretend = 0, frame = 0
 1970              		@ frame_needed = 0, uses_anonymous_args = 0
 1971              	.LVL257:
 1972 0000 70B5     		push	{r4, r5, r6, lr}
 1973              		.cfi_def_cfa_offset 16
 1974              		.cfi_offset 4, -16
 1975              		.cfi_offset 5, -12
 1976              		.cfi_offset 6, -8
 1977              		.cfi_offset 14, -4
 1978              	.LVL258:
 1979              	.LBB51:
 1980              	.LBB52:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 98


 215:g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmacro.h ****         (
 1981              		.loc 2 215 0
 1982              		.syntax unified
 1983              	@ 215 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 1984 0002 EFF31185 			mrs r5, basepri											
 1985 0006 4FF00403 		mov r3, #4												
 1986 000a 83F31188 		msr basepri, r3											
 1987 000e BFF36F8F 		isb														
 1988 0012 BFF34F8F 		dsb														
 1989              	
 1990              	@ 0 "" 2
 1991              		.thumb
 1992              		.syntax unified
 1993              	.LBE52:
 1994              	.LBE51:
1954:Generated_Source\PSoC5/RTOS_queue.c ****         {
 1995              		.loc 1 1954 0
 1996 0016 836B     		ldr	r3, [r0, #56]
 1997 0018 33B1     		cbz	r3, .L148
 1998 001a 0446     		mov	r4, r0
1960:Generated_Source\PSoC5/RTOS_queue.c ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
 1999              		.loc 1 1960 0
 2000 001c C668     		ldr	r6, [r0, #12]
 2001              	.LVL259:
1961:Generated_Source\PSoC5/RTOS_queue.c ****             pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 2002              		.loc 1 1961 0
 2003 001e FFF7FEFF 		bl	prvCopyDataFromQueue
 2004              	.LVL260:
1962:Generated_Source\PSoC5/RTOS_queue.c **** 
 2005              		.loc 1 1962 0
 2006 0022 E660     		str	r6, [r4, #12]
 2007              	.LVL261:
1964:Generated_Source\PSoC5/RTOS_queue.c ****         }
 2008              		.loc 1 1964 0
 2009 0024 0120     		movs	r0, #1
 2010 0026 00E0     		b	.L147
 2011              	.LVL262:
 2012              	.L148:
1968:Generated_Source\PSoC5/RTOS_queue.c ****             traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2013              		.loc 1 1968 0
 2014 0028 0020     		movs	r0, #0
 2015              	.LVL263:
 2016              	.L147:
 2017              	.LBB53:
 2018              	.LBB54:
 2019              		.loc 2 233 0
 2020              		.syntax unified
 2021              	@ 233 "g:\project\psocwagen\psoc\ucll_koen_lib.cylib\myfreertos\source\portable\gcc\arm_cm3\portmac
 2022 002a 85F31188 			msr basepri, r5	
 2023              	@ 0 "" 2
 2024              	.LVL264:
 2025              		.thumb
 2026              		.syntax unified
 2027              	.LBE54:
 2028              	.LBE53:
1975:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 2029              		.loc 1 1975 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 99


 2030 002e 70BD     		pop	{r4, r5, r6, pc}
 2031              		.cfi_endproc
 2032              	.LFE77:
 2033              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 2034              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2035              		.align	2
 2036              		.global	uxQueueMessagesWaiting
 2037              		.thumb
 2038              		.thumb_func
 2039              		.type	uxQueueMessagesWaiting, %function
 2040              	uxQueueMessagesWaiting:
 2041              	.LFB78:
1979:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxReturn;
 2042              		.loc 1 1979 0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              	.LVL265:
 2047 0000 10B5     		push	{r4, lr}
 2048              		.cfi_def_cfa_offset 8
 2049              		.cfi_offset 4, -8
 2050              		.cfi_offset 14, -4
 2051 0002 0446     		mov	r4, r0
1984:Generated_Source\PSoC5/RTOS_queue.c ****     {
 2052              		.loc 1 1984 0
 2053 0004 FFF7FEFF 		bl	vPortEnterCritical
 2054              	.LVL266:
1986:Generated_Source\PSoC5/RTOS_queue.c ****     }
 2055              		.loc 1 1986 0
 2056 0008 A46B     		ldr	r4, [r4, #56]
 2057              	.LVL267:
1988:Generated_Source\PSoC5/RTOS_queue.c **** 
 2058              		.loc 1 1988 0
 2059 000a FFF7FEFF 		bl	vPortExitCritical
 2060              	.LVL268:
1991:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 2061              		.loc 1 1991 0
 2062 000e 2046     		mov	r0, r4
 2063 0010 10BD     		pop	{r4, pc}
 2064              		.cfi_endproc
 2065              	.LFE78:
 2066              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 2067 0012 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2068              		.align	2
 2069              		.global	uxQueueSpacesAvailable
 2070              		.thumb
 2071              		.thumb_func
 2072              		.type	uxQueueSpacesAvailable, %function
 2073              	uxQueueSpacesAvailable:
 2074              	.LFB79:
1995:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxReturn;
 2075              		.loc 1 1995 0
 2076              		.cfi_startproc
 2077              		@ args = 0, pretend = 0, frame = 0
 2078              		@ frame_needed = 0, uses_anonymous_args = 0
 2079              	.LVL269:
 2080 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 100


 2081              		.cfi_def_cfa_offset 8
 2082              		.cfi_offset 4, -8
 2083              		.cfi_offset 14, -4
 2084 0002 0446     		mov	r4, r0
 2085              	.LVL270:
2001:Generated_Source\PSoC5/RTOS_queue.c ****     {
 2086              		.loc 1 2001 0
 2087 0004 FFF7FEFF 		bl	vPortEnterCritical
 2088              	.LVL271:
2003:Generated_Source\PSoC5/RTOS_queue.c ****     }
 2089              		.loc 1 2003 0
 2090 0008 E36B     		ldr	r3, [r4, #60]
 2091 000a A46B     		ldr	r4, [r4, #56]
 2092              	.LVL272:
 2093 000c 1C1B     		subs	r4, r3, r4
 2094              	.LVL273:
2005:Generated_Source\PSoC5/RTOS_queue.c **** 
 2095              		.loc 1 2005 0
 2096 000e FFF7FEFF 		bl	vPortExitCritical
 2097              	.LVL274:
2008:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 2098              		.loc 1 2008 0
 2099 0012 2046     		mov	r0, r4
 2100 0014 10BD     		pop	{r4, pc}
 2101              		.cfi_endproc
 2102              	.LFE79:
 2103              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 2104 0016 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2105              		.align	2
 2106              		.global	uxQueueMessagesWaitingFromISR
 2107              		.thumb
 2108              		.thumb_func
 2109              		.type	uxQueueMessagesWaitingFromISR, %function
 2110              	uxQueueMessagesWaitingFromISR:
 2111              	.LFB80:
2012:Generated_Source\PSoC5/RTOS_queue.c ****     UBaseType_t uxReturn;
 2112              		.loc 1 2012 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
 2116              		@ link register save eliminated.
 2117              	.LVL275:
2017:Generated_Source\PSoC5/RTOS_queue.c **** 
 2118              		.loc 1 2017 0
 2119 0000 806B     		ldr	r0, [r0, #56]
 2120              	.LVL276:
2020:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 2121              		.loc 1 2020 0
 2122 0002 7047     		bx	lr
 2123              		.cfi_endproc
 2124              	.LFE80:
 2125              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 2126              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2127              		.align	2
 2128              		.global	xQueueIsQueueEmptyFromISR
 2129              		.thumb
 2130              		.thumb_func
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 101


 2131              		.type	xQueueIsQueueEmptyFromISR, %function
 2132              	xQueueIsQueueEmptyFromISR:
 2133              	.LFB86:
2369:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
 2134              		.loc 1 2369 0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 0
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138              		@ link register save eliminated.
 2139              	.LVL277:
2375:Generated_Source\PSoC5/RTOS_queue.c ****     {
 2140              		.loc 1 2375 0
 2141 0000 836B     		ldr	r3, [r0, #56]
 2142 0002 0BB9     		cbnz	r3, .L157
2377:Generated_Source\PSoC5/RTOS_queue.c ****     }
 2143              		.loc 1 2377 0
 2144 0004 0120     		movs	r0, #1
 2145              	.LVL278:
 2146 0006 7047     		bx	lr
 2147              	.LVL279:
 2148              	.L157:
2381:Generated_Source\PSoC5/RTOS_queue.c ****     }
 2149              		.loc 1 2381 0
 2150 0008 0020     		movs	r0, #0
 2151              	.LVL280:
2385:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 2152              		.loc 1 2385 0
 2153 000a 7047     		bx	lr
 2154              		.cfi_endproc
 2155              	.LFE86:
 2156              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2157              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2158              		.align	2
 2159              		.global	xQueueIsQueueFullFromISR
 2160              		.thumb
 2161              		.thumb_func
 2162              		.type	xQueueIsQueueFullFromISR, %function
 2163              	xQueueIsQueueFullFromISR:
 2164              	.LFB88:
2410:Generated_Source\PSoC5/RTOS_queue.c ****     BaseType_t xReturn;
 2165              		.loc 1 2410 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
 2170              	.LVL281:
2416:Generated_Source\PSoC5/RTOS_queue.c ****     {
 2171              		.loc 1 2416 0
 2172 0000 826B     		ldr	r2, [r0, #56]
 2173 0002 C36B     		ldr	r3, [r0, #60]
 2174 0004 9A42     		cmp	r2, r3
 2175 0006 01D1     		bne	.L160
2418:Generated_Source\PSoC5/RTOS_queue.c ****     }
 2176              		.loc 1 2418 0
 2177 0008 0120     		movs	r0, #1
 2178              	.LVL282:
 2179 000a 7047     		bx	lr
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 102


 2180              	.LVL283:
 2181              	.L160:
2422:Generated_Source\PSoC5/RTOS_queue.c ****     }
 2182              		.loc 1 2422 0
 2183 000c 0020     		movs	r0, #0
 2184              	.LVL284:
2426:Generated_Source\PSoC5/RTOS_queue.c **** /*-----------------------------------------------------------*/
 2185              		.loc 1 2426 0
 2186 000e 7047     		bx	lr
 2187              		.cfi_endproc
 2188              	.LFE88:
 2189              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2190              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2191              		.align	2
 2192              		.global	vQueueAddToRegistry
 2193              		.thumb
 2194              		.thumb_func
 2195              		.type	vQueueAddToRegistry, %function
 2196              	vQueueAddToRegistry:
 2197              	.LFB89:
2720:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t ux;
 2198              		.loc 1 2720 0
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 0
 2201              		@ frame_needed = 0, uses_anonymous_args = 0
 2202              		@ link register save eliminated.
 2203              	.LVL285:
2725:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2204              		.loc 1 2725 0
 2205 0000 0023     		movs	r3, #0
 2206 0002 0BE0     		b	.L162
 2207              	.LVL286:
 2208              	.L165:
2727:Generated_Source\PSoC5/RTOS_queue.c ****             {
 2209              		.loc 1 2727 0
 2210 0004 074A     		ldr	r2, .L166
 2211 0006 52F83320 		ldr	r2, [r2, r3, lsl #3]
 2212 000a 32B9     		cbnz	r2, .L163
2730:Generated_Source\PSoC5/RTOS_queue.c ****                 xQueueRegistry[ ux ].xHandle = xQueue;
 2213              		.loc 1 2730 0
 2214 000c 054A     		ldr	r2, .L166
 2215 000e 42F83310 		str	r1, [r2, r3, lsl #3]
2731:Generated_Source\PSoC5/RTOS_queue.c **** 
 2216              		.loc 1 2731 0
 2217 0012 02EBC303 		add	r3, r2, r3, lsl #3
 2218              	.LVL287:
 2219 0016 5860     		str	r0, [r3, #4]
2734:Generated_Source\PSoC5/RTOS_queue.c ****             }
 2220              		.loc 1 2734 0
 2221 0018 7047     		bx	lr
 2222              	.LVL288:
 2223              	.L163:
2725:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2224              		.loc 1 2725 0 discriminator 2
 2225 001a 0133     		adds	r3, r3, #1
 2226              	.LVL289:
 2227              	.L162:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 103


2725:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2228              		.loc 1 2725 0 is_stmt 0 discriminator 1
 2229 001c 092B     		cmp	r3, #9
 2230 001e F1D9     		bls	.L165
 2231 0020 7047     		bx	lr
 2232              	.L167:
 2233 0022 00BF     		.align	2
 2234              	.L166:
 2235 0024 00000000 		.word	xQueueRegistry
 2236              		.cfi_endproc
 2237              	.LFE89:
 2238              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2239              		.section	.text.pcQueueGetName,"ax",%progbits
 2240              		.align	2
 2241              		.global	pcQueueGetName
 2242              		.thumb
 2243              		.thumb_func
 2244              		.type	pcQueueGetName, %function
 2245              	pcQueueGetName:
 2246              	.LFB90:
2749:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t ux;
 2247              		.loc 1 2749 0 is_stmt 1
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
 2251              		@ link register save eliminated.
 2252              	.LVL290:
2756:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2253              		.loc 1 2756 0
 2254 0000 0023     		movs	r3, #0
 2255 0002 0AE0     		b	.L169
 2256              	.LVL291:
 2257              	.L172:
2758:Generated_Source\PSoC5/RTOS_queue.c ****             {
 2258              		.loc 1 2758 0
 2259 0004 074A     		ldr	r2, .L173
 2260 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2261 000a 5268     		ldr	r2, [r2, #4]
 2262 000c 8242     		cmp	r2, r0
 2263 000e 03D1     		bne	.L170
2760:Generated_Source\PSoC5/RTOS_queue.c ****                 break;
 2264              		.loc 1 2760 0
 2265 0010 044A     		ldr	r2, .L173
 2266 0012 52F83300 		ldr	r0, [r2, r3, lsl #3]
 2267              	.LVL292:
2761:Generated_Source\PSoC5/RTOS_queue.c ****             }
 2268              		.loc 1 2761 0
 2269 0016 7047     		bx	lr
 2270              	.LVL293:
 2271              	.L170:
2756:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2272              		.loc 1 2756 0 discriminator 2
 2273 0018 0133     		adds	r3, r3, #1
 2274              	.LVL294:
 2275              	.L169:
2756:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2276              		.loc 1 2756 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 104


 2277 001a 092B     		cmp	r3, #9
 2278 001c F2D9     		bls	.L172
2751:Generated_Source\PSoC5/RTOS_queue.c **** 
 2279              		.loc 1 2751 0 is_stmt 1
 2280 001e 0020     		movs	r0, #0
 2281              	.LVL295:
2770:Generated_Source\PSoC5/RTOS_queue.c **** 
 2282              		.loc 1 2770 0
 2283 0020 7047     		bx	lr
 2284              	.L174:
 2285 0022 00BF     		.align	2
 2286              	.L173:
 2287 0024 00000000 		.word	xQueueRegistry
 2288              		.cfi_endproc
 2289              	.LFE90:
 2290              		.size	pcQueueGetName, .-pcQueueGetName
 2291              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2292              		.align	2
 2293              		.global	vQueueUnregisterQueue
 2294              		.thumb
 2295              		.thumb_func
 2296              		.type	vQueueUnregisterQueue, %function
 2297              	vQueueUnregisterQueue:
 2298              	.LFB91:
2778:Generated_Source\PSoC5/RTOS_queue.c ****         UBaseType_t ux;
 2299              		.loc 1 2778 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 0, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
 2304              	.LVL296:
2783:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2305              		.loc 1 2783 0
 2306 0000 0023     		movs	r3, #0
 2307 0002 0EE0     		b	.L176
 2308              	.LVL297:
 2309              	.L179:
2785:Generated_Source\PSoC5/RTOS_queue.c ****             {
 2310              		.loc 1 2785 0
 2311 0004 084A     		ldr	r2, .L180
 2312 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2313 000a 5268     		ldr	r2, [r2, #4]
 2314 000c 8242     		cmp	r2, r0
 2315 000e 07D1     		bne	.L177
2788:Generated_Source\PSoC5/RTOS_queue.c **** 
 2316              		.loc 1 2788 0
 2317 0010 054A     		ldr	r2, .L180
 2318 0012 0021     		movs	r1, #0
 2319 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2793:Generated_Source\PSoC5/RTOS_queue.c ****                 break;
 2320              		.loc 1 2793 0
 2321 0018 02EBC303 		add	r3, r2, r3, lsl #3
 2322              	.LVL298:
 2323 001c 5960     		str	r1, [r3, #4]
2794:Generated_Source\PSoC5/RTOS_queue.c ****             }
 2324              		.loc 1 2794 0
 2325 001e 7047     		bx	lr
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 105


 2326              	.LVL299:
 2327              	.L177:
2783:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2328              		.loc 1 2783 0 discriminator 2
 2329 0020 0133     		adds	r3, r3, #1
 2330              	.LVL300:
 2331              	.L176:
2783:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2332              		.loc 1 2783 0 is_stmt 0 discriminator 1
 2333 0022 092B     		cmp	r3, #9
 2334 0024 EED9     		bls	.L179
 2335 0026 7047     		bx	lr
 2336              	.L181:
 2337              		.align	2
 2338              	.L180:
 2339 0028 00000000 		.word	xQueueRegistry
 2340              		.cfi_endproc
 2341              	.LFE91:
 2342              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2343              		.section	.text.vQueueDelete,"ax",%progbits
 2344              		.align	2
 2345              		.global	vQueueDelete
 2346              		.thumb
 2347              		.thumb_func
 2348              		.type	vQueueDelete, %function
 2349              	vQueueDelete:
 2350              	.LFB81:
2024:Generated_Source\PSoC5/RTOS_queue.c ****     Queue_t * const pxQueue = xQueue;
 2351              		.loc 1 2024 0 is_stmt 1
 2352              		.cfi_startproc
 2353              		@ args = 0, pretend = 0, frame = 0
 2354              		@ frame_needed = 0, uses_anonymous_args = 0
 2355              	.LVL301:
 2356 0000 10B5     		push	{r4, lr}
 2357              		.cfi_def_cfa_offset 8
 2358              		.cfi_offset 4, -8
 2359              		.cfi_offset 14, -4
 2360 0002 0446     		mov	r4, r0
 2361              	.LVL302:
2032:Generated_Source\PSoC5/RTOS_queue.c ****         }
 2362              		.loc 1 2032 0
 2363 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 2364              	.LVL303:
2040:Generated_Source\PSoC5/RTOS_queue.c ****         }
 2365              		.loc 1 2040 0
 2366 0008 2046     		mov	r0, r4
 2367 000a FFF7FEFF 		bl	vPortFree
 2368              	.LVL304:
 2369 000e 10BD     		pop	{r4, pc}
 2370              		.cfi_endproc
 2371              	.LFE81:
 2372              		.size	vQueueDelete, .-vQueueDelete
 2373              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 2374              		.align	2
 2375              		.global	vQueueWaitForMessageRestricted
 2376              		.thumb
 2377              		.thumb_func
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 106


 2378              		.type	vQueueWaitForMessageRestricted, %function
 2379              	vQueueWaitForMessageRestricted:
 2380              	.LFB92:
2811:Generated_Source\PSoC5/RTOS_queue.c ****         Queue_t * const pxQueue = xQueue;
 2381              		.loc 1 2811 0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 0
 2384              		@ frame_needed = 0, uses_anonymous_args = 0
 2385              	.LVL305:
 2386 0000 70B5     		push	{r4, r5, r6, lr}
 2387              		.cfi_def_cfa_offset 16
 2388              		.cfi_offset 4, -16
 2389              		.cfi_offset 5, -12
 2390              		.cfi_offset 6, -8
 2391              		.cfi_offset 14, -4
 2392 0002 0446     		mov	r4, r0
 2393 0004 0D46     		mov	r5, r1
 2394 0006 1646     		mov	r6, r2
 2395              	.LVL306:
2828:Generated_Source\PSoC5/RTOS_queue.c **** 
 2396              		.loc 1 2828 0
 2397 0008 FFF7FEFF 		bl	vPortEnterCritical
 2398              	.LVL307:
 2399 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2400 0010 5BB2     		sxtb	r3, r3
 2401 0012 B3F1FF3F 		cmp	r3, #-1
 2402 0016 02D1     		bne	.L185
2828:Generated_Source\PSoC5/RTOS_queue.c **** 
 2403              		.loc 1 2828 0 is_stmt 0 discriminator 1
 2404 0018 0023     		movs	r3, #0
 2405 001a 84F84430 		strb	r3, [r4, #68]
 2406              	.L185:
2828:Generated_Source\PSoC5/RTOS_queue.c **** 
 2407              		.loc 1 2828 0 discriminator 3
 2408 001e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2409 0022 5BB2     		sxtb	r3, r3
 2410 0024 B3F1FF3F 		cmp	r3, #-1
 2411 0028 02D1     		bne	.L186
2828:Generated_Source\PSoC5/RTOS_queue.c **** 
 2412              		.loc 1 2828 0 discriminator 4
 2413 002a 0023     		movs	r3, #0
 2414 002c 84F84530 		strb	r3, [r4, #69]
 2415              	.L186:
2828:Generated_Source\PSoC5/RTOS_queue.c **** 
 2416              		.loc 1 2828 0 discriminator 6
 2417 0030 FFF7FEFF 		bl	vPortExitCritical
 2418              	.LVL308:
2830:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2419              		.loc 1 2830 0 is_stmt 1 discriminator 6
 2420 0034 A36B     		ldr	r3, [r4, #56]
 2421 0036 2BB9     		cbnz	r3, .L187
2833:Generated_Source\PSoC5/RTOS_queue.c ****         }
 2422              		.loc 1 2833 0
 2423 0038 3246     		mov	r2, r6
 2424 003a 2946     		mov	r1, r5
 2425 003c 04F12400 		add	r0, r4, #36
 2426 0040 FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 107


 2427              	.LVL309:
 2428              	.L187:
2840:Generated_Source\PSoC5/RTOS_queue.c ****     }
 2429              		.loc 1 2840 0
 2430 0044 2046     		mov	r0, r4
 2431 0046 FFF7FEFF 		bl	prvUnlockQueue
 2432              	.LVL310:
 2433 004a 70BD     		pop	{r4, r5, r6, pc}
 2434              		.cfi_endproc
 2435              	.LFE92:
 2436              		.size	vQueueWaitForMessageRestricted, .-vQueueWaitForMessageRestricted
 2437              		.section	.text.xQueueCreateSet,"ax",%progbits
 2438              		.align	2
 2439              		.global	xQueueCreateSet
 2440              		.thumb
 2441              		.thumb_func
 2442              		.type	xQueueCreateSet, %function
 2443              	xQueueCreateSet:
 2444              	.LFB93:
2849:Generated_Source\PSoC5/RTOS_queue.c ****         QueueSetHandle_t pxQueue;
 2445              		.loc 1 2849 0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 0
 2448              		@ frame_needed = 0, uses_anonymous_args = 0
 2449              	.LVL311:
 2450 0000 08B5     		push	{r3, lr}
 2451              		.cfi_def_cfa_offset 8
 2452              		.cfi_offset 3, -8
 2453              		.cfi_offset 14, -4
2852:Generated_Source\PSoC5/RTOS_queue.c **** 
 2454              		.loc 1 2852 0
 2455 0002 0022     		movs	r2, #0
 2456 0004 0421     		movs	r1, #4
 2457 0006 FFF7FEFF 		bl	xQueueGenericCreate
 2458              	.LVL312:
2855:Generated_Source\PSoC5/RTOS_queue.c **** 
 2459              		.loc 1 2855 0
 2460 000a 08BD     		pop	{r3, pc}
 2461              		.cfi_endproc
 2462              	.LFE93:
 2463              		.size	xQueueCreateSet, .-xQueueCreateSet
 2464              		.section	.text.xQueueAddToSet,"ax",%progbits
 2465              		.align	2
 2466              		.global	xQueueAddToSet
 2467              		.thumb
 2468              		.thumb_func
 2469              		.type	xQueueAddToSet, %function
 2470              	xQueueAddToSet:
 2471              	.LFB94:
2864:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
 2472              		.loc 1 2864 0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              	.LVL313:
 2477 0000 38B5     		push	{r3, r4, r5, lr}
 2478              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 108


 2479              		.cfi_offset 3, -16
 2480              		.cfi_offset 4, -12
 2481              		.cfi_offset 5, -8
 2482              		.cfi_offset 14, -4
 2483 0002 0446     		mov	r4, r0
 2484 0004 0D46     		mov	r5, r1
2867:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2485              		.loc 1 2867 0
 2486 0006 FFF7FEFF 		bl	vPortEnterCritical
 2487              	.LVL314:
2869:Generated_Source\PSoC5/RTOS_queue.c ****             {
 2488              		.loc 1 2869 0
 2489 000a A36C     		ldr	r3, [r4, #72]
 2490 000c 23B9     		cbnz	r3, .L193
2874:Generated_Source\PSoC5/RTOS_queue.c ****             {
 2491              		.loc 1 2874 0
 2492 000e A36B     		ldr	r3, [r4, #56]
 2493 0010 23B9     		cbnz	r3, .L194
2882:Generated_Source\PSoC5/RTOS_queue.c ****                 xReturn = pdPASS;
 2494              		.loc 1 2882 0
 2495 0012 A564     		str	r5, [r4, #72]
 2496              	.LVL315:
2883:Generated_Source\PSoC5/RTOS_queue.c ****             }
 2497              		.loc 1 2883 0
 2498 0014 0124     		movs	r4, #1
 2499              	.LVL316:
 2500 0016 02E0     		b	.L192
 2501              	.LVL317:
 2502              	.L193:
2872:Generated_Source\PSoC5/RTOS_queue.c ****             }
 2503              		.loc 1 2872 0
 2504 0018 0024     		movs	r4, #0
 2505              	.LVL318:
 2506 001a 00E0     		b	.L192
 2507              	.LVL319:
 2508              	.L194:
2878:Generated_Source\PSoC5/RTOS_queue.c ****             }
 2509              		.loc 1 2878 0
 2510 001c 0024     		movs	r4, #0
 2511              	.LVL320:
 2512              	.L192:
2886:Generated_Source\PSoC5/RTOS_queue.c **** 
 2513              		.loc 1 2886 0
 2514 001e FFF7FEFF 		bl	vPortExitCritical
 2515              	.LVL321:
2889:Generated_Source\PSoC5/RTOS_queue.c **** 
 2516              		.loc 1 2889 0
 2517 0022 2046     		mov	r0, r4
 2518 0024 38BD     		pop	{r3, r4, r5, pc}
 2519              		.cfi_endproc
 2520              	.LFE94:
 2521              		.size	xQueueAddToSet, .-xQueueAddToSet
 2522 0026 00BF     		.section	.text.xQueueRemoveFromSet,"ax",%progbits
 2523              		.align	2
 2524              		.global	xQueueRemoveFromSet
 2525              		.thumb
 2526              		.thumb_func
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 109


 2527              		.type	xQueueRemoveFromSet, %function
 2528              	xQueueRemoveFromSet:
 2529              	.LFB95:
2898:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
 2530              		.loc 1 2898 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
 2534              	.LVL322:
2902:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2535              		.loc 1 2902 0
 2536 0000 836C     		ldr	r3, [r0, #72]
 2537 0002 8B42     		cmp	r3, r1
 2538 0004 0BD1     		bne	.L198
2907:Generated_Source\PSoC5/RTOS_queue.c ****         {
 2539              		.loc 1 2907 0
 2540 0006 836B     		ldr	r3, [r0, #56]
 2541 0008 5BB9     		cbnz	r3, .L199
2898:Generated_Source\PSoC5/RTOS_queue.c ****         BaseType_t xReturn;
 2542              		.loc 1 2898 0
 2543 000a 10B5     		push	{r4, lr}
 2544              		.cfi_def_cfa_offset 8
 2545              		.cfi_offset 4, -8
 2546              		.cfi_offset 14, -4
 2547 000c 0446     		mov	r4, r0
2916:Generated_Source\PSoC5/RTOS_queue.c ****             {
 2548              		.loc 1 2916 0
 2549 000e FFF7FEFF 		bl	vPortEnterCritical
 2550              	.LVL323:
2919:Generated_Source\PSoC5/RTOS_queue.c ****             }
 2551              		.loc 1 2919 0
 2552 0012 0023     		movs	r3, #0
 2553 0014 A364     		str	r3, [r4, #72]
2921:Generated_Source\PSoC5/RTOS_queue.c ****             xReturn = pdPASS;
 2554              		.loc 1 2921 0
 2555 0016 FFF7FEFF 		bl	vPortExitCritical
 2556              	.LVL324:
2922:Generated_Source\PSoC5/RTOS_queue.c ****         }
 2557              		.loc 1 2922 0
 2558 001a 0120     		movs	r0, #1
 2559 001c 10BD     		pop	{r4, pc}
 2560              	.LVL325:
 2561              	.L198:
 2562              		.cfi_def_cfa_offset 0
 2563              		.cfi_restore 4
 2564              		.cfi_restore 14
2905:Generated_Source\PSoC5/RTOS_queue.c ****         }
 2565              		.loc 1 2905 0
 2566 001e 0020     		movs	r0, #0
 2567              	.LVL326:
 2568 0020 7047     		bx	lr
 2569              	.LVL327:
 2570              	.L199:
2912:Generated_Source\PSoC5/RTOS_queue.c ****         }
 2571              		.loc 1 2912 0
 2572 0022 0020     		movs	r0, #0
 2573              	.LVL328:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 110


 2574 0024 7047     		bx	lr
 2575              		.cfi_endproc
 2576              	.LFE95:
 2577              		.size	xQueueRemoveFromSet, .-xQueueRemoveFromSet
 2578 0026 00BF     		.section	.text.xQueueSelectFromSet,"ax",%progbits
 2579              		.align	2
 2580              		.global	xQueueSelectFromSet
 2581              		.thumb
 2582              		.thumb_func
 2583              		.type	xQueueSelectFromSet, %function
 2584              	xQueueSelectFromSet:
 2585              	.LFB96:
2935:Generated_Source\PSoC5/RTOS_queue.c ****         QueueSetMemberHandle_t xReturn = NULL;
 2586              		.loc 1 2935 0
 2587              		.cfi_startproc
 2588              		@ args = 0, pretend = 0, frame = 8
 2589              		@ frame_needed = 0, uses_anonymous_args = 0
 2590              	.LVL329:
 2591 0000 00B5     		push	{lr}
 2592              		.cfi_def_cfa_offset 4
 2593              		.cfi_offset 14, -4
 2594 0002 83B0     		sub	sp, sp, #12
 2595              		.cfi_def_cfa_offset 16
2936:Generated_Source\PSoC5/RTOS_queue.c **** 
 2596              		.loc 1 2936 0
 2597 0004 02AB     		add	r3, sp, #8
 2598 0006 0022     		movs	r2, #0
 2599 0008 43F8042D 		str	r2, [r3, #-4]!
2938:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
 2600              		.loc 1 2938 0
 2601 000c 0A46     		mov	r2, r1
 2602 000e 1946     		mov	r1, r3
 2603              	.LVL330:
 2604 0010 FFF7FEFF 		bl	xQueueReceive
 2605              	.LVL331:
2940:Generated_Source\PSoC5/RTOS_queue.c **** 
 2606              		.loc 1 2940 0
 2607 0014 0198     		ldr	r0, [sp, #4]
 2608 0016 03B0     		add	sp, sp, #12
 2609              		.cfi_def_cfa_offset 4
 2610              		@ sp needed
 2611 0018 5DF804FB 		ldr	pc, [sp], #4
 2612              		.cfi_endproc
 2613              	.LFE96:
 2614              		.size	xQueueSelectFromSet, .-xQueueSelectFromSet
 2615              		.section	.text.xQueueSelectFromSetFromISR,"ax",%progbits
 2616              		.align	2
 2617              		.global	xQueueSelectFromSetFromISR
 2618              		.thumb
 2619              		.thumb_func
 2620              		.type	xQueueSelectFromSetFromISR, %function
 2621              	xQueueSelectFromSetFromISR:
 2622              	.LFB97:
2948:Generated_Source\PSoC5/RTOS_queue.c ****         QueueSetMemberHandle_t xReturn = NULL;
 2623              		.loc 1 2948 0
 2624              		.cfi_startproc
 2625              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 111


 2626              		@ frame_needed = 0, uses_anonymous_args = 0
 2627              	.LVL332:
 2628 0000 00B5     		push	{lr}
 2629              		.cfi_def_cfa_offset 4
 2630              		.cfi_offset 14, -4
 2631 0002 83B0     		sub	sp, sp, #12
 2632              		.cfi_def_cfa_offset 16
2949:Generated_Source\PSoC5/RTOS_queue.c **** 
 2633              		.loc 1 2949 0
 2634 0004 0022     		movs	r2, #0
 2635 0006 02A9     		add	r1, sp, #8
 2636 0008 41F8042D 		str	r2, [r1, #-4]!
2951:Generated_Source\PSoC5/RTOS_queue.c ****         return xReturn;
 2637              		.loc 1 2951 0
 2638 000c FFF7FEFF 		bl	xQueueReceiveFromISR
 2639              	.LVL333:
2953:Generated_Source\PSoC5/RTOS_queue.c **** 
 2640              		.loc 1 2953 0
 2641 0010 0198     		ldr	r0, [sp, #4]
 2642 0012 03B0     		add	sp, sp, #12
 2643              		.cfi_def_cfa_offset 4
 2644              		@ sp needed
 2645 0014 5DF804FB 		ldr	pc, [sp], #4
 2646              		.cfi_endproc
 2647              	.LFE97:
 2648              		.size	xQueueSelectFromSetFromISR, .-xQueueSelectFromSetFromISR
 2649              		.comm	xQueueRegistry,80,4
 2650              		.text
 2651              	.Letext0:
 2652              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2653              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2654              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2655              		.file 6 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/list.h"
 2656              		.file 7 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/task.h"
 2657              		.file 8 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/queue.h"
 2658              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 2659              		.file 10 "..\\..\\UCLL_Koen_lib.cylib\\myFreeRTOS\\Source\\include/portable.h"
 2660              		.section	.debug_info,"",%progbits
 2661              	.Ldebug_info0:
 2662 0000 1D1A0000 		.4byte	0x1a1d
 2663 0004 0400     		.2byte	0x4
 2664 0006 00000000 		.4byte	.Ldebug_abbrev0
 2665 000a 04       		.byte	0x4
 2666 000b 01       		.uleb128 0x1
 2667 000c 14030000 		.4byte	.LASF153
 2668 0010 0C       		.byte	0xc
 2669 0011 5F070000 		.4byte	.LASF154
 2670 0015 47060000 		.4byte	.LASF155
 2671 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2672 001d 00000000 		.4byte	0
 2673 0021 00000000 		.4byte	.Ldebug_line0
 2674 0025 02       		.uleb128 0x2
 2675 0026 B0030000 		.4byte	.LASF3
 2676 002a 03       		.byte	0x3
 2677 002b D8       		.byte	0xd8
 2678 002c 30000000 		.4byte	0x30
 2679 0030 03       		.uleb128 0x3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 112


 2680 0031 04       		.byte	0x4
 2681 0032 07       		.byte	0x7
 2682 0033 D7000000 		.4byte	.LASF0
 2683 0037 04       		.uleb128 0x4
 2684 0038 04       		.byte	0x4
 2685 0039 05       		.byte	0x5
 2686 003a 696E7400 		.ascii	"int\000"
 2687 003e 03       		.uleb128 0x3
 2688 003f 08       		.byte	0x8
 2689 0040 05       		.byte	0x5
 2690 0041 D8050000 		.4byte	.LASF1
 2691 0045 03       		.uleb128 0x3
 2692 0046 08       		.byte	0x8
 2693 0047 04       		.byte	0x4
 2694 0048 99060000 		.4byte	.LASF2
 2695 004c 02       		.uleb128 0x2
 2696 004d 48070000 		.4byte	.LASF4
 2697 0051 04       		.byte	0x4
 2698 0052 1B       		.byte	0x1b
 2699 0053 57000000 		.4byte	0x57
 2700 0057 03       		.uleb128 0x3
 2701 0058 01       		.byte	0x1
 2702 0059 06       		.byte	0x6
 2703 005a 9F090000 		.4byte	.LASF5
 2704 005e 02       		.uleb128 0x2
 2705 005f 89080000 		.4byte	.LASF6
 2706 0063 04       		.byte	0x4
 2707 0064 1D       		.byte	0x1d
 2708 0065 69000000 		.4byte	0x69
 2709 0069 03       		.uleb128 0x3
 2710 006a 01       		.byte	0x1
 2711 006b 08       		.byte	0x8
 2712 006c 09090000 		.4byte	.LASF7
 2713 0070 03       		.uleb128 0x3
 2714 0071 02       		.byte	0x2
 2715 0072 05       		.byte	0x5
 2716 0073 D3070000 		.4byte	.LASF8
 2717 0077 03       		.uleb128 0x3
 2718 0078 02       		.byte	0x2
 2719 0079 07       		.byte	0x7
 2720 007a AB090000 		.4byte	.LASF9
 2721 007e 02       		.uleb128 0x2
 2722 007f 13010000 		.4byte	.LASF10
 2723 0083 04       		.byte	0x4
 2724 0084 3F       		.byte	0x3f
 2725 0085 89000000 		.4byte	0x89
 2726 0089 03       		.uleb128 0x3
 2727 008a 04       		.byte	0x4
 2728 008b 05       		.byte	0x5
 2729 008c E8070000 		.4byte	.LASF11
 2730 0090 02       		.uleb128 0x2
 2731 0091 17090000 		.4byte	.LASF12
 2732 0095 04       		.byte	0x4
 2733 0096 41       		.byte	0x41
 2734 0097 9B000000 		.4byte	0x9b
 2735 009b 03       		.uleb128 0x3
 2736 009c 04       		.byte	0x4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 113


 2737 009d 07       		.byte	0x7
 2738 009e BD080000 		.4byte	.LASF13
 2739 00a2 03       		.uleb128 0x3
 2740 00a3 08       		.byte	0x8
 2741 00a4 07       		.byte	0x7
 2742 00a5 94020000 		.4byte	.LASF14
 2743 00a9 03       		.uleb128 0x3
 2744 00aa 04       		.byte	0x4
 2745 00ab 07       		.byte	0x7
 2746 00ac A3080000 		.4byte	.LASF15
 2747 00b0 05       		.uleb128 0x5
 2748 00b1 04       		.byte	0x4
 2749 00b2 03       		.uleb128 0x3
 2750 00b3 01       		.byte	0x1
 2751 00b4 08       		.byte	0x8
 2752 00b5 C1040000 		.4byte	.LASF16
 2753 00b9 06       		.uleb128 0x6
 2754 00ba 04       		.byte	0x4
 2755 00bb BF000000 		.4byte	0xbf
 2756 00bf 07       		.uleb128 0x7
 2757 00c0 B2000000 		.4byte	0xb2
 2758 00c4 06       		.uleb128 0x6
 2759 00c5 04       		.byte	0x4
 2760 00c6 CA000000 		.4byte	0xca
 2761 00ca 08       		.uleb128 0x8
 2762 00cb 02       		.uleb128 0x2
 2763 00cc 4F020000 		.4byte	.LASF17
 2764 00d0 05       		.byte	0x5
 2765 00d1 14       		.byte	0x14
 2766 00d2 4C000000 		.4byte	0x4c
 2767 00d6 02       		.uleb128 0x2
 2768 00d7 96050000 		.4byte	.LASF18
 2769 00db 05       		.byte	0x5
 2770 00dc 18       		.byte	0x18
 2771 00dd 5E000000 		.4byte	0x5e
 2772 00e1 02       		.uleb128 0x2
 2773 00e2 CF080000 		.4byte	.LASF19
 2774 00e6 05       		.byte	0x5
 2775 00e7 2C       		.byte	0x2c
 2776 00e8 7E000000 		.4byte	0x7e
 2777 00ec 02       		.uleb128 0x2
 2778 00ed 46020000 		.4byte	.LASF20
 2779 00f1 05       		.byte	0x5
 2780 00f2 30       		.byte	0x30
 2781 00f3 90000000 		.4byte	0x90
 2782 00f7 03       		.uleb128 0x3
 2783 00f8 04       		.byte	0x4
 2784 00f9 04       		.byte	0x4
 2785 00fa 7E020000 		.4byte	.LASF21
 2786 00fe 03       		.uleb128 0x3
 2787 00ff 08       		.byte	0x8
 2788 0100 04       		.byte	0x4
 2789 0101 ED090000 		.4byte	.LASF22
 2790 0105 02       		.uleb128 0x2
 2791 0106 01060000 		.4byte	.LASF23
 2792 010a 02       		.byte	0x2
 2793 010b 38       		.byte	0x38
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 114


 2794 010c 89000000 		.4byte	0x89
 2795 0110 02       		.uleb128 0x2
 2796 0111 05050000 		.4byte	.LASF24
 2797 0115 02       		.byte	0x2
 2798 0116 39       		.byte	0x39
 2799 0117 9B000000 		.4byte	0x9b
 2800 011b 02       		.uleb128 0x2
 2801 011c 3D070000 		.4byte	.LASF25
 2802 0120 02       		.byte	0x2
 2803 0121 3F       		.byte	0x3f
 2804 0122 EC000000 		.4byte	0xec
 2805 0126 06       		.uleb128 0x6
 2806 0127 04       		.byte	0x4
 2807 0128 D6000000 		.4byte	0xd6
 2808 012c 09       		.uleb128 0x9
 2809 012d 1D010000 		.4byte	.LASF31
 2810 0131 14       		.byte	0x14
 2811 0132 06       		.byte	0x6
 2812 0133 8E       		.byte	0x8e
 2813 0134 75010000 		.4byte	0x175
 2814 0138 0A       		.uleb128 0xa
 2815 0139 DD070000 		.4byte	.LASF26
 2816 013d 06       		.byte	0x6
 2817 013e 91       		.byte	0x91
 2818 013f 1B010000 		.4byte	0x11b
 2819 0143 00       		.byte	0
 2820 0144 0A       		.uleb128 0xa
 2821 0145 40060000 		.4byte	.LASF27
 2822 0149 06       		.byte	0x6
 2823 014a 92       		.byte	0x92
 2824 014b 75010000 		.4byte	0x175
 2825 014f 04       		.byte	0x4
 2826 0150 0A       		.uleb128 0xa
 2827 0151 C4020000 		.4byte	.LASF28
 2828 0155 06       		.byte	0x6
 2829 0156 93       		.byte	0x93
 2830 0157 75010000 		.4byte	0x175
 2831 015b 08       		.byte	0x8
 2832 015c 0A       		.uleb128 0xa
 2833 015d 54090000 		.4byte	.LASF29
 2834 0161 06       		.byte	0x6
 2835 0162 94       		.byte	0x94
 2836 0163 B0000000 		.4byte	0xb0
 2837 0167 0C       		.byte	0xc
 2838 0168 0A       		.uleb128 0xa
 2839 0169 FD080000 		.4byte	.LASF30
 2840 016d 06       		.byte	0x6
 2841 016e 95       		.byte	0x95
 2842 016f AC010000 		.4byte	0x1ac
 2843 0173 10       		.byte	0x10
 2844 0174 00       		.byte	0
 2845 0175 06       		.uleb128 0x6
 2846 0176 04       		.byte	0x4
 2847 0177 2C010000 		.4byte	0x12c
 2848 017b 09       		.uleb128 0x9
 2849 017c 0C040000 		.4byte	.LASF32
 2850 0180 14       		.byte	0x14
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 115


 2851 0181 06       		.byte	0x6
 2852 0182 A6       		.byte	0xa6
 2853 0183 AC010000 		.4byte	0x1ac
 2854 0187 0A       		.uleb128 0xa
 2855 0188 00000000 		.4byte	.LASF33
 2856 018c 06       		.byte	0x6
 2857 018d A9       		.byte	0xa9
 2858 018e F9010000 		.4byte	0x1f9
 2859 0192 00       		.byte	0
 2860 0193 0A       		.uleb128 0xa
 2861 0194 E4000000 		.4byte	.LASF34
 2862 0198 06       		.byte	0x6
 2863 0199 AA       		.byte	0xaa
 2864 019a FE010000 		.4byte	0x1fe
 2865 019e 04       		.byte	0x4
 2866 019f 0A       		.uleb128 0xa
 2867 01a0 40050000 		.4byte	.LASF35
 2868 01a4 06       		.byte	0x6
 2869 01a5 AB       		.byte	0xab
 2870 01a6 EE010000 		.4byte	0x1ee
 2871 01aa 08       		.byte	0x8
 2872 01ab 00       		.byte	0
 2873 01ac 06       		.uleb128 0x6
 2874 01ad 04       		.byte	0x4
 2875 01ae 7B010000 		.4byte	0x17b
 2876 01b2 02       		.uleb128 0x2
 2877 01b3 D0040000 		.4byte	.LASF36
 2878 01b7 06       		.byte	0x6
 2879 01b8 98       		.byte	0x98
 2880 01b9 2C010000 		.4byte	0x12c
 2881 01bd 09       		.uleb128 0x9
 2882 01be EB030000 		.4byte	.LASF37
 2883 01c2 0C       		.byte	0xc
 2884 01c3 06       		.byte	0x6
 2885 01c4 9A       		.byte	0x9a
 2886 01c5 EE010000 		.4byte	0x1ee
 2887 01c9 0A       		.uleb128 0xa
 2888 01ca DD070000 		.4byte	.LASF26
 2889 01ce 06       		.byte	0x6
 2890 01cf 9D       		.byte	0x9d
 2891 01d0 1B010000 		.4byte	0x11b
 2892 01d4 00       		.byte	0
 2893 01d5 0A       		.uleb128 0xa
 2894 01d6 40060000 		.4byte	.LASF27
 2895 01da 06       		.byte	0x6
 2896 01db 9E       		.byte	0x9e
 2897 01dc 75010000 		.4byte	0x175
 2898 01e0 04       		.byte	0x4
 2899 01e1 0A       		.uleb128 0xa
 2900 01e2 C4020000 		.4byte	.LASF28
 2901 01e6 06       		.byte	0x6
 2902 01e7 9F       		.byte	0x9f
 2903 01e8 75010000 		.4byte	0x175
 2904 01ec 08       		.byte	0x8
 2905 01ed 00       		.byte	0
 2906 01ee 02       		.uleb128 0x2
 2907 01ef 67050000 		.4byte	.LASF38
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 116


 2908 01f3 06       		.byte	0x6
 2909 01f4 A1       		.byte	0xa1
 2910 01f5 BD010000 		.4byte	0x1bd
 2911 01f9 0B       		.uleb128 0xb
 2912 01fa 10010000 		.4byte	0x110
 2913 01fe 06       		.uleb128 0x6
 2914 01ff 04       		.byte	0x4
 2915 0200 B2010000 		.4byte	0x1b2
 2916 0204 02       		.uleb128 0x2
 2917 0205 1B070000 		.4byte	.LASF39
 2918 0209 06       		.byte	0x6
 2919 020a AD       		.byte	0xad
 2920 020b 7B010000 		.4byte	0x17b
 2921 020f 02       		.uleb128 0x2
 2922 0210 F3060000 		.4byte	.LASF40
 2923 0214 07       		.byte	0x7
 2924 0215 4E       		.byte	0x4e
 2925 0216 1A020000 		.4byte	0x21a
 2926 021a 06       		.uleb128 0x6
 2927 021b 04       		.byte	0x4
 2928 021c 20020000 		.4byte	0x220
 2929 0220 0C       		.uleb128 0xc
 2930 0221 4B000000 		.4byte	.LASF156
 2931 0225 09       		.uleb128 0x9
 2932 0226 EC000000 		.4byte	.LASF41
 2933 022a 08       		.byte	0x8
 2934 022b 07       		.byte	0x7
 2935 022c 6E       		.byte	0x6e
 2936 022d 4A020000 		.4byte	0x24a
 2937 0231 0A       		.uleb128 0xa
 2938 0232 81010000 		.4byte	.LASF42
 2939 0236 07       		.byte	0x7
 2940 0237 70       		.byte	0x70
 2941 0238 05010000 		.4byte	0x105
 2942 023c 00       		.byte	0
 2943 023d 0A       		.uleb128 0xa
 2944 023e 1C060000 		.4byte	.LASF43
 2945 0242 07       		.byte	0x7
 2946 0243 71       		.byte	0x71
 2947 0244 1B010000 		.4byte	0x11b
 2948 0248 04       		.byte	0x4
 2949 0249 00       		.byte	0
 2950 024a 02       		.uleb128 0x2
 2951 024b B5060000 		.4byte	.LASF44
 2952 024f 07       		.byte	0x7
 2953 0250 72       		.byte	0x72
 2954 0251 25020000 		.4byte	0x225
 2955 0255 02       		.uleb128 0x2
 2956 0256 32050000 		.4byte	.LASF45
 2957 025a 08       		.byte	0x8
 2958 025b 33       		.byte	0x33
 2959 025c 60020000 		.4byte	0x260
 2960 0260 06       		.uleb128 0x6
 2961 0261 04       		.byte	0x4
 2962 0262 66020000 		.4byte	0x266
 2963 0266 09       		.uleb128 0x9
 2964 0267 84020000 		.4byte	.LASF46
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 117


 2965 026b 4C       		.byte	0x4c
 2966 026c 01       		.byte	0x1
 2967 026d 62       		.byte	0x62
 2968 026e F5020000 		.4byte	0x2f5
 2969 0272 0A       		.uleb128 0xa
 2970 0273 5C090000 		.4byte	.LASF47
 2971 0277 01       		.byte	0x1
 2972 0278 64       		.byte	0x64
 2973 0279 30030000 		.4byte	0x330
 2974 027d 00       		.byte	0
 2975 027e 0A       		.uleb128 0xa
 2976 027f 33070000 		.4byte	.LASF48
 2977 0283 01       		.byte	0x1
 2978 0284 65       		.byte	0x65
 2979 0285 30030000 		.4byte	0x330
 2980 0289 04       		.byte	0x4
 2981 028a 0D       		.uleb128 0xd
 2982 028b 7500     		.ascii	"u\000"
 2983 028d 01       		.byte	0x1
 2984 028e 6B       		.byte	0x6b
 2985 028f 71030000 		.4byte	0x371
 2986 0293 08       		.byte	0x8
 2987 0294 0A       		.uleb128 0xa
 2988 0295 4E010000 		.4byte	.LASF49
 2989 0299 01       		.byte	0x1
 2990 029a 6D       		.byte	0x6d
 2991 029b 04020000 		.4byte	0x204
 2992 029f 10       		.byte	0x10
 2993 02a0 0A       		.uleb128 0xa
 2994 02a1 92000000 		.4byte	.LASF50
 2995 02a5 01       		.byte	0x1
 2996 02a6 6E       		.byte	0x6e
 2997 02a7 04020000 		.4byte	0x204
 2998 02ab 24       		.byte	0x24
 2999 02ac 0A       		.uleb128 0xa
 3000 02ad CF020000 		.4byte	.LASF51
 3001 02b1 01       		.byte	0x1
 3002 02b2 70       		.byte	0x70
 3003 02b3 F9010000 		.4byte	0x1f9
 3004 02b7 38       		.byte	0x38
 3005 02b8 0A       		.uleb128 0xa
 3006 02b9 AB070000 		.4byte	.LASF52
 3007 02bd 01       		.byte	0x1
 3008 02be 71       		.byte	0x71
 3009 02bf 10010000 		.4byte	0x110
 3010 02c3 3C       		.byte	0x3c
 3011 02c4 0A       		.uleb128 0xa
 3012 02c5 83040000 		.4byte	.LASF53
 3013 02c9 01       		.byte	0x1
 3014 02ca 72       		.byte	0x72
 3015 02cb 10010000 		.4byte	0x110
 3016 02cf 40       		.byte	0x40
 3017 02d0 0A       		.uleb128 0xa
 3018 02d1 0D0A0000 		.4byte	.LASF54
 3019 02d5 01       		.byte	0x1
 3020 02d6 74       		.byte	0x74
 3021 02d7 90030000 		.4byte	0x390
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 118


 3022 02db 44       		.byte	0x44
 3023 02dc 0A       		.uleb128 0xa
 3024 02dd 79010000 		.4byte	.LASF55
 3025 02e1 01       		.byte	0x1
 3026 02e2 75       		.byte	0x75
 3027 02e3 90030000 		.4byte	0x390
 3028 02e7 45       		.byte	0x45
 3029 02e8 0A       		.uleb128 0xa
 3030 02e9 D9090000 		.4byte	.LASF56
 3031 02ed 01       		.byte	0x1
 3032 02ee 7C       		.byte	0x7c
 3033 02ef 60020000 		.4byte	0x260
 3034 02f3 48       		.byte	0x48
 3035 02f4 00       		.byte	0
 3036 02f5 02       		.uleb128 0x2
 3037 02f6 FB030000 		.4byte	.LASF57
 3038 02fa 08       		.byte	0x8
 3039 02fb 3A       		.byte	0x3a
 3040 02fc 60020000 		.4byte	0x260
 3041 0300 02       		.uleb128 0x2
 3042 0301 D4030000 		.4byte	.LASF58
 3043 0305 08       		.byte	0x8
 3044 0306 41       		.byte	0x41
 3045 0307 60020000 		.4byte	0x260
 3046 030b 09       		.uleb128 0x9
 3047 030c EA040000 		.4byte	.LASF59
 3048 0310 08       		.byte	0x8
 3049 0311 01       		.byte	0x1
 3050 0312 43       		.byte	0x43
 3051 0313 30030000 		.4byte	0x330
 3052 0317 0A       		.uleb128 0xa
 3053 0318 82080000 		.4byte	.LASF60
 3054 031c 01       		.byte	0x1
 3055 031d 45       		.byte	0x45
 3056 031e 30030000 		.4byte	0x330
 3057 0322 00       		.byte	0
 3058 0323 0A       		.uleb128 0xa
 3059 0324 F8010000 		.4byte	.LASF61
 3060 0328 01       		.byte	0x1
 3061 0329 46       		.byte	0x46
 3062 032a 30030000 		.4byte	0x330
 3063 032e 04       		.byte	0x4
 3064 032f 00       		.byte	0
 3065 0330 06       		.uleb128 0x6
 3066 0331 04       		.byte	0x4
 3067 0332 CB000000 		.4byte	0xcb
 3068 0336 02       		.uleb128 0x2
 3069 0337 92070000 		.4byte	.LASF62
 3070 033b 01       		.byte	0x1
 3071 033c 47       		.byte	0x47
 3072 033d 0B030000 		.4byte	0x30b
 3073 0341 09       		.uleb128 0x9
 3074 0342 3D000000 		.4byte	.LASF63
 3075 0346 08       		.byte	0x8
 3076 0347 01       		.byte	0x1
 3077 0348 49       		.byte	0x49
 3078 0349 66030000 		.4byte	0x366
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 119


 3079 034d 0A       		.uleb128 0xa
 3080 034e CC090000 		.4byte	.LASF64
 3081 0352 01       		.byte	0x1
 3082 0353 4B       		.byte	0x4b
 3083 0354 0F020000 		.4byte	0x20f
 3084 0358 00       		.byte	0
 3085 0359 0A       		.uleb128 0xa
 3086 035a A3010000 		.4byte	.LASF65
 3087 035e 01       		.byte	0x1
 3088 035f 4C       		.byte	0x4c
 3089 0360 10010000 		.4byte	0x110
 3090 0364 04       		.byte	0x4
 3091 0365 00       		.byte	0
 3092 0366 02       		.uleb128 0x2
 3093 0367 5F000000 		.4byte	.LASF66
 3094 036b 01       		.byte	0x1
 3095 036c 4D       		.byte	0x4d
 3096 036d 41030000 		.4byte	0x341
 3097 0371 0E       		.uleb128 0xe
 3098 0372 08       		.byte	0x8
 3099 0373 01       		.byte	0x1
 3100 0374 67       		.byte	0x67
 3101 0375 90030000 		.4byte	0x390
 3102 0379 0F       		.uleb128 0xf
 3103 037a 77020000 		.4byte	.LASF67
 3104 037e 01       		.byte	0x1
 3105 037f 69       		.byte	0x69
 3106 0380 36030000 		.4byte	0x336
 3107 0384 0F       		.uleb128 0xf
 3108 0385 E1020000 		.4byte	.LASF68
 3109 0389 01       		.byte	0x1
 3110 038a 6A       		.byte	0x6a
 3111 038b 66030000 		.4byte	0x366
 3112 038f 00       		.byte	0
 3113 0390 0B       		.uleb128 0xb
 3114 0391 CB000000 		.4byte	0xcb
 3115 0395 02       		.uleb128 0x2
 3116 0396 C5090000 		.4byte	.LASF69
 3117 039a 01       		.byte	0x1
 3118 039b 83       		.byte	0x83
 3119 039c 66020000 		.4byte	0x266
 3120 03a0 02       		.uleb128 0x2
 3121 03a1 B8010000 		.4byte	.LASF70
 3122 03a5 01       		.byte	0x1
 3123 03a6 87       		.byte	0x87
 3124 03a7 95030000 		.4byte	0x395
 3125 03ab 09       		.uleb128 0x9
 3126 03ac 28010000 		.4byte	.LASF71
 3127 03b0 08       		.byte	0x8
 3128 03b1 01       		.byte	0x1
 3129 03b2 94       		.byte	0x94
 3130 03b3 D0030000 		.4byte	0x3d0
 3131 03b7 0A       		.uleb128 0xa
 3132 03b8 C8030000 		.4byte	.LASF72
 3133 03bc 01       		.byte	0x1
 3134 03bd 96       		.byte	0x96
 3135 03be B9000000 		.4byte	0xb9
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 120


 3136 03c2 00       		.byte	0
 3137 03c3 0A       		.uleb128 0xa
 3138 03c4 C0030000 		.4byte	.LASF73
 3139 03c8 01       		.byte	0x1
 3140 03c9 97       		.byte	0x97
 3141 03ca 55020000 		.4byte	0x255
 3142 03ce 04       		.byte	0x4
 3143 03cf 00       		.byte	0
 3144 03d0 02       		.uleb128 0x2
 3145 03d1 9E050000 		.4byte	.LASF74
 3146 03d5 01       		.byte	0x1
 3147 03d6 98       		.byte	0x98
 3148 03d7 AB030000 		.4byte	0x3ab
 3149 03db 02       		.uleb128 0x2
 3150 03dc D7010000 		.4byte	.LASF75
 3151 03e0 01       		.byte	0x1
 3152 03e1 9D       		.byte	0x9d
 3153 03e2 D0030000 		.4byte	0x3d0
 3154 03e6 10       		.uleb128 0x10
 3155 03e7 C5050000 		.4byte	.LASF157
 3156 03eb 02       		.byte	0x2
 3157 03ec D3       		.byte	0xd3
 3158 03ed EC000000 		.4byte	0xec
 3159 03f1 03       		.byte	0x3
 3160 03f2 0D040000 		.4byte	0x40d
 3161 03f6 11       		.uleb128 0x11
 3162 03f7 65020000 		.4byte	.LASF76
 3163 03fb 02       		.byte	0x2
 3164 03fc D5       		.byte	0xd5
 3165 03fd EC000000 		.4byte	0xec
 3166 0401 11       		.uleb128 0x11
 3167 0402 F8040000 		.4byte	.LASF77
 3168 0406 02       		.byte	0x2
 3169 0407 D5       		.byte	0xd5
 3170 0408 EC000000 		.4byte	0xec
 3171 040c 00       		.byte	0
 3172 040d 12       		.uleb128 0x12
 3173 040e 38040000 		.4byte	.LASF158
 3174 0412 02       		.byte	0x2
 3175 0413 E7       		.byte	0xe7
 3176 0414 03       		.byte	0x3
 3177 0415 25040000 		.4byte	0x425
 3178 0419 13       		.uleb128 0x13
 3179 041a 00070000 		.4byte	.LASF159
 3180 041e 02       		.byte	0x2
 3181 041f E7       		.byte	0xe7
 3182 0420 EC000000 		.4byte	0xec
 3183 0424 00       		.byte	0
 3184 0425 14       		.uleb128 0x14
 3185 0426 DB040000 		.4byte	.LASF78
 3186 042a 01       		.byte	0x1
 3187 042b 5409     		.2byte	0x954
 3188 042d 05010000 		.4byte	0x105
 3189 0431 00000000 		.4byte	.LFB87
 3190 0435 1E000000 		.4byte	.LFE87-.LFB87
 3191 0439 01       		.uleb128 0x1
 3192 043a 9C       		.byte	0x9c
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 121


 3193 043b 70040000 		.4byte	0x470
 3194 043f 15       		.uleb128 0x15
 3195 0440 93080000 		.4byte	.LASF80
 3196 0444 01       		.byte	0x1
 3197 0445 5409     		.2byte	0x954
 3198 0447 70040000 		.4byte	0x470
 3199 044b 00000000 		.4byte	.LLST0
 3200 044f 16       		.uleb128 0x16
 3201 0450 9B080000 		.4byte	.LASF81
 3202 0454 01       		.byte	0x1
 3203 0455 5609     		.2byte	0x956
 3204 0457 05010000 		.4byte	0x105
 3205 045b 01       		.uleb128 0x1
 3206 045c 54       		.byte	0x54
 3207 045d 17       		.uleb128 0x17
 3208 045e 08000000 		.4byte	.LVL1
 3209 0462 7F190000 		.4byte	0x197f
 3210 0466 17       		.uleb128 0x17
 3211 0467 1A000000 		.4byte	.LVL5
 3212 046b 8A190000 		.4byte	0x198a
 3213 046f 00       		.byte	0
 3214 0470 06       		.uleb128 0x6
 3215 0471 04       		.byte	0x4
 3216 0472 76040000 		.4byte	0x476
 3217 0476 07       		.uleb128 0x7
 3218 0477 A0030000 		.4byte	0x3a0
 3219 047b 14       		.uleb128 0x14
 3220 047c AB020000 		.4byte	.LASF79
 3221 0480 01       		.byte	0x1
 3222 0481 2B09     		.2byte	0x92b
 3223 0483 05010000 		.4byte	0x105
 3224 0487 00000000 		.4byte	.LFB85
 3225 048b 1A000000 		.4byte	.LFE85-.LFB85
 3226 048f 01       		.uleb128 0x1
 3227 0490 9C       		.byte	0x9c
 3228 0491 C6040000 		.4byte	0x4c6
 3229 0495 15       		.uleb128 0x15
 3230 0496 93080000 		.4byte	.LASF80
 3231 049a 01       		.byte	0x1
 3232 049b 2B09     		.2byte	0x92b
 3233 049d 70040000 		.4byte	0x470
 3234 04a1 45000000 		.4byte	.LLST1
 3235 04a5 16       		.uleb128 0x16
 3236 04a6 9B080000 		.4byte	.LASF81
 3237 04aa 01       		.byte	0x1
 3238 04ab 2D09     		.2byte	0x92d
 3239 04ad 05010000 		.4byte	0x105
 3240 04b1 01       		.uleb128 0x1
 3241 04b2 54       		.byte	0x54
 3242 04b3 17       		.uleb128 0x17
 3243 04b4 08000000 		.4byte	.LVL7
 3244 04b8 7F190000 		.4byte	0x197f
 3245 04bc 17       		.uleb128 0x17
 3246 04bd 16000000 		.4byte	.LVL11
 3247 04c1 8A190000 		.4byte	0x198a
 3248 04c5 00       		.byte	0
 3249 04c6 14       		.uleb128 0x14
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 122


 3250 04c7 48040000 		.4byte	.LASF82
 3251 04cb 01       		.byte	0x1
 3252 04cc 4B08     		.2byte	0x84b
 3253 04ce 05010000 		.4byte	0x105
 3254 04d2 00000000 		.4byte	.LFB82
 3255 04d6 54000000 		.4byte	.LFE82-.LFB82
 3256 04da 01       		.uleb128 0x1
 3257 04db 9C       		.byte	0x9c
 3258 04dc 4C050000 		.4byte	0x54c
 3259 04e0 15       		.uleb128 0x15
 3260 04e1 93080000 		.4byte	.LASF80
 3261 04e5 01       		.byte	0x1
 3262 04e6 4B08     		.2byte	0x84b
 3263 04e8 52050000 		.4byte	0x552
 3264 04ec 8A000000 		.4byte	.LLST2
 3265 04f0 15       		.uleb128 0x15
 3266 04f1 25080000 		.4byte	.LASF83
 3267 04f5 01       		.byte	0x1
 3268 04f6 4C08     		.2byte	0x84c
 3269 04f8 C4000000 		.4byte	0xc4
 3270 04fc BE000000 		.4byte	.LLST3
 3271 0500 15       		.uleb128 0x15
 3272 0501 F4090000 		.4byte	.LASF84
 3273 0505 01       		.byte	0x1
 3274 0506 4D08     		.2byte	0x84d
 3275 0508 57050000 		.4byte	0x557
 3276 050c F8000000 		.4byte	.LLST4
 3277 0510 18       		.uleb128 0x18
 3278 0511 9B080000 		.4byte	.LASF81
 3279 0515 01       		.byte	0x1
 3280 0516 4F08     		.2byte	0x84f
 3281 0518 05010000 		.4byte	0x105
 3282 051c 00       		.byte	0
 3283 051d 19       		.uleb128 0x19
 3284 051e CF020000 		.4byte	.LASF51
 3285 0522 01       		.byte	0x1
 3286 0523 5008     		.2byte	0x850
 3287 0525 10010000 		.4byte	0x110
 3288 0529 16010000 		.4byte	.LLST5
 3289 052d 1A       		.uleb128 0x1a
 3290 052e 14000000 		.4byte	.LVL17
 3291 0532 95190000 		.4byte	0x1995
 3292 0536 42050000 		.4byte	0x542
 3293 053a 1B       		.uleb128 0x1b
 3294 053b 01       		.uleb128 0x1
 3295 053c 51       		.byte	0x51
 3296 053d 03       		.uleb128 0x3
 3297 053e F3       		.byte	0xf3
 3298 053f 01       		.uleb128 0x1
 3299 0540 51       		.byte	0x51
 3300 0541 00       		.byte	0
 3301 0542 17       		.uleb128 0x17
 3302 0543 2E000000 		.4byte	.LVL20
 3303 0547 95190000 		.4byte	0x1995
 3304 054b 00       		.byte	0
 3305 054c 06       		.uleb128 0x6
 3306 054d 04       		.byte	0x4
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 123


 3307 054e A0030000 		.4byte	0x3a0
 3308 0552 07       		.uleb128 0x7
 3309 0553 4C050000 		.4byte	0x54c
 3310 0557 07       		.uleb128 0x7
 3311 0558 05010000 		.4byte	0x105
 3312 055c 14       		.uleb128 0x14
 3313 055d 22000000 		.4byte	.LASF85
 3314 0561 01       		.byte	0x1
 3315 0562 900B     		.2byte	0xb90
 3316 0564 05010000 		.4byte	0x105
 3317 0568 00000000 		.4byte	.LFB98
 3318 056c 4E000000 		.4byte	.LFE98-.LFB98
 3319 0570 01       		.uleb128 0x1
 3320 0571 9C       		.byte	0x9c
 3321 0572 EA050000 		.4byte	0x5ea
 3322 0576 15       		.uleb128 0x15
 3323 0577 93080000 		.4byte	.LASF80
 3324 057b 01       		.byte	0x1
 3325 057c 900B     		.2byte	0xb90
 3326 057e EA050000 		.4byte	0x5ea
 3327 0582 36010000 		.4byte	.LLST6
 3328 0586 16       		.uleb128 0x16
 3329 0587 D9090000 		.4byte	.LASF56
 3330 058b 01       		.byte	0x1
 3331 058c 920B     		.2byte	0xb92
 3332 058e 4C050000 		.4byte	0x54c
 3333 0592 01       		.uleb128 0x1
 3334 0593 54       		.byte	0x54
 3335 0594 19       		.uleb128 0x19
 3336 0595 9B080000 		.4byte	.LASF81
 3337 0599 01       		.byte	0x1
 3338 059a 930B     		.2byte	0xb93
 3339 059c 05010000 		.4byte	0x105
 3340 05a0 78010000 		.4byte	.LLST7
 3341 05a4 1C       		.uleb128 0x1c
 3342 05a5 00000000 		.4byte	.Ldebug_ranges0+0
 3343 05a9 19       		.uleb128 0x19
 3344 05aa 79010000 		.4byte	.LASF55
 3345 05ae 01       		.byte	0x1
 3346 05af 9C0B     		.2byte	0xb9c
 3347 05b1 EF050000 		.4byte	0x5ef
 3348 05b5 C4010000 		.4byte	.LLST8
 3349 05b9 1A       		.uleb128 0x1a
 3350 05ba 20000000 		.4byte	.LVL27
 3351 05be C6040000 		.4byte	0x4c6
 3352 05c2 D8050000 		.4byte	0x5d8
 3353 05c6 1B       		.uleb128 0x1b
 3354 05c7 01       		.uleb128 0x1
 3355 05c8 50       		.byte	0x50
 3356 05c9 02       		.uleb128 0x2
 3357 05ca 74       		.byte	0x74
 3358 05cb 00       		.sleb128 0
 3359 05cc 1B       		.uleb128 0x1b
 3360 05cd 01       		.uleb128 0x1
 3361 05ce 51       		.byte	0x51
 3362 05cf 02       		.uleb128 0x2
 3363 05d0 91       		.byte	0x91
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 124


 3364 05d1 6C       		.sleb128 -20
 3365 05d2 1B       		.uleb128 0x1b
 3366 05d3 01       		.uleb128 0x1
 3367 05d4 52       		.byte	0x52
 3368 05d5 01       		.uleb128 0x1
 3369 05d6 30       		.byte	0x30
 3370 05d7 00       		.byte	0
 3371 05d8 1D       		.uleb128 0x1d
 3372 05d9 34000000 		.4byte	.LVL30
 3373 05dd 9E190000 		.4byte	0x199e
 3374 05e1 1B       		.uleb128 0x1b
 3375 05e2 01       		.uleb128 0x1
 3376 05e3 50       		.byte	0x50
 3377 05e4 02       		.uleb128 0x2
 3378 05e5 74       		.byte	0x74
 3379 05e6 24       		.sleb128 36
 3380 05e7 00       		.byte	0
 3381 05e8 00       		.byte	0
 3382 05e9 00       		.byte	0
 3383 05ea 07       		.uleb128 0x7
 3384 05eb 70040000 		.4byte	0x470
 3385 05ef 07       		.uleb128 0x7
 3386 05f0 CB000000 		.4byte	0xcb
 3387 05f4 1E       		.uleb128 0x1e
 3388 05f5 32090000 		.4byte	.LASF87
 3389 05f9 01       		.byte	0x1
 3390 05fa 9E08     		.2byte	0x89e
 3391 05fc 00000000 		.4byte	.LFB83
 3392 0600 24000000 		.4byte	.LFE83-.LFB83
 3393 0604 01       		.uleb128 0x1
 3394 0605 9C       		.byte	0x9c
 3395 0606 3B060000 		.4byte	0x63b
 3396 060a 15       		.uleb128 0x15
 3397 060b 93080000 		.4byte	.LASF80
 3398 060f 01       		.byte	0x1
 3399 0610 9E08     		.2byte	0x89e
 3400 0612 52050000 		.4byte	0x552
 3401 0616 EF010000 		.4byte	.LLST9
 3402 061a 15       		.uleb128 0x15
 3403 061b BB020000 		.4byte	.LASF86
 3404 061f 01       		.byte	0x1
 3405 0620 9F08     		.2byte	0x89f
 3406 0622 3B060000 		.4byte	0x63b
 3407 0626 1B020000 		.4byte	.LLST10
 3408 062a 1D       		.uleb128 0x1d
 3409 062b 20000000 		.4byte	.LVL40
 3410 062f 95190000 		.4byte	0x1995
 3411 0633 1B       		.uleb128 0x1b
 3412 0634 01       		.uleb128 0x1
 3413 0635 50       		.byte	0x50
 3414 0636 02       		.uleb128 0x2
 3415 0637 74       		.byte	0x74
 3416 0638 00       		.sleb128 0
 3417 0639 00       		.byte	0
 3418 063a 00       		.byte	0
 3419 063b 07       		.uleb128 0x7
 3420 063c B0000000 		.4byte	0xb0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 125


 3421 0640 1E       		.uleb128 0x1e
 3422 0641 63090000 		.4byte	.LASF88
 3423 0645 01       		.byte	0x1
 3424 0646 B308     		.2byte	0x8b3
 3425 0648 00000000 		.4byte	.LFB84
 3426 064c 78000000 		.4byte	.LFE84-.LFB84
 3427 0650 01       		.uleb128 0x1
 3428 0651 9C       		.byte	0x9c
 3429 0652 1E070000 		.4byte	0x71e
 3430 0656 15       		.uleb128 0x15
 3431 0657 93080000 		.4byte	.LASF80
 3432 065b 01       		.byte	0x1
 3433 065c B308     		.2byte	0x8b3
 3434 065e 52050000 		.4byte	0x552
 3435 0662 44020000 		.4byte	.LLST11
 3436 0666 1F       		.uleb128 0x1f
 3437 0667 08000000 		.4byte	.LBB25
 3438 066b 3A000000 		.4byte	.LBE25-.LBB25
 3439 066f BE060000 		.4byte	0x6be
 3440 0673 19       		.uleb128 0x19
 3441 0674 79010000 		.4byte	.LASF55
 3442 0678 01       		.byte	0x1
 3443 0679 BD08     		.2byte	0x8bd
 3444 067b CB000000 		.4byte	0xcb
 3445 067f 62020000 		.4byte	.LLST12
 3446 0683 1A       		.uleb128 0x1a
 3447 0684 1A000000 		.4byte	.LVL45
 3448 0688 5C050000 		.4byte	0x55c
 3449 068c 97060000 		.4byte	0x697
 3450 0690 1B       		.uleb128 0x1b
 3451 0691 01       		.uleb128 0x1
 3452 0692 50       		.byte	0x50
 3453 0693 02       		.uleb128 0x2
 3454 0694 75       		.byte	0x75
 3455 0695 00       		.sleb128 0
 3456 0696 00       		.byte	0
 3457 0697 17       		.uleb128 0x17
 3458 0698 20000000 		.4byte	.LVL46
 3459 069c AA190000 		.4byte	0x19aa
 3460 06a0 1A       		.uleb128 0x1a
 3461 06a1 2E000000 		.4byte	.LVL47
 3462 06a5 9E190000 		.4byte	0x199e
 3463 06a9 B4060000 		.4byte	0x6b4
 3464 06ad 1B       		.uleb128 0x1b
 3465 06ae 01       		.uleb128 0x1
 3466 06af 50       		.byte	0x50
 3467 06b0 02       		.uleb128 0x2
 3468 06b1 75       		.byte	0x75
 3469 06b2 24       		.sleb128 36
 3470 06b3 00       		.byte	0
 3471 06b4 17       		.uleb128 0x17
 3472 06b5 34000000 		.4byte	.LVL48
 3473 06b9 AA190000 		.4byte	0x19aa
 3474 06bd 00       		.byte	0
 3475 06be 1F       		.uleb128 0x1f
 3476 06bf 4A000000 		.4byte	.LBB26
 3477 06c3 28000000 		.4byte	.LBE26-.LBB26
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 126


 3478 06c7 F9060000 		.4byte	0x6f9
 3479 06cb 19       		.uleb128 0x19
 3480 06cc 0D0A0000 		.4byte	.LASF54
 3481 06d0 01       		.byte	0x1
 3482 06d1 0E09     		.2byte	0x90e
 3483 06d3 CB000000 		.4byte	0xcb
 3484 06d7 80020000 		.4byte	.LLST13
 3485 06db 1A       		.uleb128 0x1a
 3486 06dc 5E000000 		.4byte	.LVL55
 3487 06e0 9E190000 		.4byte	0x199e
 3488 06e4 EF060000 		.4byte	0x6ef
 3489 06e8 1B       		.uleb128 0x1b
 3490 06e9 01       		.uleb128 0x1
 3491 06ea 50       		.byte	0x50
 3492 06eb 02       		.uleb128 0x2
 3493 06ec 75       		.byte	0x75
 3494 06ed 10       		.sleb128 16
 3495 06ee 00       		.byte	0
 3496 06ef 17       		.uleb128 0x17
 3497 06f0 64000000 		.4byte	.LVL56
 3498 06f4 AA190000 		.4byte	0x19aa
 3499 06f8 00       		.byte	0
 3500 06f9 17       		.uleb128 0x17
 3501 06fa 08000000 		.4byte	.LVL43
 3502 06fe 7F190000 		.4byte	0x197f
 3503 0702 17       		.uleb128 0x17
 3504 0703 46000000 		.4byte	.LVL51
 3505 0707 8A190000 		.4byte	0x198a
 3506 070b 17       		.uleb128 0x17
 3507 070c 4A000000 		.4byte	.LVL52
 3508 0710 7F190000 		.4byte	0x197f
 3509 0714 17       		.uleb128 0x17
 3510 0715 76000000 		.4byte	.LVL59
 3511 0719 8A190000 		.4byte	0x198a
 3512 071d 00       		.byte	0
 3513 071e 20       		.uleb128 0x20
 3514 071f 72090000 		.4byte	.LASF95
 3515 0723 01       		.byte	0x1
 3516 0724 0801     		.2byte	0x108
 3517 0726 05010000 		.4byte	0x105
 3518 072a 00000000 		.4byte	.LFB67
 3519 072e 6C000000 		.4byte	.LFE67-.LFB67
 3520 0732 01       		.uleb128 0x1
 3521 0733 9C       		.byte	0x9c
 3522 0734 B7070000 		.4byte	0x7b7
 3523 0738 15       		.uleb128 0x15
 3524 0739 77020000 		.4byte	.LASF67
 3525 073d 01       		.byte	0x1
 3526 073e 0801     		.2byte	0x108
 3527 0740 55020000 		.4byte	0x255
 3528 0744 9E020000 		.4byte	.LLST14
 3529 0748 15       		.uleb128 0x15
 3530 0749 7B060000 		.4byte	.LASF89
 3531 074d 01       		.byte	0x1
 3532 074e 0901     		.2byte	0x109
 3533 0750 05010000 		.4byte	0x105
 3534 0754 CA020000 		.4byte	.LLST15
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 127


 3535 0758 19       		.uleb128 0x19
 3536 0759 93080000 		.4byte	.LASF80
 3537 075d 01       		.byte	0x1
 3538 075e 0B01     		.2byte	0x10b
 3539 0760 52050000 		.4byte	0x552
 3540 0764 F6020000 		.4byte	.LLST16
 3541 0768 17       		.uleb128 0x17
 3542 0769 0A000000 		.4byte	.LVL62
 3543 076d 7F190000 		.4byte	0x197f
 3544 0771 1A       		.uleb128 0x1a
 3545 0772 3C000000 		.4byte	.LVL63
 3546 0776 9E190000 		.4byte	0x199e
 3547 077a 85070000 		.4byte	0x785
 3548 077e 1B       		.uleb128 0x1b
 3549 077f 01       		.uleb128 0x1
 3550 0780 50       		.byte	0x50
 3551 0781 02       		.uleb128 0x2
 3552 0782 74       		.byte	0x74
 3553 0783 10       		.sleb128 16
 3554 0784 00       		.byte	0
 3555 0785 1A       		.uleb128 0x1a
 3556 0786 58000000 		.4byte	.LVL64
 3557 078a B6190000 		.4byte	0x19b6
 3558 078e 99070000 		.4byte	0x799
 3559 0792 1B       		.uleb128 0x1b
 3560 0793 01       		.uleb128 0x1
 3561 0794 50       		.byte	0x50
 3562 0795 02       		.uleb128 0x2
 3563 0796 74       		.byte	0x74
 3564 0797 10       		.sleb128 16
 3565 0798 00       		.byte	0
 3566 0799 1A       		.uleb128 0x1a
 3567 079a 60000000 		.4byte	.LVL65
 3568 079e B6190000 		.4byte	0x19b6
 3569 07a2 AD070000 		.4byte	0x7ad
 3570 07a6 1B       		.uleb128 0x1b
 3571 07a7 01       		.uleb128 0x1
 3572 07a8 50       		.byte	0x50
 3573 07a9 02       		.uleb128 0x2
 3574 07aa 74       		.byte	0x74
 3575 07ab 24       		.sleb128 36
 3576 07ac 00       		.byte	0
 3577 07ad 17       		.uleb128 0x17
 3578 07ae 64000000 		.4byte	.LVL66
 3579 07b2 8A190000 		.4byte	0x198a
 3580 07b6 00       		.byte	0
 3581 07b7 1E       		.uleb128 0x1e
 3582 07b8 30020000 		.4byte	.LASF90
 3583 07bc 01       		.byte	0x1
 3584 07bd B901     		.2byte	0x1b9
 3585 07bf 00000000 		.4byte	.LFB69
 3586 07c3 20000000 		.4byte	.LFE69-.LFB69
 3587 07c7 01       		.uleb128 0x1
 3588 07c8 9C       		.byte	0x9c
 3589 07c9 32080000 		.4byte	0x832
 3590 07cd 15       		.uleb128 0x15
 3591 07ce 51070000 		.4byte	.LASF91
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 128


 3592 07d2 01       		.byte	0x1
 3593 07d3 B901     		.2byte	0x1b9
 3594 07d5 32080000 		.4byte	0x832
 3595 07d9 22030000 		.4byte	.LLST17
 3596 07dd 15       		.uleb128 0x15
 3597 07de 83040000 		.4byte	.LASF53
 3598 07e2 01       		.byte	0x1
 3599 07e3 BA01     		.2byte	0x1ba
 3600 07e5 32080000 		.4byte	0x832
 3601 07e9 4F030000 		.4byte	.LLST18
 3602 07ed 15       		.uleb128 0x15
 3603 07ee 0C060000 		.4byte	.LASF92
 3604 07f2 01       		.byte	0x1
 3605 07f3 BB01     		.2byte	0x1bb
 3606 07f5 26010000 		.4byte	0x126
 3607 07f9 7B030000 		.4byte	.LLST19
 3608 07fd 15       		.uleb128 0x15
 3609 07fe 0F070000 		.4byte	.LASF93
 3610 0802 01       		.byte	0x1
 3611 0803 BC01     		.2byte	0x1bc
 3612 0805 37080000 		.4byte	0x837
 3613 0809 9C030000 		.4byte	.LLST20
 3614 080d 21       		.uleb128 0x21
 3615 080e 08010000 		.4byte	.LASF94
 3616 0812 01       		.byte	0x1
 3617 0813 BD01     		.2byte	0x1bd
 3618 0815 4C050000 		.4byte	0x54c
 3619 0819 02       		.uleb128 0x2
 3620 081a 91       		.byte	0x91
 3621 081b 00       		.sleb128 0
 3622 081c 1D       		.uleb128 0x1d
 3623 081d 1A000000 		.4byte	.LVL72
 3624 0821 1E070000 		.4byte	0x71e
 3625 0825 1B       		.uleb128 0x1b
 3626 0826 01       		.uleb128 0x1
 3627 0827 50       		.byte	0x50
 3628 0828 02       		.uleb128 0x2
 3629 0829 74       		.byte	0x74
 3630 082a 00       		.sleb128 0
 3631 082b 1B       		.uleb128 0x1b
 3632 082c 01       		.uleb128 0x1
 3633 082d 51       		.byte	0x51
 3634 082e 01       		.uleb128 0x1
 3635 082f 31       		.byte	0x31
 3636 0830 00       		.byte	0
 3637 0831 00       		.byte	0
 3638 0832 07       		.uleb128 0x7
 3639 0833 10010000 		.4byte	0x110
 3640 0837 07       		.uleb128 0x7
 3641 0838 D6000000 		.4byte	0xd6
 3642 083c 20       		.uleb128 0x20
 3643 083d B1050000 		.4byte	.LASF96
 3644 0841 01       		.byte	0x1
 3645 0842 7E01     		.2byte	0x17e
 3646 0844 55020000 		.4byte	0x255
 3647 0848 00000000 		.4byte	.LFB68
 3648 084c 2E000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 129


 3649 0850 01       		.uleb128 0x1
 3650 0851 9C       		.byte	0x9c
 3651 0852 FA080000 		.4byte	0x8fa
 3652 0856 15       		.uleb128 0x15
 3653 0857 51070000 		.4byte	.LASF91
 3654 085b 01       		.byte	0x1
 3655 085c 7E01     		.2byte	0x17e
 3656 085e 32080000 		.4byte	0x832
 3657 0862 BD030000 		.4byte	.LLST21
 3658 0866 15       		.uleb128 0x15
 3659 0867 83040000 		.4byte	.LASF53
 3660 086b 01       		.byte	0x1
 3661 086c 7F01     		.2byte	0x17f
 3662 086e 32080000 		.4byte	0x832
 3663 0872 DB030000 		.4byte	.LLST22
 3664 0876 15       		.uleb128 0x15
 3665 0877 0F070000 		.4byte	.LASF93
 3666 087b 01       		.byte	0x1
 3667 087c 8001     		.2byte	0x180
 3668 087e 37080000 		.4byte	0x837
 3669 0882 F9030000 		.4byte	.LLST23
 3670 0886 19       		.uleb128 0x19
 3671 0887 08010000 		.4byte	.LASF94
 3672 088b 01       		.byte	0x1
 3673 088c 8201     		.2byte	0x182
 3674 088e 4C050000 		.4byte	0x54c
 3675 0892 1A040000 		.4byte	.LLST24
 3676 0896 19       		.uleb128 0x19
 3677 0897 04080000 		.4byte	.LASF97
 3678 089b 01       		.byte	0x1
 3679 089c 8301     		.2byte	0x183
 3680 089e 25000000 		.4byte	0x25
 3681 08a2 38040000 		.4byte	.LLST25
 3682 08a6 19       		.uleb128 0x19
 3683 08a7 0C060000 		.4byte	.LASF92
 3684 08ab 01       		.byte	0x1
 3685 08ac 8401     		.2byte	0x184
 3686 08ae 26010000 		.4byte	0x126
 3687 08b2 69040000 		.4byte	.LLST26
 3688 08b6 1A       		.uleb128 0x1a
 3689 08b7 14000000 		.4byte	.LVL76
 3690 08bb C2190000 		.4byte	0x19c2
 3691 08bf CF080000 		.4byte	0x8cf
 3692 08c3 1B       		.uleb128 0x1b
 3693 08c4 01       		.uleb128 0x1
 3694 08c5 50       		.byte	0x50
 3695 08c6 07       		.uleb128 0x7
 3696 08c7 76       		.byte	0x76
 3697 08c8 00       		.sleb128 0
 3698 08c9 75       		.byte	0x75
 3699 08ca 00       		.sleb128 0
 3700 08cb 1E       		.byte	0x1e
 3701 08cc 23       		.byte	0x23
 3702 08cd 4C       		.uleb128 0x4c
 3703 08ce 00       		.byte	0
 3704 08cf 1D       		.uleb128 0x1d
 3705 08d0 28000000 		.4byte	.LVL80
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 130


 3706 08d4 B7070000 		.4byte	0x7b7
 3707 08d8 1B       		.uleb128 0x1b
 3708 08d9 01       		.uleb128 0x1
 3709 08da 50       		.byte	0x50
 3710 08db 02       		.uleb128 0x2
 3711 08dc 75       		.byte	0x75
 3712 08dd 00       		.sleb128 0
 3713 08de 1B       		.uleb128 0x1b
 3714 08df 01       		.uleb128 0x1
 3715 08e0 51       		.byte	0x51
 3716 08e1 02       		.uleb128 0x2
 3717 08e2 76       		.byte	0x76
 3718 08e3 00       		.sleb128 0
 3719 08e4 1B       		.uleb128 0x1b
 3720 08e5 01       		.uleb128 0x1
 3721 08e6 52       		.byte	0x52
 3722 08e7 03       		.uleb128 0x3
 3723 08e8 74       		.byte	0x74
 3724 08e9 CC00     		.sleb128 76
 3725 08eb 1B       		.uleb128 0x1b
 3726 08ec 01       		.uleb128 0x1
 3727 08ed 53       		.byte	0x53
 3728 08ee 02       		.uleb128 0x2
 3729 08ef 77       		.byte	0x77
 3730 08f0 00       		.sleb128 0
 3731 08f1 1B       		.uleb128 0x1b
 3732 08f2 02       		.uleb128 0x2
 3733 08f3 7D       		.byte	0x7d
 3734 08f4 00       		.sleb128 0
 3735 08f5 02       		.uleb128 0x2
 3736 08f6 74       		.byte	0x74
 3737 08f7 00       		.sleb128 0
 3738 08f8 00       		.byte	0
 3739 08f9 00       		.byte	0
 3740 08fa 20       		.uleb128 0x20
 3741 08fb 5B040000 		.4byte	.LASF98
 3742 08ff 01       		.byte	0x1
 3743 0900 0003     		.2byte	0x300
 3744 0902 05010000 		.4byte	0x105
 3745 0906 00000000 		.4byte	.LFB70
 3746 090a 30010000 		.4byte	.LFE70-.LFB70
 3747 090e 01       		.uleb128 0x1
 3748 090f 9C       		.byte	0x9c
 3749 0910 E20A0000 		.4byte	0xae2
 3750 0914 15       		.uleb128 0x15
 3751 0915 77020000 		.4byte	.LASF67
 3752 0919 01       		.byte	0x1
 3753 091a 0003     		.2byte	0x300
 3754 091c 55020000 		.4byte	0x255
 3755 0920 98040000 		.4byte	.LLST27
 3756 0924 15       		.uleb128 0x15
 3757 0925 25080000 		.4byte	.LASF83
 3758 0929 01       		.byte	0x1
 3759 092a 0103     		.2byte	0x301
 3760 092c E20A0000 		.4byte	0xae2
 3761 0930 C4040000 		.4byte	.LLST28
 3762 0934 15       		.uleb128 0x15
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 131


 3763 0935 47090000 		.4byte	.LASF99
 3764 0939 01       		.byte	0x1
 3765 093a 0203     		.2byte	0x302
 3766 093c 1B010000 		.4byte	0x11b
 3767 0940 F0040000 		.4byte	.LLST29
 3768 0944 15       		.uleb128 0x15
 3769 0945 C0010000 		.4byte	.LASF100
 3770 0949 01       		.byte	0x1
 3771 094a 0303     		.2byte	0x303
 3772 094c 57050000 		.4byte	0x557
 3773 0950 33050000 		.4byte	.LLST30
 3774 0954 19       		.uleb128 0x19
 3775 0955 A2030000 		.4byte	.LASF101
 3776 0959 01       		.byte	0x1
 3777 095a 0503     		.2byte	0x305
 3778 095c 05010000 		.4byte	0x105
 3779 0960 5F050000 		.4byte	.LLST31
 3780 0964 19       		.uleb128 0x19
 3781 0965 56020000 		.4byte	.LASF102
 3782 0969 01       		.byte	0x1
 3783 096a 0503     		.2byte	0x305
 3784 096c 05010000 		.4byte	0x105
 3785 0970 A0050000 		.4byte	.LLST32
 3786 0974 16       		.uleb128 0x16
 3787 0975 B7030000 		.4byte	.LASF103
 3788 0979 01       		.byte	0x1
 3789 097a 0603     		.2byte	0x306
 3790 097c 4A020000 		.4byte	0x24a
 3791 0980 02       		.uleb128 0x2
 3792 0981 91       		.byte	0x91
 3793 0982 60       		.sleb128 -32
 3794 0983 19       		.uleb128 0x19
 3795 0984 93080000 		.4byte	.LASF80
 3796 0988 01       		.byte	0x1
 3797 0989 0703     		.2byte	0x307
 3798 098b 52050000 		.4byte	0x552
 3799 098f C9050000 		.4byte	.LLST33
 3800 0993 1F       		.uleb128 0x1f
 3801 0994 1E000000 		.4byte	.LBB27
 3802 0998 62000000 		.4byte	.LBE27-.LBB27
 3803 099c F5090000 		.4byte	0x9f5
 3804 09a0 19       		.uleb128 0x19
 3805 09a1 8E040000 		.4byte	.LASF104
 3806 09a5 01       		.byte	0x1
 3807 09a6 2303     		.2byte	0x323
 3808 09a8 32080000 		.4byte	0x832
 3809 09ac F5050000 		.4byte	.LLST34
 3810 09b0 1A       		.uleb128 0x1a
 3811 09b1 2A000000 		.4byte	.LVL86
 3812 09b5 C6040000 		.4byte	0x4c6
 3813 09b9 D0090000 		.4byte	0x9d0
 3814 09bd 1B       		.uleb128 0x1b
 3815 09be 01       		.uleb128 0x1
 3816 09bf 50       		.byte	0x50
 3817 09c0 02       		.uleb128 0x2
 3818 09c1 74       		.byte	0x74
 3819 09c2 00       		.sleb128 0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 132


 3820 09c3 1B       		.uleb128 0x1b
 3821 09c4 01       		.uleb128 0x1
 3822 09c5 51       		.byte	0x51
 3823 09c6 02       		.uleb128 0x2
 3824 09c7 77       		.byte	0x77
 3825 09c8 00       		.sleb128 0
 3826 09c9 1B       		.uleb128 0x1b
 3827 09ca 01       		.uleb128 0x1
 3828 09cb 52       		.byte	0x52
 3829 09cc 02       		.uleb128 0x2
 3830 09cd 76       		.byte	0x76
 3831 09ce 00       		.sleb128 0
 3832 09cf 00       		.byte	0
 3833 09d0 1A       		.uleb128 0x1a
 3834 09d1 3A000000 		.4byte	.LVL88
 3835 09d5 5C050000 		.4byte	0x55c
 3836 09d9 E4090000 		.4byte	0x9e4
 3837 09dd 1B       		.uleb128 0x1b
 3838 09de 01       		.uleb128 0x1
 3839 09df 50       		.byte	0x50
 3840 09e0 02       		.uleb128 0x2
 3841 09e1 74       		.byte	0x74
 3842 09e2 00       		.sleb128 0
 3843 09e3 00       		.byte	0
 3844 09e4 1D       		.uleb128 0x1d
 3845 09e5 5A000000 		.4byte	.LVL91
 3846 09e9 9E190000 		.4byte	0x199e
 3847 09ed 1B       		.uleb128 0x1b
 3848 09ee 01       		.uleb128 0x1
 3849 09ef 50       		.byte	0x50
 3850 09f0 02       		.uleb128 0x2
 3851 09f1 74       		.byte	0x74
 3852 09f2 24       		.sleb128 36
 3853 09f3 00       		.byte	0
 3854 09f4 00       		.byte	0
 3855 09f5 17       		.uleb128 0x17
 3856 09f6 12000000 		.4byte	.LVL84
 3857 09fa 7F190000 		.4byte	0x197f
 3858 09fe 17       		.uleb128 0x17
 3859 09ff 84000000 		.4byte	.LVL94
 3860 0a03 8A190000 		.4byte	0x198a
 3861 0a07 17       		.uleb128 0x17
 3862 0a08 90000000 		.4byte	.LVL96
 3863 0a0c 8A190000 		.4byte	0x198a
 3864 0a10 1A       		.uleb128 0x1a
 3865 0a11 9C000000 		.4byte	.LVL97
 3866 0a15 CD190000 		.4byte	0x19cd
 3867 0a19 240A0000 		.4byte	0xa24
 3868 0a1d 1B       		.uleb128 0x1b
 3869 0a1e 01       		.uleb128 0x1
 3870 0a1f 50       		.byte	0x50
 3871 0a20 02       		.uleb128 0x2
 3872 0a21 91       		.byte	0x91
 3873 0a22 60       		.sleb128 -32
 3874 0a23 00       		.byte	0
 3875 0a24 17       		.uleb128 0x17
 3876 0a25 A2000000 		.4byte	.LVL99
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 133


 3877 0a29 8A190000 		.4byte	0x198a
 3878 0a2d 17       		.uleb128 0x17
 3879 0a2e A6000000 		.4byte	.LVL100
 3880 0a32 D9190000 		.4byte	0x19d9
 3881 0a36 17       		.uleb128 0x17
 3882 0a37 AA000000 		.4byte	.LVL101
 3883 0a3b 7F190000 		.4byte	0x197f
 3884 0a3f 17       		.uleb128 0x17
 3885 0a40 D2000000 		.4byte	.LVL102
 3886 0a44 8A190000 		.4byte	0x198a
 3887 0a48 1A       		.uleb128 0x1a
 3888 0a49 DA000000 		.4byte	.LVL104
 3889 0a4d E5190000 		.4byte	0x19e5
 3890 0a51 620A0000 		.4byte	0xa62
 3891 0a55 1B       		.uleb128 0x1b
 3892 0a56 01       		.uleb128 0x1
 3893 0a57 50       		.byte	0x50
 3894 0a58 02       		.uleb128 0x2
 3895 0a59 91       		.byte	0x91
 3896 0a5a 60       		.sleb128 -32
 3897 0a5b 1B       		.uleb128 0x1b
 3898 0a5c 01       		.uleb128 0x1
 3899 0a5d 51       		.byte	0x51
 3900 0a5e 02       		.uleb128 0x2
 3901 0a5f 91       		.byte	0x91
 3902 0a60 5C       		.sleb128 -36
 3903 0a61 00       		.byte	0
 3904 0a62 1A       		.uleb128 0x1a
 3905 0a63 E2000000 		.4byte	.LVL105
 3906 0a67 25040000 		.4byte	0x425
 3907 0a6b 760A0000 		.4byte	0xa76
 3908 0a6f 1B       		.uleb128 0x1b
 3909 0a70 01       		.uleb128 0x1
 3910 0a71 50       		.byte	0x50
 3911 0a72 02       		.uleb128 0x2
 3912 0a73 74       		.byte	0x74
 3913 0a74 00       		.sleb128 0
 3914 0a75 00       		.byte	0
 3915 0a76 1A       		.uleb128 0x1a
 3916 0a77 EE000000 		.4byte	.LVL106
 3917 0a7b F1190000 		.4byte	0x19f1
 3918 0a7f 8A0A0000 		.4byte	0xa8a
 3919 0a83 1B       		.uleb128 0x1b
 3920 0a84 01       		.uleb128 0x1
 3921 0a85 50       		.byte	0x50
 3922 0a86 02       		.uleb128 0x2
 3923 0a87 74       		.byte	0x74
 3924 0a88 10       		.sleb128 16
 3925 0a89 00       		.byte	0
 3926 0a8a 1A       		.uleb128 0x1a
 3927 0a8b F4000000 		.4byte	.LVL107
 3928 0a8f 40060000 		.4byte	0x640
 3929 0a93 9E0A0000 		.4byte	0xa9e
 3930 0a97 1B       		.uleb128 0x1b
 3931 0a98 01       		.uleb128 0x1
 3932 0a99 50       		.byte	0x50
 3933 0a9a 02       		.uleb128 0x2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 134


 3934 0a9b 74       		.byte	0x74
 3935 0a9c 00       		.sleb128 0
 3936 0a9d 00       		.byte	0
 3937 0a9e 17       		.uleb128 0x17
 3938 0a9f F8000000 		.4byte	.LVL108
 3939 0aa3 FD190000 		.4byte	0x19fd
 3940 0aa7 1A       		.uleb128 0x1a
 3941 0aa8 14010000 		.4byte	.LVL109
 3942 0aac 40060000 		.4byte	0x640
 3943 0ab0 BB0A0000 		.4byte	0xabb
 3944 0ab4 1B       		.uleb128 0x1b
 3945 0ab5 01       		.uleb128 0x1
 3946 0ab6 50       		.byte	0x50
 3947 0ab7 02       		.uleb128 0x2
 3948 0ab8 74       		.byte	0x74
 3949 0ab9 00       		.sleb128 0
 3950 0aba 00       		.byte	0
 3951 0abb 17       		.uleb128 0x17
 3952 0abc 18010000 		.4byte	.LVL110
 3953 0ac0 FD190000 		.4byte	0x19fd
 3954 0ac4 1A       		.uleb128 0x1a
 3955 0ac5 20010000 		.4byte	.LVL111
 3956 0ac9 40060000 		.4byte	0x640
 3957 0acd D80A0000 		.4byte	0xad8
 3958 0ad1 1B       		.uleb128 0x1b
 3959 0ad2 01       		.uleb128 0x1
 3960 0ad3 50       		.byte	0x50
 3961 0ad4 02       		.uleb128 0x2
 3962 0ad5 74       		.byte	0x74
 3963 0ad6 00       		.sleb128 0
 3964 0ad7 00       		.byte	0
 3965 0ad8 17       		.uleb128 0x17
 3966 0ad9 24010000 		.4byte	.LVL112
 3967 0add FD190000 		.4byte	0x19fd
 3968 0ae1 00       		.byte	0
 3969 0ae2 07       		.uleb128 0x7
 3970 0ae3 C4000000 		.4byte	0xc4
 3971 0ae7 20       		.uleb128 0x20
 3972 0ae8 1F040000 		.4byte	.LASF105
 3973 0aec 01       		.byte	0x1
 3974 0aed D403     		.2byte	0x3d4
 3975 0aef 05010000 		.4byte	0x105
 3976 0af3 00000000 		.4byte	.LFB71
 3977 0af7 AE000000 		.4byte	.LFE71-.LFB71
 3978 0afb 01       		.uleb128 0x1
 3979 0afc 9C       		.byte	0x9c
 3980 0afd 170C0000 		.4byte	0xc17
 3981 0b01 15       		.uleb128 0x15
 3982 0b02 77020000 		.4byte	.LASF67
 3983 0b06 01       		.byte	0x1
 3984 0b07 D403     		.2byte	0x3d4
 3985 0b09 55020000 		.4byte	0x255
 3986 0b0d 08060000 		.4byte	.LLST35
 3987 0b11 15       		.uleb128 0x15
 3988 0b12 25080000 		.4byte	.LASF83
 3989 0b16 01       		.byte	0x1
 3990 0b17 D503     		.2byte	0x3d5
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 135


 3991 0b19 E20A0000 		.4byte	0xae2
 3992 0b1d 58060000 		.4byte	.LLST36
 3993 0b21 15       		.uleb128 0x15
 3994 0b22 A9000000 		.4byte	.LASF106
 3995 0b26 01       		.byte	0x1
 3996 0b27 D603     		.2byte	0x3d6
 3997 0b29 1D0C0000 		.4byte	0xc1d
 3998 0b2d 92060000 		.4byte	.LLST37
 3999 0b31 15       		.uleb128 0x15
 4000 0b32 C0010000 		.4byte	.LASF100
 4001 0b36 01       		.byte	0x1
 4002 0b37 D703     		.2byte	0x3d7
 4003 0b39 57050000 		.4byte	0x557
 4004 0b3d D4060000 		.4byte	.LLST38
 4005 0b41 16       		.uleb128 0x16
 4006 0b42 9B080000 		.4byte	.LASF81
 4007 0b46 01       		.byte	0x1
 4008 0b47 D903     		.2byte	0x3d9
 4009 0b49 05010000 		.4byte	0x105
 4010 0b4d 01       		.uleb128 0x1
 4011 0b4e 50       		.byte	0x50
 4012 0b4f 22       		.uleb128 0x22
 4013 0b50 19020000 		.4byte	.LASF107
 4014 0b54 01       		.byte	0x1
 4015 0b55 DA03     		.2byte	0x3da
 4016 0b57 10010000 		.4byte	0x110
 4017 0b5b 19       		.uleb128 0x19
 4018 0b5c 93080000 		.4byte	.LASF80
 4019 0b60 01       		.byte	0x1
 4020 0b61 DB03     		.2byte	0x3db
 4021 0b63 52050000 		.4byte	0x552
 4022 0b67 16070000 		.4byte	.LLST39
 4023 0b6b 23       		.uleb128 0x23
 4024 0b6c E6030000 		.4byte	0x3e6
 4025 0b70 04000000 		.4byte	.LBB28
 4026 0b74 14000000 		.4byte	.LBE28-.LBB28
 4027 0b78 01       		.byte	0x1
 4028 0b79 F603     		.2byte	0x3f6
 4029 0b7b 940B0000 		.4byte	0xb94
 4030 0b7f 24       		.uleb128 0x24
 4031 0b80 04000000 		.4byte	.LBB29
 4032 0b84 14000000 		.4byte	.LBE29-.LBB29
 4033 0b88 25       		.uleb128 0x25
 4034 0b89 F6030000 		.4byte	0x3f6
 4035 0b8d 25       		.uleb128 0x25
 4036 0b8e 01040000 		.4byte	0x401
 4037 0b92 00       		.byte	0
 4038 0b93 00       		.byte	0
 4039 0b94 26       		.uleb128 0x26
 4040 0b95 18000000 		.4byte	.Ldebug_ranges0+0x18
 4041 0b99 FC0B0000 		.4byte	0xbfc
 4042 0b9d 19       		.uleb128 0x19
 4043 0b9e 79010000 		.4byte	.LASF55
 4044 0ba2 01       		.byte	0x1
 4045 0ba3 FA03     		.2byte	0x3fa
 4046 0ba5 EF050000 		.4byte	0x5ef
 4047 0ba9 66070000 		.4byte	.LLST40
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 136


 4048 0bad 19       		.uleb128 0x19
 4049 0bae 8E040000 		.4byte	.LASF104
 4050 0bb2 01       		.byte	0x1
 4051 0bb3 FB03     		.2byte	0x3fb
 4052 0bb5 32080000 		.4byte	0x832
 4053 0bb9 91070000 		.4byte	.LLST41
 4054 0bbd 1A       		.uleb128 0x1a
 4055 0bbe 3A000000 		.4byte	.LVL120
 4056 0bc2 C6040000 		.4byte	0x4c6
 4057 0bc6 D70B0000 		.4byte	0xbd7
 4058 0bca 1B       		.uleb128 0x1b
 4059 0bcb 01       		.uleb128 0x1
 4060 0bcc 50       		.byte	0x50
 4061 0bcd 02       		.uleb128 0x2
 4062 0bce 75       		.byte	0x75
 4063 0bcf 00       		.sleb128 0
 4064 0bd0 1B       		.uleb128 0x1b
 4065 0bd1 01       		.uleb128 0x1
 4066 0bd2 52       		.byte	0x52
 4067 0bd3 02       		.uleb128 0x2
 4068 0bd4 76       		.byte	0x76
 4069 0bd5 00       		.sleb128 0
 4070 0bd6 00       		.byte	0
 4071 0bd7 1A       		.uleb128 0x1a
 4072 0bd8 54000000 		.4byte	.LVL121
 4073 0bdc 5C050000 		.4byte	0x55c
 4074 0be0 EB0B0000 		.4byte	0xbeb
 4075 0be4 1B       		.uleb128 0x1b
 4076 0be5 01       		.uleb128 0x1
 4077 0be6 50       		.byte	0x50
 4078 0be7 02       		.uleb128 0x2
 4079 0be8 75       		.byte	0x75
 4080 0be9 00       		.sleb128 0
 4081 0bea 00       		.byte	0
 4082 0beb 1D       		.uleb128 0x1d
 4083 0bec 70000000 		.4byte	.LVL122
 4084 0bf0 9E190000 		.4byte	0x199e
 4085 0bf4 1B       		.uleb128 0x1b
 4086 0bf5 01       		.uleb128 0x1
 4087 0bf6 50       		.byte	0x50
 4088 0bf7 02       		.uleb128 0x2
 4089 0bf8 75       		.byte	0x75
 4090 0bf9 24       		.sleb128 36
 4091 0bfa 00       		.byte	0
 4092 0bfb 00       		.byte	0
 4093 0bfc 27       		.uleb128 0x27
 4094 0bfd 0D040000 		.4byte	0x40d
 4095 0c01 A6000000 		.4byte	.LBB32
 4096 0c05 04000000 		.4byte	.LBE32-.LBB32
 4097 0c09 01       		.byte	0x1
 4098 0c0a 7504     		.2byte	0x475
 4099 0c0c 28       		.uleb128 0x28
 4100 0c0d 19040000 		.4byte	0x419
 4101 0c11 AF070000 		.4byte	.LLST42
 4102 0c15 00       		.byte	0
 4103 0c16 00       		.byte	0
 4104 0c17 06       		.uleb128 0x6
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 137


 4105 0c18 04       		.byte	0x4
 4106 0c19 05010000 		.4byte	0x105
 4107 0c1d 07       		.uleb128 0x7
 4108 0c1e 170C0000 		.4byte	0xc17
 4109 0c22 20       		.uleb128 0x20
 4110 0c23 11050000 		.4byte	.LASF108
 4111 0c27 01       		.byte	0x1
 4112 0c28 7B04     		.2byte	0x47b
 4113 0c2a 05010000 		.4byte	0x105
 4114 0c2e 00000000 		.4byte	.LFB72
 4115 0c32 7E000000 		.4byte	.LFE72-.LFB72
 4116 0c36 01       		.uleb128 0x1
 4117 0c37 9C       		.byte	0x9c
 4118 0c38 260D0000 		.4byte	0xd26
 4119 0c3c 15       		.uleb128 0x15
 4120 0c3d 77020000 		.4byte	.LASF67
 4121 0c41 01       		.byte	0x1
 4122 0c42 7B04     		.2byte	0x47b
 4123 0c44 55020000 		.4byte	0x255
 4124 0c48 C2070000 		.4byte	.LLST43
 4125 0c4c 15       		.uleb128 0x15
 4126 0c4d A9000000 		.4byte	.LASF106
 4127 0c51 01       		.byte	0x1
 4128 0c52 7C04     		.2byte	0x47c
 4129 0c54 1D0C0000 		.4byte	0xc1d
 4130 0c58 54080000 		.4byte	.LLST44
 4131 0c5c 16       		.uleb128 0x16
 4132 0c5d 9B080000 		.4byte	.LASF81
 4133 0c61 01       		.byte	0x1
 4134 0c62 7E04     		.2byte	0x47e
 4135 0c64 05010000 		.4byte	0x105
 4136 0c68 01       		.uleb128 0x1
 4137 0c69 50       		.byte	0x50
 4138 0c6a 22       		.uleb128 0x22
 4139 0c6b 19020000 		.4byte	.LASF107
 4140 0c6f 01       		.byte	0x1
 4141 0c70 7F04     		.2byte	0x47f
 4142 0c72 10010000 		.4byte	0x110
 4143 0c76 19       		.uleb128 0x19
 4144 0c77 93080000 		.4byte	.LASF80
 4145 0c7b 01       		.byte	0x1
 4146 0c7c 8004     		.2byte	0x480
 4147 0c7e 52050000 		.4byte	0x552
 4148 0c82 C2080000 		.4byte	.LLST45
 4149 0c86 23       		.uleb128 0x23
 4150 0c87 E6030000 		.4byte	0x3e6
 4151 0c8b 02000000 		.4byte	.LBB34
 4152 0c8f 14000000 		.4byte	.LBE34-.LBB34
 4153 0c93 01       		.byte	0x1
 4154 0c94 A304     		.2byte	0x4a3
 4155 0c96 AF0C0000 		.4byte	0xcaf
 4156 0c9a 24       		.uleb128 0x24
 4157 0c9b 02000000 		.4byte	.LBB35
 4158 0c9f 14000000 		.4byte	.LBE35-.LBB35
 4159 0ca3 25       		.uleb128 0x25
 4160 0ca4 F6030000 		.4byte	0x3f6
 4161 0ca8 25       		.uleb128 0x25
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 138


 4162 0ca9 01040000 		.4byte	0x401
 4163 0cad 00       		.byte	0
 4164 0cae 00       		.byte	0
 4165 0caf 1F       		.uleb128 0x1f
 4166 0cb0 16000000 		.4byte	.LBB36
 4167 0cb4 62000000 		.4byte	.LBE36-.LBB36
 4168 0cb8 0B0D0000 		.4byte	0xd0b
 4169 0cbc 19       		.uleb128 0x19
 4170 0cbd CF020000 		.4byte	.LASF51
 4171 0cc1 01       		.byte	0x1
 4172 0cc2 A504     		.2byte	0x4a5
 4173 0cc4 32080000 		.4byte	0x832
 4174 0cc8 54090000 		.4byte	.LLST46
 4175 0ccc 1C       		.uleb128 0x1c
 4176 0ccd 30000000 		.4byte	.Ldebug_ranges0+0x30
 4177 0cd1 19       		.uleb128 0x19
 4178 0cd2 79010000 		.4byte	.LASF55
 4179 0cd6 01       		.byte	0x1
 4180 0cd7 AC04     		.2byte	0x4ac
 4181 0cd9 EF050000 		.4byte	0x5ef
 4182 0cdd A6090000 		.4byte	.LLST47
 4183 0ce1 1A       		.uleb128 0x1a
 4184 0ce2 38000000 		.4byte	.LVL136
 4185 0ce6 5C050000 		.4byte	0x55c
 4186 0cea F60C0000 		.4byte	0xcf6
 4187 0cee 1B       		.uleb128 0x1b
 4188 0cef 01       		.uleb128 0x1
 4189 0cf0 50       		.byte	0x50
 4190 0cf1 03       		.uleb128 0x3
 4191 0cf2 F3       		.byte	0xf3
 4192 0cf3 01       		.uleb128 0x1
 4193 0cf4 50       		.byte	0x50
 4194 0cf5 00       		.byte	0
 4195 0cf6 1D       		.uleb128 0x1d
 4196 0cf7 4C000000 		.4byte	.LVL139
 4197 0cfb 9E190000 		.4byte	0x199e
 4198 0cff 1B       		.uleb128 0x1b
 4199 0d00 01       		.uleb128 0x1
 4200 0d01 50       		.byte	0x50
 4201 0d02 05       		.uleb128 0x5
 4202 0d03 F3       		.byte	0xf3
 4203 0d04 01       		.uleb128 0x1
 4204 0d05 50       		.byte	0x50
 4205 0d06 23       		.byte	0x23
 4206 0d07 24       		.uleb128 0x24
 4207 0d08 00       		.byte	0
 4208 0d09 00       		.byte	0
 4209 0d0a 00       		.byte	0
 4210 0d0b 27       		.uleb128 0x27
 4211 0d0c 0D040000 		.4byte	0x40d
 4212 0d10 78000000 		.4byte	.LBB39
 4213 0d14 04000000 		.4byte	.LBE39-.LBB39
 4214 0d18 01       		.byte	0x1
 4215 0d19 1D05     		.2byte	0x51d
 4216 0d1b 28       		.uleb128 0x28
 4217 0d1c 19040000 		.4byte	0x419
 4218 0d20 D1090000 		.4byte	.LLST48
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 139


 4219 0d24 00       		.byte	0
 4220 0d25 00       		.byte	0
 4221 0d26 20       		.uleb128 0x20
 4222 0d27 6F000000 		.4byte	.LASF109
 4223 0d2b 01       		.byte	0x1
 4224 0d2c 2305     		.2byte	0x523
 4225 0d2e 05010000 		.4byte	0x105
 4226 0d32 00000000 		.4byte	.LFB73
 4227 0d36 F8000000 		.4byte	.LFE73-.LFB73
 4228 0d3a 01       		.uleb128 0x1
 4229 0d3b 9C       		.byte	0x9c
 4230 0d3c E40E0000 		.4byte	0xee4
 4231 0d40 15       		.uleb128 0x15
 4232 0d41 77020000 		.4byte	.LASF67
 4233 0d45 01       		.byte	0x1
 4234 0d46 2305     		.2byte	0x523
 4235 0d48 55020000 		.4byte	0x255
 4236 0d4c E4090000 		.4byte	.LLST49
 4237 0d50 15       		.uleb128 0x15
 4238 0d51 BB020000 		.4byte	.LASF86
 4239 0d55 01       		.byte	0x1
 4240 0d56 2405     		.2byte	0x524
 4241 0d58 3B060000 		.4byte	0x63b
 4242 0d5c 100A0000 		.4byte	.LLST50
 4243 0d60 15       		.uleb128 0x15
 4244 0d61 47090000 		.4byte	.LASF99
 4245 0d65 01       		.byte	0x1
 4246 0d66 2505     		.2byte	0x525
 4247 0d68 1B010000 		.4byte	0x11b
 4248 0d6c 3C0A0000 		.4byte	.LLST51
 4249 0d70 19       		.uleb128 0x19
 4250 0d71 A2030000 		.4byte	.LASF101
 4251 0d75 01       		.byte	0x1
 4252 0d76 2705     		.2byte	0x527
 4253 0d78 05010000 		.4byte	0x105
 4254 0d7c 7F0A0000 		.4byte	.LLST52
 4255 0d80 16       		.uleb128 0x16
 4256 0d81 B7030000 		.4byte	.LASF103
 4257 0d85 01       		.byte	0x1
 4258 0d86 2805     		.2byte	0x528
 4259 0d88 4A020000 		.4byte	0x24a
 4260 0d8c 02       		.uleb128 0x2
 4261 0d8d 91       		.byte	0x91
 4262 0d8e 60       		.sleb128 -32
 4263 0d8f 19       		.uleb128 0x19
 4264 0d90 93080000 		.4byte	.LASF80
 4265 0d94 01       		.byte	0x1
 4266 0d95 2905     		.2byte	0x529
 4267 0d97 52050000 		.4byte	0x552
 4268 0d9b B50A0000 		.4byte	.LLST53
 4269 0d9f 1F       		.uleb128 0x1f
 4270 0da0 10000000 		.4byte	.LBB41
 4271 0da4 4C000000 		.4byte	.LBE41-.LBB41
 4272 0da8 0D0E0000 		.4byte	0xe0d
 4273 0dac 19       		.uleb128 0x19
 4274 0dad CF020000 		.4byte	.LASF51
 4275 0db1 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 140


 4276 0db2 4005     		.2byte	0x540
 4277 0db4 32080000 		.4byte	0x832
 4278 0db8 E10A0000 		.4byte	.LLST54
 4279 0dbc 1A       		.uleb128 0x1a
 4280 0dbd 1C000000 		.4byte	.LVL157
 4281 0dc1 F4050000 		.4byte	0x5f4
 4282 0dc5 D60D0000 		.4byte	0xdd6
 4283 0dc9 1B       		.uleb128 0x1b
 4284 0dca 01       		.uleb128 0x1
 4285 0dcb 50       		.byte	0x50
 4286 0dcc 02       		.uleb128 0x2
 4287 0dcd 74       		.byte	0x74
 4288 0dce 00       		.sleb128 0
 4289 0dcf 1B       		.uleb128 0x1b
 4290 0dd0 01       		.uleb128 0x1
 4291 0dd1 51       		.byte	0x51
 4292 0dd2 02       		.uleb128 0x2
 4293 0dd3 77       		.byte	0x77
 4294 0dd4 00       		.sleb128 0
 4295 0dd5 00       		.byte	0
 4296 0dd6 1A       		.uleb128 0x1a
 4297 0dd7 2C000000 		.4byte	.LVL159
 4298 0ddb 9E190000 		.4byte	0x199e
 4299 0ddf EA0D0000 		.4byte	0xdea
 4300 0de3 1B       		.uleb128 0x1b
 4301 0de4 01       		.uleb128 0x1
 4302 0de5 50       		.byte	0x50
 4303 0de6 02       		.uleb128 0x2
 4304 0de7 74       		.byte	0x74
 4305 0de8 10       		.sleb128 16
 4306 0de9 00       		.byte	0
 4307 0dea 17       		.uleb128 0x17
 4308 0deb 42000000 		.4byte	.LVL160
 4309 0def 8A190000 		.4byte	0x198a
 4310 0df3 17       		.uleb128 0x17
 4311 0df4 4E000000 		.4byte	.LVL162
 4312 0df8 8A190000 		.4byte	0x198a
 4313 0dfc 1D       		.uleb128 0x1d
 4314 0dfd 5A000000 		.4byte	.LVL163
 4315 0e01 CD190000 		.4byte	0x19cd
 4316 0e05 1B       		.uleb128 0x1b
 4317 0e06 01       		.uleb128 0x1
 4318 0e07 50       		.byte	0x50
 4319 0e08 02       		.uleb128 0x2
 4320 0e09 91       		.byte	0x91
 4321 0e0a 60       		.sleb128 -32
 4322 0e0b 00       		.byte	0
 4323 0e0c 00       		.byte	0
 4324 0e0d 17       		.uleb128 0x17
 4325 0e0e 10000000 		.4byte	.LVL155
 4326 0e12 7F190000 		.4byte	0x197f
 4327 0e16 17       		.uleb128 0x17
 4328 0e17 60000000 		.4byte	.LVL165
 4329 0e1b 8A190000 		.4byte	0x198a
 4330 0e1f 17       		.uleb128 0x17
 4331 0e20 64000000 		.4byte	.LVL166
 4332 0e24 D9190000 		.4byte	0x19d9
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 141


 4333 0e28 17       		.uleb128 0x17
 4334 0e29 68000000 		.4byte	.LVL167
 4335 0e2d 7F190000 		.4byte	0x197f
 4336 0e31 17       		.uleb128 0x17
 4337 0e32 90000000 		.4byte	.LVL168
 4338 0e36 8A190000 		.4byte	0x198a
 4339 0e3a 1A       		.uleb128 0x1a
 4340 0e3b 98000000 		.4byte	.LVL170
 4341 0e3f E5190000 		.4byte	0x19e5
 4342 0e43 540E0000 		.4byte	0xe54
 4343 0e47 1B       		.uleb128 0x1b
 4344 0e48 01       		.uleb128 0x1
 4345 0e49 50       		.byte	0x50
 4346 0e4a 02       		.uleb128 0x2
 4347 0e4b 91       		.byte	0x91
 4348 0e4c 60       		.sleb128 -32
 4349 0e4d 1B       		.uleb128 0x1b
 4350 0e4e 01       		.uleb128 0x1
 4351 0e4f 51       		.byte	0x51
 4352 0e50 02       		.uleb128 0x2
 4353 0e51 91       		.byte	0x91
 4354 0e52 5C       		.sleb128 -36
 4355 0e53 00       		.byte	0
 4356 0e54 1A       		.uleb128 0x1a
 4357 0e55 A0000000 		.4byte	.LVL171
 4358 0e59 7B040000 		.4byte	0x47b
 4359 0e5d 680E0000 		.4byte	0xe68
 4360 0e61 1B       		.uleb128 0x1b
 4361 0e62 01       		.uleb128 0x1
 4362 0e63 50       		.byte	0x50
 4363 0e64 02       		.uleb128 0x2
 4364 0e65 74       		.byte	0x74
 4365 0e66 00       		.sleb128 0
 4366 0e67 00       		.byte	0
 4367 0e68 1A       		.uleb128 0x1a
 4368 0e69 AC000000 		.4byte	.LVL172
 4369 0e6d F1190000 		.4byte	0x19f1
 4370 0e71 7C0E0000 		.4byte	0xe7c
 4371 0e75 1B       		.uleb128 0x1b
 4372 0e76 01       		.uleb128 0x1
 4373 0e77 50       		.byte	0x50
 4374 0e78 02       		.uleb128 0x2
 4375 0e79 74       		.byte	0x74
 4376 0e7a 24       		.sleb128 36
 4377 0e7b 00       		.byte	0
 4378 0e7c 1A       		.uleb128 0x1a
 4379 0e7d B2000000 		.4byte	.LVL173
 4380 0e81 40060000 		.4byte	0x640
 4381 0e85 900E0000 		.4byte	0xe90
 4382 0e89 1B       		.uleb128 0x1b
 4383 0e8a 01       		.uleb128 0x1
 4384 0e8b 50       		.byte	0x50
 4385 0e8c 02       		.uleb128 0x2
 4386 0e8d 74       		.byte	0x74
 4387 0e8e 00       		.sleb128 0
 4388 0e8f 00       		.byte	0
 4389 0e90 17       		.uleb128 0x17
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 142


 4390 0e91 B6000000 		.4byte	.LVL174
 4391 0e95 FD190000 		.4byte	0x19fd
 4392 0e99 1A       		.uleb128 0x1a
 4393 0e9a D2000000 		.4byte	.LVL175
 4394 0e9e 40060000 		.4byte	0x640
 4395 0ea2 AD0E0000 		.4byte	0xead
 4396 0ea6 1B       		.uleb128 0x1b
 4397 0ea7 01       		.uleb128 0x1
 4398 0ea8 50       		.byte	0x50
 4399 0ea9 02       		.uleb128 0x2
 4400 0eaa 74       		.byte	0x74
 4401 0eab 00       		.sleb128 0
 4402 0eac 00       		.byte	0
 4403 0ead 17       		.uleb128 0x17
 4404 0eae D6000000 		.4byte	.LVL176
 4405 0eb2 FD190000 		.4byte	0x19fd
 4406 0eb6 1A       		.uleb128 0x1a
 4407 0eb7 DE000000 		.4byte	.LVL177
 4408 0ebb 40060000 		.4byte	0x640
 4409 0ebf CA0E0000 		.4byte	0xeca
 4410 0ec3 1B       		.uleb128 0x1b
 4411 0ec4 01       		.uleb128 0x1
 4412 0ec5 50       		.byte	0x50
 4413 0ec6 02       		.uleb128 0x2
 4414 0ec7 74       		.byte	0x74
 4415 0ec8 00       		.sleb128 0
 4416 0ec9 00       		.byte	0
 4417 0eca 17       		.uleb128 0x17
 4418 0ecb E2000000 		.4byte	.LVL178
 4419 0ecf FD190000 		.4byte	0x19fd
 4420 0ed3 1D       		.uleb128 0x1d
 4421 0ed4 E8000000 		.4byte	.LVL179
 4422 0ed8 7B040000 		.4byte	0x47b
 4423 0edc 1B       		.uleb128 0x1b
 4424 0edd 01       		.uleb128 0x1
 4425 0ede 50       		.byte	0x50
 4426 0edf 02       		.uleb128 0x2
 4427 0ee0 74       		.byte	0x74
 4428 0ee1 00       		.sleb128 0
 4429 0ee2 00       		.byte	0
 4430 0ee3 00       		.byte	0
 4431 0ee4 20       		.uleb128 0x20
 4432 0ee5 C3000000 		.4byte	.LASF110
 4433 0ee9 01       		.byte	0x1
 4434 0eea B205     		.2byte	0x5b2
 4435 0eec 05010000 		.4byte	0x105
 4436 0ef0 00000000 		.4byte	.LFB74
 4437 0ef4 EC000000 		.4byte	.LFE74-.LFB74
 4438 0ef8 01       		.uleb128 0x1
 4439 0ef9 9C       		.byte	0x9c
 4440 0efa 78100000 		.4byte	0x1078
 4441 0efe 15       		.uleb128 0x15
 4442 0eff 77020000 		.4byte	.LASF67
 4443 0f03 01       		.byte	0x1
 4444 0f04 B205     		.2byte	0x5b2
 4445 0f06 55020000 		.4byte	0x255
 4446 0f0a 0C0B0000 		.4byte	.LLST55
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 143


 4447 0f0e 15       		.uleb128 0x15
 4448 0f0f 47090000 		.4byte	.LASF99
 4449 0f13 01       		.byte	0x1
 4450 0f14 B305     		.2byte	0x5b3
 4451 0f16 1B010000 		.4byte	0x11b
 4452 0f1a 380B0000 		.4byte	.LLST56
 4453 0f1e 19       		.uleb128 0x19
 4454 0f1f A2030000 		.4byte	.LASF101
 4455 0f23 01       		.byte	0x1
 4456 0f24 B505     		.2byte	0x5b5
 4457 0f26 05010000 		.4byte	0x105
 4458 0f2a 7B0B0000 		.4byte	.LLST57
 4459 0f2e 16       		.uleb128 0x16
 4460 0f2f B7030000 		.4byte	.LASF103
 4461 0f33 01       		.byte	0x1
 4462 0f34 B605     		.2byte	0x5b6
 4463 0f36 4A020000 		.4byte	0x24a
 4464 0f3a 02       		.uleb128 0x2
 4465 0f3b 91       		.byte	0x91
 4466 0f3c 68       		.sleb128 -24
 4467 0f3d 19       		.uleb128 0x19
 4468 0f3e 93080000 		.4byte	.LASF80
 4469 0f42 01       		.byte	0x1
 4470 0f43 B705     		.2byte	0x5b7
 4471 0f45 52050000 		.4byte	0x552
 4472 0f49 B10B0000 		.4byte	.LLST58
 4473 0f4d 1F       		.uleb128 0x1f
 4474 0f4e 0E000000 		.4byte	.LBB42
 4475 0f52 44000000 		.4byte	.LBE42-.LBB42
 4476 0f56 A10F0000 		.4byte	0xfa1
 4477 0f5a 19       		.uleb128 0x19
 4478 0f5b 22070000 		.4byte	.LASF111
 4479 0f5f 01       		.byte	0x1
 4480 0f60 D405     		.2byte	0x5d4
 4481 0f62 32080000 		.4byte	0x832
 4482 0f66 DD0B0000 		.4byte	.LLST59
 4483 0f6a 1A       		.uleb128 0x1a
 4484 0f6b 22000000 		.4byte	.LVL189
 4485 0f6f 9E190000 		.4byte	0x199e
 4486 0f73 7E0F0000 		.4byte	0xf7e
 4487 0f77 1B       		.uleb128 0x1b
 4488 0f78 01       		.uleb128 0x1
 4489 0f79 50       		.byte	0x50
 4490 0f7a 02       		.uleb128 0x2
 4491 0f7b 74       		.byte	0x74
 4492 0f7c 10       		.sleb128 16
 4493 0f7d 00       		.byte	0
 4494 0f7e 17       		.uleb128 0x17
 4495 0f7f 38000000 		.4byte	.LVL190
 4496 0f83 8A190000 		.4byte	0x198a
 4497 0f87 17       		.uleb128 0x17
 4498 0f88 44000000 		.4byte	.LVL193
 4499 0f8c 8A190000 		.4byte	0x198a
 4500 0f90 1D       		.uleb128 0x1d
 4501 0f91 50000000 		.4byte	.LVL194
 4502 0f95 CD190000 		.4byte	0x19cd
 4503 0f99 1B       		.uleb128 0x1b
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 144


 4504 0f9a 01       		.uleb128 0x1
 4505 0f9b 50       		.byte	0x50
 4506 0f9c 02       		.uleb128 0x2
 4507 0f9d 91       		.byte	0x91
 4508 0f9e 68       		.sleb128 -24
 4509 0f9f 00       		.byte	0
 4510 0fa0 00       		.byte	0
 4511 0fa1 17       		.uleb128 0x17
 4512 0fa2 0E000000 		.4byte	.LVL185
 4513 0fa6 7F190000 		.4byte	0x197f
 4514 0faa 17       		.uleb128 0x17
 4515 0fab 56000000 		.4byte	.LVL196
 4516 0faf 8A190000 		.4byte	0x198a
 4517 0fb3 17       		.uleb128 0x17
 4518 0fb4 5A000000 		.4byte	.LVL197
 4519 0fb8 D9190000 		.4byte	0x19d9
 4520 0fbc 17       		.uleb128 0x17
 4521 0fbd 5E000000 		.4byte	.LVL198
 4522 0fc1 7F190000 		.4byte	0x197f
 4523 0fc5 17       		.uleb128 0x17
 4524 0fc6 86000000 		.4byte	.LVL199
 4525 0fca 8A190000 		.4byte	0x198a
 4526 0fce 1A       		.uleb128 0x1a
 4527 0fcf 8E000000 		.4byte	.LVL201
 4528 0fd3 E5190000 		.4byte	0x19e5
 4529 0fd7 E80F0000 		.4byte	0xfe8
 4530 0fdb 1B       		.uleb128 0x1b
 4531 0fdc 01       		.uleb128 0x1
 4532 0fdd 50       		.byte	0x50
 4533 0fde 02       		.uleb128 0x2
 4534 0fdf 91       		.byte	0x91
 4535 0fe0 68       		.sleb128 -24
 4536 0fe1 1B       		.uleb128 0x1b
 4537 0fe2 01       		.uleb128 0x1
 4538 0fe3 51       		.byte	0x51
 4539 0fe4 02       		.uleb128 0x2
 4540 0fe5 91       		.byte	0x91
 4541 0fe6 64       		.sleb128 -28
 4542 0fe7 00       		.byte	0
 4543 0fe8 1A       		.uleb128 0x1a
 4544 0fe9 96000000 		.4byte	.LVL202
 4545 0fed 7B040000 		.4byte	0x47b
 4546 0ff1 FC0F0000 		.4byte	0xffc
 4547 0ff5 1B       		.uleb128 0x1b
 4548 0ff6 01       		.uleb128 0x1
 4549 0ff7 50       		.byte	0x50
 4550 0ff8 02       		.uleb128 0x2
 4551 0ff9 74       		.byte	0x74
 4552 0ffa 00       		.sleb128 0
 4553 0ffb 00       		.byte	0
 4554 0ffc 1A       		.uleb128 0x1a
 4555 0ffd A2000000 		.4byte	.LVL203
 4556 1001 F1190000 		.4byte	0x19f1
 4557 1005 10100000 		.4byte	0x1010
 4558 1009 1B       		.uleb128 0x1b
 4559 100a 01       		.uleb128 0x1
 4560 100b 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 145


 4561 100c 02       		.uleb128 0x2
 4562 100d 74       		.byte	0x74
 4563 100e 24       		.sleb128 36
 4564 100f 00       		.byte	0
 4565 1010 1A       		.uleb128 0x1a
 4566 1011 A8000000 		.4byte	.LVL204
 4567 1015 40060000 		.4byte	0x640
 4568 1019 24100000 		.4byte	0x1024
 4569 101d 1B       		.uleb128 0x1b
 4570 101e 01       		.uleb128 0x1
 4571 101f 50       		.byte	0x50
 4572 1020 02       		.uleb128 0x2
 4573 1021 74       		.byte	0x74
 4574 1022 00       		.sleb128 0
 4575 1023 00       		.byte	0
 4576 1024 17       		.uleb128 0x17
 4577 1025 AC000000 		.4byte	.LVL205
 4578 1029 FD190000 		.4byte	0x19fd
 4579 102d 1A       		.uleb128 0x1a
 4580 102e C8000000 		.4byte	.LVL206
 4581 1032 40060000 		.4byte	0x640
 4582 1036 41100000 		.4byte	0x1041
 4583 103a 1B       		.uleb128 0x1b
 4584 103b 01       		.uleb128 0x1
 4585 103c 50       		.byte	0x50
 4586 103d 02       		.uleb128 0x2
 4587 103e 74       		.byte	0x74
 4588 103f 00       		.sleb128 0
 4589 1040 00       		.byte	0
 4590 1041 17       		.uleb128 0x17
 4591 1042 CC000000 		.4byte	.LVL207
 4592 1046 FD190000 		.4byte	0x19fd
 4593 104a 1A       		.uleb128 0x1a
 4594 104b D4000000 		.4byte	.LVL208
 4595 104f 40060000 		.4byte	0x640
 4596 1053 5E100000 		.4byte	0x105e
 4597 1057 1B       		.uleb128 0x1b
 4598 1058 01       		.uleb128 0x1
 4599 1059 50       		.byte	0x50
 4600 105a 02       		.uleb128 0x2
 4601 105b 74       		.byte	0x74
 4602 105c 00       		.sleb128 0
 4603 105d 00       		.byte	0
 4604 105e 17       		.uleb128 0x17
 4605 105f D8000000 		.4byte	.LVL209
 4606 1063 FD190000 		.4byte	0x19fd
 4607 1067 1D       		.uleb128 0x1d
 4608 1068 DE000000 		.4byte	.LVL210
 4609 106c 7B040000 		.4byte	0x47b
 4610 1070 1B       		.uleb128 0x1b
 4611 1071 01       		.uleb128 0x1
 4612 1072 50       		.byte	0x50
 4613 1073 02       		.uleb128 0x2
 4614 1074 74       		.byte	0x74
 4615 1075 00       		.sleb128 0
 4616 1076 00       		.byte	0
 4617 1077 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 146


 4618 1078 20       		.uleb128 0x20
 4619 1079 09030000 		.4byte	.LASF112
 4620 107d 01       		.byte	0x1
 4621 107e 8D06     		.2byte	0x68d
 4622 1080 05010000 		.4byte	0x105
 4623 1084 00000000 		.4byte	.LFB75
 4624 1088 F8000000 		.4byte	.LFE75-.LFB75
 4625 108c 01       		.uleb128 0x1
 4626 108d 9C       		.byte	0x9c
 4627 108e 46120000 		.4byte	0x1246
 4628 1092 15       		.uleb128 0x15
 4629 1093 77020000 		.4byte	.LASF67
 4630 1097 01       		.byte	0x1
 4631 1098 8D06     		.2byte	0x68d
 4632 109a 55020000 		.4byte	0x255
 4633 109e 180C0000 		.4byte	.LLST60
 4634 10a2 15       		.uleb128 0x15
 4635 10a3 BB020000 		.4byte	.LASF86
 4636 10a7 01       		.byte	0x1
 4637 10a8 8E06     		.2byte	0x68e
 4638 10aa 3B060000 		.4byte	0x63b
 4639 10ae 440C0000 		.4byte	.LLST61
 4640 10b2 15       		.uleb128 0x15
 4641 10b3 47090000 		.4byte	.LASF99
 4642 10b7 01       		.byte	0x1
 4643 10b8 8F06     		.2byte	0x68f
 4644 10ba 1B010000 		.4byte	0x11b
 4645 10be 700C0000 		.4byte	.LLST62
 4646 10c2 19       		.uleb128 0x19
 4647 10c3 A2030000 		.4byte	.LASF101
 4648 10c7 01       		.byte	0x1
 4649 10c8 9106     		.2byte	0x691
 4650 10ca 05010000 		.4byte	0x105
 4651 10ce B30C0000 		.4byte	.LLST63
 4652 10d2 16       		.uleb128 0x16
 4653 10d3 B7030000 		.4byte	.LASF103
 4654 10d7 01       		.byte	0x1
 4655 10d8 9206     		.2byte	0x692
 4656 10da 4A020000 		.4byte	0x24a
 4657 10de 02       		.uleb128 0x2
 4658 10df 91       		.byte	0x91
 4659 10e0 68       		.sleb128 -24
 4660 10e1 19       		.uleb128 0x19
 4661 10e2 DC060000 		.4byte	.LASF113
 4662 10e6 01       		.byte	0x1
 4663 10e7 9306     		.2byte	0x693
 4664 10e9 30030000 		.4byte	0x330
 4665 10ed F40C0000 		.4byte	.LLST64
 4666 10f1 19       		.uleb128 0x19
 4667 10f2 93080000 		.4byte	.LASF80
 4668 10f6 01       		.byte	0x1
 4669 10f7 9406     		.2byte	0x694
 4670 10f9 52050000 		.4byte	0x552
 4671 10fd 070D0000 		.4byte	.LLST65
 4672 1101 1F       		.uleb128 0x1f
 4673 1102 10000000 		.4byte	.LBB43
 4674 1106 4C000000 		.4byte	.LBE43-.LBB43
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 147


 4675 110a 6F110000 		.4byte	0x116f
 4676 110e 19       		.uleb128 0x19
 4677 110f CF020000 		.4byte	.LASF51
 4678 1113 01       		.byte	0x1
 4679 1114 AB06     		.2byte	0x6ab
 4680 1116 32080000 		.4byte	0x832
 4681 111a 330D0000 		.4byte	.LLST66
 4682 111e 1A       		.uleb128 0x1a
 4683 111f 1E000000 		.4byte	.LVL218
 4684 1123 F4050000 		.4byte	0x5f4
 4685 1127 38110000 		.4byte	0x1138
 4686 112b 1B       		.uleb128 0x1b
 4687 112c 01       		.uleb128 0x1
 4688 112d 50       		.byte	0x50
 4689 112e 02       		.uleb128 0x2
 4690 112f 74       		.byte	0x74
 4691 1130 00       		.sleb128 0
 4692 1131 1B       		.uleb128 0x1b
 4693 1132 01       		.uleb128 0x1
 4694 1133 51       		.byte	0x51
 4695 1134 02       		.uleb128 0x2
 4696 1135 76       		.byte	0x76
 4697 1136 00       		.sleb128 0
 4698 1137 00       		.byte	0
 4699 1138 1A       		.uleb128 0x1a
 4700 1139 2C000000 		.4byte	.LVL219
 4701 113d 9E190000 		.4byte	0x199e
 4702 1141 4C110000 		.4byte	0x114c
 4703 1145 1B       		.uleb128 0x1b
 4704 1146 01       		.uleb128 0x1
 4705 1147 50       		.byte	0x50
 4706 1148 02       		.uleb128 0x2
 4707 1149 74       		.byte	0x74
 4708 114a 24       		.sleb128 36
 4709 114b 00       		.byte	0
 4710 114c 17       		.uleb128 0x17
 4711 114d 42000000 		.4byte	.LVL220
 4712 1151 8A190000 		.4byte	0x198a
 4713 1155 17       		.uleb128 0x17
 4714 1156 4E000000 		.4byte	.LVL223
 4715 115a 8A190000 		.4byte	0x198a
 4716 115e 1D       		.uleb128 0x1d
 4717 115f 5A000000 		.4byte	.LVL224
 4718 1163 CD190000 		.4byte	0x19cd
 4719 1167 1B       		.uleb128 0x1b
 4720 1168 01       		.uleb128 0x1
 4721 1169 50       		.byte	0x50
 4722 116a 02       		.uleb128 0x2
 4723 116b 91       		.byte	0x91
 4724 116c 68       		.sleb128 -24
 4725 116d 00       		.byte	0
 4726 116e 00       		.byte	0
 4727 116f 17       		.uleb128 0x17
 4728 1170 10000000 		.4byte	.LVL215
 4729 1174 7F190000 		.4byte	0x197f
 4730 1178 17       		.uleb128 0x17
 4731 1179 60000000 		.4byte	.LVL226
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 148


 4732 117d 8A190000 		.4byte	0x198a
 4733 1181 17       		.uleb128 0x17
 4734 1182 64000000 		.4byte	.LVL227
 4735 1186 D9190000 		.4byte	0x19d9
 4736 118a 17       		.uleb128 0x17
 4737 118b 68000000 		.4byte	.LVL228
 4738 118f 7F190000 		.4byte	0x197f
 4739 1193 17       		.uleb128 0x17
 4740 1194 90000000 		.4byte	.LVL229
 4741 1198 8A190000 		.4byte	0x198a
 4742 119c 1A       		.uleb128 0x1a
 4743 119d 98000000 		.4byte	.LVL231
 4744 11a1 E5190000 		.4byte	0x19e5
 4745 11a5 B6110000 		.4byte	0x11b6
 4746 11a9 1B       		.uleb128 0x1b
 4747 11aa 01       		.uleb128 0x1
 4748 11ab 50       		.byte	0x50
 4749 11ac 02       		.uleb128 0x2
 4750 11ad 91       		.byte	0x91
 4751 11ae 68       		.sleb128 -24
 4752 11af 1B       		.uleb128 0x1b
 4753 11b0 01       		.uleb128 0x1
 4754 11b1 51       		.byte	0x51
 4755 11b2 02       		.uleb128 0x2
 4756 11b3 91       		.byte	0x91
 4757 11b4 64       		.sleb128 -28
 4758 11b5 00       		.byte	0
 4759 11b6 1A       		.uleb128 0x1a
 4760 11b7 A0000000 		.4byte	.LVL232
 4761 11bb 7B040000 		.4byte	0x47b
 4762 11bf CA110000 		.4byte	0x11ca
 4763 11c3 1B       		.uleb128 0x1b
 4764 11c4 01       		.uleb128 0x1
 4765 11c5 50       		.byte	0x50
 4766 11c6 02       		.uleb128 0x2
 4767 11c7 74       		.byte	0x74
 4768 11c8 00       		.sleb128 0
 4769 11c9 00       		.byte	0
 4770 11ca 1A       		.uleb128 0x1a
 4771 11cb AC000000 		.4byte	.LVL233
 4772 11cf F1190000 		.4byte	0x19f1
 4773 11d3 DE110000 		.4byte	0x11de
 4774 11d7 1B       		.uleb128 0x1b
 4775 11d8 01       		.uleb128 0x1
 4776 11d9 50       		.byte	0x50
 4777 11da 02       		.uleb128 0x2
 4778 11db 74       		.byte	0x74
 4779 11dc 24       		.sleb128 36
 4780 11dd 00       		.byte	0
 4781 11de 1A       		.uleb128 0x1a
 4782 11df B2000000 		.4byte	.LVL234
 4783 11e3 40060000 		.4byte	0x640
 4784 11e7 F2110000 		.4byte	0x11f2
 4785 11eb 1B       		.uleb128 0x1b
 4786 11ec 01       		.uleb128 0x1
 4787 11ed 50       		.byte	0x50
 4788 11ee 02       		.uleb128 0x2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 149


 4789 11ef 74       		.byte	0x74
 4790 11f0 00       		.sleb128 0
 4791 11f1 00       		.byte	0
 4792 11f2 17       		.uleb128 0x17
 4793 11f3 B6000000 		.4byte	.LVL235
 4794 11f7 FD190000 		.4byte	0x19fd
 4795 11fb 1A       		.uleb128 0x1a
 4796 11fc D2000000 		.4byte	.LVL236
 4797 1200 40060000 		.4byte	0x640
 4798 1204 0F120000 		.4byte	0x120f
 4799 1208 1B       		.uleb128 0x1b
 4800 1209 01       		.uleb128 0x1
 4801 120a 50       		.byte	0x50
 4802 120b 02       		.uleb128 0x2
 4803 120c 74       		.byte	0x74
 4804 120d 00       		.sleb128 0
 4805 120e 00       		.byte	0
 4806 120f 17       		.uleb128 0x17
 4807 1210 D6000000 		.4byte	.LVL237
 4808 1214 FD190000 		.4byte	0x19fd
 4809 1218 1A       		.uleb128 0x1a
 4810 1219 DE000000 		.4byte	.LVL238
 4811 121d 40060000 		.4byte	0x640
 4812 1221 2C120000 		.4byte	0x122c
 4813 1225 1B       		.uleb128 0x1b
 4814 1226 01       		.uleb128 0x1
 4815 1227 50       		.byte	0x50
 4816 1228 02       		.uleb128 0x2
 4817 1229 74       		.byte	0x74
 4818 122a 00       		.sleb128 0
 4819 122b 00       		.byte	0
 4820 122c 17       		.uleb128 0x17
 4821 122d E2000000 		.4byte	.LVL239
 4822 1231 FD190000 		.4byte	0x19fd
 4823 1235 1D       		.uleb128 0x1d
 4824 1236 E8000000 		.4byte	.LVL240
 4825 123a 7B040000 		.4byte	0x47b
 4826 123e 1B       		.uleb128 0x1b
 4827 123f 01       		.uleb128 0x1
 4828 1240 50       		.byte	0x50
 4829 1241 02       		.uleb128 0x2
 4830 1242 74       		.byte	0x74
 4831 1243 00       		.sleb128 0
 4832 1244 00       		.byte	0
 4833 1245 00       		.byte	0
 4834 1246 20       		.uleb128 0x20
 4835 1247 7D000000 		.4byte	.LASF114
 4836 124b 01       		.byte	0x1
 4837 124c 2407     		.2byte	0x724
 4838 124e 05010000 		.4byte	0x105
 4839 1252 00000000 		.4byte	.LFB76
 4840 1256 72000000 		.4byte	.LFE76-.LFB76
 4841 125a 01       		.uleb128 0x1
 4842 125b 9C       		.byte	0x9c
 4843 125c 5D130000 		.4byte	0x135d
 4844 1260 15       		.uleb128 0x15
 4845 1261 77020000 		.4byte	.LASF67
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 150


 4846 1265 01       		.byte	0x1
 4847 1266 2407     		.2byte	0x724
 4848 1268 55020000 		.4byte	0x255
 4849 126c 510D0000 		.4byte	.LLST67
 4850 1270 15       		.uleb128 0x15
 4851 1271 BB020000 		.4byte	.LASF86
 4852 1275 01       		.byte	0x1
 4853 1276 2507     		.2byte	0x725
 4854 1278 3B060000 		.4byte	0x63b
 4855 127c A10D0000 		.4byte	.LLST68
 4856 1280 15       		.uleb128 0x15
 4857 1281 A9000000 		.4byte	.LASF106
 4858 1285 01       		.byte	0x1
 4859 1286 2607     		.2byte	0x726
 4860 1288 1D0C0000 		.4byte	0xc1d
 4861 128c DB0D0000 		.4byte	.LLST69
 4862 1290 16       		.uleb128 0x16
 4863 1291 9B080000 		.4byte	.LASF81
 4864 1295 01       		.byte	0x1
 4865 1296 2807     		.2byte	0x728
 4866 1298 05010000 		.4byte	0x105
 4867 129c 01       		.uleb128 0x1
 4868 129d 50       		.byte	0x50
 4869 129e 22       		.uleb128 0x22
 4870 129f 19020000 		.4byte	.LASF107
 4871 12a3 01       		.byte	0x1
 4872 12a4 2907     		.2byte	0x729
 4873 12a6 10010000 		.4byte	0x110
 4874 12aa 19       		.uleb128 0x19
 4875 12ab 93080000 		.4byte	.LASF80
 4876 12af 01       		.byte	0x1
 4877 12b0 2A07     		.2byte	0x72a
 4878 12b2 52050000 		.4byte	0x552
 4879 12b6 1D0E0000 		.4byte	.LLST70
 4880 12ba 23       		.uleb128 0x23
 4881 12bb E6030000 		.4byte	0x3e6
 4882 12bf 04000000 		.4byte	.LBB44
 4883 12c3 14000000 		.4byte	.LBE44-.LBB44
 4884 12c7 01       		.byte	0x1
 4885 12c8 3F07     		.2byte	0x73f
 4886 12ca E3120000 		.4byte	0x12e3
 4887 12ce 24       		.uleb128 0x24
 4888 12cf 04000000 		.4byte	.LBB45
 4889 12d3 14000000 		.4byte	.LBE45-.LBB45
 4890 12d7 25       		.uleb128 0x25
 4891 12d8 F6030000 		.4byte	0x3f6
 4892 12dc 25       		.uleb128 0x25
 4893 12dd 01040000 		.4byte	0x401
 4894 12e1 00       		.byte	0
 4895 12e2 00       		.byte	0
 4896 12e3 1F       		.uleb128 0x1f
 4897 12e4 18000000 		.4byte	.LBB46
 4898 12e8 52000000 		.4byte	.LBE46-.LBB46
 4899 12ec 42130000 		.4byte	0x1342
 4900 12f0 19       		.uleb128 0x19
 4901 12f1 CF020000 		.4byte	.LASF51
 4902 12f5 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 151


 4903 12f6 4107     		.2byte	0x741
 4904 12f8 32080000 		.4byte	0x832
 4905 12fc 6D0E0000 		.4byte	.LLST71
 4906 1300 1C       		.uleb128 0x1c
 4907 1301 48000000 		.4byte	.Ldebug_ranges0+0x48
 4908 1305 19       		.uleb128 0x19
 4909 1306 0D0A0000 		.4byte	.LASF54
 4910 130a 01       		.byte	0x1
 4911 130b 4607     		.2byte	0x746
 4912 130d EF050000 		.4byte	0x5ef
 4913 1311 A50E0000 		.4byte	.LLST72
 4914 1315 1A       		.uleb128 0x1a
 4915 1316 2A000000 		.4byte	.LVL247
 4916 131a F4050000 		.4byte	0x5f4
 4917 131e 30130000 		.4byte	0x1330
 4918 1322 1B       		.uleb128 0x1b
 4919 1323 01       		.uleb128 0x1
 4920 1324 50       		.byte	0x50
 4921 1325 02       		.uleb128 0x2
 4922 1326 77       		.byte	0x77
 4923 1327 00       		.sleb128 0
 4924 1328 1B       		.uleb128 0x1b
 4925 1329 01       		.uleb128 0x1
 4926 132a 51       		.byte	0x51
 4927 132b 03       		.uleb128 0x3
 4928 132c F3       		.byte	0xf3
 4929 132d 01       		.uleb128 0x1
 4930 132e 51       		.byte	0x51
 4931 132f 00       		.byte	0
 4932 1330 1D       		.uleb128 0x1d
 4933 1331 40000000 		.4byte	.LVL249
 4934 1335 9E190000 		.4byte	0x199e
 4935 1339 1B       		.uleb128 0x1b
 4936 133a 01       		.uleb128 0x1
 4937 133b 50       		.byte	0x50
 4938 133c 02       		.uleb128 0x2
 4939 133d 77       		.byte	0x77
 4940 133e 10       		.sleb128 16
 4941 133f 00       		.byte	0
 4942 1340 00       		.byte	0
 4943 1341 00       		.byte	0
 4944 1342 27       		.uleb128 0x27
 4945 1343 0D040000 		.4byte	0x40d
 4946 1347 6A000000 		.4byte	.LBB49
 4947 134b 04000000 		.4byte	.LBE49-.LBB49
 4948 134f 01       		.byte	0x1
 4949 1350 7D07     		.2byte	0x77d
 4950 1352 28       		.uleb128 0x28
 4951 1353 19040000 		.4byte	0x419
 4952 1357 D00E0000 		.4byte	.LLST73
 4953 135b 00       		.byte	0
 4954 135c 00       		.byte	0
 4955 135d 20       		.uleb128 0x20
 4956 135e EB080000 		.4byte	.LASF115
 4957 1362 01       		.byte	0x1
 4958 1363 8307     		.2byte	0x783
 4959 1365 05010000 		.4byte	0x105
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 152


 4960 1369 00000000 		.4byte	.LFB77
 4961 136d 30000000 		.4byte	.LFE77-.LFB77
 4962 1371 01       		.uleb128 0x1
 4963 1372 9C       		.byte	0x9c
 4964 1373 32140000 		.4byte	0x1432
 4965 1377 15       		.uleb128 0x15
 4966 1378 77020000 		.4byte	.LASF67
 4967 137c 01       		.byte	0x1
 4968 137d 8307     		.2byte	0x783
 4969 137f 55020000 		.4byte	0x255
 4970 1383 E30E0000 		.4byte	.LLST74
 4971 1387 15       		.uleb128 0x15
 4972 1388 BB020000 		.4byte	.LASF86
 4973 138c 01       		.byte	0x1
 4974 138d 8407     		.2byte	0x784
 4975 138f 3B060000 		.4byte	0x63b
 4976 1393 1A0F0000 		.4byte	.LLST75
 4977 1397 19       		.uleb128 0x19
 4978 1398 9B080000 		.4byte	.LASF81
 4979 139c 01       		.byte	0x1
 4980 139d 8607     		.2byte	0x786
 4981 139f 05010000 		.4byte	0x105
 4982 13a3 540F0000 		.4byte	.LLST76
 4983 13a7 22       		.uleb128 0x22
 4984 13a8 19020000 		.4byte	.LASF107
 4985 13ac 01       		.byte	0x1
 4986 13ad 8707     		.2byte	0x787
 4987 13af 10010000 		.4byte	0x110
 4988 13b3 19       		.uleb128 0x19
 4989 13b4 DC060000 		.4byte	.LASF113
 4990 13b8 01       		.byte	0x1
 4991 13b9 8807     		.2byte	0x788
 4992 13bb 30030000 		.4byte	0x330
 4993 13bf 730F0000 		.4byte	.LLST77
 4994 13c3 19       		.uleb128 0x19
 4995 13c4 93080000 		.4byte	.LASF80
 4996 13c8 01       		.byte	0x1
 4997 13c9 8907     		.2byte	0x789
 4998 13cb 52050000 		.4byte	0x552
 4999 13cf 860F0000 		.4byte	.LLST78
 5000 13d3 23       		.uleb128 0x23
 5001 13d4 E6030000 		.4byte	0x3e6
 5002 13d8 02000000 		.4byte	.LBB51
 5003 13dc 14000000 		.4byte	.LBE51-.LBB51
 5004 13e0 01       		.byte	0x1
 5005 13e1 9F07     		.2byte	0x79f
 5006 13e3 FC130000 		.4byte	0x13fc
 5007 13e7 24       		.uleb128 0x24
 5008 13e8 02000000 		.4byte	.LBB52
 5009 13ec 14000000 		.4byte	.LBE52-.LBB52
 5010 13f0 25       		.uleb128 0x25
 5011 13f1 F6030000 		.4byte	0x3f6
 5012 13f5 25       		.uleb128 0x25
 5013 13f6 01040000 		.4byte	0x401
 5014 13fa 00       		.byte	0
 5015 13fb 00       		.byte	0
 5016 13fc 23       		.uleb128 0x23
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 153


 5017 13fd 0D040000 		.4byte	0x40d
 5018 1401 2A000000 		.4byte	.LBB53
 5019 1405 04000000 		.4byte	.LBE53-.LBB53
 5020 1409 01       		.byte	0x1
 5021 140a B407     		.2byte	0x7b4
 5022 140c 1A140000 		.4byte	0x141a
 5023 1410 28       		.uleb128 0x28
 5024 1411 19040000 		.4byte	0x419
 5025 1415 BD0F0000 		.4byte	.LLST79
 5026 1419 00       		.byte	0
 5027 141a 1D       		.uleb128 0x1d
 5028 141b 22000000 		.4byte	.LVL260
 5029 141f F4050000 		.4byte	0x5f4
 5030 1423 1B       		.uleb128 0x1b
 5031 1424 01       		.uleb128 0x1
 5032 1425 50       		.byte	0x50
 5033 1426 02       		.uleb128 0x2
 5034 1427 74       		.byte	0x74
 5035 1428 00       		.sleb128 0
 5036 1429 1B       		.uleb128 0x1b
 5037 142a 01       		.uleb128 0x1
 5038 142b 51       		.byte	0x51
 5039 142c 03       		.uleb128 0x3
 5040 142d F3       		.byte	0xf3
 5041 142e 01       		.uleb128 0x1
 5042 142f 51       		.byte	0x51
 5043 1430 00       		.byte	0
 5044 1431 00       		.byte	0
 5045 1432 20       		.uleb128 0x20
 5046 1433 6B080000 		.4byte	.LASF116
 5047 1437 01       		.byte	0x1
 5048 1438 BA07     		.2byte	0x7ba
 5049 143a 10010000 		.4byte	0x110
 5050 143e 00000000 		.4byte	.LFB78
 5051 1442 12000000 		.4byte	.LFE78-.LFB78
 5052 1446 01       		.uleb128 0x1
 5053 1447 9C       		.byte	0x9c
 5054 1448 7D140000 		.4byte	0x147d
 5055 144c 15       		.uleb128 0x15
 5056 144d 77020000 		.4byte	.LASF67
 5057 1451 01       		.byte	0x1
 5058 1452 BA07     		.2byte	0x7ba
 5059 1454 7D140000 		.4byte	0x147d
 5060 1458 D00F0000 		.4byte	.LLST80
 5061 145c 16       		.uleb128 0x16
 5062 145d CE010000 		.4byte	.LASF117
 5063 1461 01       		.byte	0x1
 5064 1462 BC07     		.2byte	0x7bc
 5065 1464 10010000 		.4byte	0x110
 5066 1468 01       		.uleb128 0x1
 5067 1469 54       		.byte	0x54
 5068 146a 17       		.uleb128 0x17
 5069 146b 08000000 		.4byte	.LVL266
 5070 146f 7F190000 		.4byte	0x197f
 5071 1473 17       		.uleb128 0x17
 5072 1474 0E000000 		.4byte	.LVL268
 5073 1478 8A190000 		.4byte	0x198a
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 154


 5074 147c 00       		.byte	0
 5075 147d 07       		.uleb128 0x7
 5076 147e 55020000 		.4byte	0x255
 5077 1482 20       		.uleb128 0x20
 5078 1483 62010000 		.4byte	.LASF118
 5079 1487 01       		.byte	0x1
 5080 1488 CA07     		.2byte	0x7ca
 5081 148a 10010000 		.4byte	0x110
 5082 148e 00000000 		.4byte	.LFB79
 5083 1492 16000000 		.4byte	.LFE79-.LFB79
 5084 1496 01       		.uleb128 0x1
 5085 1497 9C       		.byte	0x9c
 5086 1498 DD140000 		.4byte	0x14dd
 5087 149c 15       		.uleb128 0x15
 5088 149d 77020000 		.4byte	.LASF67
 5089 14a1 01       		.byte	0x1
 5090 14a2 CA07     		.2byte	0x7ca
 5091 14a4 7D140000 		.4byte	0x147d
 5092 14a8 FC0F0000 		.4byte	.LLST81
 5093 14ac 16       		.uleb128 0x16
 5094 14ad CE010000 		.4byte	.LASF117
 5095 14b1 01       		.byte	0x1
 5096 14b2 CC07     		.2byte	0x7cc
 5097 14b4 10010000 		.4byte	0x110
 5098 14b8 01       		.uleb128 0x1
 5099 14b9 54       		.byte	0x54
 5100 14ba 19       		.uleb128 0x19
 5101 14bb 93080000 		.4byte	.LASF80
 5102 14bf 01       		.byte	0x1
 5103 14c0 CD07     		.2byte	0x7cd
 5104 14c2 52050000 		.4byte	0x552
 5105 14c6 28100000 		.4byte	.LLST82
 5106 14ca 17       		.uleb128 0x17
 5107 14cb 08000000 		.4byte	.LVL271
 5108 14cf 7F190000 		.4byte	0x197f
 5109 14d3 17       		.uleb128 0x17
 5110 14d4 12000000 		.4byte	.LVL274
 5111 14d8 8A190000 		.4byte	0x198a
 5112 14dc 00       		.byte	0
 5113 14dd 20       		.uleb128 0x20
 5114 14de 49050000 		.4byte	.LASF119
 5115 14e2 01       		.byte	0x1
 5116 14e3 DB07     		.2byte	0x7db
 5117 14e5 10010000 		.4byte	0x110
 5118 14e9 00000000 		.4byte	.LFB80
 5119 14ed 04000000 		.4byte	.LFE80-.LFB80
 5120 14f1 01       		.uleb128 0x1
 5121 14f2 9C       		.byte	0x9c
 5122 14f3 26150000 		.4byte	0x1526
 5123 14f7 15       		.uleb128 0x15
 5124 14f8 77020000 		.4byte	.LASF67
 5125 14fc 01       		.byte	0x1
 5126 14fd DB07     		.2byte	0x7db
 5127 14ff 7D140000 		.4byte	0x147d
 5128 1503 54100000 		.4byte	.LLST83
 5129 1507 16       		.uleb128 0x16
 5130 1508 CE010000 		.4byte	.LASF117
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 155


 5131 150c 01       		.byte	0x1
 5132 150d DD07     		.2byte	0x7dd
 5133 150f 10010000 		.4byte	0x110
 5134 1513 01       		.uleb128 0x1
 5135 1514 50       		.byte	0x50
 5136 1515 19       		.uleb128 0x19
 5137 1516 93080000 		.4byte	.LASF80
 5138 151a 01       		.byte	0x1
 5139 151b DE07     		.2byte	0x7de
 5140 151d 52050000 		.4byte	0x552
 5141 1521 75100000 		.4byte	.LLST84
 5142 1525 00       		.byte	0
 5143 1526 20       		.uleb128 0x20
 5144 1527 85090000 		.4byte	.LASF120
 5145 152b 01       		.byte	0x1
 5146 152c 4009     		.2byte	0x940
 5147 152e 05010000 		.4byte	0x105
 5148 1532 00000000 		.4byte	.LFB86
 5149 1536 0C000000 		.4byte	.LFE86-.LFB86
 5150 153a 01       		.uleb128 0x1
 5151 153b 9C       		.byte	0x9c
 5152 153c 6F150000 		.4byte	0x156f
 5153 1540 15       		.uleb128 0x15
 5154 1541 77020000 		.4byte	.LASF67
 5155 1545 01       		.byte	0x1
 5156 1546 4009     		.2byte	0x940
 5157 1548 7D140000 		.4byte	0x147d
 5158 154c 96100000 		.4byte	.LLST85
 5159 1550 16       		.uleb128 0x16
 5160 1551 9B080000 		.4byte	.LASF81
 5161 1555 01       		.byte	0x1
 5162 1556 4209     		.2byte	0x942
 5163 1558 05010000 		.4byte	0x105
 5164 155c 01       		.uleb128 0x1
 5165 155d 50       		.byte	0x50
 5166 155e 19       		.uleb128 0x19
 5167 155f 93080000 		.4byte	.LASF80
 5168 1563 01       		.byte	0x1
 5169 1564 4309     		.2byte	0x943
 5170 1566 52050000 		.4byte	0x552
 5171 156a D0100000 		.4byte	.LLST86
 5172 156e 00       		.byte	0
 5173 156f 20       		.uleb128 0x20
 5174 1570 52080000 		.4byte	.LASF121
 5175 1574 01       		.byte	0x1
 5176 1575 6909     		.2byte	0x969
 5177 1577 05010000 		.4byte	0x105
 5178 157b 00000000 		.4byte	.LFB88
 5179 157f 10000000 		.4byte	.LFE88-.LFB88
 5180 1583 01       		.uleb128 0x1
 5181 1584 9C       		.byte	0x9c
 5182 1585 B8150000 		.4byte	0x15b8
 5183 1589 15       		.uleb128 0x15
 5184 158a 77020000 		.4byte	.LASF67
 5185 158e 01       		.byte	0x1
 5186 158f 6909     		.2byte	0x969
 5187 1591 7D140000 		.4byte	0x147d
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 156


 5188 1595 0A110000 		.4byte	.LLST87
 5189 1599 16       		.uleb128 0x16
 5190 159a 9B080000 		.4byte	.LASF81
 5191 159e 01       		.byte	0x1
 5192 159f 6B09     		.2byte	0x96b
 5193 15a1 05010000 		.4byte	0x105
 5194 15a5 01       		.uleb128 0x1
 5195 15a6 50       		.byte	0x50
 5196 15a7 19       		.uleb128 0x19
 5197 15a8 93080000 		.4byte	.LASF80
 5198 15ac 01       		.byte	0x1
 5199 15ad 6C09     		.2byte	0x96c
 5200 15af 52050000 		.4byte	0x552
 5201 15b3 44110000 		.4byte	.LLST88
 5202 15b7 00       		.byte	0
 5203 15b8 29       		.uleb128 0x29
 5204 15b9 2C060000 		.4byte	.LASF124
 5205 15bd 01       		.byte	0x1
 5206 15be 9E0A     		.2byte	0xa9e
 5207 15c0 00000000 		.4byte	.LFB89
 5208 15c4 28000000 		.4byte	.LFE89-.LFB89
 5209 15c8 01       		.uleb128 0x1
 5210 15c9 9C       		.byte	0x9c
 5211 15ca FA150000 		.4byte	0x15fa
 5212 15ce 21       		.uleb128 0x21
 5213 15cf 77020000 		.4byte	.LASF67
 5214 15d3 01       		.byte	0x1
 5215 15d4 9E0A     		.2byte	0xa9e
 5216 15d6 55020000 		.4byte	0x255
 5217 15da 01       		.uleb128 0x1
 5218 15db 50       		.byte	0x50
 5219 15dc 21       		.uleb128 0x21
 5220 15dd C8030000 		.4byte	.LASF72
 5221 15e1 01       		.byte	0x1
 5222 15e2 9F0A     		.2byte	0xa9f
 5223 15e4 B9000000 		.4byte	0xb9
 5224 15e8 01       		.uleb128 0x1
 5225 15e9 51       		.byte	0x51
 5226 15ea 2A       		.uleb128 0x2a
 5227 15eb 757800   		.ascii	"ux\000"
 5228 15ee 01       		.byte	0x1
 5229 15ef A10A     		.2byte	0xaa1
 5230 15f1 10010000 		.4byte	0x110
 5231 15f5 7E110000 		.4byte	.LLST89
 5232 15f9 00       		.byte	0
 5233 15fa 20       		.uleb128 0x20
 5234 15fb 83070000 		.4byte	.LASF122
 5235 15ff 01       		.byte	0x1
 5236 1600 BC0A     		.2byte	0xabc
 5237 1602 B9000000 		.4byte	0xb9
 5238 1606 00000000 		.4byte	.LFB90
 5239 160a 28000000 		.4byte	.LFE90-.LFB90
 5240 160e 01       		.uleb128 0x1
 5241 160f 9C       		.byte	0x9c
 5242 1610 44160000 		.4byte	0x1644
 5243 1614 15       		.uleb128 0x15
 5244 1615 77020000 		.4byte	.LASF67
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 157


 5245 1619 01       		.byte	0x1
 5246 161a BC0A     		.2byte	0xabc
 5247 161c 55020000 		.4byte	0x255
 5248 1620 A8110000 		.4byte	.LLST90
 5249 1624 2A       		.uleb128 0x2a
 5250 1625 757800   		.ascii	"ux\000"
 5251 1628 01       		.byte	0x1
 5252 1629 BE0A     		.2byte	0xabe
 5253 162b 10010000 		.4byte	0x110
 5254 162f E2110000 		.4byte	.LLST91
 5255 1633 19       		.uleb128 0x19
 5256 1634 A2070000 		.4byte	.LASF123
 5257 1638 01       		.byte	0x1
 5258 1639 BF0A     		.2byte	0xabf
 5259 163b B9000000 		.4byte	0xb9
 5260 163f 01120000 		.4byte	.LLST92
 5261 1643 00       		.byte	0
 5262 1644 29       		.uleb128 0x29
 5263 1645 03020000 		.4byte	.LASF125
 5264 1649 01       		.byte	0x1
 5265 164a D90A     		.2byte	0xad9
 5266 164c 00000000 		.4byte	.LFB91
 5267 1650 2C000000 		.4byte	.LFE91-.LFB91
 5268 1654 01       		.uleb128 0x1
 5269 1655 9C       		.byte	0x9c
 5270 1656 78160000 		.4byte	0x1678
 5271 165a 21       		.uleb128 0x21
 5272 165b 77020000 		.4byte	.LASF67
 5273 165f 01       		.byte	0x1
 5274 1660 D90A     		.2byte	0xad9
 5275 1662 55020000 		.4byte	0x255
 5276 1666 01       		.uleb128 0x1
 5277 1667 50       		.byte	0x50
 5278 1668 2A       		.uleb128 0x2a
 5279 1669 757800   		.ascii	"ux\000"
 5280 166c 01       		.byte	0x1
 5281 166d DB0A     		.2byte	0xadb
 5282 166f 10010000 		.4byte	0x110
 5283 1673 37120000 		.4byte	.LLST93
 5284 1677 00       		.byte	0
 5285 1678 29       		.uleb128 0x29
 5286 1679 EB010000 		.4byte	.LASF126
 5287 167d 01       		.byte	0x1
 5288 167e E707     		.2byte	0x7e7
 5289 1680 00000000 		.4byte	.LFB81
 5290 1684 10000000 		.4byte	.LFE81-.LFB81
 5291 1688 01       		.uleb128 0x1
 5292 1689 9C       		.byte	0x9c
 5293 168a D3160000 		.4byte	0x16d3
 5294 168e 15       		.uleb128 0x15
 5295 168f 77020000 		.4byte	.LASF67
 5296 1693 01       		.byte	0x1
 5297 1694 E707     		.2byte	0x7e7
 5298 1696 55020000 		.4byte	0x255
 5299 169a 61120000 		.4byte	.LLST94
 5300 169e 19       		.uleb128 0x19
 5301 169f 93080000 		.4byte	.LASF80
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 158


 5302 16a3 01       		.byte	0x1
 5303 16a4 E907     		.2byte	0x7e9
 5304 16a6 52050000 		.4byte	0x552
 5305 16aa 7F120000 		.4byte	.LLST95
 5306 16ae 1A       		.uleb128 0x1a
 5307 16af 08000000 		.4byte	.LVL303
 5308 16b3 44160000 		.4byte	0x1644
 5309 16b7 C2160000 		.4byte	0x16c2
 5310 16bb 1B       		.uleb128 0x1b
 5311 16bc 01       		.uleb128 0x1
 5312 16bd 50       		.byte	0x50
 5313 16be 02       		.uleb128 0x2
 5314 16bf 74       		.byte	0x74
 5315 16c0 00       		.sleb128 0
 5316 16c1 00       		.byte	0
 5317 16c2 1D       		.uleb128 0x1d
 5318 16c3 0E000000 		.4byte	.LVL304
 5319 16c7 091A0000 		.4byte	0x1a09
 5320 16cb 1B       		.uleb128 0x1b
 5321 16cc 01       		.uleb128 0x1
 5322 16cd 50       		.byte	0x50
 5323 16ce 02       		.uleb128 0x2
 5324 16cf 74       		.byte	0x74
 5325 16d0 00       		.sleb128 0
 5326 16d1 00       		.byte	0
 5327 16d2 00       		.byte	0
 5328 16d3 29       		.uleb128 0x29
 5329 16d4 B4070000 		.4byte	.LASF127
 5330 16d8 01       		.byte	0x1
 5331 16d9 F80A     		.2byte	0xaf8
 5332 16db 00000000 		.4byte	.LFB92
 5333 16df 4C000000 		.4byte	.LFE92-.LFB92
 5334 16e3 01       		.uleb128 0x1
 5335 16e4 9C       		.byte	0x9c
 5336 16e5 6C170000 		.4byte	0x176c
 5337 16e9 15       		.uleb128 0x15
 5338 16ea 77020000 		.4byte	.LASF67
 5339 16ee 01       		.byte	0x1
 5340 16ef F80A     		.2byte	0xaf8
 5341 16f1 55020000 		.4byte	0x255
 5342 16f5 9D120000 		.4byte	.LLST96
 5343 16f9 15       		.uleb128 0x15
 5344 16fa 47090000 		.4byte	.LASF99
 5345 16fe 01       		.byte	0x1
 5346 16ff F90A     		.2byte	0xaf9
 5347 1701 1B010000 		.4byte	0x11b
 5348 1705 BB120000 		.4byte	.LLST97
 5349 1709 15       		.uleb128 0x15
 5350 170a 3C010000 		.4byte	.LASF128
 5351 170e 01       		.byte	0x1
 5352 170f FA0A     		.2byte	0xafa
 5353 1711 57050000 		.4byte	0x557
 5354 1715 D9120000 		.4byte	.LLST98
 5355 1719 19       		.uleb128 0x19
 5356 171a 93080000 		.4byte	.LASF80
 5357 171e 01       		.byte	0x1
 5358 171f FC0A     		.2byte	0xafc
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 159


 5359 1721 52050000 		.4byte	0x552
 5360 1725 F7120000 		.4byte	.LLST99
 5361 1729 17       		.uleb128 0x17
 5362 172a 0C000000 		.4byte	.LVL307
 5363 172e 7F190000 		.4byte	0x197f
 5364 1732 17       		.uleb128 0x17
 5365 1733 34000000 		.4byte	.LVL308
 5366 1737 8A190000 		.4byte	0x198a
 5367 173b 1A       		.uleb128 0x1a
 5368 173c 44000000 		.4byte	.LVL309
 5369 1740 141A0000 		.4byte	0x1a14
 5370 1744 5B170000 		.4byte	0x175b
 5371 1748 1B       		.uleb128 0x1b
 5372 1749 01       		.uleb128 0x1
 5373 174a 50       		.byte	0x50
 5374 174b 02       		.uleb128 0x2
 5375 174c 74       		.byte	0x74
 5376 174d 24       		.sleb128 36
 5377 174e 1B       		.uleb128 0x1b
 5378 174f 01       		.uleb128 0x1
 5379 1750 51       		.byte	0x51
 5380 1751 02       		.uleb128 0x2
 5381 1752 75       		.byte	0x75
 5382 1753 00       		.sleb128 0
 5383 1754 1B       		.uleb128 0x1b
 5384 1755 01       		.uleb128 0x1
 5385 1756 52       		.byte	0x52
 5386 1757 02       		.uleb128 0x2
 5387 1758 76       		.byte	0x76
 5388 1759 00       		.sleb128 0
 5389 175a 00       		.byte	0
 5390 175b 1D       		.uleb128 0x1d
 5391 175c 4A000000 		.4byte	.LVL310
 5392 1760 40060000 		.4byte	0x640
 5393 1764 1B       		.uleb128 0x1b
 5394 1765 01       		.uleb128 0x1
 5395 1766 50       		.byte	0x50
 5396 1767 02       		.uleb128 0x2
 5397 1768 74       		.byte	0x74
 5398 1769 00       		.sleb128 0
 5399 176a 00       		.byte	0
 5400 176b 00       		.byte	0
 5401 176c 20       		.uleb128 0x20
 5402 176d A5060000 		.4byte	.LASF129
 5403 1771 01       		.byte	0x1
 5404 1772 200B     		.2byte	0xb20
 5405 1774 F5020000 		.4byte	0x2f5
 5406 1778 00000000 		.4byte	.LFB93
 5407 177c 0C000000 		.4byte	.LFE93-.LFB93
 5408 1780 01       		.uleb128 0x1
 5409 1781 9C       		.byte	0x9c
 5410 1782 C0170000 		.4byte	0x17c0
 5411 1786 15       		.uleb128 0x15
 5412 1787 150A0000 		.4byte	.LASF130
 5413 178b 01       		.byte	0x1
 5414 178c 200B     		.2byte	0xb20
 5415 178e 32080000 		.4byte	0x832
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 160


 5416 1792 15130000 		.4byte	.LLST100
 5417 1796 16       		.uleb128 0x16
 5418 1797 93080000 		.4byte	.LASF80
 5419 179b 01       		.byte	0x1
 5420 179c 220B     		.2byte	0xb22
 5421 179e F5020000 		.4byte	0x2f5
 5422 17a2 01       		.uleb128 0x1
 5423 17a3 50       		.byte	0x50
 5424 17a4 1D       		.uleb128 0x1d
 5425 17a5 0A000000 		.4byte	.LVL312
 5426 17a9 3C080000 		.4byte	0x83c
 5427 17ad 1B       		.uleb128 0x1b
 5428 17ae 01       		.uleb128 0x1
 5429 17af 50       		.byte	0x50
 5430 17b0 03       		.uleb128 0x3
 5431 17b1 F3       		.byte	0xf3
 5432 17b2 01       		.uleb128 0x1
 5433 17b3 50       		.byte	0x50
 5434 17b4 1B       		.uleb128 0x1b
 5435 17b5 01       		.uleb128 0x1
 5436 17b6 51       		.byte	0x51
 5437 17b7 01       		.uleb128 0x1
 5438 17b8 34       		.byte	0x34
 5439 17b9 1B       		.uleb128 0x1b
 5440 17ba 01       		.uleb128 0x1
 5441 17bb 52       		.byte	0x52
 5442 17bc 01       		.uleb128 0x1
 5443 17bd 30       		.byte	0x30
 5444 17be 00       		.byte	0
 5445 17bf 00       		.byte	0
 5446 17c0 20       		.uleb128 0x20
 5447 17c1 FE090000 		.4byte	.LASF131
 5448 17c5 01       		.byte	0x1
 5449 17c6 2E0B     		.2byte	0xb2e
 5450 17c8 05010000 		.4byte	0x105
 5451 17cc 00000000 		.4byte	.LFB94
 5452 17d0 26000000 		.4byte	.LFE94-.LFB94
 5453 17d4 01       		.uleb128 0x1
 5454 17d5 9C       		.byte	0x9c
 5455 17d6 1D180000 		.4byte	0x181d
 5456 17da 15       		.uleb128 0x15
 5457 17db F6000000 		.4byte	.LASF132
 5458 17df 01       		.byte	0x1
 5459 17e0 2E0B     		.2byte	0xb2e
 5460 17e2 00030000 		.4byte	0x300
 5461 17e6 36130000 		.4byte	.LLST101
 5462 17ea 15       		.uleb128 0x15
 5463 17eb C6040000 		.4byte	.LASF133
 5464 17ef 01       		.byte	0x1
 5465 17f0 2F0B     		.2byte	0xb2f
 5466 17f2 F5020000 		.4byte	0x2f5
 5467 17f6 94130000 		.4byte	.LLST102
 5468 17fa 19       		.uleb128 0x19
 5469 17fb 9B080000 		.4byte	.LASF81
 5470 17ff 01       		.byte	0x1
 5471 1800 310B     		.2byte	0xb31
 5472 1802 05010000 		.4byte	0x105
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 161


 5473 1806 B2130000 		.4byte	.LLST103
 5474 180a 17       		.uleb128 0x17
 5475 180b 0A000000 		.4byte	.LVL314
 5476 180f 7F190000 		.4byte	0x197f
 5477 1813 17       		.uleb128 0x17
 5478 1814 22000000 		.4byte	.LVL321
 5479 1818 8A190000 		.4byte	0x198a
 5480 181c 00       		.byte	0
 5481 181d 20       		.uleb128 0x20
 5482 181e 85060000 		.4byte	.LASF134
 5483 1822 01       		.byte	0x1
 5484 1823 500B     		.2byte	0xb50
 5485 1825 05010000 		.4byte	0x105
 5486 1829 00000000 		.4byte	.LFB95
 5487 182d 26000000 		.4byte	.LFE95-.LFB95
 5488 1831 01       		.uleb128 0x1
 5489 1832 9C       		.byte	0x9c
 5490 1833 8A180000 		.4byte	0x188a
 5491 1837 15       		.uleb128 0x15
 5492 1838 F6000000 		.4byte	.LASF132
 5493 183c 01       		.byte	0x1
 5494 183d 500B     		.2byte	0xb50
 5495 183f 00030000 		.4byte	0x300
 5496 1843 D1130000 		.4byte	.LLST104
 5497 1847 15       		.uleb128 0x15
 5498 1848 C6040000 		.4byte	.LASF133
 5499 184c 01       		.byte	0x1
 5500 184d 510B     		.2byte	0xb51
 5501 184f F5020000 		.4byte	0x2f5
 5502 1853 21140000 		.4byte	.LLST105
 5503 1857 19       		.uleb128 0x19
 5504 1858 9B080000 		.4byte	.LASF81
 5505 185c 01       		.byte	0x1
 5506 185d 530B     		.2byte	0xb53
 5507 185f 05010000 		.4byte	0x105
 5508 1863 4D140000 		.4byte	.LLST106
 5509 1867 19       		.uleb128 0x19
 5510 1868 F1070000 		.4byte	.LASF135
 5511 186c 01       		.byte	0x1
 5512 186d 540B     		.2byte	0xb54
 5513 186f 52050000 		.4byte	0x552
 5514 1873 61140000 		.4byte	.LLST107
 5515 1877 17       		.uleb128 0x17
 5516 1878 12000000 		.4byte	.LVL323
 5517 187c 7F190000 		.4byte	0x197f
 5518 1880 17       		.uleb128 0x17
 5519 1881 1A000000 		.4byte	.LVL324
 5520 1885 8A190000 		.4byte	0x198a
 5521 1889 00       		.byte	0
 5522 188a 20       		.uleb128 0x20
 5523 188b D7080000 		.4byte	.LASF136
 5524 188f 01       		.byte	0x1
 5525 1890 750B     		.2byte	0xb75
 5526 1892 00030000 		.4byte	0x300
 5527 1896 00000000 		.4byte	.LFB96
 5528 189a 1C000000 		.4byte	.LFE96-.LFB96
 5529 189e 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 162


 5530 189f 9C       		.byte	0x9c
 5531 18a0 F2180000 		.4byte	0x18f2
 5532 18a4 15       		.uleb128 0x15
 5533 18a5 C6040000 		.4byte	.LASF133
 5534 18a9 01       		.byte	0x1
 5535 18aa 750B     		.2byte	0xb75
 5536 18ac F5020000 		.4byte	0x2f5
 5537 18b0 B1140000 		.4byte	.LLST108
 5538 18b4 15       		.uleb128 0x15
 5539 18b5 47090000 		.4byte	.LASF99
 5540 18b9 01       		.byte	0x1
 5541 18ba 760B     		.2byte	0xb76
 5542 18bc F2180000 		.4byte	0x18f2
 5543 18c0 D2140000 		.4byte	.LLST109
 5544 18c4 16       		.uleb128 0x16
 5545 18c5 9B080000 		.4byte	.LASF81
 5546 18c9 01       		.byte	0x1
 5547 18ca 780B     		.2byte	0xb78
 5548 18cc 00030000 		.4byte	0x300
 5549 18d0 02       		.uleb128 0x2
 5550 18d1 91       		.byte	0x91
 5551 18d2 74       		.sleb128 -12
 5552 18d3 1D       		.uleb128 0x1d
 5553 18d4 14000000 		.4byte	.LVL331
 5554 18d8 260D0000 		.4byte	0xd26
 5555 18dc 1B       		.uleb128 0x1b
 5556 18dd 01       		.uleb128 0x1
 5557 18de 50       		.byte	0x50
 5558 18df 03       		.uleb128 0x3
 5559 18e0 F3       		.byte	0xf3
 5560 18e1 01       		.uleb128 0x1
 5561 18e2 50       		.byte	0x50
 5562 18e3 1B       		.uleb128 0x1b
 5563 18e4 01       		.uleb128 0x1
 5564 18e5 51       		.byte	0x51
 5565 18e6 02       		.uleb128 0x2
 5566 18e7 91       		.byte	0x91
 5567 18e8 74       		.sleb128 -12
 5568 18e9 1B       		.uleb128 0x1b
 5569 18ea 01       		.uleb128 0x1
 5570 18eb 52       		.byte	0x52
 5571 18ec 03       		.uleb128 0x3
 5572 18ed F3       		.byte	0xf3
 5573 18ee 01       		.uleb128 0x1
 5574 18ef 51       		.byte	0x51
 5575 18f0 00       		.byte	0
 5576 18f1 00       		.byte	0
 5577 18f2 07       		.uleb128 0x7
 5578 18f3 1B010000 		.4byte	0x11b
 5579 18f7 20       		.uleb128 0x20
 5580 18f8 E6050000 		.4byte	.LASF137
 5581 18fc 01       		.byte	0x1
 5582 18fd 830B     		.2byte	0xb83
 5583 18ff 00030000 		.4byte	0x300
 5584 1903 00000000 		.4byte	.LFB97
 5585 1907 18000000 		.4byte	.LFE97-.LFB97
 5586 190b 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 163


 5587 190c 9C       		.byte	0x9c
 5588 190d 4D190000 		.4byte	0x194d
 5589 1911 15       		.uleb128 0x15
 5590 1912 C6040000 		.4byte	.LASF133
 5591 1916 01       		.byte	0x1
 5592 1917 830B     		.2byte	0xb83
 5593 1919 F5020000 		.4byte	0x2f5
 5594 191d FE140000 		.4byte	.LLST110
 5595 1921 16       		.uleb128 0x16
 5596 1922 9B080000 		.4byte	.LASF81
 5597 1926 01       		.byte	0x1
 5598 1927 850B     		.2byte	0xb85
 5599 1929 00030000 		.4byte	0x300
 5600 192d 02       		.uleb128 0x2
 5601 192e 91       		.byte	0x91
 5602 192f 74       		.sleb128 -12
 5603 1930 1D       		.uleb128 0x1d
 5604 1931 10000000 		.4byte	.LVL333
 5605 1935 46120000 		.4byte	0x1246
 5606 1939 1B       		.uleb128 0x1b
 5607 193a 01       		.uleb128 0x1
 5608 193b 50       		.byte	0x50
 5609 193c 03       		.uleb128 0x3
 5610 193d F3       		.byte	0xf3
 5611 193e 01       		.uleb128 0x1
 5612 193f 50       		.byte	0x50
 5613 1940 1B       		.uleb128 0x1b
 5614 1941 01       		.uleb128 0x1
 5615 1942 51       		.byte	0x51
 5616 1943 02       		.uleb128 0x2
 5617 1944 91       		.byte	0x91
 5618 1945 74       		.sleb128 -12
 5619 1946 1B       		.uleb128 0x1b
 5620 1947 01       		.uleb128 0x1
 5621 1948 52       		.byte	0x52
 5622 1949 01       		.uleb128 0x1
 5623 194a 30       		.byte	0x30
 5624 194b 00       		.byte	0
 5625 194c 00       		.byte	0
 5626 194d 2B       		.uleb128 0x2b
 5627 194e 12040000 		.4byte	.LASF138
 5628 1952 09       		.byte	0x9
 5629 1953 1207     		.2byte	0x712
 5630 1955 59190000 		.4byte	0x1959
 5631 1959 0B       		.uleb128 0xb
 5632 195a E1000000 		.4byte	0xe1
 5633 195e 2C       		.uleb128 0x2c
 5634 195f DB030000 		.4byte	0x3db
 5635 1963 6E190000 		.4byte	0x196e
 5636 1967 2D       		.uleb128 0x2d
 5637 1968 A9000000 		.4byte	0xa9
 5638 196c 09       		.byte	0x9
 5639 196d 00       		.byte	0
 5640 196e 2E       		.uleb128 0x2e
 5641 196f 23050000 		.4byte	.LASF139
 5642 1973 01       		.byte	0x1
 5643 1974 A2       		.byte	0xa2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 164


 5644 1975 5E190000 		.4byte	0x195e
 5645 1979 05       		.uleb128 0x5
 5646 197a 03       		.byte	0x3
 5647 197b 00000000 		.4byte	xQueueRegistry
 5648 197f 2F       		.uleb128 0x2f
 5649 1980 90010000 		.4byte	.LASF140
 5650 1984 90010000 		.4byte	.LASF140
 5651 1988 02       		.byte	0x2
 5652 1989 62       		.byte	0x62
 5653 198a 2F       		.uleb128 0x2f
 5654 198b 10000000 		.4byte	.LASF141
 5655 198f 10000000 		.4byte	.LASF141
 5656 1993 02       		.byte	0x2
 5657 1994 63       		.byte	0x63
 5658 1995 30       		.uleb128 0x30
 5659 1996 BE090000 		.4byte	.LASF160
 5660 199a BE090000 		.4byte	.LASF160
 5661 199e 31       		.uleb128 0x31
 5662 199f A8040000 		.4byte	.LASF142
 5663 19a3 A8040000 		.4byte	.LASF142
 5664 19a7 07       		.byte	0x7
 5665 19a8 690B     		.2byte	0xb69
 5666 19aa 31       		.uleb128 0x31
 5667 19ab AC080000 		.4byte	.LASF143
 5668 19af AC080000 		.4byte	.LASF143
 5669 19b3 07       		.byte	0x7
 5670 19b4 860B     		.2byte	0xb86
 5671 19b6 31       		.uleb128 0x31
 5672 19b7 22090000 		.4byte	.LASF144
 5673 19bb 22090000 		.4byte	.LASF144
 5674 19bf 06       		.byte	0x6
 5675 19c0 5B01     		.2byte	0x15b
 5676 19c2 2F       		.uleb128 0x2f
 5677 19c3 EC020000 		.4byte	.LASF145
 5678 19c7 EC020000 		.4byte	.LASF145
 5679 19cb 0A       		.byte	0xa
 5680 19cc B0       		.byte	0xb0
 5681 19cd 31       		.uleb128 0x31
 5682 19ce BF060000 		.4byte	.LASF146
 5683 19d2 BF060000 		.4byte	.LASF146
 5684 19d6 07       		.byte	0x7
 5685 19d7 D50B     		.2byte	0xbd5
 5686 19d9 31       		.uleb128 0x31
 5687 19da F9020000 		.4byte	.LASF147
 5688 19de F9020000 		.4byte	.LASF147
 5689 19e2 07       		.byte	0x7
 5690 19e3 3B05     		.2byte	0x53b
 5691 19e5 31       		.uleb128 0x31
 5692 19e6 33080000 		.4byte	.LASF148
 5693 19ea 33080000 		.4byte	.LASF148
 5694 19ee 07       		.byte	0x7
 5695 19ef E80A     		.2byte	0xae8
 5696 19f1 31       		.uleb128 0x31
 5697 19f2 6D040000 		.4byte	.LASF149
 5698 19f6 6D040000 		.4byte	.LASF149
 5699 19fa 07       		.byte	0x7
 5700 19fb 3C0B     		.2byte	0xb3c
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 165


 5701 19fd 31       		.uleb128 0x31
 5702 19fe 16080000 		.4byte	.LASF150
 5703 1a02 16080000 		.4byte	.LASF150
 5704 1a06 07       		.byte	0x7
 5705 1a07 7305     		.2byte	0x573
 5706 1a09 2F       		.uleb128 0x2f
 5707 1a0a 48080000 		.4byte	.LASF151
 5708 1a0e 48080000 		.4byte	.LASF151
 5709 1a12 0A       		.byte	0xa
 5710 1a13 B1       		.byte	0xb1
 5711 1a14 31       		.uleb128 0x31
 5712 1a15 76050000 		.4byte	.LASF152
 5713 1a19 76050000 		.4byte	.LASF152
 5714 1a1d 07       		.byte	0x7
 5715 1a1e 4D0B     		.2byte	0xb4d
 5716 1a20 00       		.byte	0
 5717              		.section	.debug_abbrev,"",%progbits
 5718              	.Ldebug_abbrev0:
 5719 0000 01       		.uleb128 0x1
 5720 0001 11       		.uleb128 0x11
 5721 0002 01       		.byte	0x1
 5722 0003 25       		.uleb128 0x25
 5723 0004 0E       		.uleb128 0xe
 5724 0005 13       		.uleb128 0x13
 5725 0006 0B       		.uleb128 0xb
 5726 0007 03       		.uleb128 0x3
 5727 0008 0E       		.uleb128 0xe
 5728 0009 1B       		.uleb128 0x1b
 5729 000a 0E       		.uleb128 0xe
 5730 000b 55       		.uleb128 0x55
 5731 000c 17       		.uleb128 0x17
 5732 000d 11       		.uleb128 0x11
 5733 000e 01       		.uleb128 0x1
 5734 000f 10       		.uleb128 0x10
 5735 0010 17       		.uleb128 0x17
 5736 0011 00       		.byte	0
 5737 0012 00       		.byte	0
 5738 0013 02       		.uleb128 0x2
 5739 0014 16       		.uleb128 0x16
 5740 0015 00       		.byte	0
 5741 0016 03       		.uleb128 0x3
 5742 0017 0E       		.uleb128 0xe
 5743 0018 3A       		.uleb128 0x3a
 5744 0019 0B       		.uleb128 0xb
 5745 001a 3B       		.uleb128 0x3b
 5746 001b 0B       		.uleb128 0xb
 5747 001c 49       		.uleb128 0x49
 5748 001d 13       		.uleb128 0x13
 5749 001e 00       		.byte	0
 5750 001f 00       		.byte	0
 5751 0020 03       		.uleb128 0x3
 5752 0021 24       		.uleb128 0x24
 5753 0022 00       		.byte	0
 5754 0023 0B       		.uleb128 0xb
 5755 0024 0B       		.uleb128 0xb
 5756 0025 3E       		.uleb128 0x3e
 5757 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 166


 5758 0027 03       		.uleb128 0x3
 5759 0028 0E       		.uleb128 0xe
 5760 0029 00       		.byte	0
 5761 002a 00       		.byte	0
 5762 002b 04       		.uleb128 0x4
 5763 002c 24       		.uleb128 0x24
 5764 002d 00       		.byte	0
 5765 002e 0B       		.uleb128 0xb
 5766 002f 0B       		.uleb128 0xb
 5767 0030 3E       		.uleb128 0x3e
 5768 0031 0B       		.uleb128 0xb
 5769 0032 03       		.uleb128 0x3
 5770 0033 08       		.uleb128 0x8
 5771 0034 00       		.byte	0
 5772 0035 00       		.byte	0
 5773 0036 05       		.uleb128 0x5
 5774 0037 0F       		.uleb128 0xf
 5775 0038 00       		.byte	0
 5776 0039 0B       		.uleb128 0xb
 5777 003a 0B       		.uleb128 0xb
 5778 003b 00       		.byte	0
 5779 003c 00       		.byte	0
 5780 003d 06       		.uleb128 0x6
 5781 003e 0F       		.uleb128 0xf
 5782 003f 00       		.byte	0
 5783 0040 0B       		.uleb128 0xb
 5784 0041 0B       		.uleb128 0xb
 5785 0042 49       		.uleb128 0x49
 5786 0043 13       		.uleb128 0x13
 5787 0044 00       		.byte	0
 5788 0045 00       		.byte	0
 5789 0046 07       		.uleb128 0x7
 5790 0047 26       		.uleb128 0x26
 5791 0048 00       		.byte	0
 5792 0049 49       		.uleb128 0x49
 5793 004a 13       		.uleb128 0x13
 5794 004b 00       		.byte	0
 5795 004c 00       		.byte	0
 5796 004d 08       		.uleb128 0x8
 5797 004e 26       		.uleb128 0x26
 5798 004f 00       		.byte	0
 5799 0050 00       		.byte	0
 5800 0051 00       		.byte	0
 5801 0052 09       		.uleb128 0x9
 5802 0053 13       		.uleb128 0x13
 5803 0054 01       		.byte	0x1
 5804 0055 03       		.uleb128 0x3
 5805 0056 0E       		.uleb128 0xe
 5806 0057 0B       		.uleb128 0xb
 5807 0058 0B       		.uleb128 0xb
 5808 0059 3A       		.uleb128 0x3a
 5809 005a 0B       		.uleb128 0xb
 5810 005b 3B       		.uleb128 0x3b
 5811 005c 0B       		.uleb128 0xb
 5812 005d 01       		.uleb128 0x1
 5813 005e 13       		.uleb128 0x13
 5814 005f 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 167


 5815 0060 00       		.byte	0
 5816 0061 0A       		.uleb128 0xa
 5817 0062 0D       		.uleb128 0xd
 5818 0063 00       		.byte	0
 5819 0064 03       		.uleb128 0x3
 5820 0065 0E       		.uleb128 0xe
 5821 0066 3A       		.uleb128 0x3a
 5822 0067 0B       		.uleb128 0xb
 5823 0068 3B       		.uleb128 0x3b
 5824 0069 0B       		.uleb128 0xb
 5825 006a 49       		.uleb128 0x49
 5826 006b 13       		.uleb128 0x13
 5827 006c 38       		.uleb128 0x38
 5828 006d 0B       		.uleb128 0xb
 5829 006e 00       		.byte	0
 5830 006f 00       		.byte	0
 5831 0070 0B       		.uleb128 0xb
 5832 0071 35       		.uleb128 0x35
 5833 0072 00       		.byte	0
 5834 0073 49       		.uleb128 0x49
 5835 0074 13       		.uleb128 0x13
 5836 0075 00       		.byte	0
 5837 0076 00       		.byte	0
 5838 0077 0C       		.uleb128 0xc
 5839 0078 13       		.uleb128 0x13
 5840 0079 00       		.byte	0
 5841 007a 03       		.uleb128 0x3
 5842 007b 0E       		.uleb128 0xe
 5843 007c 3C       		.uleb128 0x3c
 5844 007d 19       		.uleb128 0x19
 5845 007e 00       		.byte	0
 5846 007f 00       		.byte	0
 5847 0080 0D       		.uleb128 0xd
 5848 0081 0D       		.uleb128 0xd
 5849 0082 00       		.byte	0
 5850 0083 03       		.uleb128 0x3
 5851 0084 08       		.uleb128 0x8
 5852 0085 3A       		.uleb128 0x3a
 5853 0086 0B       		.uleb128 0xb
 5854 0087 3B       		.uleb128 0x3b
 5855 0088 0B       		.uleb128 0xb
 5856 0089 49       		.uleb128 0x49
 5857 008a 13       		.uleb128 0x13
 5858 008b 38       		.uleb128 0x38
 5859 008c 0B       		.uleb128 0xb
 5860 008d 00       		.byte	0
 5861 008e 00       		.byte	0
 5862 008f 0E       		.uleb128 0xe
 5863 0090 17       		.uleb128 0x17
 5864 0091 01       		.byte	0x1
 5865 0092 0B       		.uleb128 0xb
 5866 0093 0B       		.uleb128 0xb
 5867 0094 3A       		.uleb128 0x3a
 5868 0095 0B       		.uleb128 0xb
 5869 0096 3B       		.uleb128 0x3b
 5870 0097 0B       		.uleb128 0xb
 5871 0098 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 168


 5872 0099 13       		.uleb128 0x13
 5873 009a 00       		.byte	0
 5874 009b 00       		.byte	0
 5875 009c 0F       		.uleb128 0xf
 5876 009d 0D       		.uleb128 0xd
 5877 009e 00       		.byte	0
 5878 009f 03       		.uleb128 0x3
 5879 00a0 0E       		.uleb128 0xe
 5880 00a1 3A       		.uleb128 0x3a
 5881 00a2 0B       		.uleb128 0xb
 5882 00a3 3B       		.uleb128 0x3b
 5883 00a4 0B       		.uleb128 0xb
 5884 00a5 49       		.uleb128 0x49
 5885 00a6 13       		.uleb128 0x13
 5886 00a7 00       		.byte	0
 5887 00a8 00       		.byte	0
 5888 00a9 10       		.uleb128 0x10
 5889 00aa 2E       		.uleb128 0x2e
 5890 00ab 01       		.byte	0x1
 5891 00ac 03       		.uleb128 0x3
 5892 00ad 0E       		.uleb128 0xe
 5893 00ae 3A       		.uleb128 0x3a
 5894 00af 0B       		.uleb128 0xb
 5895 00b0 3B       		.uleb128 0x3b
 5896 00b1 0B       		.uleb128 0xb
 5897 00b2 27       		.uleb128 0x27
 5898 00b3 19       		.uleb128 0x19
 5899 00b4 49       		.uleb128 0x49
 5900 00b5 13       		.uleb128 0x13
 5901 00b6 20       		.uleb128 0x20
 5902 00b7 0B       		.uleb128 0xb
 5903 00b8 01       		.uleb128 0x1
 5904 00b9 13       		.uleb128 0x13
 5905 00ba 00       		.byte	0
 5906 00bb 00       		.byte	0
 5907 00bc 11       		.uleb128 0x11
 5908 00bd 34       		.uleb128 0x34
 5909 00be 00       		.byte	0
 5910 00bf 03       		.uleb128 0x3
 5911 00c0 0E       		.uleb128 0xe
 5912 00c1 3A       		.uleb128 0x3a
 5913 00c2 0B       		.uleb128 0xb
 5914 00c3 3B       		.uleb128 0x3b
 5915 00c4 0B       		.uleb128 0xb
 5916 00c5 49       		.uleb128 0x49
 5917 00c6 13       		.uleb128 0x13
 5918 00c7 00       		.byte	0
 5919 00c8 00       		.byte	0
 5920 00c9 12       		.uleb128 0x12
 5921 00ca 2E       		.uleb128 0x2e
 5922 00cb 01       		.byte	0x1
 5923 00cc 03       		.uleb128 0x3
 5924 00cd 0E       		.uleb128 0xe
 5925 00ce 3A       		.uleb128 0x3a
 5926 00cf 0B       		.uleb128 0xb
 5927 00d0 3B       		.uleb128 0x3b
 5928 00d1 0B       		.uleb128 0xb
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 169


 5929 00d2 27       		.uleb128 0x27
 5930 00d3 19       		.uleb128 0x19
 5931 00d4 20       		.uleb128 0x20
 5932 00d5 0B       		.uleb128 0xb
 5933 00d6 01       		.uleb128 0x1
 5934 00d7 13       		.uleb128 0x13
 5935 00d8 00       		.byte	0
 5936 00d9 00       		.byte	0
 5937 00da 13       		.uleb128 0x13
 5938 00db 05       		.uleb128 0x5
 5939 00dc 00       		.byte	0
 5940 00dd 03       		.uleb128 0x3
 5941 00de 0E       		.uleb128 0xe
 5942 00df 3A       		.uleb128 0x3a
 5943 00e0 0B       		.uleb128 0xb
 5944 00e1 3B       		.uleb128 0x3b
 5945 00e2 0B       		.uleb128 0xb
 5946 00e3 49       		.uleb128 0x49
 5947 00e4 13       		.uleb128 0x13
 5948 00e5 00       		.byte	0
 5949 00e6 00       		.byte	0
 5950 00e7 14       		.uleb128 0x14
 5951 00e8 2E       		.uleb128 0x2e
 5952 00e9 01       		.byte	0x1
 5953 00ea 03       		.uleb128 0x3
 5954 00eb 0E       		.uleb128 0xe
 5955 00ec 3A       		.uleb128 0x3a
 5956 00ed 0B       		.uleb128 0xb
 5957 00ee 3B       		.uleb128 0x3b
 5958 00ef 05       		.uleb128 0x5
 5959 00f0 27       		.uleb128 0x27
 5960 00f1 19       		.uleb128 0x19
 5961 00f2 49       		.uleb128 0x49
 5962 00f3 13       		.uleb128 0x13
 5963 00f4 11       		.uleb128 0x11
 5964 00f5 01       		.uleb128 0x1
 5965 00f6 12       		.uleb128 0x12
 5966 00f7 06       		.uleb128 0x6
 5967 00f8 40       		.uleb128 0x40
 5968 00f9 18       		.uleb128 0x18
 5969 00fa 9742     		.uleb128 0x2117
 5970 00fc 19       		.uleb128 0x19
 5971 00fd 01       		.uleb128 0x1
 5972 00fe 13       		.uleb128 0x13
 5973 00ff 00       		.byte	0
 5974 0100 00       		.byte	0
 5975 0101 15       		.uleb128 0x15
 5976 0102 05       		.uleb128 0x5
 5977 0103 00       		.byte	0
 5978 0104 03       		.uleb128 0x3
 5979 0105 0E       		.uleb128 0xe
 5980 0106 3A       		.uleb128 0x3a
 5981 0107 0B       		.uleb128 0xb
 5982 0108 3B       		.uleb128 0x3b
 5983 0109 05       		.uleb128 0x5
 5984 010a 49       		.uleb128 0x49
 5985 010b 13       		.uleb128 0x13
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 170


 5986 010c 02       		.uleb128 0x2
 5987 010d 17       		.uleb128 0x17
 5988 010e 00       		.byte	0
 5989 010f 00       		.byte	0
 5990 0110 16       		.uleb128 0x16
 5991 0111 34       		.uleb128 0x34
 5992 0112 00       		.byte	0
 5993 0113 03       		.uleb128 0x3
 5994 0114 0E       		.uleb128 0xe
 5995 0115 3A       		.uleb128 0x3a
 5996 0116 0B       		.uleb128 0xb
 5997 0117 3B       		.uleb128 0x3b
 5998 0118 05       		.uleb128 0x5
 5999 0119 49       		.uleb128 0x49
 6000 011a 13       		.uleb128 0x13
 6001 011b 02       		.uleb128 0x2
 6002 011c 18       		.uleb128 0x18
 6003 011d 00       		.byte	0
 6004 011e 00       		.byte	0
 6005 011f 17       		.uleb128 0x17
 6006 0120 898201   		.uleb128 0x4109
 6007 0123 00       		.byte	0
 6008 0124 11       		.uleb128 0x11
 6009 0125 01       		.uleb128 0x1
 6010 0126 31       		.uleb128 0x31
 6011 0127 13       		.uleb128 0x13
 6012 0128 00       		.byte	0
 6013 0129 00       		.byte	0
 6014 012a 18       		.uleb128 0x18
 6015 012b 34       		.uleb128 0x34
 6016 012c 00       		.byte	0
 6017 012d 03       		.uleb128 0x3
 6018 012e 0E       		.uleb128 0xe
 6019 012f 3A       		.uleb128 0x3a
 6020 0130 0B       		.uleb128 0xb
 6021 0131 3B       		.uleb128 0x3b
 6022 0132 05       		.uleb128 0x5
 6023 0133 49       		.uleb128 0x49
 6024 0134 13       		.uleb128 0x13
 6025 0135 1C       		.uleb128 0x1c
 6026 0136 0B       		.uleb128 0xb
 6027 0137 00       		.byte	0
 6028 0138 00       		.byte	0
 6029 0139 19       		.uleb128 0x19
 6030 013a 34       		.uleb128 0x34
 6031 013b 00       		.byte	0
 6032 013c 03       		.uleb128 0x3
 6033 013d 0E       		.uleb128 0xe
 6034 013e 3A       		.uleb128 0x3a
 6035 013f 0B       		.uleb128 0xb
 6036 0140 3B       		.uleb128 0x3b
 6037 0141 05       		.uleb128 0x5
 6038 0142 49       		.uleb128 0x49
 6039 0143 13       		.uleb128 0x13
 6040 0144 02       		.uleb128 0x2
 6041 0145 17       		.uleb128 0x17
 6042 0146 00       		.byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 171


 6043 0147 00       		.byte	0
 6044 0148 1A       		.uleb128 0x1a
 6045 0149 898201   		.uleb128 0x4109
 6046 014c 01       		.byte	0x1
 6047 014d 11       		.uleb128 0x11
 6048 014e 01       		.uleb128 0x1
 6049 014f 31       		.uleb128 0x31
 6050 0150 13       		.uleb128 0x13
 6051 0151 01       		.uleb128 0x1
 6052 0152 13       		.uleb128 0x13
 6053 0153 00       		.byte	0
 6054 0154 00       		.byte	0
 6055 0155 1B       		.uleb128 0x1b
 6056 0156 8A8201   		.uleb128 0x410a
 6057 0159 00       		.byte	0
 6058 015a 02       		.uleb128 0x2
 6059 015b 18       		.uleb128 0x18
 6060 015c 9142     		.uleb128 0x2111
 6061 015e 18       		.uleb128 0x18
 6062 015f 00       		.byte	0
 6063 0160 00       		.byte	0
 6064 0161 1C       		.uleb128 0x1c
 6065 0162 0B       		.uleb128 0xb
 6066 0163 01       		.byte	0x1
 6067 0164 55       		.uleb128 0x55
 6068 0165 17       		.uleb128 0x17
 6069 0166 00       		.byte	0
 6070 0167 00       		.byte	0
 6071 0168 1D       		.uleb128 0x1d
 6072 0169 898201   		.uleb128 0x4109
 6073 016c 01       		.byte	0x1
 6074 016d 11       		.uleb128 0x11
 6075 016e 01       		.uleb128 0x1
 6076 016f 31       		.uleb128 0x31
 6077 0170 13       		.uleb128 0x13
 6078 0171 00       		.byte	0
 6079 0172 00       		.byte	0
 6080 0173 1E       		.uleb128 0x1e
 6081 0174 2E       		.uleb128 0x2e
 6082 0175 01       		.byte	0x1
 6083 0176 03       		.uleb128 0x3
 6084 0177 0E       		.uleb128 0xe
 6085 0178 3A       		.uleb128 0x3a
 6086 0179 0B       		.uleb128 0xb
 6087 017a 3B       		.uleb128 0x3b
 6088 017b 05       		.uleb128 0x5
 6089 017c 27       		.uleb128 0x27
 6090 017d 19       		.uleb128 0x19
 6091 017e 11       		.uleb128 0x11
 6092 017f 01       		.uleb128 0x1
 6093 0180 12       		.uleb128 0x12
 6094 0181 06       		.uleb128 0x6
 6095 0182 40       		.uleb128 0x40
 6096 0183 18       		.uleb128 0x18
 6097 0184 9742     		.uleb128 0x2117
 6098 0186 19       		.uleb128 0x19
 6099 0187 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 172


 6100 0188 13       		.uleb128 0x13
 6101 0189 00       		.byte	0
 6102 018a 00       		.byte	0
 6103 018b 1F       		.uleb128 0x1f
 6104 018c 0B       		.uleb128 0xb
 6105 018d 01       		.byte	0x1
 6106 018e 11       		.uleb128 0x11
 6107 018f 01       		.uleb128 0x1
 6108 0190 12       		.uleb128 0x12
 6109 0191 06       		.uleb128 0x6
 6110 0192 01       		.uleb128 0x1
 6111 0193 13       		.uleb128 0x13
 6112 0194 00       		.byte	0
 6113 0195 00       		.byte	0
 6114 0196 20       		.uleb128 0x20
 6115 0197 2E       		.uleb128 0x2e
 6116 0198 01       		.byte	0x1
 6117 0199 3F       		.uleb128 0x3f
 6118 019a 19       		.uleb128 0x19
 6119 019b 03       		.uleb128 0x3
 6120 019c 0E       		.uleb128 0xe
 6121 019d 3A       		.uleb128 0x3a
 6122 019e 0B       		.uleb128 0xb
 6123 019f 3B       		.uleb128 0x3b
 6124 01a0 05       		.uleb128 0x5
 6125 01a1 27       		.uleb128 0x27
 6126 01a2 19       		.uleb128 0x19
 6127 01a3 49       		.uleb128 0x49
 6128 01a4 13       		.uleb128 0x13
 6129 01a5 11       		.uleb128 0x11
 6130 01a6 01       		.uleb128 0x1
 6131 01a7 12       		.uleb128 0x12
 6132 01a8 06       		.uleb128 0x6
 6133 01a9 40       		.uleb128 0x40
 6134 01aa 18       		.uleb128 0x18
 6135 01ab 9742     		.uleb128 0x2117
 6136 01ad 19       		.uleb128 0x19
 6137 01ae 01       		.uleb128 0x1
 6138 01af 13       		.uleb128 0x13
 6139 01b0 00       		.byte	0
 6140 01b1 00       		.byte	0
 6141 01b2 21       		.uleb128 0x21
 6142 01b3 05       		.uleb128 0x5
 6143 01b4 00       		.byte	0
 6144 01b5 03       		.uleb128 0x3
 6145 01b6 0E       		.uleb128 0xe
 6146 01b7 3A       		.uleb128 0x3a
 6147 01b8 0B       		.uleb128 0xb
 6148 01b9 3B       		.uleb128 0x3b
 6149 01ba 05       		.uleb128 0x5
 6150 01bb 49       		.uleb128 0x49
 6151 01bc 13       		.uleb128 0x13
 6152 01bd 02       		.uleb128 0x2
 6153 01be 18       		.uleb128 0x18
 6154 01bf 00       		.byte	0
 6155 01c0 00       		.byte	0
 6156 01c1 22       		.uleb128 0x22
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 173


 6157 01c2 34       		.uleb128 0x34
 6158 01c3 00       		.byte	0
 6159 01c4 03       		.uleb128 0x3
 6160 01c5 0E       		.uleb128 0xe
 6161 01c6 3A       		.uleb128 0x3a
 6162 01c7 0B       		.uleb128 0xb
 6163 01c8 3B       		.uleb128 0x3b
 6164 01c9 05       		.uleb128 0x5
 6165 01ca 49       		.uleb128 0x49
 6166 01cb 13       		.uleb128 0x13
 6167 01cc 00       		.byte	0
 6168 01cd 00       		.byte	0
 6169 01ce 23       		.uleb128 0x23
 6170 01cf 1D       		.uleb128 0x1d
 6171 01d0 01       		.byte	0x1
 6172 01d1 31       		.uleb128 0x31
 6173 01d2 13       		.uleb128 0x13
 6174 01d3 11       		.uleb128 0x11
 6175 01d4 01       		.uleb128 0x1
 6176 01d5 12       		.uleb128 0x12
 6177 01d6 06       		.uleb128 0x6
 6178 01d7 58       		.uleb128 0x58
 6179 01d8 0B       		.uleb128 0xb
 6180 01d9 59       		.uleb128 0x59
 6181 01da 05       		.uleb128 0x5
 6182 01db 01       		.uleb128 0x1
 6183 01dc 13       		.uleb128 0x13
 6184 01dd 00       		.byte	0
 6185 01de 00       		.byte	0
 6186 01df 24       		.uleb128 0x24
 6187 01e0 0B       		.uleb128 0xb
 6188 01e1 01       		.byte	0x1
 6189 01e2 11       		.uleb128 0x11
 6190 01e3 01       		.uleb128 0x1
 6191 01e4 12       		.uleb128 0x12
 6192 01e5 06       		.uleb128 0x6
 6193 01e6 00       		.byte	0
 6194 01e7 00       		.byte	0
 6195 01e8 25       		.uleb128 0x25
 6196 01e9 34       		.uleb128 0x34
 6197 01ea 00       		.byte	0
 6198 01eb 31       		.uleb128 0x31
 6199 01ec 13       		.uleb128 0x13
 6200 01ed 00       		.byte	0
 6201 01ee 00       		.byte	0
 6202 01ef 26       		.uleb128 0x26
 6203 01f0 0B       		.uleb128 0xb
 6204 01f1 01       		.byte	0x1
 6205 01f2 55       		.uleb128 0x55
 6206 01f3 17       		.uleb128 0x17
 6207 01f4 01       		.uleb128 0x1
 6208 01f5 13       		.uleb128 0x13
 6209 01f6 00       		.byte	0
 6210 01f7 00       		.byte	0
 6211 01f8 27       		.uleb128 0x27
 6212 01f9 1D       		.uleb128 0x1d
 6213 01fa 01       		.byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 174


 6214 01fb 31       		.uleb128 0x31
 6215 01fc 13       		.uleb128 0x13
 6216 01fd 11       		.uleb128 0x11
 6217 01fe 01       		.uleb128 0x1
 6218 01ff 12       		.uleb128 0x12
 6219 0200 06       		.uleb128 0x6
 6220 0201 58       		.uleb128 0x58
 6221 0202 0B       		.uleb128 0xb
 6222 0203 59       		.uleb128 0x59
 6223 0204 05       		.uleb128 0x5
 6224 0205 00       		.byte	0
 6225 0206 00       		.byte	0
 6226 0207 28       		.uleb128 0x28
 6227 0208 05       		.uleb128 0x5
 6228 0209 00       		.byte	0
 6229 020a 31       		.uleb128 0x31
 6230 020b 13       		.uleb128 0x13
 6231 020c 02       		.uleb128 0x2
 6232 020d 17       		.uleb128 0x17
 6233 020e 00       		.byte	0
 6234 020f 00       		.byte	0
 6235 0210 29       		.uleb128 0x29
 6236 0211 2E       		.uleb128 0x2e
 6237 0212 01       		.byte	0x1
 6238 0213 3F       		.uleb128 0x3f
 6239 0214 19       		.uleb128 0x19
 6240 0215 03       		.uleb128 0x3
 6241 0216 0E       		.uleb128 0xe
 6242 0217 3A       		.uleb128 0x3a
 6243 0218 0B       		.uleb128 0xb
 6244 0219 3B       		.uleb128 0x3b
 6245 021a 05       		.uleb128 0x5
 6246 021b 27       		.uleb128 0x27
 6247 021c 19       		.uleb128 0x19
 6248 021d 11       		.uleb128 0x11
 6249 021e 01       		.uleb128 0x1
 6250 021f 12       		.uleb128 0x12
 6251 0220 06       		.uleb128 0x6
 6252 0221 40       		.uleb128 0x40
 6253 0222 18       		.uleb128 0x18
 6254 0223 9742     		.uleb128 0x2117
 6255 0225 19       		.uleb128 0x19
 6256 0226 01       		.uleb128 0x1
 6257 0227 13       		.uleb128 0x13
 6258 0228 00       		.byte	0
 6259 0229 00       		.byte	0
 6260 022a 2A       		.uleb128 0x2a
 6261 022b 34       		.uleb128 0x34
 6262 022c 00       		.byte	0
 6263 022d 03       		.uleb128 0x3
 6264 022e 08       		.uleb128 0x8
 6265 022f 3A       		.uleb128 0x3a
 6266 0230 0B       		.uleb128 0xb
 6267 0231 3B       		.uleb128 0x3b
 6268 0232 05       		.uleb128 0x5
 6269 0233 49       		.uleb128 0x49
 6270 0234 13       		.uleb128 0x13
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 175


 6271 0235 02       		.uleb128 0x2
 6272 0236 17       		.uleb128 0x17
 6273 0237 00       		.byte	0
 6274 0238 00       		.byte	0
 6275 0239 2B       		.uleb128 0x2b
 6276 023a 34       		.uleb128 0x34
 6277 023b 00       		.byte	0
 6278 023c 03       		.uleb128 0x3
 6279 023d 0E       		.uleb128 0xe
 6280 023e 3A       		.uleb128 0x3a
 6281 023f 0B       		.uleb128 0xb
 6282 0240 3B       		.uleb128 0x3b
 6283 0241 05       		.uleb128 0x5
 6284 0242 49       		.uleb128 0x49
 6285 0243 13       		.uleb128 0x13
 6286 0244 3F       		.uleb128 0x3f
 6287 0245 19       		.uleb128 0x19
 6288 0246 3C       		.uleb128 0x3c
 6289 0247 19       		.uleb128 0x19
 6290 0248 00       		.byte	0
 6291 0249 00       		.byte	0
 6292 024a 2C       		.uleb128 0x2c
 6293 024b 01       		.uleb128 0x1
 6294 024c 01       		.byte	0x1
 6295 024d 49       		.uleb128 0x49
 6296 024e 13       		.uleb128 0x13
 6297 024f 01       		.uleb128 0x1
 6298 0250 13       		.uleb128 0x13
 6299 0251 00       		.byte	0
 6300 0252 00       		.byte	0
 6301 0253 2D       		.uleb128 0x2d
 6302 0254 21       		.uleb128 0x21
 6303 0255 00       		.byte	0
 6304 0256 49       		.uleb128 0x49
 6305 0257 13       		.uleb128 0x13
 6306 0258 2F       		.uleb128 0x2f
 6307 0259 0B       		.uleb128 0xb
 6308 025a 00       		.byte	0
 6309 025b 00       		.byte	0
 6310 025c 2E       		.uleb128 0x2e
 6311 025d 34       		.uleb128 0x34
 6312 025e 00       		.byte	0
 6313 025f 03       		.uleb128 0x3
 6314 0260 0E       		.uleb128 0xe
 6315 0261 3A       		.uleb128 0x3a
 6316 0262 0B       		.uleb128 0xb
 6317 0263 3B       		.uleb128 0x3b
 6318 0264 0B       		.uleb128 0xb
 6319 0265 49       		.uleb128 0x49
 6320 0266 13       		.uleb128 0x13
 6321 0267 3F       		.uleb128 0x3f
 6322 0268 19       		.uleb128 0x19
 6323 0269 02       		.uleb128 0x2
 6324 026a 18       		.uleb128 0x18
 6325 026b 00       		.byte	0
 6326 026c 00       		.byte	0
 6327 026d 2F       		.uleb128 0x2f
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 176


 6328 026e 2E       		.uleb128 0x2e
 6329 026f 00       		.byte	0
 6330 0270 3F       		.uleb128 0x3f
 6331 0271 19       		.uleb128 0x19
 6332 0272 3C       		.uleb128 0x3c
 6333 0273 19       		.uleb128 0x19
 6334 0274 6E       		.uleb128 0x6e
 6335 0275 0E       		.uleb128 0xe
 6336 0276 03       		.uleb128 0x3
 6337 0277 0E       		.uleb128 0xe
 6338 0278 3A       		.uleb128 0x3a
 6339 0279 0B       		.uleb128 0xb
 6340 027a 3B       		.uleb128 0x3b
 6341 027b 0B       		.uleb128 0xb
 6342 027c 00       		.byte	0
 6343 027d 00       		.byte	0
 6344 027e 30       		.uleb128 0x30
 6345 027f 2E       		.uleb128 0x2e
 6346 0280 00       		.byte	0
 6347 0281 3F       		.uleb128 0x3f
 6348 0282 19       		.uleb128 0x19
 6349 0283 3C       		.uleb128 0x3c
 6350 0284 19       		.uleb128 0x19
 6351 0285 6E       		.uleb128 0x6e
 6352 0286 0E       		.uleb128 0xe
 6353 0287 03       		.uleb128 0x3
 6354 0288 0E       		.uleb128 0xe
 6355 0289 00       		.byte	0
 6356 028a 00       		.byte	0
 6357 028b 31       		.uleb128 0x31
 6358 028c 2E       		.uleb128 0x2e
 6359 028d 00       		.byte	0
 6360 028e 3F       		.uleb128 0x3f
 6361 028f 19       		.uleb128 0x19
 6362 0290 3C       		.uleb128 0x3c
 6363 0291 19       		.uleb128 0x19
 6364 0292 6E       		.uleb128 0x6e
 6365 0293 0E       		.uleb128 0xe
 6366 0294 03       		.uleb128 0x3
 6367 0295 0E       		.uleb128 0xe
 6368 0296 3A       		.uleb128 0x3a
 6369 0297 0B       		.uleb128 0xb
 6370 0298 3B       		.uleb128 0x3b
 6371 0299 05       		.uleb128 0x5
 6372 029a 00       		.byte	0
 6373 029b 00       		.byte	0
 6374 029c 00       		.byte	0
 6375              		.section	.debug_loc,"",%progbits
 6376              	.Ldebug_loc0:
 6377              	.LLST0:
 6378 0000 00000000 		.4byte	.LVL0
 6379 0004 07000000 		.4byte	.LVL1-1
 6380 0008 0100     		.2byte	0x1
 6381 000a 50       		.byte	0x50
 6382 000b 07000000 		.4byte	.LVL1-1
 6383 000f 12000000 		.4byte	.LVL2
 6384 0013 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 177


 6385 0015 54       		.byte	0x54
 6386 0016 12000000 		.4byte	.LVL2
 6387 001a 14000000 		.4byte	.LVL3
 6388 001e 0400     		.2byte	0x4
 6389 0020 F3       		.byte	0xf3
 6390 0021 01       		.uleb128 0x1
 6391 0022 50       		.byte	0x50
 6392 0023 9F       		.byte	0x9f
 6393 0024 14000000 		.4byte	.LVL3
 6394 0028 16000000 		.4byte	.LVL4
 6395 002c 0100     		.2byte	0x1
 6396 002e 54       		.byte	0x54
 6397 002f 16000000 		.4byte	.LVL4
 6398 0033 1E000000 		.4byte	.LFE87
 6399 0037 0400     		.2byte	0x4
 6400 0039 F3       		.byte	0xf3
 6401 003a 01       		.uleb128 0x1
 6402 003b 50       		.byte	0x50
 6403 003c 9F       		.byte	0x9f
 6404 003d 00000000 		.4byte	0
 6405 0041 00000000 		.4byte	0
 6406              	.LLST1:
 6407 0045 00000000 		.4byte	.LVL6
 6408 0049 07000000 		.4byte	.LVL7-1
 6409 004d 0100     		.2byte	0x1
 6410 004f 50       		.byte	0x50
 6411 0050 07000000 		.4byte	.LVL7-1
 6412 0054 0E000000 		.4byte	.LVL8
 6413 0058 0100     		.2byte	0x1
 6414 005a 54       		.byte	0x54
 6415 005b 0E000000 		.4byte	.LVL8
 6416 005f 10000000 		.4byte	.LVL9
 6417 0063 0400     		.2byte	0x4
 6418 0065 F3       		.byte	0xf3
 6419 0066 01       		.uleb128 0x1
 6420 0067 50       		.byte	0x50
 6421 0068 9F       		.byte	0x9f
 6422 0069 10000000 		.4byte	.LVL9
 6423 006d 12000000 		.4byte	.LVL10
 6424 0071 0100     		.2byte	0x1
 6425 0073 54       		.byte	0x54
 6426 0074 12000000 		.4byte	.LVL10
 6427 0078 1A000000 		.4byte	.LFE85
 6428 007c 0400     		.2byte	0x4
 6429 007e F3       		.byte	0xf3
 6430 007f 01       		.uleb128 0x1
 6431 0080 50       		.byte	0x50
 6432 0081 9F       		.byte	0x9f
 6433 0082 00000000 		.4byte	0
 6434 0086 00000000 		.4byte	0
 6435              	.LLST2:
 6436 008a 00000000 		.4byte	.LVL12
 6437 008e 10000000 		.4byte	.LVL16
 6438 0092 0100     		.2byte	0x1
 6439 0094 50       		.byte	0x50
 6440 0095 10000000 		.4byte	.LVL16
 6441 0099 28000000 		.4byte	.LVL18
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 178


 6442 009d 0100     		.2byte	0x1
 6443 009f 54       		.byte	0x54
 6444 00a0 28000000 		.4byte	.LVL18
 6445 00a4 2A000000 		.4byte	.LVL19
 6446 00a8 0100     		.2byte	0x1
 6447 00aa 50       		.byte	0x50
 6448 00ab 2A000000 		.4byte	.LVL19
 6449 00af 54000000 		.4byte	.LFE82
 6450 00b3 0100     		.2byte	0x1
 6451 00b5 54       		.byte	0x54
 6452 00b6 00000000 		.4byte	0
 6453 00ba 00000000 		.4byte	0
 6454              	.LLST3:
 6455 00be 00000000 		.4byte	.LVL12
 6456 00c2 13000000 		.4byte	.LVL17-1
 6457 00c6 0100     		.2byte	0x1
 6458 00c8 51       		.byte	0x51
 6459 00c9 13000000 		.4byte	.LVL17-1
 6460 00cd 28000000 		.4byte	.LVL18
 6461 00d1 0400     		.2byte	0x4
 6462 00d3 F3       		.byte	0xf3
 6463 00d4 01       		.uleb128 0x1
 6464 00d5 51       		.byte	0x51
 6465 00d6 9F       		.byte	0x9f
 6466 00d7 28000000 		.4byte	.LVL18
 6467 00db 2D000000 		.4byte	.LVL20-1
 6468 00df 0100     		.2byte	0x1
 6469 00e1 51       		.byte	0x51
 6470 00e2 2D000000 		.4byte	.LVL20-1
 6471 00e6 54000000 		.4byte	.LFE82
 6472 00ea 0400     		.2byte	0x4
 6473 00ec F3       		.byte	0xf3
 6474 00ed 01       		.uleb128 0x1
 6475 00ee 51       		.byte	0x51
 6476 00ef 9F       		.byte	0x9f
 6477 00f0 00000000 		.4byte	0
 6478 00f4 00000000 		.4byte	0
 6479              	.LLST4:
 6480 00f8 00000000 		.4byte	.LVL12
 6481 00fc 0A000000 		.4byte	.LVL15
 6482 0100 0100     		.2byte	0x1
 6483 0102 52       		.byte	0x52
 6484 0103 0A000000 		.4byte	.LVL15
 6485 0107 54000000 		.4byte	.LFE82
 6486 010b 0100     		.2byte	0x1
 6487 010d 56       		.byte	0x56
 6488 010e 00000000 		.4byte	0
 6489 0112 00000000 		.4byte	0
 6490              	.LLST5:
 6491 0116 08000000 		.4byte	.LVL14
 6492 011a 4E000000 		.4byte	.LVL22
 6493 011e 0100     		.2byte	0x1
 6494 0120 55       		.byte	0x55
 6495 0121 4E000000 		.4byte	.LVL22
 6496 0125 54000000 		.4byte	.LFE82
 6497 0129 0300     		.2byte	0x3
 6498 012b 75       		.byte	0x75
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 179


 6499 012c 7F       		.sleb128 -1
 6500 012d 9F       		.byte	0x9f
 6501 012e 00000000 		.4byte	0
 6502 0132 00000000 		.4byte	0
 6503              	.LLST6:
 6504 0136 00000000 		.4byte	.LVL23
 6505 013a 1C000000 		.4byte	.LVL26
 6506 013e 0100     		.2byte	0x1
 6507 0140 50       		.byte	0x50
 6508 0141 1C000000 		.4byte	.LVL26
 6509 0145 1F000000 		.4byte	.LVL27-1
 6510 0149 0200     		.2byte	0x2
 6511 014b 71       		.byte	0x71
 6512 014c 00       		.sleb128 0
 6513 014d 1F000000 		.4byte	.LVL27-1
 6514 0151 42000000 		.4byte	.LVL34
 6515 0155 0200     		.2byte	0x2
 6516 0157 91       		.byte	0x91
 6517 0158 6C       		.sleb128 -20
 6518 0159 42000000 		.4byte	.LVL34
 6519 015d 46000000 		.4byte	.LVL35
 6520 0161 0100     		.2byte	0x1
 6521 0163 50       		.byte	0x50
 6522 0164 46000000 		.4byte	.LVL35
 6523 0168 4E000000 		.4byte	.LFE98
 6524 016c 0200     		.2byte	0x2
 6525 016e 91       		.byte	0x91
 6526 016f 6C       		.sleb128 -20
 6527 0170 00000000 		.4byte	0
 6528 0174 00000000 		.4byte	0
 6529              	.LLST7:
 6530 0178 08000000 		.4byte	.LVL24
 6531 017c 22000000 		.4byte	.LVL28
 6532 0180 0200     		.2byte	0x2
 6533 0182 30       		.byte	0x30
 6534 0183 9F       		.byte	0x9f
 6535 0184 22000000 		.4byte	.LVL28
 6536 0188 30000000 		.4byte	.LVL29
 6537 018c 0100     		.2byte	0x1
 6538 018e 50       		.byte	0x50
 6539 018f 30000000 		.4byte	.LVL29
 6540 0193 38000000 		.4byte	.LVL31
 6541 0197 0100     		.2byte	0x1
 6542 0199 56       		.byte	0x56
 6543 019a 38000000 		.4byte	.LVL31
 6544 019e 42000000 		.4byte	.LVL34
 6545 01a2 0100     		.2byte	0x1
 6546 01a4 50       		.byte	0x50
 6547 01a5 42000000 		.4byte	.LVL34
 6548 01a9 46000000 		.4byte	.LVL35
 6549 01ad 0200     		.2byte	0x2
 6550 01af 30       		.byte	0x30
 6551 01b0 9F       		.byte	0x9f
 6552 01b1 46000000 		.4byte	.LVL35
 6553 01b5 4E000000 		.4byte	.LFE98
 6554 01b9 0100     		.2byte	0x1
 6555 01bb 56       		.byte	0x56
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 180


 6556 01bc 00000000 		.4byte	0
 6557 01c0 00000000 		.4byte	0
 6558              	.LLST8:
 6559 01c4 16000000 		.4byte	.LVL25
 6560 01c8 3A000000 		.4byte	.LVL32
 6561 01cc 0100     		.2byte	0x1
 6562 01ce 55       		.byte	0x55
 6563 01cf 3A000000 		.4byte	.LVL32
 6564 01d3 3C000000 		.4byte	.LVL33
 6565 01d7 0300     		.2byte	0x3
 6566 01d9 75       		.byte	0x75
 6567 01da 7F       		.sleb128 -1
 6568 01db 9F       		.byte	0x9f
 6569 01dc 46000000 		.4byte	.LVL35
 6570 01e0 48000000 		.4byte	.LVL36
 6571 01e4 0100     		.2byte	0x1
 6572 01e6 55       		.byte	0x55
 6573 01e7 00000000 		.4byte	0
 6574 01eb 00000000 		.4byte	0
 6575              	.LLST9:
 6576 01ef 00000000 		.4byte	.LVL37
 6577 01f3 1C000000 		.4byte	.LVL39
 6578 01f7 0100     		.2byte	0x1
 6579 01f9 50       		.byte	0x50
 6580 01fa 1C000000 		.4byte	.LVL39
 6581 01fe 22000000 		.4byte	.LVL41
 6582 0202 0400     		.2byte	0x4
 6583 0204 F3       		.byte	0xf3
 6584 0205 01       		.uleb128 0x1
 6585 0206 50       		.byte	0x50
 6586 0207 9F       		.byte	0x9f
 6587 0208 22000000 		.4byte	.LVL41
 6588 020c 24000000 		.4byte	.LFE83
 6589 0210 0100     		.2byte	0x1
 6590 0212 50       		.byte	0x50
 6591 0213 00000000 		.4byte	0
 6592 0217 00000000 		.4byte	0
 6593              	.LLST10:
 6594 021b 00000000 		.4byte	.LVL37
 6595 021f 1A000000 		.4byte	.LVL38
 6596 0223 0100     		.2byte	0x1
 6597 0225 51       		.byte	0x51
 6598 0226 1A000000 		.4byte	.LVL38
 6599 022a 22000000 		.4byte	.LVL41
 6600 022e 0100     		.2byte	0x1
 6601 0230 54       		.byte	0x54
 6602 0231 22000000 		.4byte	.LVL41
 6603 0235 24000000 		.4byte	.LFE83
 6604 0239 0100     		.2byte	0x1
 6605 023b 51       		.byte	0x51
 6606 023c 00000000 		.4byte	0
 6607 0240 00000000 		.4byte	0
 6608              	.LLST11:
 6609 0244 00000000 		.4byte	.LVL42
 6610 0248 07000000 		.4byte	.LVL43-1
 6611 024c 0100     		.2byte	0x1
 6612 024e 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 181


 6613 024f 07000000 		.4byte	.LVL43-1
 6614 0253 78000000 		.4byte	.LFE84
 6615 0257 0100     		.2byte	0x1
 6616 0259 55       		.byte	0x55
 6617 025a 00000000 		.4byte	0
 6618 025e 00000000 		.4byte	0
 6619              	.LLST12:
 6620 0262 0E000000 		.4byte	.LVL44
 6621 0266 36000000 		.4byte	.LVL49
 6622 026a 0100     		.2byte	0x1
 6623 026c 54       		.byte	0x54
 6624 026d 38000000 		.4byte	.LVL50
 6625 0271 4E000000 		.4byte	.LVL53
 6626 0275 0100     		.2byte	0x1
 6627 0277 54       		.byte	0x54
 6628 0278 00000000 		.4byte	0
 6629 027c 00000000 		.4byte	0
 6630              	.LLST13:
 6631 0280 50000000 		.4byte	.LVL54
 6632 0284 66000000 		.4byte	.LVL57
 6633 0288 0100     		.2byte	0x1
 6634 028a 54       		.byte	0x54
 6635 028b 68000000 		.4byte	.LVL58
 6636 028f 78000000 		.4byte	.LFE84
 6637 0293 0100     		.2byte	0x1
 6638 0295 54       		.byte	0x54
 6639 0296 00000000 		.4byte	0
 6640 029a 00000000 		.4byte	0
 6641              	.LLST14:
 6642 029e 00000000 		.4byte	.LVL60
 6643 02a2 09000000 		.4byte	.LVL62-1
 6644 02a6 0100     		.2byte	0x1
 6645 02a8 50       		.byte	0x50
 6646 02a9 09000000 		.4byte	.LVL62-1
 6647 02ad 68000000 		.4byte	.LVL67
 6648 02b1 0100     		.2byte	0x1
 6649 02b3 54       		.byte	0x54
 6650 02b4 68000000 		.4byte	.LVL67
 6651 02b8 6C000000 		.4byte	.LFE67
 6652 02bc 0400     		.2byte	0x4
 6653 02be F3       		.byte	0xf3
 6654 02bf 01       		.uleb128 0x1
 6655 02c0 50       		.byte	0x50
 6656 02c1 9F       		.byte	0x9f
 6657 02c2 00000000 		.4byte	0
 6658 02c6 00000000 		.4byte	0
 6659              	.LLST15:
 6660 02ca 00000000 		.4byte	.LVL60
 6661 02ce 09000000 		.4byte	.LVL62-1
 6662 02d2 0100     		.2byte	0x1
 6663 02d4 51       		.byte	0x51
 6664 02d5 09000000 		.4byte	.LVL62-1
 6665 02d9 68000000 		.4byte	.LVL67
 6666 02dd 0100     		.2byte	0x1
 6667 02df 55       		.byte	0x55
 6668 02e0 68000000 		.4byte	.LVL67
 6669 02e4 6C000000 		.4byte	.LFE67
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 182


 6670 02e8 0400     		.2byte	0x4
 6671 02ea F3       		.byte	0xf3
 6672 02eb 01       		.uleb128 0x1
 6673 02ec 51       		.byte	0x51
 6674 02ed 9F       		.byte	0x9f
 6675 02ee 00000000 		.4byte	0
 6676 02f2 00000000 		.4byte	0
 6677              	.LLST16:
 6678 02f6 06000000 		.4byte	.LVL61
 6679 02fa 09000000 		.4byte	.LVL62-1
 6680 02fe 0100     		.2byte	0x1
 6681 0300 50       		.byte	0x50
 6682 0301 09000000 		.4byte	.LVL62-1
 6683 0305 68000000 		.4byte	.LVL67
 6684 0309 0100     		.2byte	0x1
 6685 030b 54       		.byte	0x54
 6686 030c 68000000 		.4byte	.LVL67
 6687 0310 6C000000 		.4byte	.LFE67
 6688 0314 0400     		.2byte	0x4
 6689 0316 F3       		.byte	0xf3
 6690 0317 01       		.uleb128 0x1
 6691 0318 50       		.byte	0x50
 6692 0319 9F       		.byte	0x9f
 6693 031a 00000000 		.4byte	0
 6694 031e 00000000 		.4byte	0
 6695              	.LLST17:
 6696 0322 00000000 		.4byte	.LVL68
 6697 0326 16000000 		.4byte	.LVL71
 6698 032a 0100     		.2byte	0x1
 6699 032c 50       		.byte	0x50
 6700 032d 16000000 		.4byte	.LVL71
 6701 0331 19000000 		.4byte	.LVL72-1
 6702 0335 0200     		.2byte	0x2
 6703 0337 70       		.byte	0x70
 6704 0338 3C       		.sleb128 60
 6705 0339 19000000 		.4byte	.LVL72-1
 6706 033d 20000000 		.4byte	.LFE69
 6707 0341 0400     		.2byte	0x4
 6708 0343 F3       		.byte	0xf3
 6709 0344 01       		.uleb128 0x1
 6710 0345 50       		.byte	0x50
 6711 0346 9F       		.byte	0x9f
 6712 0347 00000000 		.4byte	0
 6713 034b 00000000 		.4byte	0
 6714              	.LLST18:
 6715 034f 00000000 		.4byte	.LVL68
 6716 0353 14000000 		.4byte	.LVL70
 6717 0357 0100     		.2byte	0x1
 6718 0359 51       		.byte	0x51
 6719 035a 14000000 		.4byte	.LVL70
 6720 035e 19000000 		.4byte	.LVL72-1
 6721 0362 0100     		.2byte	0x1
 6722 0364 53       		.byte	0x53
 6723 0365 19000000 		.4byte	.LVL72-1
 6724 0369 20000000 		.4byte	.LFE69
 6725 036d 0400     		.2byte	0x4
 6726 036f F3       		.byte	0xf3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 183


 6727 0370 01       		.uleb128 0x1
 6728 0371 51       		.byte	0x51
 6729 0372 9F       		.byte	0x9f
 6730 0373 00000000 		.4byte	0
 6731 0377 00000000 		.4byte	0
 6732              	.LLST19:
 6733 037b 00000000 		.4byte	.LVL68
 6734 037f 19000000 		.4byte	.LVL72-1
 6735 0383 0100     		.2byte	0x1
 6736 0385 52       		.byte	0x52
 6737 0386 19000000 		.4byte	.LVL72-1
 6738 038a 20000000 		.4byte	.LFE69
 6739 038e 0400     		.2byte	0x4
 6740 0390 F3       		.byte	0xf3
 6741 0391 01       		.uleb128 0x1
 6742 0392 52       		.byte	0x52
 6743 0393 9F       		.byte	0x9f
 6744 0394 00000000 		.4byte	0
 6745 0398 00000000 		.4byte	0
 6746              	.LLST20:
 6747 039c 00000000 		.4byte	.LVL68
 6748 03a0 06000000 		.4byte	.LVL69
 6749 03a4 0100     		.2byte	0x1
 6750 03a6 53       		.byte	0x53
 6751 03a7 06000000 		.4byte	.LVL69
 6752 03ab 20000000 		.4byte	.LFE69
 6753 03af 0400     		.2byte	0x4
 6754 03b1 F3       		.byte	0xf3
 6755 03b2 01       		.uleb128 0x1
 6756 03b3 53       		.byte	0x53
 6757 03b4 9F       		.byte	0x9f
 6758 03b5 00000000 		.4byte	0
 6759 03b9 00000000 		.4byte	0
 6760              	.LLST21:
 6761 03bd 00000000 		.4byte	.LVL73
 6762 03c1 0E000000 		.4byte	.LVL74
 6763 03c5 0100     		.2byte	0x1
 6764 03c7 50       		.byte	0x50
 6765 03c8 0E000000 		.4byte	.LVL74
 6766 03cc 2E000000 		.4byte	.LFE68
 6767 03d0 0100     		.2byte	0x1
 6768 03d2 55       		.byte	0x55
 6769 03d3 00000000 		.4byte	0
 6770 03d7 00000000 		.4byte	0
 6771              	.LLST22:
 6772 03db 00000000 		.4byte	.LVL73
 6773 03df 13000000 		.4byte	.LVL76-1
 6774 03e3 0100     		.2byte	0x1
 6775 03e5 51       		.byte	0x51
 6776 03e6 13000000 		.4byte	.LVL76-1
 6777 03ea 2E000000 		.4byte	.LFE68
 6778 03ee 0100     		.2byte	0x1
 6779 03f0 56       		.byte	0x56
 6780 03f1 00000000 		.4byte	0
 6781 03f5 00000000 		.4byte	0
 6782              	.LLST23:
 6783 03f9 00000000 		.4byte	.LVL73
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 184


 6784 03fd 13000000 		.4byte	.LVL76-1
 6785 0401 0100     		.2byte	0x1
 6786 0403 52       		.byte	0x52
 6787 0404 13000000 		.4byte	.LVL76-1
 6788 0408 2E000000 		.4byte	.LFE68
 6789 040c 0400     		.2byte	0x4
 6790 040e F3       		.byte	0xf3
 6791 040f 01       		.uleb128 0x1
 6792 0410 52       		.byte	0x52
 6793 0411 9F       		.byte	0x9f
 6794 0412 00000000 		.4byte	0
 6795 0416 00000000 		.4byte	0
 6796              	.LLST24:
 6797 041a 14000000 		.4byte	.LVL76
 6798 041e 24000000 		.4byte	.LVL79
 6799 0422 0100     		.2byte	0x1
 6800 0424 50       		.byte	0x50
 6801 0425 24000000 		.4byte	.LVL79
 6802 0429 2E000000 		.4byte	.LFE68
 6803 042d 0100     		.2byte	0x1
 6804 042f 54       		.byte	0x54
 6805 0430 00000000 		.4byte	0
 6806 0434 00000000 		.4byte	0
 6807              	.LLST25:
 6808 0438 0E000000 		.4byte	.LVL74
 6809 043c 10000000 		.4byte	.LVL75
 6810 0440 0100     		.2byte	0x1
 6811 0442 50       		.byte	0x50
 6812 0443 10000000 		.4byte	.LVL75
 6813 0447 13000000 		.4byte	.LVL76-1
 6814 044b 0400     		.2byte	0x4
 6815 044d 70       		.byte	0x70
 6816 044e B47F     		.sleb128 -76
 6817 0450 9F       		.byte	0x9f
 6818 0451 13000000 		.4byte	.LVL76-1
 6819 0455 2E000000 		.4byte	.LFE68
 6820 0459 0600     		.2byte	0x6
 6821 045b 76       		.byte	0x76
 6822 045c 00       		.sleb128 0
 6823 045d 75       		.byte	0x75
 6824 045e 00       		.sleb128 0
 6825 045f 1E       		.byte	0x1e
 6826 0460 9F       		.byte	0x9f
 6827 0461 00000000 		.4byte	0
 6828 0465 00000000 		.4byte	0
 6829              	.LLST26:
 6830 0469 18000000 		.4byte	.LVL77
 6831 046d 20000000 		.4byte	.LVL78
 6832 0471 0400     		.2byte	0x4
 6833 0473 70       		.byte	0x70
 6834 0474 CC00     		.sleb128 76
 6835 0476 9F       		.byte	0x9f
 6836 0477 20000000 		.4byte	.LVL78
 6837 047b 27000000 		.4byte	.LVL80-1
 6838 047f 0100     		.2byte	0x1
 6839 0481 52       		.byte	0x52
 6840 0482 27000000 		.4byte	.LVL80-1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 185


 6841 0486 28000000 		.4byte	.LVL80
 6842 048a 0400     		.2byte	0x4
 6843 048c 74       		.byte	0x74
 6844 048d CC00     		.sleb128 76
 6845 048f 9F       		.byte	0x9f
 6846 0490 00000000 		.4byte	0
 6847 0494 00000000 		.4byte	0
 6848              	.LLST27:
 6849 0498 00000000 		.4byte	.LVL81
 6850 049c 0E000000 		.4byte	.LVL83
 6851 04a0 0100     		.2byte	0x1
 6852 04a2 50       		.byte	0x50
 6853 04a3 0E000000 		.4byte	.LVL83
 6854 04a7 2A010000 		.4byte	.LVL114
 6855 04ab 0100     		.2byte	0x1
 6856 04ad 54       		.byte	0x54
 6857 04ae 2A010000 		.4byte	.LVL114
 6858 04b2 30010000 		.4byte	.LFE70
 6859 04b6 0400     		.2byte	0x4
 6860 04b8 F3       		.byte	0xf3
 6861 04b9 01       		.uleb128 0x1
 6862 04ba 50       		.byte	0x50
 6863 04bb 9F       		.byte	0x9f
 6864 04bc 00000000 		.4byte	0
 6865 04c0 00000000 		.4byte	0
 6866              	.LLST28:
 6867 04c4 00000000 		.4byte	.LVL81
 6868 04c8 0E000000 		.4byte	.LVL83
 6869 04cc 0100     		.2byte	0x1
 6870 04ce 51       		.byte	0x51
 6871 04cf 0E000000 		.4byte	.LVL83
 6872 04d3 2A010000 		.4byte	.LVL114
 6873 04d7 0100     		.2byte	0x1
 6874 04d9 57       		.byte	0x57
 6875 04da 2A010000 		.4byte	.LVL114
 6876 04de 30010000 		.4byte	.LFE70
 6877 04e2 0400     		.2byte	0x4
 6878 04e4 F3       		.byte	0xf3
 6879 04e5 01       		.uleb128 0x1
 6880 04e6 51       		.byte	0x51
 6881 04e7 9F       		.byte	0x9f
 6882 04e8 00000000 		.4byte	0
 6883 04ec 00000000 		.4byte	0
 6884              	.LLST29:
 6885 04f0 00000000 		.4byte	.LVL81
 6886 04f4 0E000000 		.4byte	.LVL83
 6887 04f8 0100     		.2byte	0x1
 6888 04fa 52       		.byte	0x52
 6889 04fb 0E000000 		.4byte	.LVL83
 6890 04ff D4000000 		.4byte	.LVL103
 6891 0503 0200     		.2byte	0x2
 6892 0505 91       		.byte	0x91
 6893 0506 5C       		.sleb128 -36
 6894 0507 D4000000 		.4byte	.LVL103
 6895 050b D9000000 		.4byte	.LVL104-1
 6896 050f 0200     		.2byte	0x2
 6897 0511 71       		.byte	0x71
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 186


 6898 0512 00       		.sleb128 0
 6899 0513 D9000000 		.4byte	.LVL104-1
 6900 0517 2A010000 		.4byte	.LVL114
 6901 051b 0200     		.2byte	0x2
 6902 051d 91       		.byte	0x91
 6903 051e 5C       		.sleb128 -36
 6904 051f 2A010000 		.4byte	.LVL114
 6905 0523 30010000 		.4byte	.LFE70
 6906 0527 0200     		.2byte	0x2
 6907 0529 7D       		.byte	0x7d
 6908 052a 5C       		.sleb128 -36
 6909 052b 00000000 		.4byte	0
 6910 052f 00000000 		.4byte	0
 6911              	.LLST30:
 6912 0533 00000000 		.4byte	.LVL81
 6913 0537 0E000000 		.4byte	.LVL83
 6914 053b 0100     		.2byte	0x1
 6915 053d 53       		.byte	0x53
 6916 053e 0E000000 		.4byte	.LVL83
 6917 0542 2A010000 		.4byte	.LVL114
 6918 0546 0100     		.2byte	0x1
 6919 0548 56       		.byte	0x56
 6920 0549 2A010000 		.4byte	.LVL114
 6921 054d 30010000 		.4byte	.LFE70
 6922 0551 0400     		.2byte	0x4
 6923 0553 F3       		.byte	0xf3
 6924 0554 01       		.uleb128 0x1
 6925 0555 53       		.byte	0x53
 6926 0556 9F       		.byte	0x9f
 6927 0557 00000000 		.4byte	0
 6928 055b 00000000 		.4byte	0
 6929              	.LLST31:
 6930 055f 0C000000 		.4byte	.LVL82
 6931 0563 0E000000 		.4byte	.LVL83
 6932 0567 0200     		.2byte	0x2
 6933 0569 30       		.byte	0x30
 6934 056a 9F       		.byte	0x9f
 6935 056b 0E000000 		.4byte	.LVL83
 6936 056f 20000000 		.4byte	.LVL85
 6937 0573 0100     		.2byte	0x1
 6938 0575 55       		.byte	0x55
 6939 0576 88000000 		.4byte	.LVL95
 6940 057a 9C000000 		.4byte	.LVL97
 6941 057e 0100     		.2byte	0x1
 6942 0580 55       		.byte	0x55
 6943 0581 9C000000 		.4byte	.LVL97
 6944 0585 9E000000 		.4byte	.LVL98
 6945 0589 0200     		.2byte	0x2
 6946 058b 31       		.byte	0x31
 6947 058c 9F       		.byte	0x9f
 6948 058d 9E000000 		.4byte	.LVL98
 6949 0591 26010000 		.4byte	.LVL113
 6950 0595 0100     		.2byte	0x1
 6951 0597 55       		.byte	0x55
 6952 0598 00000000 		.4byte	0
 6953 059c 00000000 		.4byte	0
 6954              	.LLST32:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 187


 6955 05a0 2A000000 		.4byte	.LVL86
 6956 05a4 36000000 		.4byte	.LVL87
 6957 05a8 0100     		.2byte	0x1
 6958 05aa 50       		.byte	0x50
 6959 05ab 4E000000 		.4byte	.LVL89
 6960 05af 56000000 		.4byte	.LVL90
 6961 05b3 0100     		.2byte	0x1
 6962 05b5 50       		.byte	0x50
 6963 05b6 6E000000 		.4byte	.LVL92
 6964 05ba 80000000 		.4byte	.LVL93
 6965 05be 0100     		.2byte	0x1
 6966 05c0 50       		.byte	0x50
 6967 05c1 00000000 		.4byte	0
 6968 05c5 00000000 		.4byte	0
 6969              	.LLST33:
 6970 05c9 0C000000 		.4byte	.LVL82
 6971 05cd 0E000000 		.4byte	.LVL83
 6972 05d1 0100     		.2byte	0x1
 6973 05d3 50       		.byte	0x50
 6974 05d4 0E000000 		.4byte	.LVL83
 6975 05d8 2A010000 		.4byte	.LVL114
 6976 05dc 0100     		.2byte	0x1
 6977 05de 54       		.byte	0x54
 6978 05df 2A010000 		.4byte	.LVL114
 6979 05e3 30010000 		.4byte	.LFE70
 6980 05e7 0400     		.2byte	0x4
 6981 05e9 F3       		.byte	0xf3
 6982 05ea 01       		.uleb128 0x1
 6983 05eb 50       		.byte	0x50
 6984 05ec 9F       		.byte	0x9f
 6985 05ed 00000000 		.4byte	0
 6986 05f1 00000000 		.4byte	0
 6987              	.LLST34:
 6988 05f5 20000000 		.4byte	.LVL85
 6989 05f9 88000000 		.4byte	.LVL95
 6990 05fd 0100     		.2byte	0x1
 6991 05ff 55       		.byte	0x55
 6992 0600 00000000 		.4byte	0
 6993 0604 00000000 		.4byte	0
 6994              	.LLST35:
 6995 0608 00000000 		.4byte	.LVL115
 6996 060c 39000000 		.4byte	.LVL120-1
 6997 0610 0100     		.2byte	0x1
 6998 0612 50       		.byte	0x50
 6999 0613 39000000 		.4byte	.LVL120-1
 7000 0617 8C000000 		.4byte	.LVL125
 7001 061b 0100     		.2byte	0x1
 7002 061d 55       		.byte	0x55
 7003 061e 8C000000 		.4byte	.LVL125
 7004 0622 8E000000 		.4byte	.LVL126
 7005 0626 0100     		.2byte	0x1
 7006 0628 50       		.byte	0x50
 7007 0629 8E000000 		.4byte	.LVL126
 7008 062d 90000000 		.4byte	.LVL127
 7009 0631 0400     		.2byte	0x4
 7010 0633 F3       		.byte	0xf3
 7011 0634 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 188


 7012 0635 50       		.byte	0x50
 7013 0636 9F       		.byte	0x9f
 7014 0637 90000000 		.4byte	.LVL127
 7015 063b A6000000 		.4byte	.LVL128
 7016 063f 0100     		.2byte	0x1
 7017 0641 55       		.byte	0x55
 7018 0642 A6000000 		.4byte	.LVL128
 7019 0646 AE000000 		.4byte	.LFE71
 7020 064a 0400     		.2byte	0x4
 7021 064c F3       		.byte	0xf3
 7022 064d 01       		.uleb128 0x1
 7023 064e 50       		.byte	0x50
 7024 064f 9F       		.byte	0x9f
 7025 0650 00000000 		.4byte	0
 7026 0654 00000000 		.4byte	0
 7027              	.LLST36:
 7028 0658 00000000 		.4byte	.LVL115
 7029 065c 39000000 		.4byte	.LVL120-1
 7030 0660 0100     		.2byte	0x1
 7031 0662 51       		.byte	0x51
 7032 0663 39000000 		.4byte	.LVL120-1
 7033 0667 8C000000 		.4byte	.LVL125
 7034 066b 0400     		.2byte	0x4
 7035 066d F3       		.byte	0xf3
 7036 066e 01       		.uleb128 0x1
 7037 066f 51       		.byte	0x51
 7038 0670 9F       		.byte	0x9f
 7039 0671 8C000000 		.4byte	.LVL125
 7040 0675 90000000 		.4byte	.LVL127
 7041 0679 0100     		.2byte	0x1
 7042 067b 51       		.byte	0x51
 7043 067c 90000000 		.4byte	.LVL127
 7044 0680 AE000000 		.4byte	.LFE71
 7045 0684 0400     		.2byte	0x4
 7046 0686 F3       		.byte	0xf3
 7047 0687 01       		.uleb128 0x1
 7048 0688 51       		.byte	0x51
 7049 0689 9F       		.byte	0x9f
 7050 068a 00000000 		.4byte	0
 7051 068e 00000000 		.4byte	0
 7052              	.LLST37:
 7053 0692 00000000 		.4byte	.LVL115
 7054 0696 36000000 		.4byte	.LVL119
 7055 069a 0100     		.2byte	0x1
 7056 069c 52       		.byte	0x52
 7057 069d 36000000 		.4byte	.LVL119
 7058 06a1 8C000000 		.4byte	.LVL125
 7059 06a5 0100     		.2byte	0x1
 7060 06a7 58       		.byte	0x58
 7061 06a8 8C000000 		.4byte	.LVL125
 7062 06ac 90000000 		.4byte	.LVL127
 7063 06b0 0100     		.2byte	0x1
 7064 06b2 52       		.byte	0x52
 7065 06b3 90000000 		.4byte	.LVL127
 7066 06b7 A6000000 		.4byte	.LVL128
 7067 06bb 0100     		.2byte	0x1
 7068 06bd 58       		.byte	0x58
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 189


 7069 06be A6000000 		.4byte	.LVL128
 7070 06c2 AE000000 		.4byte	.LFE71
 7071 06c6 0400     		.2byte	0x4
 7072 06c8 F3       		.byte	0xf3
 7073 06c9 01       		.uleb128 0x1
 7074 06ca 52       		.byte	0x52
 7075 06cb 9F       		.byte	0x9f
 7076 06cc 00000000 		.4byte	0
 7077 06d0 00000000 		.4byte	0
 7078              	.LLST38:
 7079 06d4 00000000 		.4byte	.LVL115
 7080 06d8 39000000 		.4byte	.LVL120-1
 7081 06dc 0100     		.2byte	0x1
 7082 06de 53       		.byte	0x53
 7083 06df 39000000 		.4byte	.LVL120-1
 7084 06e3 8C000000 		.4byte	.LVL125
 7085 06e7 0100     		.2byte	0x1
 7086 06e9 56       		.byte	0x56
 7087 06ea 8C000000 		.4byte	.LVL125
 7088 06ee 90000000 		.4byte	.LVL127
 7089 06f2 0100     		.2byte	0x1
 7090 06f4 53       		.byte	0x53
 7091 06f5 90000000 		.4byte	.LVL127
 7092 06f9 A6000000 		.4byte	.LVL128
 7093 06fd 0100     		.2byte	0x1
 7094 06ff 56       		.byte	0x56
 7095 0700 A6000000 		.4byte	.LVL128
 7096 0704 AE000000 		.4byte	.LFE71
 7097 0708 0400     		.2byte	0x4
 7098 070a F3       		.byte	0xf3
 7099 070b 01       		.uleb128 0x1
 7100 070c 53       		.byte	0x53
 7101 070d 9F       		.byte	0x9f
 7102 070e 00000000 		.4byte	0
 7103 0712 00000000 		.4byte	0
 7104              	.LLST39:
 7105 0716 04000000 		.4byte	.LVL116
 7106 071a 39000000 		.4byte	.LVL120-1
 7107 071e 0100     		.2byte	0x1
 7108 0720 50       		.byte	0x50
 7109 0721 39000000 		.4byte	.LVL120-1
 7110 0725 8C000000 		.4byte	.LVL125
 7111 0729 0100     		.2byte	0x1
 7112 072b 55       		.byte	0x55
 7113 072c 8C000000 		.4byte	.LVL125
 7114 0730 8E000000 		.4byte	.LVL126
 7115 0734 0100     		.2byte	0x1
 7116 0736 50       		.byte	0x50
 7117 0737 8E000000 		.4byte	.LVL126
 7118 073b 90000000 		.4byte	.LVL127
 7119 073f 0400     		.2byte	0x4
 7120 0741 F3       		.byte	0xf3
 7121 0742 01       		.uleb128 0x1
 7122 0743 50       		.byte	0x50
 7123 0744 9F       		.byte	0x9f
 7124 0745 90000000 		.4byte	.LVL127
 7125 0749 A6000000 		.4byte	.LVL128
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 190


 7126 074d 0100     		.2byte	0x1
 7127 074f 55       		.byte	0x55
 7128 0750 A6000000 		.4byte	.LVL128
 7129 0754 AE000000 		.4byte	.LFE71
 7130 0758 0400     		.2byte	0x4
 7131 075a F3       		.byte	0xf3
 7132 075b 01       		.uleb128 0x1
 7133 075c 50       		.byte	0x50
 7134 075d 9F       		.byte	0x9f
 7135 075e 00000000 		.4byte	0
 7136 0762 00000000 		.4byte	0
 7137              	.LLST40:
 7138 0766 30000000 		.4byte	.LVL117
 7139 076a 82000000 		.4byte	.LVL123
 7140 076e 0100     		.2byte	0x1
 7141 0770 54       		.byte	0x54
 7142 0771 82000000 		.4byte	.LVL123
 7143 0775 84000000 		.4byte	.LVL124
 7144 0779 0300     		.2byte	0x3
 7145 077b 74       		.byte	0x74
 7146 077c 7F       		.sleb128 -1
 7147 077d 9F       		.byte	0x9f
 7148 077e 90000000 		.4byte	.LVL127
 7149 0782 A6000000 		.4byte	.LVL128
 7150 0786 0100     		.2byte	0x1
 7151 0788 54       		.byte	0x54
 7152 0789 00000000 		.4byte	0
 7153 078d 00000000 		.4byte	0
 7154              	.LLST41:
 7155 0791 34000000 		.4byte	.LVL118
 7156 0795 8C000000 		.4byte	.LVL125
 7157 0799 0100     		.2byte	0x1
 7158 079b 59       		.byte	0x59
 7159 079c 90000000 		.4byte	.LVL127
 7160 07a0 A6000000 		.4byte	.LVL128
 7161 07a4 0100     		.2byte	0x1
 7162 07a6 59       		.byte	0x59
 7163 07a7 00000000 		.4byte	0
 7164 07ab 00000000 		.4byte	0
 7165              	.LLST42:
 7166 07af A6000000 		.4byte	.LVL128
 7167 07b3 AA000000 		.4byte	.LVL129
 7168 07b7 0100     		.2byte	0x1
 7169 07b9 57       		.byte	0x57
 7170 07ba 00000000 		.4byte	0
 7171 07be 00000000 		.4byte	0
 7172              	.LLST43:
 7173 07c2 00000000 		.4byte	.LVL130
 7174 07c6 37000000 		.4byte	.LVL136-1
 7175 07ca 0100     		.2byte	0x1
 7176 07cc 50       		.byte	0x50
 7177 07cd 37000000 		.4byte	.LVL136-1
 7178 07d1 42000000 		.4byte	.LVL137
 7179 07d5 0400     		.2byte	0x4
 7180 07d7 F3       		.byte	0xf3
 7181 07d8 01       		.uleb128 0x1
 7182 07d9 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 191


 7183 07da 9F       		.byte	0x9f
 7184 07db 42000000 		.4byte	.LVL137
 7185 07df 48000000 		.4byte	.LVL138
 7186 07e3 0100     		.2byte	0x1
 7187 07e5 50       		.byte	0x50
 7188 07e6 48000000 		.4byte	.LVL138
 7189 07ea 4B000000 		.4byte	.LVL139-1
 7190 07ee 0300     		.2byte	0x3
 7191 07f0 70       		.byte	0x70
 7192 07f1 5C       		.sleb128 -36
 7193 07f2 9F       		.byte	0x9f
 7194 07f3 4B000000 		.4byte	.LVL139-1
 7195 07f7 56000000 		.4byte	.LVL140
 7196 07fb 0400     		.2byte	0x4
 7197 07fd F3       		.byte	0xf3
 7198 07fe 01       		.uleb128 0x1
 7199 07ff 50       		.byte	0x50
 7200 0800 9F       		.byte	0x9f
 7201 0801 56000000 		.4byte	.LVL140
 7202 0805 60000000 		.4byte	.LVL143
 7203 0809 0100     		.2byte	0x1
 7204 080b 50       		.byte	0x50
 7205 080c 60000000 		.4byte	.LVL143
 7206 0810 62000000 		.4byte	.LVL144
 7207 0814 0400     		.2byte	0x4
 7208 0816 F3       		.byte	0xf3
 7209 0817 01       		.uleb128 0x1
 7210 0818 50       		.byte	0x50
 7211 0819 9F       		.byte	0x9f
 7212 081a 62000000 		.4byte	.LVL144
 7213 081e 64000000 		.4byte	.LVL145
 7214 0822 0100     		.2byte	0x1
 7215 0824 50       		.byte	0x50
 7216 0825 64000000 		.4byte	.LVL145
 7217 0829 6E000000 		.4byte	.LVL147
 7218 082d 0400     		.2byte	0x4
 7219 082f F3       		.byte	0xf3
 7220 0830 01       		.uleb128 0x1
 7221 0831 50       		.byte	0x50
 7222 0832 9F       		.byte	0x9f
 7223 0833 6E000000 		.4byte	.LVL147
 7224 0837 70000000 		.4byte	.LVL148
 7225 083b 0100     		.2byte	0x1
 7226 083d 50       		.byte	0x50
 7227 083e 70000000 		.4byte	.LVL148
 7228 0842 7E000000 		.4byte	.LFE72
 7229 0846 0400     		.2byte	0x4
 7230 0848 F3       		.byte	0xf3
 7231 0849 01       		.uleb128 0x1
 7232 084a 50       		.byte	0x50
 7233 084b 9F       		.byte	0x9f
 7234 084c 00000000 		.4byte	0
 7235 0850 00000000 		.4byte	0
 7236              	.LLST44:
 7237 0854 00000000 		.4byte	.LVL130
 7238 0858 37000000 		.4byte	.LVL136-1
 7239 085c 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 192


 7240 085e 51       		.byte	0x51
 7241 085f 37000000 		.4byte	.LVL136-1
 7242 0863 42000000 		.4byte	.LVL137
 7243 0867 0100     		.2byte	0x1
 7244 0869 55       		.byte	0x55
 7245 086a 42000000 		.4byte	.LVL137
 7246 086e 4B000000 		.4byte	.LVL139-1
 7247 0872 0100     		.2byte	0x1
 7248 0874 51       		.byte	0x51
 7249 0875 4B000000 		.4byte	.LVL139-1
 7250 0879 56000000 		.4byte	.LVL140
 7251 087d 0100     		.2byte	0x1
 7252 087f 55       		.byte	0x55
 7253 0880 56000000 		.4byte	.LVL140
 7254 0884 66000000 		.4byte	.LVL146
 7255 0888 0100     		.2byte	0x1
 7256 088a 51       		.byte	0x51
 7257 088b 66000000 		.4byte	.LVL146
 7258 088f 6E000000 		.4byte	.LVL147
 7259 0893 0100     		.2byte	0x1
 7260 0895 55       		.byte	0x55
 7261 0896 6E000000 		.4byte	.LVL147
 7262 089a 72000000 		.4byte	.LVL149
 7263 089e 0100     		.2byte	0x1
 7264 08a0 51       		.byte	0x51
 7265 08a1 72000000 		.4byte	.LVL149
 7266 08a5 78000000 		.4byte	.LVL150
 7267 08a9 0100     		.2byte	0x1
 7268 08ab 55       		.byte	0x55
 7269 08ac 78000000 		.4byte	.LVL150
 7270 08b0 7E000000 		.4byte	.LFE72
 7271 08b4 0400     		.2byte	0x4
 7272 08b6 F3       		.byte	0xf3
 7273 08b7 01       		.uleb128 0x1
 7274 08b8 51       		.byte	0x51
 7275 08b9 9F       		.byte	0x9f
 7276 08ba 00000000 		.4byte	0
 7277 08be 00000000 		.4byte	0
 7278              	.LLST45:
 7279 08c2 02000000 		.4byte	.LVL131
 7280 08c6 37000000 		.4byte	.LVL136-1
 7281 08ca 0100     		.2byte	0x1
 7282 08cc 50       		.byte	0x50
 7283 08cd 37000000 		.4byte	.LVL136-1
 7284 08d1 42000000 		.4byte	.LVL137
 7285 08d5 0400     		.2byte	0x4
 7286 08d7 F3       		.byte	0xf3
 7287 08d8 01       		.uleb128 0x1
 7288 08d9 50       		.byte	0x50
 7289 08da 9F       		.byte	0x9f
 7290 08db 42000000 		.4byte	.LVL137
 7291 08df 48000000 		.4byte	.LVL138
 7292 08e3 0100     		.2byte	0x1
 7293 08e5 50       		.byte	0x50
 7294 08e6 48000000 		.4byte	.LVL138
 7295 08ea 4B000000 		.4byte	.LVL139-1
 7296 08ee 0300     		.2byte	0x3
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 193


 7297 08f0 70       		.byte	0x70
 7298 08f1 5C       		.sleb128 -36
 7299 08f2 9F       		.byte	0x9f
 7300 08f3 4B000000 		.4byte	.LVL139-1
 7301 08f7 56000000 		.4byte	.LVL140
 7302 08fb 0400     		.2byte	0x4
 7303 08fd F3       		.byte	0xf3
 7304 08fe 01       		.uleb128 0x1
 7305 08ff 50       		.byte	0x50
 7306 0900 9F       		.byte	0x9f
 7307 0901 56000000 		.4byte	.LVL140
 7308 0905 60000000 		.4byte	.LVL143
 7309 0909 0100     		.2byte	0x1
 7310 090b 50       		.byte	0x50
 7311 090c 60000000 		.4byte	.LVL143
 7312 0910 62000000 		.4byte	.LVL144
 7313 0914 0400     		.2byte	0x4
 7314 0916 F3       		.byte	0xf3
 7315 0917 01       		.uleb128 0x1
 7316 0918 50       		.byte	0x50
 7317 0919 9F       		.byte	0x9f
 7318 091a 62000000 		.4byte	.LVL144
 7319 091e 64000000 		.4byte	.LVL145
 7320 0922 0100     		.2byte	0x1
 7321 0924 50       		.byte	0x50
 7322 0925 64000000 		.4byte	.LVL145
 7323 0929 6E000000 		.4byte	.LVL147
 7324 092d 0400     		.2byte	0x4
 7325 092f F3       		.byte	0xf3
 7326 0930 01       		.uleb128 0x1
 7327 0931 50       		.byte	0x50
 7328 0932 9F       		.byte	0x9f
 7329 0933 6E000000 		.4byte	.LVL147
 7330 0937 70000000 		.4byte	.LVL148
 7331 093b 0100     		.2byte	0x1
 7332 093d 50       		.byte	0x50
 7333 093e 70000000 		.4byte	.LVL148
 7334 0942 7E000000 		.4byte	.LFE72
 7335 0946 0400     		.2byte	0x4
 7336 0948 F3       		.byte	0xf3
 7337 0949 01       		.uleb128 0x1
 7338 094a 50       		.byte	0x50
 7339 094b 9F       		.byte	0x9f
 7340 094c 00000000 		.4byte	0
 7341 0950 00000000 		.4byte	0
 7342              	.LLST46:
 7343 0954 18000000 		.4byte	.LVL132
 7344 0958 26000000 		.4byte	.LVL134
 7345 095c 0100     		.2byte	0x1
 7346 095e 52       		.byte	0x52
 7347 095f 26000000 		.4byte	.LVL134
 7348 0963 37000000 		.4byte	.LVL136-1
 7349 0967 0300     		.2byte	0x3
 7350 0969 72       		.byte	0x72
 7351 096a 7F       		.sleb128 -1
 7352 096b 9F       		.byte	0x9f
 7353 096c 42000000 		.4byte	.LVL137
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 194


 7354 0970 4B000000 		.4byte	.LVL139-1
 7355 0974 0300     		.2byte	0x3
 7356 0976 72       		.byte	0x72
 7357 0977 7F       		.sleb128 -1
 7358 0978 9F       		.byte	0x9f
 7359 0979 56000000 		.4byte	.LVL140
 7360 097d 62000000 		.4byte	.LVL144
 7361 0981 0300     		.2byte	0x3
 7362 0983 72       		.byte	0x72
 7363 0984 7F       		.sleb128 -1
 7364 0985 9F       		.byte	0x9f
 7365 0986 62000000 		.4byte	.LVL144
 7366 098a 66000000 		.4byte	.LVL146
 7367 098e 0100     		.2byte	0x1
 7368 0990 52       		.byte	0x52
 7369 0991 6E000000 		.4byte	.LVL147
 7370 0995 72000000 		.4byte	.LVL149
 7371 0999 0300     		.2byte	0x3
 7372 099b 72       		.byte	0x72
 7373 099c 7F       		.sleb128 -1
 7374 099d 9F       		.byte	0x9f
 7375 099e 00000000 		.4byte	0
 7376 09a2 00000000 		.4byte	0
 7377              	.LLST47:
 7378 09a6 24000000 		.4byte	.LVL133
 7379 09aa 32000000 		.4byte	.LVL135
 7380 09ae 0100     		.2byte	0x1
 7381 09b0 53       		.byte	0x53
 7382 09b1 56000000 		.4byte	.LVL140
 7383 09b5 58000000 		.4byte	.LVL141
 7384 09b9 0100     		.2byte	0x1
 7385 09bb 53       		.byte	0x53
 7386 09bc 58000000 		.4byte	.LVL141
 7387 09c0 5A000000 		.4byte	.LVL142
 7388 09c4 0300     		.2byte	0x3
 7389 09c6 73       		.byte	0x73
 7390 09c7 7F       		.sleb128 -1
 7391 09c8 9F       		.byte	0x9f
 7392 09c9 00000000 		.4byte	0
 7393 09cd 00000000 		.4byte	0
 7394              	.LLST48:
 7395 09d1 78000000 		.4byte	.LVL150
 7396 09d5 7C000000 		.4byte	.LVL151
 7397 09d9 0100     		.2byte	0x1
 7398 09db 54       		.byte	0x54
 7399 09dc 00000000 		.4byte	0
 7400 09e0 00000000 		.4byte	0
 7401              	.LLST49:
 7402 09e4 00000000 		.4byte	.LVL152
 7403 09e8 0C000000 		.4byte	.LVL154
 7404 09ec 0100     		.2byte	0x1
 7405 09ee 50       		.byte	0x50
 7406 09ef 0C000000 		.4byte	.LVL154
 7407 09f3 F2000000 		.4byte	.LVL181
 7408 09f7 0100     		.2byte	0x1
 7409 09f9 54       		.byte	0x54
 7410 09fa F2000000 		.4byte	.LVL181
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 195


 7411 09fe F8000000 		.4byte	.LFE73
 7412 0a02 0400     		.2byte	0x4
 7413 0a04 F3       		.byte	0xf3
 7414 0a05 01       		.uleb128 0x1
 7415 0a06 50       		.byte	0x50
 7416 0a07 9F       		.byte	0x9f
 7417 0a08 00000000 		.4byte	0
 7418 0a0c 00000000 		.4byte	0
 7419              	.LLST50:
 7420 0a10 00000000 		.4byte	.LVL152
 7421 0a14 0C000000 		.4byte	.LVL154
 7422 0a18 0100     		.2byte	0x1
 7423 0a1a 51       		.byte	0x51
 7424 0a1b 0C000000 		.4byte	.LVL154
 7425 0a1f F2000000 		.4byte	.LVL181
 7426 0a23 0100     		.2byte	0x1
 7427 0a25 57       		.byte	0x57
 7428 0a26 F2000000 		.4byte	.LVL181
 7429 0a2a F8000000 		.4byte	.LFE73
 7430 0a2e 0400     		.2byte	0x4
 7431 0a30 F3       		.byte	0xf3
 7432 0a31 01       		.uleb128 0x1
 7433 0a32 51       		.byte	0x51
 7434 0a33 9F       		.byte	0x9f
 7435 0a34 00000000 		.4byte	0
 7436 0a38 00000000 		.4byte	0
 7437              	.LLST51:
 7438 0a3c 00000000 		.4byte	.LVL152
 7439 0a40 0C000000 		.4byte	.LVL154
 7440 0a44 0100     		.2byte	0x1
 7441 0a46 52       		.byte	0x52
 7442 0a47 0C000000 		.4byte	.LVL154
 7443 0a4b 92000000 		.4byte	.LVL169
 7444 0a4f 0200     		.2byte	0x2
 7445 0a51 91       		.byte	0x91
 7446 0a52 5C       		.sleb128 -36
 7447 0a53 92000000 		.4byte	.LVL169
 7448 0a57 97000000 		.4byte	.LVL170-1
 7449 0a5b 0200     		.2byte	0x2
 7450 0a5d 71       		.byte	0x71
 7451 0a5e 00       		.sleb128 0
 7452 0a5f 97000000 		.4byte	.LVL170-1
 7453 0a63 F2000000 		.4byte	.LVL181
 7454 0a67 0200     		.2byte	0x2
 7455 0a69 91       		.byte	0x91
 7456 0a6a 5C       		.sleb128 -36
 7457 0a6b F2000000 		.4byte	.LVL181
 7458 0a6f F8000000 		.4byte	.LFE73
 7459 0a73 0200     		.2byte	0x2
 7460 0a75 7D       		.byte	0x7d
 7461 0a76 5C       		.sleb128 -36
 7462 0a77 00000000 		.4byte	0
 7463 0a7b 00000000 		.4byte	0
 7464              	.LLST52:
 7465 0a7f 0A000000 		.4byte	.LVL153
 7466 0a83 0C000000 		.4byte	.LVL154
 7467 0a87 0200     		.2byte	0x2
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 196


 7468 0a89 30       		.byte	0x30
 7469 0a8a 9F       		.byte	0x9f
 7470 0a8b 0C000000 		.4byte	.LVL154
 7471 0a8f 5A000000 		.4byte	.LVL163
 7472 0a93 0100     		.2byte	0x1
 7473 0a95 56       		.byte	0x56
 7474 0a96 5A000000 		.4byte	.LVL163
 7475 0a9a 5C000000 		.4byte	.LVL164
 7476 0a9e 0200     		.2byte	0x2
 7477 0aa0 31       		.byte	0x31
 7478 0aa1 9F       		.byte	0x9f
 7479 0aa2 5C000000 		.4byte	.LVL164
 7480 0aa6 F2000000 		.4byte	.LVL181
 7481 0aaa 0100     		.2byte	0x1
 7482 0aac 56       		.byte	0x56
 7483 0aad 00000000 		.4byte	0
 7484 0ab1 00000000 		.4byte	0
 7485              	.LLST53:
 7486 0ab5 0A000000 		.4byte	.LVL153
 7487 0ab9 0C000000 		.4byte	.LVL154
 7488 0abd 0100     		.2byte	0x1
 7489 0abf 50       		.byte	0x50
 7490 0ac0 0C000000 		.4byte	.LVL154
 7491 0ac4 F2000000 		.4byte	.LVL181
 7492 0ac8 0100     		.2byte	0x1
 7493 0aca 54       		.byte	0x54
 7494 0acb F2000000 		.4byte	.LVL181
 7495 0acf F8000000 		.4byte	.LFE73
 7496 0ad3 0400     		.2byte	0x4
 7497 0ad5 F3       		.byte	0xf3
 7498 0ad6 01       		.uleb128 0x1
 7499 0ad7 50       		.byte	0x50
 7500 0ad8 9F       		.byte	0x9f
 7501 0ad9 00000000 		.4byte	0
 7502 0add 00000000 		.4byte	0
 7503              	.LLST54:
 7504 0ae1 12000000 		.4byte	.LVL156
 7505 0ae5 1E000000 		.4byte	.LVL158
 7506 0ae9 0100     		.2byte	0x1
 7507 0aeb 55       		.byte	0x55
 7508 0aec 1E000000 		.4byte	.LVL158
 7509 0af0 46000000 		.4byte	.LVL161
 7510 0af4 0300     		.2byte	0x3
 7511 0af6 75       		.byte	0x75
 7512 0af7 01       		.sleb128 1
 7513 0af8 9F       		.byte	0x9f
 7514 0af9 46000000 		.4byte	.LVL161
 7515 0afd EE000000 		.4byte	.LVL180
 7516 0b01 0100     		.2byte	0x1
 7517 0b03 55       		.byte	0x55
 7518 0b04 00000000 		.4byte	0
 7519 0b08 00000000 		.4byte	0
 7520              	.LLST55:
 7521 0b0c 00000000 		.4byte	.LVL182
 7522 0b10 0A000000 		.4byte	.LVL184
 7523 0b14 0100     		.2byte	0x1
 7524 0b16 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 197


 7525 0b17 0A000000 		.4byte	.LVL184
 7526 0b1b E8000000 		.4byte	.LVL211
 7527 0b1f 0100     		.2byte	0x1
 7528 0b21 54       		.byte	0x54
 7529 0b22 E8000000 		.4byte	.LVL211
 7530 0b26 EC000000 		.4byte	.LFE74
 7531 0b2a 0400     		.2byte	0x4
 7532 0b2c F3       		.byte	0xf3
 7533 0b2d 01       		.uleb128 0x1
 7534 0b2e 50       		.byte	0x50
 7535 0b2f 9F       		.byte	0x9f
 7536 0b30 00000000 		.4byte	0
 7537 0b34 00000000 		.4byte	0
 7538              	.LLST56:
 7539 0b38 00000000 		.4byte	.LVL182
 7540 0b3c 0A000000 		.4byte	.LVL184
 7541 0b40 0100     		.2byte	0x1
 7542 0b42 51       		.byte	0x51
 7543 0b43 0A000000 		.4byte	.LVL184
 7544 0b47 88000000 		.4byte	.LVL200
 7545 0b4b 0200     		.2byte	0x2
 7546 0b4d 91       		.byte	0x91
 7547 0b4e 64       		.sleb128 -28
 7548 0b4f 88000000 		.4byte	.LVL200
 7549 0b53 8D000000 		.4byte	.LVL201-1
 7550 0b57 0200     		.2byte	0x2
 7551 0b59 71       		.byte	0x71
 7552 0b5a 00       		.sleb128 0
 7553 0b5b 8D000000 		.4byte	.LVL201-1
 7554 0b5f E8000000 		.4byte	.LVL211
 7555 0b63 0200     		.2byte	0x2
 7556 0b65 91       		.byte	0x91
 7557 0b66 64       		.sleb128 -28
 7558 0b67 E8000000 		.4byte	.LVL211
 7559 0b6b EC000000 		.4byte	.LFE74
 7560 0b6f 0200     		.2byte	0x2
 7561 0b71 7D       		.byte	0x7d
 7562 0b72 64       		.sleb128 -28
 7563 0b73 00000000 		.4byte	0
 7564 0b77 00000000 		.4byte	0
 7565              	.LLST57:
 7566 0b7b 08000000 		.4byte	.LVL183
 7567 0b7f 0A000000 		.4byte	.LVL184
 7568 0b83 0200     		.2byte	0x2
 7569 0b85 30       		.byte	0x30
 7570 0b86 9F       		.byte	0x9f
 7571 0b87 0A000000 		.4byte	.LVL184
 7572 0b8b 50000000 		.4byte	.LVL194
 7573 0b8f 0100     		.2byte	0x1
 7574 0b91 55       		.byte	0x55
 7575 0b92 50000000 		.4byte	.LVL194
 7576 0b96 52000000 		.4byte	.LVL195
 7577 0b9a 0200     		.2byte	0x2
 7578 0b9c 31       		.byte	0x31
 7579 0b9d 9F       		.byte	0x9f
 7580 0b9e 52000000 		.4byte	.LVL195
 7581 0ba2 E8000000 		.4byte	.LVL211
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 198


 7582 0ba6 0100     		.2byte	0x1
 7583 0ba8 55       		.byte	0x55
 7584 0ba9 00000000 		.4byte	0
 7585 0bad 00000000 		.4byte	0
 7586              	.LLST58:
 7587 0bb1 08000000 		.4byte	.LVL183
 7588 0bb5 0A000000 		.4byte	.LVL184
 7589 0bb9 0100     		.2byte	0x1
 7590 0bbb 50       		.byte	0x50
 7591 0bbc 0A000000 		.4byte	.LVL184
 7592 0bc0 E8000000 		.4byte	.LVL211
 7593 0bc4 0100     		.2byte	0x1
 7594 0bc6 54       		.byte	0x54
 7595 0bc7 E8000000 		.4byte	.LVL211
 7596 0bcb EC000000 		.4byte	.LFE74
 7597 0bcf 0400     		.2byte	0x4
 7598 0bd1 F3       		.byte	0xf3
 7599 0bd2 01       		.uleb128 0x1
 7600 0bd3 50       		.byte	0x50
 7601 0bd4 9F       		.byte	0x9f
 7602 0bd5 00000000 		.4byte	0
 7603 0bd9 00000000 		.4byte	0
 7604              	.LLST59:
 7605 0bdd 10000000 		.4byte	.LVL186
 7606 0be1 14000000 		.4byte	.LVL187
 7607 0be5 0100     		.2byte	0x1
 7608 0be7 53       		.byte	0x53
 7609 0be8 14000000 		.4byte	.LVL187
 7610 0bec 18000000 		.4byte	.LVL188
 7611 0bf0 0300     		.2byte	0x3
 7612 0bf2 73       		.byte	0x73
 7613 0bf3 01       		.sleb128 1
 7614 0bf4 9F       		.byte	0x9f
 7615 0bf5 18000000 		.4byte	.LVL188
 7616 0bf9 21000000 		.4byte	.LVL189-1
 7617 0bfd 0600     		.2byte	0x6
 7618 0bff 74       		.byte	0x74
 7619 0c00 38       		.sleb128 56
 7620 0c01 06       		.byte	0x6
 7621 0c02 23       		.byte	0x23
 7622 0c03 01       		.uleb128 0x1
 7623 0c04 9F       		.byte	0x9f
 7624 0c05 3C000000 		.4byte	.LVL191
 7625 0c09 3E000000 		.4byte	.LVL192
 7626 0c0d 0100     		.2byte	0x1
 7627 0c0f 53       		.byte	0x53
 7628 0c10 00000000 		.4byte	0
 7629 0c14 00000000 		.4byte	0
 7630              	.LLST60:
 7631 0c18 00000000 		.4byte	.LVL212
 7632 0c1c 0C000000 		.4byte	.LVL214
 7633 0c20 0100     		.2byte	0x1
 7634 0c22 50       		.byte	0x50
 7635 0c23 0C000000 		.4byte	.LVL214
 7636 0c27 F2000000 		.4byte	.LVL242
 7637 0c2b 0100     		.2byte	0x1
 7638 0c2d 54       		.byte	0x54
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 199


 7639 0c2e F2000000 		.4byte	.LVL242
 7640 0c32 F8000000 		.4byte	.LFE75
 7641 0c36 0400     		.2byte	0x4
 7642 0c38 F3       		.byte	0xf3
 7643 0c39 01       		.uleb128 0x1
 7644 0c3a 50       		.byte	0x50
 7645 0c3b 9F       		.byte	0x9f
 7646 0c3c 00000000 		.4byte	0
 7647 0c40 00000000 		.4byte	0
 7648              	.LLST61:
 7649 0c44 00000000 		.4byte	.LVL212
 7650 0c48 0C000000 		.4byte	.LVL214
 7651 0c4c 0100     		.2byte	0x1
 7652 0c4e 51       		.byte	0x51
 7653 0c4f 0C000000 		.4byte	.LVL214
 7654 0c53 F2000000 		.4byte	.LVL242
 7655 0c57 0100     		.2byte	0x1
 7656 0c59 56       		.byte	0x56
 7657 0c5a F2000000 		.4byte	.LVL242
 7658 0c5e F8000000 		.4byte	.LFE75
 7659 0c62 0400     		.2byte	0x4
 7660 0c64 F3       		.byte	0xf3
 7661 0c65 01       		.uleb128 0x1
 7662 0c66 51       		.byte	0x51
 7663 0c67 9F       		.byte	0x9f
 7664 0c68 00000000 		.4byte	0
 7665 0c6c 00000000 		.4byte	0
 7666              	.LLST62:
 7667 0c70 00000000 		.4byte	.LVL212
 7668 0c74 0C000000 		.4byte	.LVL214
 7669 0c78 0100     		.2byte	0x1
 7670 0c7a 52       		.byte	0x52
 7671 0c7b 0C000000 		.4byte	.LVL214
 7672 0c7f 92000000 		.4byte	.LVL230
 7673 0c83 0200     		.2byte	0x2
 7674 0c85 91       		.byte	0x91
 7675 0c86 64       		.sleb128 -28
 7676 0c87 92000000 		.4byte	.LVL230
 7677 0c8b 97000000 		.4byte	.LVL231-1
 7678 0c8f 0200     		.2byte	0x2
 7679 0c91 71       		.byte	0x71
 7680 0c92 00       		.sleb128 0
 7681 0c93 97000000 		.4byte	.LVL231-1
 7682 0c97 F2000000 		.4byte	.LVL242
 7683 0c9b 0200     		.2byte	0x2
 7684 0c9d 91       		.byte	0x91
 7685 0c9e 64       		.sleb128 -28
 7686 0c9f F2000000 		.4byte	.LVL242
 7687 0ca3 F8000000 		.4byte	.LFE75
 7688 0ca7 0200     		.2byte	0x2
 7689 0ca9 7D       		.byte	0x7d
 7690 0caa 64       		.sleb128 -28
 7691 0cab 00000000 		.4byte	0
 7692 0caf 00000000 		.4byte	0
 7693              	.LLST63:
 7694 0cb3 0A000000 		.4byte	.LVL213
 7695 0cb7 0C000000 		.4byte	.LVL214
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 200


 7696 0cbb 0200     		.2byte	0x2
 7697 0cbd 30       		.byte	0x30
 7698 0cbe 9F       		.byte	0x9f
 7699 0cbf 0C000000 		.4byte	.LVL214
 7700 0cc3 16000000 		.4byte	.LVL217
 7701 0cc7 0100     		.2byte	0x1
 7702 0cc9 55       		.byte	0x55
 7703 0cca 46000000 		.4byte	.LVL221
 7704 0cce 5A000000 		.4byte	.LVL224
 7705 0cd2 0100     		.2byte	0x1
 7706 0cd4 55       		.byte	0x55
 7707 0cd5 5A000000 		.4byte	.LVL224
 7708 0cd9 5C000000 		.4byte	.LVL225
 7709 0cdd 0200     		.2byte	0x2
 7710 0cdf 31       		.byte	0x31
 7711 0ce0 9F       		.byte	0x9f
 7712 0ce1 5C000000 		.4byte	.LVL225
 7713 0ce5 EE000000 		.4byte	.LVL241
 7714 0ce9 0100     		.2byte	0x1
 7715 0ceb 55       		.byte	0x55
 7716 0cec 00000000 		.4byte	0
 7717 0cf0 00000000 		.4byte	0
 7718              	.LLST64:
 7719 0cf4 16000000 		.4byte	.LVL217
 7720 0cf8 46000000 		.4byte	.LVL221
 7721 0cfc 0100     		.2byte	0x1
 7722 0cfe 55       		.byte	0x55
 7723 0cff 00000000 		.4byte	0
 7724 0d03 00000000 		.4byte	0
 7725              	.LLST65:
 7726 0d07 0A000000 		.4byte	.LVL213
 7727 0d0b 0C000000 		.4byte	.LVL214
 7728 0d0f 0100     		.2byte	0x1
 7729 0d11 50       		.byte	0x50
 7730 0d12 0C000000 		.4byte	.LVL214
 7731 0d16 F2000000 		.4byte	.LVL242
 7732 0d1a 0100     		.2byte	0x1
 7733 0d1c 54       		.byte	0x54
 7734 0d1d F2000000 		.4byte	.LVL242
 7735 0d21 F8000000 		.4byte	.LFE75
 7736 0d25 0400     		.2byte	0x4
 7737 0d27 F3       		.byte	0xf3
 7738 0d28 01       		.uleb128 0x1
 7739 0d29 50       		.byte	0x50
 7740 0d2a 9F       		.byte	0x9f
 7741 0d2b 00000000 		.4byte	0
 7742 0d2f 00000000 		.4byte	0
 7743              	.LLST66:
 7744 0d33 12000000 		.4byte	.LVL216
 7745 0d37 1D000000 		.4byte	.LVL218-1
 7746 0d3b 0100     		.2byte	0x1
 7747 0d3d 53       		.byte	0x53
 7748 0d3e 46000000 		.4byte	.LVL221
 7749 0d42 48000000 		.4byte	.LVL222
 7750 0d46 0100     		.2byte	0x1
 7751 0d48 53       		.byte	0x53
 7752 0d49 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 201


 7753 0d4d 00000000 		.4byte	0
 7754              	.LLST67:
 7755 0d51 00000000 		.4byte	.LVL243
 7756 0d55 29000000 		.4byte	.LVL247-1
 7757 0d59 0100     		.2byte	0x1
 7758 0d5b 50       		.byte	0x50
 7759 0d5c 29000000 		.4byte	.LVL247-1
 7760 0d60 5C000000 		.4byte	.LVL252
 7761 0d64 0100     		.2byte	0x1
 7762 0d66 57       		.byte	0x57
 7763 0d67 5C000000 		.4byte	.LVL252
 7764 0d6b 5E000000 		.4byte	.LVL253
 7765 0d6f 0100     		.2byte	0x1
 7766 0d71 50       		.byte	0x50
 7767 0d72 5E000000 		.4byte	.LVL253
 7768 0d76 60000000 		.4byte	.LVL254
 7769 0d7a 0400     		.2byte	0x4
 7770 0d7c F3       		.byte	0xf3
 7771 0d7d 01       		.uleb128 0x1
 7772 0d7e 50       		.byte	0x50
 7773 0d7f 9F       		.byte	0x9f
 7774 0d80 60000000 		.4byte	.LVL254
 7775 0d84 6A000000 		.4byte	.LVL255
 7776 0d88 0100     		.2byte	0x1
 7777 0d8a 57       		.byte	0x57
 7778 0d8b 6A000000 		.4byte	.LVL255
 7779 0d8f 72000000 		.4byte	.LFE76
 7780 0d93 0400     		.2byte	0x4
 7781 0d95 F3       		.byte	0xf3
 7782 0d96 01       		.uleb128 0x1
 7783 0d97 50       		.byte	0x50
 7784 0d98 9F       		.byte	0x9f
 7785 0d99 00000000 		.4byte	0
 7786 0d9d 00000000 		.4byte	0
 7787              	.LLST68:
 7788 0da1 00000000 		.4byte	.LVL243
 7789 0da5 29000000 		.4byte	.LVL247-1
 7790 0da9 0100     		.2byte	0x1
 7791 0dab 51       		.byte	0x51
 7792 0dac 29000000 		.4byte	.LVL247-1
 7793 0db0 5C000000 		.4byte	.LVL252
 7794 0db4 0400     		.2byte	0x4
 7795 0db6 F3       		.byte	0xf3
 7796 0db7 01       		.uleb128 0x1
 7797 0db8 51       		.byte	0x51
 7798 0db9 9F       		.byte	0x9f
 7799 0dba 5C000000 		.4byte	.LVL252
 7800 0dbe 60000000 		.4byte	.LVL254
 7801 0dc2 0100     		.2byte	0x1
 7802 0dc4 51       		.byte	0x51
 7803 0dc5 60000000 		.4byte	.LVL254
 7804 0dc9 72000000 		.4byte	.LFE76
 7805 0dcd 0400     		.2byte	0x4
 7806 0dcf F3       		.byte	0xf3
 7807 0dd0 01       		.uleb128 0x1
 7808 0dd1 51       		.byte	0x51
 7809 0dd2 9F       		.byte	0x9f
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 202


 7810 0dd3 00000000 		.4byte	0
 7811 0dd7 00000000 		.4byte	0
 7812              	.LLST69:
 7813 0ddb 00000000 		.4byte	.LVL243
 7814 0ddf 29000000 		.4byte	.LVL247-1
 7815 0de3 0100     		.2byte	0x1
 7816 0de5 52       		.byte	0x52
 7817 0de6 29000000 		.4byte	.LVL247-1
 7818 0dea 5C000000 		.4byte	.LVL252
 7819 0dee 0100     		.2byte	0x1
 7820 0df0 58       		.byte	0x58
 7821 0df1 5C000000 		.4byte	.LVL252
 7822 0df5 60000000 		.4byte	.LVL254
 7823 0df9 0100     		.2byte	0x1
 7824 0dfb 52       		.byte	0x52
 7825 0dfc 60000000 		.4byte	.LVL254
 7826 0e00 6A000000 		.4byte	.LVL255
 7827 0e04 0100     		.2byte	0x1
 7828 0e06 58       		.byte	0x58
 7829 0e07 6A000000 		.4byte	.LVL255
 7830 0e0b 72000000 		.4byte	.LFE76
 7831 0e0f 0400     		.2byte	0x4
 7832 0e11 F3       		.byte	0xf3
 7833 0e12 01       		.uleb128 0x1
 7834 0e13 52       		.byte	0x52
 7835 0e14 9F       		.byte	0x9f
 7836 0e15 00000000 		.4byte	0
 7837 0e19 00000000 		.4byte	0
 7838              	.LLST70:
 7839 0e1d 04000000 		.4byte	.LVL244
 7840 0e21 29000000 		.4byte	.LVL247-1
 7841 0e25 0100     		.2byte	0x1
 7842 0e27 50       		.byte	0x50
 7843 0e28 29000000 		.4byte	.LVL247-1
 7844 0e2c 5C000000 		.4byte	.LVL252
 7845 0e30 0100     		.2byte	0x1
 7846 0e32 57       		.byte	0x57
 7847 0e33 5C000000 		.4byte	.LVL252
 7848 0e37 5E000000 		.4byte	.LVL253
 7849 0e3b 0100     		.2byte	0x1
 7850 0e3d 50       		.byte	0x50
 7851 0e3e 5E000000 		.4byte	.LVL253
 7852 0e42 60000000 		.4byte	.LVL254
 7853 0e46 0400     		.2byte	0x4
 7854 0e48 F3       		.byte	0xf3
 7855 0e49 01       		.uleb128 0x1
 7856 0e4a 50       		.byte	0x50
 7857 0e4b 9F       		.byte	0x9f
 7858 0e4c 60000000 		.4byte	.LVL254
 7859 0e50 6A000000 		.4byte	.LVL255
 7860 0e54 0100     		.2byte	0x1
 7861 0e56 57       		.byte	0x57
 7862 0e57 6A000000 		.4byte	.LVL255
 7863 0e5b 72000000 		.4byte	.LFE76
 7864 0e5f 0400     		.2byte	0x4
 7865 0e61 F3       		.byte	0xf3
 7866 0e62 01       		.uleb128 0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 203


 7867 0e63 50       		.byte	0x50
 7868 0e64 9F       		.byte	0x9f
 7869 0e65 00000000 		.4byte	0
 7870 0e69 00000000 		.4byte	0
 7871              	.LLST71:
 7872 0e6d 1A000000 		.4byte	.LVL245
 7873 0e71 2C000000 		.4byte	.LVL248
 7874 0e75 0100     		.2byte	0x1
 7875 0e77 54       		.byte	0x54
 7876 0e78 2C000000 		.4byte	.LVL248
 7877 0e7c 5C000000 		.4byte	.LVL252
 7878 0e80 0300     		.2byte	0x3
 7879 0e82 74       		.byte	0x74
 7880 0e83 01       		.sleb128 1
 7881 0e84 9F       		.byte	0x9f
 7882 0e85 5C000000 		.4byte	.LVL252
 7883 0e89 60000000 		.4byte	.LVL254
 7884 0e8d 0100     		.2byte	0x1
 7885 0e8f 54       		.byte	0x54
 7886 0e90 60000000 		.4byte	.LVL254
 7887 0e94 6A000000 		.4byte	.LVL255
 7888 0e98 0300     		.2byte	0x3
 7889 0e9a 74       		.byte	0x74
 7890 0e9b 01       		.sleb128 1
 7891 0e9c 9F       		.byte	0x9f
 7892 0e9d 00000000 		.4byte	0
 7893 0ea1 00000000 		.4byte	0
 7894              	.LLST72:
 7895 0ea5 26000000 		.4byte	.LVL246
 7896 0ea9 52000000 		.4byte	.LVL250
 7897 0ead 0100     		.2byte	0x1
 7898 0eaf 55       		.byte	0x55
 7899 0eb0 52000000 		.4byte	.LVL250
 7900 0eb4 54000000 		.4byte	.LVL251
 7901 0eb8 0300     		.2byte	0x3
 7902 0eba 75       		.byte	0x75
 7903 0ebb 7F       		.sleb128 -1
 7904 0ebc 9F       		.byte	0x9f
 7905 0ebd 60000000 		.4byte	.LVL254
 7906 0ec1 6A000000 		.4byte	.LVL255
 7907 0ec5 0100     		.2byte	0x1
 7908 0ec7 55       		.byte	0x55
 7909 0ec8 00000000 		.4byte	0
 7910 0ecc 00000000 		.4byte	0
 7911              	.LLST73:
 7912 0ed0 6A000000 		.4byte	.LVL255
 7913 0ed4 6E000000 		.4byte	.LVL256
 7914 0ed8 0100     		.2byte	0x1
 7915 0eda 56       		.byte	0x56
 7916 0edb 00000000 		.4byte	0
 7917 0edf 00000000 		.4byte	0
 7918              	.LLST74:
 7919 0ee3 00000000 		.4byte	.LVL257
 7920 0ee7 21000000 		.4byte	.LVL260-1
 7921 0eeb 0100     		.2byte	0x1
 7922 0eed 50       		.byte	0x50
 7923 0eee 21000000 		.4byte	.LVL260-1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 204


 7924 0ef2 28000000 		.4byte	.LVL262
 7925 0ef6 0100     		.2byte	0x1
 7926 0ef8 54       		.byte	0x54
 7927 0ef9 28000000 		.4byte	.LVL262
 7928 0efd 2A000000 		.4byte	.LVL263
 7929 0f01 0100     		.2byte	0x1
 7930 0f03 50       		.byte	0x50
 7931 0f04 2A000000 		.4byte	.LVL263
 7932 0f08 30000000 		.4byte	.LFE77
 7933 0f0c 0400     		.2byte	0x4
 7934 0f0e F3       		.byte	0xf3
 7935 0f0f 01       		.uleb128 0x1
 7936 0f10 50       		.byte	0x50
 7937 0f11 9F       		.byte	0x9f
 7938 0f12 00000000 		.4byte	0
 7939 0f16 00000000 		.4byte	0
 7940              	.LLST75:
 7941 0f1a 00000000 		.4byte	.LVL257
 7942 0f1e 21000000 		.4byte	.LVL260-1
 7943 0f22 0100     		.2byte	0x1
 7944 0f24 51       		.byte	0x51
 7945 0f25 21000000 		.4byte	.LVL260-1
 7946 0f29 28000000 		.4byte	.LVL262
 7947 0f2d 0400     		.2byte	0x4
 7948 0f2f F3       		.byte	0xf3
 7949 0f30 01       		.uleb128 0x1
 7950 0f31 51       		.byte	0x51
 7951 0f32 9F       		.byte	0x9f
 7952 0f33 28000000 		.4byte	.LVL262
 7953 0f37 2A000000 		.4byte	.LVL263
 7954 0f3b 0100     		.2byte	0x1
 7955 0f3d 51       		.byte	0x51
 7956 0f3e 2A000000 		.4byte	.LVL263
 7957 0f42 30000000 		.4byte	.LFE77
 7958 0f46 0400     		.2byte	0x4
 7959 0f48 F3       		.byte	0xf3
 7960 0f49 01       		.uleb128 0x1
 7961 0f4a 51       		.byte	0x51
 7962 0f4b 9F       		.byte	0x9f
 7963 0f4c 00000000 		.4byte	0
 7964 0f50 00000000 		.4byte	0
 7965              	.LLST76:
 7966 0f54 24000000 		.4byte	.LVL261
 7967 0f58 28000000 		.4byte	.LVL262
 7968 0f5c 0200     		.2byte	0x2
 7969 0f5e 31       		.byte	0x31
 7970 0f5f 9F       		.byte	0x9f
 7971 0f60 2A000000 		.4byte	.LVL263
 7972 0f64 30000000 		.4byte	.LFE77
 7973 0f68 0100     		.2byte	0x1
 7974 0f6a 50       		.byte	0x50
 7975 0f6b 00000000 		.4byte	0
 7976 0f6f 00000000 		.4byte	0
 7977              	.LLST77:
 7978 0f73 1E000000 		.4byte	.LVL259
 7979 0f77 28000000 		.4byte	.LVL262
 7980 0f7b 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 205


 7981 0f7d 56       		.byte	0x56
 7982 0f7e 00000000 		.4byte	0
 7983 0f82 00000000 		.4byte	0
 7984              	.LLST78:
 7985 0f86 02000000 		.4byte	.LVL258
 7986 0f8a 21000000 		.4byte	.LVL260-1
 7987 0f8e 0100     		.2byte	0x1
 7988 0f90 50       		.byte	0x50
 7989 0f91 21000000 		.4byte	.LVL260-1
 7990 0f95 28000000 		.4byte	.LVL262
 7991 0f99 0100     		.2byte	0x1
 7992 0f9b 54       		.byte	0x54
 7993 0f9c 28000000 		.4byte	.LVL262
 7994 0fa0 2A000000 		.4byte	.LVL263
 7995 0fa4 0100     		.2byte	0x1
 7996 0fa6 50       		.byte	0x50
 7997 0fa7 2A000000 		.4byte	.LVL263
 7998 0fab 30000000 		.4byte	.LFE77
 7999 0faf 0400     		.2byte	0x4
 8000 0fb1 F3       		.byte	0xf3
 8001 0fb2 01       		.uleb128 0x1
 8002 0fb3 50       		.byte	0x50
 8003 0fb4 9F       		.byte	0x9f
 8004 0fb5 00000000 		.4byte	0
 8005 0fb9 00000000 		.4byte	0
 8006              	.LLST79:
 8007 0fbd 2A000000 		.4byte	.LVL263
 8008 0fc1 2E000000 		.4byte	.LVL264
 8009 0fc5 0100     		.2byte	0x1
 8010 0fc7 55       		.byte	0x55
 8011 0fc8 00000000 		.4byte	0
 8012 0fcc 00000000 		.4byte	0
 8013              	.LLST80:
 8014 0fd0 00000000 		.4byte	.LVL265
 8015 0fd4 07000000 		.4byte	.LVL266-1
 8016 0fd8 0100     		.2byte	0x1
 8017 0fda 50       		.byte	0x50
 8018 0fdb 07000000 		.4byte	.LVL266-1
 8019 0fdf 0A000000 		.4byte	.LVL267
 8020 0fe3 0100     		.2byte	0x1
 8021 0fe5 54       		.byte	0x54
 8022 0fe6 0A000000 		.4byte	.LVL267
 8023 0fea 12000000 		.4byte	.LFE78
 8024 0fee 0400     		.2byte	0x4
 8025 0ff0 F3       		.byte	0xf3
 8026 0ff1 01       		.uleb128 0x1
 8027 0ff2 50       		.byte	0x50
 8028 0ff3 9F       		.byte	0x9f
 8029 0ff4 00000000 		.4byte	0
 8030 0ff8 00000000 		.4byte	0
 8031              	.LLST81:
 8032 0ffc 00000000 		.4byte	.LVL269
 8033 1000 07000000 		.4byte	.LVL271-1
 8034 1004 0100     		.2byte	0x1
 8035 1006 50       		.byte	0x50
 8036 1007 07000000 		.4byte	.LVL271-1
 8037 100b 0C000000 		.4byte	.LVL272
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 206


 8038 100f 0100     		.2byte	0x1
 8039 1011 54       		.byte	0x54
 8040 1012 0C000000 		.4byte	.LVL272
 8041 1016 16000000 		.4byte	.LFE79
 8042 101a 0400     		.2byte	0x4
 8043 101c F3       		.byte	0xf3
 8044 101d 01       		.uleb128 0x1
 8045 101e 50       		.byte	0x50
 8046 101f 9F       		.byte	0x9f
 8047 1020 00000000 		.4byte	0
 8048 1024 00000000 		.4byte	0
 8049              	.LLST82:
 8050 1028 04000000 		.4byte	.LVL270
 8051 102c 07000000 		.4byte	.LVL271-1
 8052 1030 0100     		.2byte	0x1
 8053 1032 50       		.byte	0x50
 8054 1033 07000000 		.4byte	.LVL271-1
 8055 1037 0C000000 		.4byte	.LVL272
 8056 103b 0100     		.2byte	0x1
 8057 103d 54       		.byte	0x54
 8058 103e 0C000000 		.4byte	.LVL272
 8059 1042 16000000 		.4byte	.LFE79
 8060 1046 0400     		.2byte	0x4
 8061 1048 F3       		.byte	0xf3
 8062 1049 01       		.uleb128 0x1
 8063 104a 50       		.byte	0x50
 8064 104b 9F       		.byte	0x9f
 8065 104c 00000000 		.4byte	0
 8066 1050 00000000 		.4byte	0
 8067              	.LLST83:
 8068 1054 00000000 		.4byte	.LVL275
 8069 1058 02000000 		.4byte	.LVL276
 8070 105c 0100     		.2byte	0x1
 8071 105e 50       		.byte	0x50
 8072 105f 02000000 		.4byte	.LVL276
 8073 1063 04000000 		.4byte	.LFE80
 8074 1067 0400     		.2byte	0x4
 8075 1069 F3       		.byte	0xf3
 8076 106a 01       		.uleb128 0x1
 8077 106b 50       		.byte	0x50
 8078 106c 9F       		.byte	0x9f
 8079 106d 00000000 		.4byte	0
 8080 1071 00000000 		.4byte	0
 8081              	.LLST84:
 8082 1075 00000000 		.4byte	.LVL275
 8083 1079 02000000 		.4byte	.LVL276
 8084 107d 0100     		.2byte	0x1
 8085 107f 50       		.byte	0x50
 8086 1080 02000000 		.4byte	.LVL276
 8087 1084 04000000 		.4byte	.LFE80
 8088 1088 0400     		.2byte	0x4
 8089 108a F3       		.byte	0xf3
 8090 108b 01       		.uleb128 0x1
 8091 108c 50       		.byte	0x50
 8092 108d 9F       		.byte	0x9f
 8093 108e 00000000 		.4byte	0
 8094 1092 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 207


 8095              	.LLST85:
 8096 1096 00000000 		.4byte	.LVL277
 8097 109a 06000000 		.4byte	.LVL278
 8098 109e 0100     		.2byte	0x1
 8099 10a0 50       		.byte	0x50
 8100 10a1 06000000 		.4byte	.LVL278
 8101 10a5 08000000 		.4byte	.LVL279
 8102 10a9 0400     		.2byte	0x4
 8103 10ab F3       		.byte	0xf3
 8104 10ac 01       		.uleb128 0x1
 8105 10ad 50       		.byte	0x50
 8106 10ae 9F       		.byte	0x9f
 8107 10af 08000000 		.4byte	.LVL279
 8108 10b3 0A000000 		.4byte	.LVL280
 8109 10b7 0100     		.2byte	0x1
 8110 10b9 50       		.byte	0x50
 8111 10ba 0A000000 		.4byte	.LVL280
 8112 10be 0C000000 		.4byte	.LFE86
 8113 10c2 0400     		.2byte	0x4
 8114 10c4 F3       		.byte	0xf3
 8115 10c5 01       		.uleb128 0x1
 8116 10c6 50       		.byte	0x50
 8117 10c7 9F       		.byte	0x9f
 8118 10c8 00000000 		.4byte	0
 8119 10cc 00000000 		.4byte	0
 8120              	.LLST86:
 8121 10d0 00000000 		.4byte	.LVL277
 8122 10d4 06000000 		.4byte	.LVL278
 8123 10d8 0100     		.2byte	0x1
 8124 10da 50       		.byte	0x50
 8125 10db 06000000 		.4byte	.LVL278
 8126 10df 08000000 		.4byte	.LVL279
 8127 10e3 0400     		.2byte	0x4
 8128 10e5 F3       		.byte	0xf3
 8129 10e6 01       		.uleb128 0x1
 8130 10e7 50       		.byte	0x50
 8131 10e8 9F       		.byte	0x9f
 8132 10e9 08000000 		.4byte	.LVL279
 8133 10ed 0A000000 		.4byte	.LVL280
 8134 10f1 0100     		.2byte	0x1
 8135 10f3 50       		.byte	0x50
 8136 10f4 0A000000 		.4byte	.LVL280
 8137 10f8 0C000000 		.4byte	.LFE86
 8138 10fc 0400     		.2byte	0x4
 8139 10fe F3       		.byte	0xf3
 8140 10ff 01       		.uleb128 0x1
 8141 1100 50       		.byte	0x50
 8142 1101 9F       		.byte	0x9f
 8143 1102 00000000 		.4byte	0
 8144 1106 00000000 		.4byte	0
 8145              	.LLST87:
 8146 110a 00000000 		.4byte	.LVL281
 8147 110e 0A000000 		.4byte	.LVL282
 8148 1112 0100     		.2byte	0x1
 8149 1114 50       		.byte	0x50
 8150 1115 0A000000 		.4byte	.LVL282
 8151 1119 0C000000 		.4byte	.LVL283
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 208


 8152 111d 0400     		.2byte	0x4
 8153 111f F3       		.byte	0xf3
 8154 1120 01       		.uleb128 0x1
 8155 1121 50       		.byte	0x50
 8156 1122 9F       		.byte	0x9f
 8157 1123 0C000000 		.4byte	.LVL283
 8158 1127 0E000000 		.4byte	.LVL284
 8159 112b 0100     		.2byte	0x1
 8160 112d 50       		.byte	0x50
 8161 112e 0E000000 		.4byte	.LVL284
 8162 1132 10000000 		.4byte	.LFE88
 8163 1136 0400     		.2byte	0x4
 8164 1138 F3       		.byte	0xf3
 8165 1139 01       		.uleb128 0x1
 8166 113a 50       		.byte	0x50
 8167 113b 9F       		.byte	0x9f
 8168 113c 00000000 		.4byte	0
 8169 1140 00000000 		.4byte	0
 8170              	.LLST88:
 8171 1144 00000000 		.4byte	.LVL281
 8172 1148 0A000000 		.4byte	.LVL282
 8173 114c 0100     		.2byte	0x1
 8174 114e 50       		.byte	0x50
 8175 114f 0A000000 		.4byte	.LVL282
 8176 1153 0C000000 		.4byte	.LVL283
 8177 1157 0400     		.2byte	0x4
 8178 1159 F3       		.byte	0xf3
 8179 115a 01       		.uleb128 0x1
 8180 115b 50       		.byte	0x50
 8181 115c 9F       		.byte	0x9f
 8182 115d 0C000000 		.4byte	.LVL283
 8183 1161 0E000000 		.4byte	.LVL284
 8184 1165 0100     		.2byte	0x1
 8185 1167 50       		.byte	0x50
 8186 1168 0E000000 		.4byte	.LVL284
 8187 116c 10000000 		.4byte	.LFE88
 8188 1170 0400     		.2byte	0x4
 8189 1172 F3       		.byte	0xf3
 8190 1173 01       		.uleb128 0x1
 8191 1174 50       		.byte	0x50
 8192 1175 9F       		.byte	0x9f
 8193 1176 00000000 		.4byte	0
 8194 117a 00000000 		.4byte	0
 8195              	.LLST89:
 8196 117e 00000000 		.4byte	.LVL285
 8197 1182 04000000 		.4byte	.LVL286
 8198 1186 0200     		.2byte	0x2
 8199 1188 30       		.byte	0x30
 8200 1189 9F       		.byte	0x9f
 8201 118a 04000000 		.4byte	.LVL286
 8202 118e 16000000 		.4byte	.LVL287
 8203 1192 0100     		.2byte	0x1
 8204 1194 53       		.byte	0x53
 8205 1195 1A000000 		.4byte	.LVL288
 8206 1199 28000000 		.4byte	.LFE89
 8207 119d 0100     		.2byte	0x1
 8208 119f 53       		.byte	0x53
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 209


 8209 11a0 00000000 		.4byte	0
 8210 11a4 00000000 		.4byte	0
 8211              	.LLST90:
 8212 11a8 00000000 		.4byte	.LVL290
 8213 11ac 16000000 		.4byte	.LVL292
 8214 11b0 0100     		.2byte	0x1
 8215 11b2 50       		.byte	0x50
 8216 11b3 16000000 		.4byte	.LVL292
 8217 11b7 18000000 		.4byte	.LVL293
 8218 11bb 0400     		.2byte	0x4
 8219 11bd F3       		.byte	0xf3
 8220 11be 01       		.uleb128 0x1
 8221 11bf 50       		.byte	0x50
 8222 11c0 9F       		.byte	0x9f
 8223 11c1 18000000 		.4byte	.LVL293
 8224 11c5 20000000 		.4byte	.LVL295
 8225 11c9 0100     		.2byte	0x1
 8226 11cb 50       		.byte	0x50
 8227 11cc 20000000 		.4byte	.LVL295
 8228 11d0 28000000 		.4byte	.LFE90
 8229 11d4 0400     		.2byte	0x4
 8230 11d6 F3       		.byte	0xf3
 8231 11d7 01       		.uleb128 0x1
 8232 11d8 50       		.byte	0x50
 8233 11d9 9F       		.byte	0x9f
 8234 11da 00000000 		.4byte	0
 8235 11de 00000000 		.4byte	0
 8236              	.LLST91:
 8237 11e2 00000000 		.4byte	.LVL290
 8238 11e6 04000000 		.4byte	.LVL291
 8239 11ea 0200     		.2byte	0x2
 8240 11ec 30       		.byte	0x30
 8241 11ed 9F       		.byte	0x9f
 8242 11ee 04000000 		.4byte	.LVL291
 8243 11f2 28000000 		.4byte	.LFE90
 8244 11f6 0100     		.2byte	0x1
 8245 11f8 53       		.byte	0x53
 8246 11f9 00000000 		.4byte	0
 8247 11fd 00000000 		.4byte	0
 8248              	.LLST92:
 8249 1201 00000000 		.4byte	.LVL290
 8250 1205 16000000 		.4byte	.LVL292
 8251 1209 0200     		.2byte	0x2
 8252 120b 30       		.byte	0x30
 8253 120c 9F       		.byte	0x9f
 8254 120d 16000000 		.4byte	.LVL292
 8255 1211 18000000 		.4byte	.LVL293
 8256 1215 0100     		.2byte	0x1
 8257 1217 50       		.byte	0x50
 8258 1218 18000000 		.4byte	.LVL293
 8259 121c 20000000 		.4byte	.LVL295
 8260 1220 0200     		.2byte	0x2
 8261 1222 30       		.byte	0x30
 8262 1223 9F       		.byte	0x9f
 8263 1224 20000000 		.4byte	.LVL295
 8264 1228 28000000 		.4byte	.LFE90
 8265 122c 0100     		.2byte	0x1
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 210


 8266 122e 50       		.byte	0x50
 8267 122f 00000000 		.4byte	0
 8268 1233 00000000 		.4byte	0
 8269              	.LLST93:
 8270 1237 00000000 		.4byte	.LVL296
 8271 123b 04000000 		.4byte	.LVL297
 8272 123f 0200     		.2byte	0x2
 8273 1241 30       		.byte	0x30
 8274 1242 9F       		.byte	0x9f
 8275 1243 04000000 		.4byte	.LVL297
 8276 1247 1C000000 		.4byte	.LVL298
 8277 124b 0100     		.2byte	0x1
 8278 124d 53       		.byte	0x53
 8279 124e 20000000 		.4byte	.LVL299
 8280 1252 2C000000 		.4byte	.LFE91
 8281 1256 0100     		.2byte	0x1
 8282 1258 53       		.byte	0x53
 8283 1259 00000000 		.4byte	0
 8284 125d 00000000 		.4byte	0
 8285              	.LLST94:
 8286 1261 00000000 		.4byte	.LVL301
 8287 1265 07000000 		.4byte	.LVL303-1
 8288 1269 0100     		.2byte	0x1
 8289 126b 50       		.byte	0x50
 8290 126c 07000000 		.4byte	.LVL303-1
 8291 1270 10000000 		.4byte	.LFE81
 8292 1274 0100     		.2byte	0x1
 8293 1276 54       		.byte	0x54
 8294 1277 00000000 		.4byte	0
 8295 127b 00000000 		.4byte	0
 8296              	.LLST95:
 8297 127f 04000000 		.4byte	.LVL302
 8298 1283 07000000 		.4byte	.LVL303-1
 8299 1287 0100     		.2byte	0x1
 8300 1289 50       		.byte	0x50
 8301 128a 07000000 		.4byte	.LVL303-1
 8302 128e 10000000 		.4byte	.LFE81
 8303 1292 0100     		.2byte	0x1
 8304 1294 54       		.byte	0x54
 8305 1295 00000000 		.4byte	0
 8306 1299 00000000 		.4byte	0
 8307              	.LLST96:
 8308 129d 00000000 		.4byte	.LVL305
 8309 12a1 0B000000 		.4byte	.LVL307-1
 8310 12a5 0100     		.2byte	0x1
 8311 12a7 50       		.byte	0x50
 8312 12a8 0B000000 		.4byte	.LVL307-1
 8313 12ac 4C000000 		.4byte	.LFE92
 8314 12b0 0100     		.2byte	0x1
 8315 12b2 54       		.byte	0x54
 8316 12b3 00000000 		.4byte	0
 8317 12b7 00000000 		.4byte	0
 8318              	.LLST97:
 8319 12bb 00000000 		.4byte	.LVL305
 8320 12bf 0B000000 		.4byte	.LVL307-1
 8321 12c3 0100     		.2byte	0x1
 8322 12c5 51       		.byte	0x51
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 211


 8323 12c6 0B000000 		.4byte	.LVL307-1
 8324 12ca 4C000000 		.4byte	.LFE92
 8325 12ce 0100     		.2byte	0x1
 8326 12d0 55       		.byte	0x55
 8327 12d1 00000000 		.4byte	0
 8328 12d5 00000000 		.4byte	0
 8329              	.LLST98:
 8330 12d9 00000000 		.4byte	.LVL305
 8331 12dd 0B000000 		.4byte	.LVL307-1
 8332 12e1 0100     		.2byte	0x1
 8333 12e3 52       		.byte	0x52
 8334 12e4 0B000000 		.4byte	.LVL307-1
 8335 12e8 4C000000 		.4byte	.LFE92
 8336 12ec 0100     		.2byte	0x1
 8337 12ee 56       		.byte	0x56
 8338 12ef 00000000 		.4byte	0
 8339 12f3 00000000 		.4byte	0
 8340              	.LLST99:
 8341 12f7 08000000 		.4byte	.LVL306
 8342 12fb 0B000000 		.4byte	.LVL307-1
 8343 12ff 0100     		.2byte	0x1
 8344 1301 50       		.byte	0x50
 8345 1302 0B000000 		.4byte	.LVL307-1
 8346 1306 4C000000 		.4byte	.LFE92
 8347 130a 0100     		.2byte	0x1
 8348 130c 54       		.byte	0x54
 8349 130d 00000000 		.4byte	0
 8350 1311 00000000 		.4byte	0
 8351              	.LLST100:
 8352 1315 00000000 		.4byte	.LVL311
 8353 1319 09000000 		.4byte	.LVL312-1
 8354 131d 0100     		.2byte	0x1
 8355 131f 50       		.byte	0x50
 8356 1320 09000000 		.4byte	.LVL312-1
 8357 1324 0C000000 		.4byte	.LFE93
 8358 1328 0400     		.2byte	0x4
 8359 132a F3       		.byte	0xf3
 8360 132b 01       		.uleb128 0x1
 8361 132c 50       		.byte	0x50
 8362 132d 9F       		.byte	0x9f
 8363 132e 00000000 		.4byte	0
 8364 1332 00000000 		.4byte	0
 8365              	.LLST101:
 8366 1336 00000000 		.4byte	.LVL313
 8367 133a 09000000 		.4byte	.LVL314-1
 8368 133e 0100     		.2byte	0x1
 8369 1340 50       		.byte	0x50
 8370 1341 09000000 		.4byte	.LVL314-1
 8371 1345 16000000 		.4byte	.LVL316
 8372 1349 0100     		.2byte	0x1
 8373 134b 54       		.byte	0x54
 8374 134c 16000000 		.4byte	.LVL316
 8375 1350 18000000 		.4byte	.LVL317
 8376 1354 0400     		.2byte	0x4
 8377 1356 F3       		.byte	0xf3
 8378 1357 01       		.uleb128 0x1
 8379 1358 50       		.byte	0x50
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 212


 8380 1359 9F       		.byte	0x9f
 8381 135a 18000000 		.4byte	.LVL317
 8382 135e 1A000000 		.4byte	.LVL318
 8383 1362 0100     		.2byte	0x1
 8384 1364 54       		.byte	0x54
 8385 1365 1A000000 		.4byte	.LVL318
 8386 1369 1C000000 		.4byte	.LVL319
 8387 136d 0400     		.2byte	0x4
 8388 136f F3       		.byte	0xf3
 8389 1370 01       		.uleb128 0x1
 8390 1371 50       		.byte	0x50
 8391 1372 9F       		.byte	0x9f
 8392 1373 1C000000 		.4byte	.LVL319
 8393 1377 1E000000 		.4byte	.LVL320
 8394 137b 0100     		.2byte	0x1
 8395 137d 54       		.byte	0x54
 8396 137e 1E000000 		.4byte	.LVL320
 8397 1382 26000000 		.4byte	.LFE94
 8398 1386 0400     		.2byte	0x4
 8399 1388 F3       		.byte	0xf3
 8400 1389 01       		.uleb128 0x1
 8401 138a 50       		.byte	0x50
 8402 138b 9F       		.byte	0x9f
 8403 138c 00000000 		.4byte	0
 8404 1390 00000000 		.4byte	0
 8405              	.LLST102:
 8406 1394 00000000 		.4byte	.LVL313
 8407 1398 09000000 		.4byte	.LVL314-1
 8408 139c 0100     		.2byte	0x1
 8409 139e 51       		.byte	0x51
 8410 139f 09000000 		.4byte	.LVL314-1
 8411 13a3 26000000 		.4byte	.LFE94
 8412 13a7 0100     		.2byte	0x1
 8413 13a9 55       		.byte	0x55
 8414 13aa 00000000 		.4byte	0
 8415 13ae 00000000 		.4byte	0
 8416              	.LLST103:
 8417 13b2 14000000 		.4byte	.LVL315
 8418 13b6 18000000 		.4byte	.LVL317
 8419 13ba 0200     		.2byte	0x2
 8420 13bc 31       		.byte	0x31
 8421 13bd 9F       		.byte	0x9f
 8422 13be 1E000000 		.4byte	.LVL320
 8423 13c2 26000000 		.4byte	.LFE94
 8424 13c6 0100     		.2byte	0x1
 8425 13c8 54       		.byte	0x54
 8426 13c9 00000000 		.4byte	0
 8427 13cd 00000000 		.4byte	0
 8428              	.LLST104:
 8429 13d1 00000000 		.4byte	.LVL322
 8430 13d5 11000000 		.4byte	.LVL323-1
 8431 13d9 0100     		.2byte	0x1
 8432 13db 50       		.byte	0x50
 8433 13dc 11000000 		.4byte	.LVL323-1
 8434 13e0 1E000000 		.4byte	.LVL325
 8435 13e4 0100     		.2byte	0x1
 8436 13e6 54       		.byte	0x54
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 213


 8437 13e7 1E000000 		.4byte	.LVL325
 8438 13eb 20000000 		.4byte	.LVL326
 8439 13ef 0100     		.2byte	0x1
 8440 13f1 50       		.byte	0x50
 8441 13f2 20000000 		.4byte	.LVL326
 8442 13f6 22000000 		.4byte	.LVL327
 8443 13fa 0400     		.2byte	0x4
 8444 13fc F3       		.byte	0xf3
 8445 13fd 01       		.uleb128 0x1
 8446 13fe 50       		.byte	0x50
 8447 13ff 9F       		.byte	0x9f
 8448 1400 22000000 		.4byte	.LVL327
 8449 1404 24000000 		.4byte	.LVL328
 8450 1408 0100     		.2byte	0x1
 8451 140a 50       		.byte	0x50
 8452 140b 24000000 		.4byte	.LVL328
 8453 140f 26000000 		.4byte	.LFE95
 8454 1413 0400     		.2byte	0x4
 8455 1415 F3       		.byte	0xf3
 8456 1416 01       		.uleb128 0x1
 8457 1417 50       		.byte	0x50
 8458 1418 9F       		.byte	0x9f
 8459 1419 00000000 		.4byte	0
 8460 141d 00000000 		.4byte	0
 8461              	.LLST105:
 8462 1421 00000000 		.4byte	.LVL322
 8463 1425 11000000 		.4byte	.LVL323-1
 8464 1429 0100     		.2byte	0x1
 8465 142b 51       		.byte	0x51
 8466 142c 11000000 		.4byte	.LVL323-1
 8467 1430 1E000000 		.4byte	.LVL325
 8468 1434 0400     		.2byte	0x4
 8469 1436 F3       		.byte	0xf3
 8470 1437 01       		.uleb128 0x1
 8471 1438 51       		.byte	0x51
 8472 1439 9F       		.byte	0x9f
 8473 143a 1E000000 		.4byte	.LVL325
 8474 143e 26000000 		.4byte	.LFE95
 8475 1442 0100     		.2byte	0x1
 8476 1444 51       		.byte	0x51
 8477 1445 00000000 		.4byte	0
 8478 1449 00000000 		.4byte	0
 8479              	.LLST106:
 8480 144d 1A000000 		.4byte	.LVL324
 8481 1451 1E000000 		.4byte	.LVL325
 8482 1455 0200     		.2byte	0x2
 8483 1457 31       		.byte	0x31
 8484 1458 9F       		.byte	0x9f
 8485 1459 00000000 		.4byte	0
 8486 145d 00000000 		.4byte	0
 8487              	.LLST107:
 8488 1461 00000000 		.4byte	.LVL322
 8489 1465 11000000 		.4byte	.LVL323-1
 8490 1469 0100     		.2byte	0x1
 8491 146b 50       		.byte	0x50
 8492 146c 11000000 		.4byte	.LVL323-1
 8493 1470 1E000000 		.4byte	.LVL325
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 214


 8494 1474 0100     		.2byte	0x1
 8495 1476 54       		.byte	0x54
 8496 1477 1E000000 		.4byte	.LVL325
 8497 147b 20000000 		.4byte	.LVL326
 8498 147f 0100     		.2byte	0x1
 8499 1481 50       		.byte	0x50
 8500 1482 20000000 		.4byte	.LVL326
 8501 1486 22000000 		.4byte	.LVL327
 8502 148a 0400     		.2byte	0x4
 8503 148c F3       		.byte	0xf3
 8504 148d 01       		.uleb128 0x1
 8505 148e 50       		.byte	0x50
 8506 148f 9F       		.byte	0x9f
 8507 1490 22000000 		.4byte	.LVL327
 8508 1494 24000000 		.4byte	.LVL328
 8509 1498 0100     		.2byte	0x1
 8510 149a 50       		.byte	0x50
 8511 149b 24000000 		.4byte	.LVL328
 8512 149f 26000000 		.4byte	.LFE95
 8513 14a3 0400     		.2byte	0x4
 8514 14a5 F3       		.byte	0xf3
 8515 14a6 01       		.uleb128 0x1
 8516 14a7 50       		.byte	0x50
 8517 14a8 9F       		.byte	0x9f
 8518 14a9 00000000 		.4byte	0
 8519 14ad 00000000 		.4byte	0
 8520              	.LLST108:
 8521 14b1 00000000 		.4byte	.LVL329
 8522 14b5 13000000 		.4byte	.LVL331-1
 8523 14b9 0100     		.2byte	0x1
 8524 14bb 50       		.byte	0x50
 8525 14bc 13000000 		.4byte	.LVL331-1
 8526 14c0 1C000000 		.4byte	.LFE96
 8527 14c4 0400     		.2byte	0x4
 8528 14c6 F3       		.byte	0xf3
 8529 14c7 01       		.uleb128 0x1
 8530 14c8 50       		.byte	0x50
 8531 14c9 9F       		.byte	0x9f
 8532 14ca 00000000 		.4byte	0
 8533 14ce 00000000 		.4byte	0
 8534              	.LLST109:
 8535 14d2 00000000 		.4byte	.LVL329
 8536 14d6 10000000 		.4byte	.LVL330
 8537 14da 0100     		.2byte	0x1
 8538 14dc 51       		.byte	0x51
 8539 14dd 10000000 		.4byte	.LVL330
 8540 14e1 13000000 		.4byte	.LVL331-1
 8541 14e5 0100     		.2byte	0x1
 8542 14e7 52       		.byte	0x52
 8543 14e8 13000000 		.4byte	.LVL331-1
 8544 14ec 1C000000 		.4byte	.LFE96
 8545 14f0 0400     		.2byte	0x4
 8546 14f2 F3       		.byte	0xf3
 8547 14f3 01       		.uleb128 0x1
 8548 14f4 51       		.byte	0x51
 8549 14f5 9F       		.byte	0x9f
 8550 14f6 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 215


 8551 14fa 00000000 		.4byte	0
 8552              	.LLST110:
 8553 14fe 00000000 		.4byte	.LVL332
 8554 1502 0F000000 		.4byte	.LVL333-1
 8555 1506 0100     		.2byte	0x1
 8556 1508 50       		.byte	0x50
 8557 1509 0F000000 		.4byte	.LVL333-1
 8558 150d 18000000 		.4byte	.LFE97
 8559 1511 0400     		.2byte	0x4
 8560 1513 F3       		.byte	0xf3
 8561 1514 01       		.uleb128 0x1
 8562 1515 50       		.byte	0x50
 8563 1516 9F       		.byte	0x9f
 8564 1517 00000000 		.4byte	0
 8565 151b 00000000 		.4byte	0
 8566              		.section	.debug_aranges,"",%progbits
 8567 0000 14010000 		.4byte	0x114
 8568 0004 0200     		.2byte	0x2
 8569 0006 00000000 		.4byte	.Ldebug_info0
 8570 000a 04       		.byte	0x4
 8571 000b 00       		.byte	0
 8572 000c 0000     		.2byte	0
 8573 000e 0000     		.2byte	0
 8574 0010 00000000 		.4byte	.LFB87
 8575 0014 1E000000 		.4byte	.LFE87-.LFB87
 8576 0018 00000000 		.4byte	.LFB85
 8577 001c 1A000000 		.4byte	.LFE85-.LFB85
 8578 0020 00000000 		.4byte	.LFB82
 8579 0024 54000000 		.4byte	.LFE82-.LFB82
 8580 0028 00000000 		.4byte	.LFB98
 8581 002c 4E000000 		.4byte	.LFE98-.LFB98
 8582 0030 00000000 		.4byte	.LFB83
 8583 0034 24000000 		.4byte	.LFE83-.LFB83
 8584 0038 00000000 		.4byte	.LFB84
 8585 003c 78000000 		.4byte	.LFE84-.LFB84
 8586 0040 00000000 		.4byte	.LFB67
 8587 0044 6C000000 		.4byte	.LFE67-.LFB67
 8588 0048 00000000 		.4byte	.LFB69
 8589 004c 20000000 		.4byte	.LFE69-.LFB69
 8590 0050 00000000 		.4byte	.LFB68
 8591 0054 2E000000 		.4byte	.LFE68-.LFB68
 8592 0058 00000000 		.4byte	.LFB70
 8593 005c 30010000 		.4byte	.LFE70-.LFB70
 8594 0060 00000000 		.4byte	.LFB71
 8595 0064 AE000000 		.4byte	.LFE71-.LFB71
 8596 0068 00000000 		.4byte	.LFB72
 8597 006c 7E000000 		.4byte	.LFE72-.LFB72
 8598 0070 00000000 		.4byte	.LFB73
 8599 0074 F8000000 		.4byte	.LFE73-.LFB73
 8600 0078 00000000 		.4byte	.LFB74
 8601 007c EC000000 		.4byte	.LFE74-.LFB74
 8602 0080 00000000 		.4byte	.LFB75
 8603 0084 F8000000 		.4byte	.LFE75-.LFB75
 8604 0088 00000000 		.4byte	.LFB76
 8605 008c 72000000 		.4byte	.LFE76-.LFB76
 8606 0090 00000000 		.4byte	.LFB77
 8607 0094 30000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 216


 8608 0098 00000000 		.4byte	.LFB78
 8609 009c 12000000 		.4byte	.LFE78-.LFB78
 8610 00a0 00000000 		.4byte	.LFB79
 8611 00a4 16000000 		.4byte	.LFE79-.LFB79
 8612 00a8 00000000 		.4byte	.LFB80
 8613 00ac 04000000 		.4byte	.LFE80-.LFB80
 8614 00b0 00000000 		.4byte	.LFB86
 8615 00b4 0C000000 		.4byte	.LFE86-.LFB86
 8616 00b8 00000000 		.4byte	.LFB88
 8617 00bc 10000000 		.4byte	.LFE88-.LFB88
 8618 00c0 00000000 		.4byte	.LFB89
 8619 00c4 28000000 		.4byte	.LFE89-.LFB89
 8620 00c8 00000000 		.4byte	.LFB90
 8621 00cc 28000000 		.4byte	.LFE90-.LFB90
 8622 00d0 00000000 		.4byte	.LFB91
 8623 00d4 2C000000 		.4byte	.LFE91-.LFB91
 8624 00d8 00000000 		.4byte	.LFB81
 8625 00dc 10000000 		.4byte	.LFE81-.LFB81
 8626 00e0 00000000 		.4byte	.LFB92
 8627 00e4 4C000000 		.4byte	.LFE92-.LFB92
 8628 00e8 00000000 		.4byte	.LFB93
 8629 00ec 0C000000 		.4byte	.LFE93-.LFB93
 8630 00f0 00000000 		.4byte	.LFB94
 8631 00f4 26000000 		.4byte	.LFE94-.LFB94
 8632 00f8 00000000 		.4byte	.LFB95
 8633 00fc 26000000 		.4byte	.LFE95-.LFB95
 8634 0100 00000000 		.4byte	.LFB96
 8635 0104 1C000000 		.4byte	.LFE96-.LFB96
 8636 0108 00000000 		.4byte	.LFB97
 8637 010c 18000000 		.4byte	.LFE97-.LFB97
 8638 0110 00000000 		.4byte	0
 8639 0114 00000000 		.4byte	0
 8640              		.section	.debug_ranges,"",%progbits
 8641              	.Ldebug_ranges0:
 8642 0000 10000000 		.4byte	.LBB23
 8643 0004 42000000 		.4byte	.LBE23
 8644 0008 46000000 		.4byte	.LBB24
 8645 000c 48000000 		.4byte	.LBE24
 8646 0010 00000000 		.4byte	0
 8647 0014 00000000 		.4byte	0
 8648 0018 2A000000 		.4byte	.LBB30
 8649 001c 8C000000 		.4byte	.LBE30
 8650 0020 90000000 		.4byte	.LBB31
 8651 0024 A6000000 		.4byte	.LBE31
 8652 0028 00000000 		.4byte	0
 8653 002c 00000000 		.4byte	0
 8654 0030 1E000000 		.4byte	.LBB37
 8655 0034 62000000 		.4byte	.LBE37
 8656 0038 66000000 		.4byte	.LBB38
 8657 003c 78000000 		.4byte	.LBE38
 8658 0040 00000000 		.4byte	0
 8659 0044 00000000 		.4byte	0
 8660 0048 20000000 		.4byte	.LBB47
 8661 004c 5C000000 		.4byte	.LBE47
 8662 0050 60000000 		.4byte	.LBB48
 8663 0054 6A000000 		.4byte	.LBE48
 8664 0058 00000000 		.4byte	0
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 217


 8665 005c 00000000 		.4byte	0
 8666 0060 00000000 		.4byte	.LFB87
 8667 0064 1E000000 		.4byte	.LFE87
 8668 0068 00000000 		.4byte	.LFB85
 8669 006c 1A000000 		.4byte	.LFE85
 8670 0070 00000000 		.4byte	.LFB82
 8671 0074 54000000 		.4byte	.LFE82
 8672 0078 00000000 		.4byte	.LFB98
 8673 007c 4E000000 		.4byte	.LFE98
 8674 0080 00000000 		.4byte	.LFB83
 8675 0084 24000000 		.4byte	.LFE83
 8676 0088 00000000 		.4byte	.LFB84
 8677 008c 78000000 		.4byte	.LFE84
 8678 0090 00000000 		.4byte	.LFB67
 8679 0094 6C000000 		.4byte	.LFE67
 8680 0098 00000000 		.4byte	.LFB69
 8681 009c 20000000 		.4byte	.LFE69
 8682 00a0 00000000 		.4byte	.LFB68
 8683 00a4 2E000000 		.4byte	.LFE68
 8684 00a8 00000000 		.4byte	.LFB70
 8685 00ac 30010000 		.4byte	.LFE70
 8686 00b0 00000000 		.4byte	.LFB71
 8687 00b4 AE000000 		.4byte	.LFE71
 8688 00b8 00000000 		.4byte	.LFB72
 8689 00bc 7E000000 		.4byte	.LFE72
 8690 00c0 00000000 		.4byte	.LFB73
 8691 00c4 F8000000 		.4byte	.LFE73
 8692 00c8 00000000 		.4byte	.LFB74
 8693 00cc EC000000 		.4byte	.LFE74
 8694 00d0 00000000 		.4byte	.LFB75
 8695 00d4 F8000000 		.4byte	.LFE75
 8696 00d8 00000000 		.4byte	.LFB76
 8697 00dc 72000000 		.4byte	.LFE76
 8698 00e0 00000000 		.4byte	.LFB77
 8699 00e4 30000000 		.4byte	.LFE77
 8700 00e8 00000000 		.4byte	.LFB78
 8701 00ec 12000000 		.4byte	.LFE78
 8702 00f0 00000000 		.4byte	.LFB79
 8703 00f4 16000000 		.4byte	.LFE79
 8704 00f8 00000000 		.4byte	.LFB80
 8705 00fc 04000000 		.4byte	.LFE80
 8706 0100 00000000 		.4byte	.LFB86
 8707 0104 0C000000 		.4byte	.LFE86
 8708 0108 00000000 		.4byte	.LFB88
 8709 010c 10000000 		.4byte	.LFE88
 8710 0110 00000000 		.4byte	.LFB89
 8711 0114 28000000 		.4byte	.LFE89
 8712 0118 00000000 		.4byte	.LFB90
 8713 011c 28000000 		.4byte	.LFE90
 8714 0120 00000000 		.4byte	.LFB91
 8715 0124 2C000000 		.4byte	.LFE91
 8716 0128 00000000 		.4byte	.LFB81
 8717 012c 10000000 		.4byte	.LFE81
 8718 0130 00000000 		.4byte	.LFB92
 8719 0134 4C000000 		.4byte	.LFE92
 8720 0138 00000000 		.4byte	.LFB93
 8721 013c 0C000000 		.4byte	.LFE93
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 218


 8722 0140 00000000 		.4byte	.LFB94
 8723 0144 26000000 		.4byte	.LFE94
 8724 0148 00000000 		.4byte	.LFB95
 8725 014c 26000000 		.4byte	.LFE95
 8726 0150 00000000 		.4byte	.LFB96
 8727 0154 1C000000 		.4byte	.LFE96
 8728 0158 00000000 		.4byte	.LFB97
 8729 015c 18000000 		.4byte	.LFE97
 8730 0160 00000000 		.4byte	0
 8731 0164 00000000 		.4byte	0
 8732              		.section	.debug_line,"",%progbits
 8733              	.Ldebug_line0:
 8734 0000 7C070000 		.section	.debug_str,"MS",%progbits,1
 8734      02008C02 
 8734      00000201 
 8734      FB0E0D00 
 8734      01010101 
 8735              	.LASF33:
 8736 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 8736      6D626572 
 8736      4F664974 
 8736      656D7300 
 8737              	.LASF141:
 8738 0010 76506F72 		.ascii	"vPortExitCritical\000"
 8738      74457869 
 8738      74437269 
 8738      74696361 
 8738      6C00
 8739              	.LASF85:
 8740 0022 7072764E 		.ascii	"prvNotifyQueueSetContainer\000"
 8740      6F746966 
 8740      79517565 
 8740      75655365 
 8740      74436F6E 
 8741              	.LASF63:
 8742 003d 53656D61 		.ascii	"SemaphoreData\000"
 8742      70686F72 
 8742      65446174 
 8742      6100
 8743              	.LASF156:
 8744 004b 74736B54 		.ascii	"tskTaskControlBlock\000"
 8744      61736B43 
 8744      6F6E7472 
 8744      6F6C426C 
 8744      6F636B00 
 8745              	.LASF66:
 8746 005f 53656D61 		.ascii	"SemaphoreData_t\000"
 8746      70686F72 
 8746      65446174 
 8746      615F7400 
 8747              	.LASF109:
 8748 006f 78517565 		.ascii	"xQueueReceive\000"
 8748      75655265 
 8748      63656976 
 8748      6500
 8749              	.LASF114:
 8750 007d 78517565 		.ascii	"xQueueReceiveFromISR\000"
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 219


 8750      75655265 
 8750      63656976 
 8750      6546726F 
 8750      6D495352 
 8751              	.LASF50:
 8752 0092 78546173 		.ascii	"xTasksWaitingToReceive\000"
 8752      6B735761 
 8752      6974696E 
 8752      67546F52 
 8752      65636569 
 8753              	.LASF106:
 8754 00a9 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 8754      67686572 
 8754      5072696F 
 8754      72697479 
 8754      5461736B 
 8755              	.LASF110:
 8756 00c3 78517565 		.ascii	"xQueueSemaphoreTake\000"
 8756      75655365 
 8756      6D617068 
 8756      6F726554 
 8756      616B6500 
 8757              	.LASF0:
 8758 00d7 756E7369 		.ascii	"unsigned int\000"
 8758      676E6564 
 8758      20696E74 
 8758      00
 8759              	.LASF34:
 8760 00e4 7078496E 		.ascii	"pxIndex\000"
 8760      64657800 
 8761              	.LASF41:
 8762 00ec 7854494D 		.ascii	"xTIME_OUT\000"
 8762      455F4F55 
 8762      5400
 8763              	.LASF132:
 8764 00f6 78517565 		.ascii	"xQueueOrSemaphore\000"
 8764      75654F72 
 8764      53656D61 
 8764      70686F72 
 8764      6500
 8765              	.LASF94:
 8766 0108 70784E65 		.ascii	"pxNewQueue\000"
 8766      77517565 
 8766      756500
 8767              	.LASF10:
 8768 0113 5F5F696E 		.ascii	"__int32_t\000"
 8768      7433325F 
 8768      7400
 8769              	.LASF31:
 8770 011d 784C4953 		.ascii	"xLIST_ITEM\000"
 8770      545F4954 
 8770      454D00
 8771              	.LASF71:
 8772 0128 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 8772      455F5245 
 8772      47495354 
 8772      52595F49 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 220


 8772      54454D00 
 8773              	.LASF128:
 8774 013c 78576169 		.ascii	"xWaitIndefinitely\000"
 8774      74496E64 
 8774      6566696E 
 8774      6974656C 
 8774      7900
 8775              	.LASF49:
 8776 014e 78546173 		.ascii	"xTasksWaitingToSend\000"
 8776      6B735761 
 8776      6974696E 
 8776      67546F53 
 8776      656E6400 
 8777              	.LASF118:
 8778 0162 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 8778      65756553 
 8778      70616365 
 8778      73417661 
 8778      696C6162 
 8779              	.LASF55:
 8780 0179 6354784C 		.ascii	"cTxLock\000"
 8780      6F636B00 
 8781              	.LASF42:
 8782 0181 784F7665 		.ascii	"xOverflowCount\000"
 8782      72666C6F 
 8782      77436F75 
 8782      6E7400
 8783              	.LASF140:
 8784 0190 76506F72 		.ascii	"vPortEnterCritical\000"
 8784      74456E74 
 8784      65724372 
 8784      69746963 
 8784      616C00
 8785              	.LASF65:
 8786 01a3 75785265 		.ascii	"uxRecursiveCallCount\000"
 8786      63757273 
 8786      69766543 
 8786      616C6C43 
 8786      6F756E74 
 8787              	.LASF70:
 8788 01b8 51756575 		.ascii	"Queue_t\000"
 8788      655F7400 
 8789              	.LASF100:
 8790 01c0 78436F70 		.ascii	"xCopyPosition\000"
 8790      79506F73 
 8790      6974696F 
 8790      6E00
 8791              	.LASF117:
 8792 01ce 75785265 		.ascii	"uxReturn\000"
 8792      7475726E 
 8792      00
 8793              	.LASF75:
 8794 01d7 51756575 		.ascii	"QueueRegistryItem_t\000"
 8794      65526567 
 8794      69737472 
 8794      79497465 
 8794      6D5F7400 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 221


 8795              	.LASF126:
 8796 01eb 76517565 		.ascii	"vQueueDelete\000"
 8796      75654465 
 8796      6C657465 
 8796      00
 8797              	.LASF61:
 8798 01f8 70635265 		.ascii	"pcReadFrom\000"
 8798      61644672 
 8798      6F6D00
 8799              	.LASF125:
 8800 0203 76517565 		.ascii	"vQueueUnregisterQueue\000"
 8800      7565556E 
 8800      72656769 
 8800      73746572 
 8800      51756575 
 8801              	.LASF107:
 8802 0219 75785361 		.ascii	"uxSavedInterruptStatus\000"
 8802      76656449 
 8802      6E746572 
 8802      72757074 
 8802      53746174 
 8803              	.LASF90:
 8804 0230 70727649 		.ascii	"prvInitialiseNewQueue\000"
 8804      6E697469 
 8804      616C6973 
 8804      654E6577 
 8804      51756575 
 8805              	.LASF20:
 8806 0246 75696E74 		.ascii	"uint32_t\000"
 8806      33325F74 
 8806      00
 8807              	.LASF17:
 8808 024f 696E7438 		.ascii	"int8_t\000"
 8808      5F7400
 8809              	.LASF102:
 8810 0256 78596965 		.ascii	"xYieldRequired\000"
 8810      6C645265 
 8810      71756972 
 8810      656400
 8811              	.LASF76:
 8812 0265 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 8812      6967696E 
 8812      616C4241 
 8812      53455052 
 8812      4900
 8813              	.LASF67:
 8814 0277 78517565 		.ascii	"xQueue\000"
 8814      756500
 8815              	.LASF21:
 8816 027e 666C6F61 		.ascii	"float\000"
 8816      7400
 8817              	.LASF46:
 8818 0284 51756575 		.ascii	"QueueDefinition\000"
 8818      65446566 
 8818      696E6974 
 8818      696F6E00 
 8819              	.LASF14:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 222


 8820 0294 6C6F6E67 		.ascii	"long long unsigned int\000"
 8820      206C6F6E 
 8820      6720756E 
 8820      7369676E 
 8820      65642069 
 8821              	.LASF79:
 8822 02ab 70727649 		.ascii	"prvIsQueueEmpty\000"
 8822      73517565 
 8822      7565456D 
 8822      70747900 
 8823              	.LASF86:
 8824 02bb 70764275 		.ascii	"pvBuffer\000"
 8824      66666572 
 8824      00
 8825              	.LASF28:
 8826 02c4 70785072 		.ascii	"pxPrevious\000"
 8826      6576696F 
 8826      757300
 8827              	.LASF51:
 8828 02cf 75784D65 		.ascii	"uxMessagesWaiting\000"
 8828      73736167 
 8828      65735761 
 8828      6974696E 
 8828      6700
 8829              	.LASF68:
 8830 02e1 7853656D 		.ascii	"xSemaphore\000"
 8830      6170686F 
 8830      726500
 8831              	.LASF145:
 8832 02ec 7076506F 		.ascii	"pvPortMalloc\000"
 8832      72744D61 
 8832      6C6C6F63 
 8832      00
 8833              	.LASF147:
 8834 02f9 76546173 		.ascii	"vTaskSuspendAll\000"
 8834      6B537573 
 8834      70656E64 
 8834      416C6C00 
 8835              	.LASF112:
 8836 0309 78517565 		.ascii	"xQueuePeek\000"
 8836      75655065 
 8836      656B00
 8837              	.LASF153:
 8838 0314 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8838      43313120 
 8838      352E342E 
 8838      31203230 
 8838      31363036 
 8839 0347 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 8839      20726576 
 8839      6973696F 
 8839      6E203233 
 8839      37373135 
 8840 037a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 8840      66756E63 
 8840      74696F6E 
 8840      2D736563 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 223


 8840      74696F6E 
 8841              	.LASF101:
 8842 03a2 78456E74 		.ascii	"xEntryTimeSet\000"
 8842      72795469 
 8842      6D655365 
 8842      7400
 8843              	.LASF3:
 8844 03b0 73697A65 		.ascii	"size_t\000"
 8844      5F7400
 8845              	.LASF103:
 8846 03b7 7854696D 		.ascii	"xTimeOut\000"
 8846      654F7574 
 8846      00
 8847              	.LASF73:
 8848 03c0 7848616E 		.ascii	"xHandle\000"
 8848      646C6500 
 8849              	.LASF72:
 8850 03c8 70635175 		.ascii	"pcQueueName\000"
 8850      6575654E 
 8850      616D6500 
 8851              	.LASF58:
 8852 03d4 51756575 		.ascii	"QueueSetMemberHandle_t\000"
 8852      65536574 
 8852      4D656D62 
 8852      65724861 
 8852      6E646C65 
 8853              	.LASF37:
 8854 03eb 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 8854      495F4C49 
 8854      53545F49 
 8854      54454D00 
 8855              	.LASF57:
 8856 03fb 51756575 		.ascii	"QueueSetHandle_t\000"
 8856      65536574 
 8856      48616E64 
 8856      6C655F74 
 8856      00
 8857              	.LASF32:
 8858 040c 784C4953 		.ascii	"xLIST\000"
 8858      5400
 8859              	.LASF138:
 8860 0412 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8860      52784275 
 8860      66666572 
 8860      00
 8861              	.LASF105:
 8862 041f 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8862      75654765 
 8862      6E657269 
 8862      6353656E 
 8862      6446726F 
 8863              	.LASF158:
 8864 0438 76506F72 		.ascii	"vPortSetBASEPRI\000"
 8864      74536574 
 8864      42415345 
 8864      50524900 
 8865              	.LASF82:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 224


 8866 0448 70727643 		.ascii	"prvCopyDataToQueue\000"
 8866      6F707944 
 8866      61746154 
 8866      6F517565 
 8866      756500
 8867              	.LASF98:
 8868 045b 78517565 		.ascii	"xQueueGenericSend\000"
 8868      75654765 
 8868      6E657269 
 8868      6353656E 
 8868      6400
 8869              	.LASF149:
 8870 046d 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 8870      6B506C61 
 8870      63654F6E 
 8870      4576656E 
 8870      744C6973 
 8871              	.LASF53:
 8872 0483 75784974 		.ascii	"uxItemSize\000"
 8872      656D5369 
 8872      7A6500
 8873              	.LASF104:
 8874 048e 75785072 		.ascii	"uxPreviousMessagesWaiting\000"
 8874      6576696F 
 8874      75734D65 
 8874      73736167 
 8874      65735761 
 8875              	.LASF142:
 8876 04a8 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 8876      6B52656D 
 8876      6F766546 
 8876      726F6D45 
 8876      76656E74 
 8877              	.LASF16:
 8878 04c1 63686172 		.ascii	"char\000"
 8878      00
 8879              	.LASF133:
 8880 04c6 78517565 		.ascii	"xQueueSet\000"
 8880      75655365 
 8880      7400
 8881              	.LASF36:
 8882 04d0 4C697374 		.ascii	"ListItem_t\000"
 8882      4974656D 
 8882      5F7400
 8883              	.LASF78:
 8884 04db 70727649 		.ascii	"prvIsQueueFull\000"
 8884      73517565 
 8884      75654675 
 8884      6C6C00
 8885              	.LASF59:
 8886 04ea 51756575 		.ascii	"QueuePointers\000"
 8886      65506F69 
 8886      6E746572 
 8886      7300
 8887              	.LASF77:
 8888 04f8 756C4E65 		.ascii	"ulNewBASEPRI\000"
 8888      77424153 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 225


 8888      45505249 
 8888      00
 8889              	.LASF24:
 8890 0505 55426173 		.ascii	"UBaseType_t\000"
 8890      65547970 
 8890      655F7400 
 8891              	.LASF108:
 8892 0511 78517565 		.ascii	"xQueueGiveFromISR\000"
 8892      75654769 
 8892      76654672 
 8892      6F6D4953 
 8892      5200
 8893              	.LASF139:
 8894 0523 78517565 		.ascii	"xQueueRegistry\000"
 8894      75655265 
 8894      67697374 
 8894      727900
 8895              	.LASF45:
 8896 0532 51756575 		.ascii	"QueueHandle_t\000"
 8896      6548616E 
 8896      646C655F 
 8896      7400
 8897              	.LASF35:
 8898 0540 784C6973 		.ascii	"xListEnd\000"
 8898      74456E64 
 8898      00
 8899              	.LASF119:
 8900 0549 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 8900      6575654D 
 8900      65737361 
 8900      67657357 
 8900      61697469 
 8901              	.LASF38:
 8902 0567 4D696E69 		.ascii	"MiniListItem_t\000"
 8902      4C697374 
 8902      4974656D 
 8902      5F7400
 8903              	.LASF152:
 8904 0576 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 8904      6B506C61 
 8904      63654F6E 
 8904      4576656E 
 8904      744C6973 
 8905              	.LASF18:
 8906 0596 75696E74 		.ascii	"uint8_t\000"
 8906      385F7400 
 8907              	.LASF74:
 8908 059e 78517565 		.ascii	"xQueueRegistryItem\000"
 8908      75655265 
 8908      67697374 
 8908      72794974 
 8908      656D00
 8909              	.LASF96:
 8910 05b1 78517565 		.ascii	"xQueueGenericCreate\000"
 8910      75654765 
 8910      6E657269 
 8910      63437265 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 226


 8910      61746500 
 8911              	.LASF157:
 8912 05c5 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 8912      72745261 
 8912      69736542 
 8912      41534550 
 8912      524900
 8913              	.LASF1:
 8914 05d8 6C6F6E67 		.ascii	"long long int\000"
 8914      206C6F6E 
 8914      6720696E 
 8914      7400
 8915              	.LASF137:
 8916 05e6 78517565 		.ascii	"xQueueSelectFromSetFromISR\000"
 8916      75655365 
 8916      6C656374 
 8916      46726F6D 
 8916      53657446 
 8917              	.LASF23:
 8918 0601 42617365 		.ascii	"BaseType_t\000"
 8918      54797065 
 8918      5F7400
 8919              	.LASF92:
 8920 060c 70756351 		.ascii	"pucQueueStorage\000"
 8920      75657565 
 8920      53746F72 
 8920      61676500 
 8921              	.LASF43:
 8922 061c 7854696D 		.ascii	"xTimeOnEntering\000"
 8922      654F6E45 
 8922      6E746572 
 8922      696E6700 
 8923              	.LASF124:
 8924 062c 76517565 		.ascii	"vQueueAddToRegistry\000"
 8924      75654164 
 8924      64546F52 
 8924      65676973 
 8924      74727900 
 8925              	.LASF27:
 8926 0640 70784E65 		.ascii	"pxNext\000"
 8926      787400
 8927              	.LASF155:
 8928 0647 473A5C70 		.ascii	"G:\\project\\PsocWagen\\PSoC\\PSoCWagen\\PsocWagen."
 8928      726F6A65 
 8928      63745C50 
 8928      736F6357 
 8928      6167656E 
 8929 0675 63796473 		.ascii	"cydsn\000"
 8929      6E00
 8930              	.LASF89:
 8931 067b 784E6577 		.ascii	"xNewQueue\000"
 8931      51756575 
 8931      6500
 8932              	.LASF134:
 8933 0685 78517565 		.ascii	"xQueueRemoveFromSet\000"
 8933      75655265 
 8933      6D6F7665 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 227


 8933      46726F6D 
 8933      53657400 
 8934              	.LASF2:
 8935 0699 6C6F6E67 		.ascii	"long double\000"
 8935      20646F75 
 8935      626C6500 
 8936              	.LASF129:
 8937 06a5 78517565 		.ascii	"xQueueCreateSet\000"
 8937      75654372 
 8937      65617465 
 8937      53657400 
 8938              	.LASF44:
 8939 06b5 54696D65 		.ascii	"TimeOut_t\000"
 8939      4F75745F 
 8939      7400
 8940              	.LASF146:
 8941 06bf 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 8941      6B496E74 
 8941      65726E61 
 8941      6C536574 
 8941      54696D65 
 8942              	.LASF113:
 8943 06dc 70634F72 		.ascii	"pcOriginalReadPosition\000"
 8943      6967696E 
 8943      616C5265 
 8943      6164506F 
 8943      73697469 
 8944              	.LASF40:
 8945 06f3 5461736B 		.ascii	"TaskHandle_t\000"
 8945      48616E64 
 8945      6C655F74 
 8945      00
 8946              	.LASF159:
 8947 0700 756C4E65 		.ascii	"ulNewMaskValue\000"
 8947      774D6173 
 8947      6B56616C 
 8947      756500
 8948              	.LASF93:
 8949 070f 75635175 		.ascii	"ucQueueType\000"
 8949      65756554 
 8949      79706500 
 8950              	.LASF39:
 8951 071b 4C697374 		.ascii	"List_t\000"
 8951      5F7400
 8952              	.LASF111:
 8953 0722 75785365 		.ascii	"uxSemaphoreCount\000"
 8953      6D617068 
 8953      6F726543 
 8953      6F756E74 
 8953      00
 8954              	.LASF48:
 8955 0733 70635772 		.ascii	"pcWriteTo\000"
 8955      69746554 
 8955      6F00
 8956              	.LASF25:
 8957 073d 5469636B 		.ascii	"TickType_t\000"
 8957      54797065 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 228


 8957      5F7400
 8958              	.LASF4:
 8959 0748 5F5F696E 		.ascii	"__int8_t\000"
 8959      74385F74 
 8959      00
 8960              	.LASF91:
 8961 0751 75785175 		.ascii	"uxQueueLength\000"
 8961      6575654C 
 8961      656E6774 
 8961      6800
 8962              	.LASF154:
 8963 075f 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTOS_queue.c\000"
 8963      72617465 
 8963      645F536F 
 8963      75726365 
 8963      5C50536F 
 8964              	.LASF122:
 8965 0783 70635175 		.ascii	"pcQueueGetName\000"
 8965      65756547 
 8965      65744E61 
 8965      6D6500
 8966              	.LASF62:
 8967 0792 51756575 		.ascii	"QueuePointers_t\000"
 8967      65506F69 
 8967      6E746572 
 8967      735F7400 
 8968              	.LASF123:
 8969 07a2 70635265 		.ascii	"pcReturn\000"
 8969      7475726E 
 8969      00
 8970              	.LASF52:
 8971 07ab 75784C65 		.ascii	"uxLength\000"
 8971      6E677468 
 8971      00
 8972              	.LASF127:
 8973 07b4 76517565 		.ascii	"vQueueWaitForMessageRestricted\000"
 8973      75655761 
 8973      6974466F 
 8973      724D6573 
 8973      73616765 
 8974              	.LASF8:
 8975 07d3 73686F72 		.ascii	"short int\000"
 8975      7420696E 
 8975      7400
 8976              	.LASF26:
 8977 07dd 78497465 		.ascii	"xItemValue\000"
 8977      6D56616C 
 8977      756500
 8978              	.LASF11:
 8979 07e8 6C6F6E67 		.ascii	"long int\000"
 8979      20696E74 
 8979      00
 8980              	.LASF135:
 8981 07f1 70785175 		.ascii	"pxQueueOrSemaphore\000"
 8981      6575654F 
 8981      7253656D 
 8981      6170686F 
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 229


 8981      726500
 8982              	.LASF97:
 8983 0804 78517565 		.ascii	"xQueueSizeInBytes\000"
 8983      75655369 
 8983      7A65496E 
 8983      42797465 
 8983      7300
 8984              	.LASF150:
 8985 0816 78546173 		.ascii	"xTaskResumeAll\000"
 8985      6B526573 
 8985      756D6541 
 8985      6C6C00
 8986              	.LASF83:
 8987 0825 70764974 		.ascii	"pvItemToQueue\000"
 8987      656D546F 
 8987      51756575 
 8987      6500
 8988              	.LASF148:
 8989 0833 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 8989      6B436865 
 8989      636B466F 
 8989      7254696D 
 8989      654F7574 
 8990              	.LASF151:
 8991 0848 76506F72 		.ascii	"vPortFree\000"
 8991      74467265 
 8991      6500
 8992              	.LASF121:
 8993 0852 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8993      75654973 
 8993      51756575 
 8993      6546756C 
 8993      6C46726F 
 8994              	.LASF116:
 8995 086b 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 8995      6575654D 
 8995      65737361 
 8995      67657357 
 8995      61697469 
 8996              	.LASF60:
 8997 0882 70635461 		.ascii	"pcTail\000"
 8997      696C00
 8998              	.LASF6:
 8999 0889 5F5F7569 		.ascii	"__uint8_t\000"
 8999      6E74385F 
 8999      7400
 9000              	.LASF80:
 9001 0893 70785175 		.ascii	"pxQueue\000"
 9001      65756500 
 9002              	.LASF81:
 9003 089b 78526574 		.ascii	"xReturn\000"
 9003      75726E00 
 9004              	.LASF15:
 9005 08a3 73697A65 		.ascii	"sizetype\000"
 9005      74797065 
 9005      00
 9006              	.LASF143:
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 230


 9007 08ac 76546173 		.ascii	"vTaskMissedYield\000"
 9007      6B4D6973 
 9007      73656459 
 9007      69656C64 
 9007      00
 9008              	.LASF13:
 9009 08bd 6C6F6E67 		.ascii	"long unsigned int\000"
 9009      20756E73 
 9009      69676E65 
 9009      6420696E 
 9009      7400
 9010              	.LASF19:
 9011 08cf 696E7433 		.ascii	"int32_t\000"
 9011      325F7400 
 9012              	.LASF136:
 9013 08d7 78517565 		.ascii	"xQueueSelectFromSet\000"
 9013      75655365 
 9013      6C656374 
 9013      46726F6D 
 9013      53657400 
 9014              	.LASF115:
 9015 08eb 78517565 		.ascii	"xQueuePeekFromISR\000"
 9015      75655065 
 9015      656B4672 
 9015      6F6D4953 
 9015      5200
 9016              	.LASF30:
 9017 08fd 7078436F 		.ascii	"pxContainer\000"
 9017      6E746169 
 9017      6E657200 
 9018              	.LASF7:
 9019 0909 756E7369 		.ascii	"unsigned char\000"
 9019      676E6564 
 9019      20636861 
 9019      7200
 9020              	.LASF12:
 9021 0917 5F5F7569 		.ascii	"__uint32_t\000"
 9021      6E743332 
 9021      5F7400
 9022              	.LASF144:
 9023 0922 764C6973 		.ascii	"vListInitialise\000"
 9023      74496E69 
 9023      7469616C 
 9023      69736500 
 9024              	.LASF87:
 9025 0932 70727643 		.ascii	"prvCopyDataFromQueue\000"
 9025      6F707944 
 9025      61746146 
 9025      726F6D51 
 9025      75657565 
 9026              	.LASF99:
 9027 0947 78546963 		.ascii	"xTicksToWait\000"
 9027      6B73546F 
 9027      57616974 
 9027      00
 9028              	.LASF29:
 9029 0954 70764F77 		.ascii	"pvOwner\000"
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 231


 9029      6E657200 
 9030              	.LASF47:
 9031 095c 70634865 		.ascii	"pcHead\000"
 9031      616400
 9032              	.LASF88:
 9033 0963 70727655 		.ascii	"prvUnlockQueue\000"
 9033      6E6C6F63 
 9033      6B517565 
 9033      756500
 9034              	.LASF95:
 9035 0972 78517565 		.ascii	"xQueueGenericReset\000"
 9035      75654765 
 9035      6E657269 
 9035      63526573 
 9035      657400
 9036              	.LASF120:
 9037 0985 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 9037      75654973 
 9037      51756575 
 9037      65456D70 
 9037      74794672 
 9038              	.LASF5:
 9039 099f 7369676E 		.ascii	"signed char\000"
 9039      65642063 
 9039      68617200 
 9040              	.LASF9:
 9041 09ab 73686F72 		.ascii	"short unsigned int\000"
 9041      7420756E 
 9041      7369676E 
 9041      65642069 
 9041      6E7400
 9042              	.LASF160:
 9043 09be 6D656D63 		.ascii	"memcpy\000"
 9043      707900
 9044              	.LASF69:
 9045 09c5 78515545 		.ascii	"xQUEUE\000"
 9045      554500
 9046              	.LASF64:
 9047 09cc 784D7574 		.ascii	"xMutexHolder\000"
 9047      6578486F 
 9047      6C646572 
 9047      00
 9048              	.LASF56:
 9049 09d9 70785175 		.ascii	"pxQueueSetContainer\000"
 9049      65756553 
 9049      6574436F 
 9049      6E746169 
 9049      6E657200 
 9050              	.LASF22:
 9051 09ed 646F7562 		.ascii	"double\000"
 9051      6C6500
 9052              	.LASF84:
 9053 09f4 78506F73 		.ascii	"xPosition\000"
 9053      6974696F 
 9053      6E00
 9054              	.LASF131:
 9055 09fe 78517565 		.ascii	"xQueueAddToSet\000"
ARM GAS  C:\Users\df16\AppData\Local\Temp\ccbgqexo.s 			page 232


 9055      75654164 
 9055      64546F53 
 9055      657400
 9056              	.LASF54:
 9057 0a0d 6352784C 		.ascii	"cRxLock\000"
 9057      6F636B00 
 9058              	.LASF130:
 9059 0a15 75784576 		.ascii	"uxEventQueueLength\000"
 9059      656E7451 
 9059      75657565 
 9059      4C656E67 
 9059      746800
 9060              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

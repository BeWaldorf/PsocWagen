--
--	Conversion of PsocWagen.v to vh2:
--
--	Cypress Semiconductor - WARP Version 6.3 IR 41
--	Wed Dec 14 01:23:29 2022
--

USE cypress.cypress.all;
USE cypress.rtlpkg.all;
ENTITY top_RTL IS
ATTRIBUTE part_name of top_RTL:TYPE IS "cpsoc3";
END top_RTL;
--------------------------------------------------------
ARCHITECTURE R_T_L OF top_RTL IS
SIGNAL tmpOE__LichtLinks_net_0 : bit;
SIGNAL zero : bit;
SIGNAL Net_1247 : bit;
SIGNAL tmpIO_0__LichtLinks_net_0 : bit;
TERMINAL tmpSIOVREF__LichtLinks_net_0 : bit;
SIGNAL one : bit;
SIGNAL tmpINTERRUPT_0__LichtLinks_net_0 : bit;
SIGNAL tmpOE__MotorLinks_net_0 : bit;
SIGNAL Net_1248 : bit;
SIGNAL tmpFB_0__MotorLinks_net_0 : bit;
SIGNAL tmpIO_0__MotorLinks_net_0 : bit;
TERMINAL tmpSIOVREF__MotorLinks_net_0 : bit;
SIGNAL tmpINTERRUPT_0__MotorLinks_net_0 : bit;
SIGNAL \VermogenLinks:PWMUDB:km_run\ : bit;
SIGNAL \VermogenLinks:PWMUDB:min_kill_reg\ : bit;
SIGNAL Net_46 : bit;
SIGNAL \VermogenLinks:PWMUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_7\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_6\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_5\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_4\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_3\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:control_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ctrl_enable\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ctrl_cmpmode2_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ctrl_cmpmode2_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ctrl_cmpmode2_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ctrl_cmpmode1_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ctrl_cmpmode1_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ctrl_cmpmode1_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:prevCapture\ : bit;
SIGNAL \VermogenLinks:PWMUDB:capt_rising\ : bit;
SIGNAL \VermogenLinks:PWMUDB:capt_falling\ : bit;
SIGNAL \VermogenLinks:PWMUDB:hwCapture\ : bit;
SIGNAL \VermogenLinks:PWMUDB:hwEnable\ : bit;
SIGNAL \VermogenLinks:PWMUDB:trig_last\ : bit;
SIGNAL \VermogenLinks:PWMUDB:trig_rise\ : bit;
SIGNAL \VermogenLinks:PWMUDB:trig_fall\ : bit;
SIGNAL \VermogenLinks:PWMUDB:trig_out\ : bit;
SIGNAL \VermogenLinks:PWMUDB:runmode_enable\ : bit;
SIGNAL \VermogenLinks:PWMUDB:runmode_enable\\R\ : bit;
SIGNAL \VermogenLinks:PWMUDB:runmode_enable\\S\ : bit;
SIGNAL \VermogenLinks:PWMUDB:final_enable\ : bit;
SIGNAL \VermogenLinks:PWMUDB:sc_kill_tmp\ : bit;
SIGNAL \VermogenLinks:PWMUDB:tc_i\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ltch_kill_reg\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ltch_kill_reg\\R\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ltch_kill_reg\\S\ : bit;
SIGNAL \VermogenLinks:PWMUDB:min_kill_reg\\R\ : bit;
SIGNAL \VermogenLinks:PWMUDB:min_kill_reg\\S\ : bit;
SIGNAL \VermogenLinks:PWMUDB:sc_kill\ : bit;
SIGNAL \VermogenLinks:PWMUDB:min_kill\ : bit;
SIGNAL \VermogenLinks:PWMUDB:final_kill\ : bit;
SIGNAL \VermogenLinks:PWMUDB:km_tc\ : bit;
SIGNAL \VermogenLinks:PWMUDB:db_tc\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_1\\R\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_1\\S\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_0\\R\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_0\\S\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_sel\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cs_addr_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cs_addr_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cs_addr_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:final_capture\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cmp1_eq\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cmp1_less\ : bit;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ff0\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ff0\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:cmp2_eq\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cmp2_less\ : bit;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:z1\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:z1\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ff1\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ff1\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ov_msb\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ov_msb\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:co_msb\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:co_msb\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:cmsb\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:cmsb\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:so\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:so\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:f0_bus_stat\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:f0_bus_stat\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:f0_blk_stat\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:f0_blk_stat\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:fifo_nempty\ : bit;
SIGNAL \VermogenLinks:PWMUDB:fifo_full\ : bit;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ce0_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:cl0_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:z0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:z0_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ff0_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ce1_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:cl1_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:z1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:z1_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ff1_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:co_msb_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:cmsb_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:so_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:so_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:sP8:pwmdp:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenLinks:PWMUDB:sP8:pwmdp:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenLinks:PWMUDB:compare1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:compare2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm_i_reg\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm_i\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm1_i_reg\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm1_i\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm2_i_reg\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm2_i\ : bit;
SIGNAL \VermogenLinks:PWMUDB:tc_i_reg\ : bit;
SIGNAL \VermogenLinks:Net_101\ : bit;
SIGNAL \VermogenLinks:Net_96\ : bit;
SIGNAL Net_1256 : bit;
SIGNAL Net_1257 : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm_temp\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cmp1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:cmp2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_31\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_30\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_29\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_28\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_27\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_26\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_25\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_24\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_23\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_22\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_21\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_20\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_19\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_18\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_17\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_16\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_15\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_14\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_13\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_12\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_11\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_10\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_9\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_8\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_7\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_6\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_5\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_4\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_3\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:b_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_31\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_30\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_29\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_28\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_27\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_26\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_25\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_24\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_23\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_22\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_21\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_20\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_19\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_18\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_17\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_16\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_15\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_14\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_13\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_12\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_11\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_10\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_9\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_8\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_7\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_6\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_5\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_4\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_3\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODIN1_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:a_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODIN1_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_31\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_30\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_29\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_28\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_27\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_26\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_25\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_24\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_23\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_22\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_21\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_20\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_19\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_18\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_17\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_16\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_15\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_14\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_13\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_12\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_11\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_10\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_9\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_8\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_7\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_6\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_5\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_4\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_3\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:b_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_31\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_31\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_30\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_30\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_29\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_29\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_28\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_28\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_27\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_27\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_26\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_26\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_25\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_25\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_24\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_24\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_23\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_23\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_22\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_22\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_21\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_21\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_20\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_20\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_19\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_19\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_18\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_18\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_17\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_17\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_16\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_16\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_15\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_15\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_14\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_14\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_13\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_13\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_12\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_12\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_11\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_11\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_10\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_10\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_9\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_9\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_8\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_8\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_7\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_7\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_6\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_6\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_5\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_5\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_4\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_4\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_3\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_3\ : bit;
SIGNAL \VermogenLinks:PWMUDB:add_vi_vv_MODGEN_1_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:s_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL Net_1252 : bit;
SIGNAL \VermogenLinks:Net_55\ : bit;
SIGNAL Net_1259 : bit;
SIGNAL \VermogenLinks:Net_113\ : bit;
SIGNAL \VermogenLinks:Net_107\ : bit;
SIGNAL \VermogenLinks:Net_114\ : bit;
SIGNAL tmpOE__MotorRechts_net_0 : bit;
SIGNAL Net_1262 : bit;
SIGNAL tmpFB_0__MotorRechts_net_0 : bit;
SIGNAL tmpIO_0__MotorRechts_net_0 : bit;
TERMINAL tmpSIOVREF__MotorRechts_net_0 : bit;
SIGNAL tmpINTERRUPT_0__MotorRechts_net_0 : bit;
SIGNAL \VermogenRechts:PWMUDB:km_run\ : bit;
SIGNAL \VermogenRechts:PWMUDB:min_kill_reg\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_7\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_6\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_5\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_4\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_3\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:control_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ctrl_enable\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ctrl_cmpmode2_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ctrl_cmpmode2_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ctrl_cmpmode2_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ctrl_cmpmode1_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ctrl_cmpmode1_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ctrl_cmpmode1_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:prevCapture\ : bit;
SIGNAL \VermogenRechts:PWMUDB:capt_rising\ : bit;
SIGNAL \VermogenRechts:PWMUDB:capt_falling\ : bit;
SIGNAL \VermogenRechts:PWMUDB:hwCapture\ : bit;
SIGNAL \VermogenRechts:PWMUDB:hwEnable\ : bit;
SIGNAL \VermogenRechts:PWMUDB:trig_last\ : bit;
SIGNAL \VermogenRechts:PWMUDB:trig_rise\ : bit;
SIGNAL \VermogenRechts:PWMUDB:trig_fall\ : bit;
SIGNAL \VermogenRechts:PWMUDB:trig_out\ : bit;
SIGNAL \VermogenRechts:PWMUDB:runmode_enable\ : bit;
SIGNAL \VermogenRechts:PWMUDB:runmode_enable\\R\ : bit;
SIGNAL \VermogenRechts:PWMUDB:runmode_enable\\S\ : bit;
SIGNAL \VermogenRechts:PWMUDB:final_enable\ : bit;
SIGNAL \VermogenRechts:PWMUDB:sc_kill_tmp\ : bit;
SIGNAL \VermogenRechts:PWMUDB:tc_i\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ltch_kill_reg\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ltch_kill_reg\\R\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ltch_kill_reg\\S\ : bit;
SIGNAL \VermogenRechts:PWMUDB:min_kill_reg\\R\ : bit;
SIGNAL \VermogenRechts:PWMUDB:min_kill_reg\\S\ : bit;
SIGNAL \VermogenRechts:PWMUDB:sc_kill\ : bit;
SIGNAL \VermogenRechts:PWMUDB:min_kill\ : bit;
SIGNAL \VermogenRechts:PWMUDB:final_kill\ : bit;
SIGNAL \VermogenRechts:PWMUDB:km_tc\ : bit;
SIGNAL \VermogenRechts:PWMUDB:db_tc\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_1\\R\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_1\\S\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_0\\R\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_0\\S\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_sel\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cs_addr_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cs_addr_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cs_addr_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:final_capture\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cmp1_eq\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cmp1_less\ : bit;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ff0\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ff0\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:cmp2_eq\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cmp2_less\ : bit;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:z1\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:z1\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ff1\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ff1\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ov_msb\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ov_msb\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:co_msb\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:co_msb\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:cmsb\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:cmsb\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:so\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:so\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:f0_bus_stat\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:f0_bus_stat\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:f0_blk_stat\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:f0_blk_stat\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:fifo_nempty\ : bit;
SIGNAL \VermogenRechts:PWMUDB:fifo_full\ : bit;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ce0_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:cl0_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:z0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:z0_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ff0_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ce1_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:cl1_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:z1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:z1_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ff1_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:co_msb_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:cmsb_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:so_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:so_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:sP8:pwmdp:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \VermogenRechts:PWMUDB:sP8:pwmdp:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \VermogenRechts:PWMUDB:compare1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:compare2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm_i_reg\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm_i\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm1_i_reg\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm1_i\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm2_i_reg\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm2_i\ : bit;
SIGNAL \VermogenRechts:PWMUDB:tc_i_reg\ : bit;
SIGNAL \VermogenRechts:Net_101\ : bit;
SIGNAL \VermogenRechts:Net_96\ : bit;
SIGNAL Net_1270 : bit;
SIGNAL Net_1271 : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm_temp\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cmp1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:cmp2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_31\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_30\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_29\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_28\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_27\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_26\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_25\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_24\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_23\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_22\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_21\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_20\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_19\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_18\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_17\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_16\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_15\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_14\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_13\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_12\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_11\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_10\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_9\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_8\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_7\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_6\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_5\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_4\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_3\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:b_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_31\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_30\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_29\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_28\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_27\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_26\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_25\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_24\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_23\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_22\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_21\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_20\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_19\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_18\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_17\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_16\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_15\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_14\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_13\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_12\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_11\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_10\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_9\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_8\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_7\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_6\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_5\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_4\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_3\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODIN2_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:a_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODIN2_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_31\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_30\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_29\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_28\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_27\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_26\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_25\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_24\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_23\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_22\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_21\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_20\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_19\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_18\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_17\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_16\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_15\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_14\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_13\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_12\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_11\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_10\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_9\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_8\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_7\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_6\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_5\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_4\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_3\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:b_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_31\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_31\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_30\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_30\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_29\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_29\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_28\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_28\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_27\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_27\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_26\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_26\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_25\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_25\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_24\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_24\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_23\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_23\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_22\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_22\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_21\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_21\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_20\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_20\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_19\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_19\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_18\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_18\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_17\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_17\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_16\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_16\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_15\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_15\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_14\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_14\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_13\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_13\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_12\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_12\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_11\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_11\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_10\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_10\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_9\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_9\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_8\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_8\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_7\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_7\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_6\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_6\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_5\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_5\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_4\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_4\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_3\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_3\ : bit;
SIGNAL \VermogenRechts:PWMUDB:add_vi_vv_MODGEN_2_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:s_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL Net_1266 : bit;
SIGNAL \VermogenRechts:Net_55\ : bit;
SIGNAL Net_1273 : bit;
SIGNAL \VermogenRechts:Net_113\ : bit;
SIGNAL \VermogenRechts:Net_107\ : bit;
SIGNAL \VermogenRechts:Net_114\ : bit;
SIGNAL tmpOE__LichtRechts_net_0 : bit;
SIGNAL Net_1275 : bit;
SIGNAL tmpIO_0__LichtRechts_net_0 : bit;
TERMINAL tmpSIOVREF__LichtRechts_net_0 : bit;
SIGNAL tmpINTERRUPT_0__LichtRechts_net_0 : bit;
SIGNAL \UART_TRX:Net_9\ : bit;
SIGNAL \UART_TRX:Net_61\ : bit;
SIGNAL \UART_TRX:BUART:clock_op\ : bit;
SIGNAL \UART_TRX:BUART:reset_reg\ : bit;
SIGNAL \UART_TRX:BUART:tx_hd_send_break\ : bit;
SIGNAL \UART_TRX:BUART:HalfDuplexSend\ : bit;
SIGNAL \UART_TRX:BUART:FinalParityType_1\ : bit;
SIGNAL \UART_TRX:BUART:FinalParityType_0\ : bit;
SIGNAL \UART_TRX:BUART:FinalAddrMode_2\ : bit;
SIGNAL \UART_TRX:BUART:FinalAddrMode_1\ : bit;
SIGNAL \UART_TRX:BUART:FinalAddrMode_0\ : bit;
SIGNAL \UART_TRX:BUART:tx_ctrl_mark\ : bit;
SIGNAL \UART_TRX:BUART:reset_sr\ : bit;
SIGNAL \UART_TRX:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_1284 : bit;
SIGNAL \UART_TRX:BUART:txn\ : bit;
SIGNAL Net_1288 : bit;
SIGNAL \UART_TRX:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_1283 : bit;
SIGNAL \UART_TRX:BUART:rx_interrupt_out\ : bit;
SIGNAL \UART_TRX:BUART:tx_state_1\ : bit;
SIGNAL \UART_TRX:BUART:tx_state_0\ : bit;
SIGNAL \UART_TRX:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:tx_shift_out\ : bit;
SIGNAL \UART_TRX:BUART:tx_fifo_notfull\ : bit;
SIGNAL \UART_TRX:BUART:tx_fifo_empty\ : bit;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:counter_load_not\ : bit;
SIGNAL \UART_TRX:BUART:tx_state_2\ : bit;
SIGNAL \UART_TRX:BUART:tx_bitclk_dp\ : bit;
SIGNAL \UART_TRX:BUART:tx_counter_dp\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_7\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_6\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_5\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_4\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_3\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_2\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_1\ : bit;
SIGNAL \UART_TRX:BUART:sc_out_0\ : bit;
SIGNAL \UART_TRX:BUART:tx_counter_tc\ : bit;
SIGNAL \UART_TRX:BUART:tx_status_6\ : bit;
SIGNAL \UART_TRX:BUART:tx_status_5\ : bit;
SIGNAL \UART_TRX:BUART:tx_status_4\ : bit;
SIGNAL \UART_TRX:BUART:tx_status_0\ : bit;
SIGNAL \UART_TRX:BUART:tx_status_1\ : bit;
SIGNAL \UART_TRX:BUART:tx_status_2\ : bit;
SIGNAL \UART_TRX:BUART:tx_status_3\ : bit;
SIGNAL Net_1287 : bit;
SIGNAL \UART_TRX:BUART:tx_bitclk\ : bit;
SIGNAL \UART_TRX:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \UART_TRX:BUART:tx_mark\ : bit;
SIGNAL \UART_TRX:BUART:tx_parity_bit\ : bit;
SIGNAL \UART_TRX:BUART:rx_addressmatch\ : bit;
SIGNAL \UART_TRX:BUART:rx_addressmatch1\ : bit;
SIGNAL \UART_TRX:BUART:rx_addressmatch2\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_1\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_0\ : bit;
SIGNAL \UART_TRX:BUART:rx_bitclk_enable\ : bit;
SIGNAL \UART_TRX:BUART:rx_postpoll\ : bit;
ATTRIBUTE soft of \UART_TRX:BUART:rx_postpoll\:SIGNAL IS '1';
SIGNAL \UART_TRX:BUART:rx_load_fifo\ : bit;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:hd_shift_out\ : bit;
SIGNAL \UART_TRX:BUART:rx_fifonotempty\ : bit;
SIGNAL \UART_TRX:BUART:rx_fifofull\ : bit;
SIGNAL \UART_TRX:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \UART_TRX:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:rx_counter_load\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_3\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_2\ : bit;
SIGNAL \UART_TRX:BUART:rx_bitclk_pre\ : bit;
SIGNAL \UART_TRX:BUART:rx_count_2\ : bit;
SIGNAL \UART_TRX:BUART:rx_count_1\ : bit;
SIGNAL \UART_TRX:BUART:rx_count_0\ : bit;
SIGNAL \UART_TRX:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \UART_TRX:BUART:rx_count_6\ : bit;
SIGNAL \UART_TRX:BUART:rx_count_5\ : bit;
SIGNAL \UART_TRX:BUART:rx_count_4\ : bit;
SIGNAL \UART_TRX:BUART:rx_count_3\ : bit;
SIGNAL \UART_TRX:BUART:rx_count7_tc\ : bit;
SIGNAL \UART_TRX:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \UART_TRX:BUART:rx_bitclk\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \UART_TRX:BUART:rx_poll_bit1\ : bit;
SIGNAL \UART_TRX:BUART:rx_poll_bit2\ : bit;
SIGNAL \UART_TRX:BUART:pollingrange\ : bit;
SIGNAL \UART_TRX:BUART:pollcount_1\ : bit;
SIGNAL Net_1314 : bit;
SIGNAL add_vv_vv_MODGEN_3_1 : bit;
SIGNAL \UART_TRX:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_3_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_4 : bit;
SIGNAL cmp_vv_vv_MODGEN_5 : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_1\ : bit;
SIGNAL MODIN3_1 : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_0\ : bit;
SIGNAL MODIN3_0 : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\ : bit;
SIGNAL MODIN4_1 : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\ : bit;
SIGNAL MODIN4_0 : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_1\ : bit;
SIGNAL MODIN5_1 : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_0\ : bit;
SIGNAL MODIN5_0 : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_0\ : bit;
SIGNAL \UART_TRX:BUART:rx_status_0\ : bit;
SIGNAL \UART_TRX:BUART:rx_markspace_status\ : bit;
SIGNAL \UART_TRX:BUART:rx_status_1\ : bit;
SIGNAL \UART_TRX:BUART:rx_status_2\ : bit;
SIGNAL \UART_TRX:BUART:rx_parity_error_status\ : bit;
SIGNAL \UART_TRX:BUART:rx_status_3\ : bit;
SIGNAL \UART_TRX:BUART:rx_stop_bit_error\ : bit;
SIGNAL \UART_TRX:BUART:rx_status_4\ : bit;
SIGNAL \UART_TRX:BUART:rx_status_5\ : bit;
SIGNAL \UART_TRX:BUART:rx_status_6\ : bit;
SIGNAL \UART_TRX:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_1279 : bit;
SIGNAL \UART_TRX:BUART:rx_markspace_pre\ : bit;
SIGNAL \UART_TRX:BUART:rx_parity_error_pre\ : bit;
SIGNAL \UART_TRX:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_6 : bit;
SIGNAL \UART_TRX:BUART:rx_address_detected\ : bit;
SIGNAL \UART_TRX:BUART:rx_last\ : bit;
SIGNAL \UART_TRX:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_7 : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newa_6\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newa_5\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newa_4\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newa_3\ : bit;
SIGNAL MODIN6_6 : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newa_2\ : bit;
SIGNAL MODIN6_5 : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newa_1\ : bit;
SIGNAL MODIN6_4 : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newa_0\ : bit;
SIGNAL MODIN6_3 : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newb_6\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newb_5\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newb_4\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newb_3\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newb_2\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newb_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:newb_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:dataa_6\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:dataa_5\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:dataa_4\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:dataa_3\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:dataa_2\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:dataa_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:dataa_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:datab_6\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:datab_5\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:datab_4\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:datab_3\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:datab_2\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:datab_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:datab_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:lta_6\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:gta_6\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:lta_5\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:gta_5\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:lta_4\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:gta_4\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:lta_3\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:gta_3\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:lta_2\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:gta_2\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:lta_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:gta_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:lta_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_6:g2:a0:gta_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:newa_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:newb_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:dataa_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:datab_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:xeq\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:xneq\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:xlt\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:xlte\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:xgt\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:g1:a0:xgte\ : bit;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:lt\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:MODULE_7:lt\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:eq\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:MODULE_7:eq\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:gt\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:MODULE_7:gt\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:gte\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:MODULE_7:gte\:SIGNAL IS 2;
SIGNAL \UART_TRX:BUART:sRX:MODULE_7:lte\ : bit;
ATTRIBUTE port_state_att of \UART_TRX:BUART:sRX:MODULE_7:lte\:SIGNAL IS 2;
SIGNAL tmpOE__Tx_TRX_net_0 : bit;
SIGNAL tmpFB_0__Tx_TRX_net_0 : bit;
SIGNAL tmpIO_0__Tx_TRX_net_0 : bit;
TERMINAL tmpSIOVREF__Tx_TRX_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Tx_TRX_net_0 : bit;
SIGNAL \Tafel:tmp__Tafel_ins_1\ : bit;
SIGNAL \Tafel:tmp__Tafel_ins_0\ : bit;
SIGNAL \Tafel:tmp__Tafel_reg_2\ : bit;
SIGNAL \Tafel:tmp__Tafel_reg_1\ : bit;
SIGNAL \Tafel:tmp__Tafel_reg_0\ : bit;
SIGNAL Net_1295 : bit;
SIGNAL Net_1294 : bit;
SIGNAL Net_1293 : bit;
SIGNAL tmpOE__GeenIsr0_net_0 : bit;
SIGNAL tmpFB_0__GeenIsr0_net_0 : bit;
SIGNAL tmpIO_0__GeenIsr0_net_0 : bit;
TERMINAL tmpSIOVREF__GeenIsr0_net_0 : bit;
SIGNAL tmpINTERRUPT_0__GeenIsr0_net_0 : bit;
SIGNAL tmpOE__GeenIsr1_net_0 : bit;
SIGNAL tmpFB_0__GeenIsr1_net_0 : bit;
SIGNAL tmpIO_0__GeenIsr1_net_0 : bit;
TERMINAL tmpSIOVREF__GeenIsr1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__GeenIsr1_net_0 : bit;
SIGNAL tmpOE__GeenIsr2_net_0 : bit;
SIGNAL tmpFB_0__GeenIsr2_net_0 : bit;
SIGNAL tmpIO_0__GeenIsr2_net_0 : bit;
TERMINAL tmpSIOVREF__GeenIsr2_net_0 : bit;
SIGNAL tmpINTERRUPT_0__GeenIsr2_net_0 : bit;
SIGNAL tmpOE__Rx_RCX_net_0 : bit;
SIGNAL Net_1301 : bit;
SIGNAL tmpIO_0__Rx_RCX_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_RCX_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_RCX_net_0 : bit;
SIGNAL Net_1303 : bit;
SIGNAL \UART_RCX:Net_9\ : bit;
SIGNAL \UART_RCX:Net_61\ : bit;
SIGNAL \UART_RCX:BUART:clock_op\ : bit;
SIGNAL \UART_RCX:BUART:reset_reg\ : bit;
SIGNAL \UART_RCX:BUART:tx_hd_send_break\ : bit;
SIGNAL \UART_RCX:BUART:HalfDuplexSend\ : bit;
SIGNAL \UART_RCX:BUART:FinalParityType_1\ : bit;
SIGNAL \UART_RCX:BUART:FinalParityType_0\ : bit;
SIGNAL \UART_RCX:BUART:FinalAddrMode_2\ : bit;
SIGNAL \UART_RCX:BUART:FinalAddrMode_1\ : bit;
SIGNAL \UART_RCX:BUART:FinalAddrMode_0\ : bit;
SIGNAL \UART_RCX:BUART:tx_ctrl_mark\ : bit;
SIGNAL \UART_RCX:BUART:reset_sr\ : bit;
SIGNAL \UART_RCX:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_1315 : bit;
SIGNAL \UART_RCX:BUART:txn\ : bit;
SIGNAL Net_1313 : bit;
SIGNAL \UART_RCX:BUART:tx_interrupt_out\ : bit;
SIGNAL \UART_RCX:BUART:rx_interrupt_out\ : bit;
SIGNAL \UART_RCX:BUART:tx_state_1\ : bit;
SIGNAL \UART_RCX:BUART:tx_state_0\ : bit;
SIGNAL \UART_RCX:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:tx_shift_out\ : bit;
SIGNAL \UART_RCX:BUART:tx_fifo_notfull\ : bit;
SIGNAL \UART_RCX:BUART:tx_fifo_empty\ : bit;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:counter_load_not\ : bit;
SIGNAL \UART_RCX:BUART:tx_state_2\ : bit;
SIGNAL \UART_RCX:BUART:tx_bitclk_dp\ : bit;
SIGNAL \UART_RCX:BUART:tx_counter_dp\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_7\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_6\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_5\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_4\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_3\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_2\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_1\ : bit;
SIGNAL \UART_RCX:BUART:sc_out_0\ : bit;
SIGNAL \UART_RCX:BUART:tx_counter_tc\ : bit;
SIGNAL \UART_RCX:BUART:tx_status_6\ : bit;
SIGNAL \UART_RCX:BUART:tx_status_5\ : bit;
SIGNAL \UART_RCX:BUART:tx_status_4\ : bit;
SIGNAL \UART_RCX:BUART:tx_status_0\ : bit;
SIGNAL \UART_RCX:BUART:tx_status_1\ : bit;
SIGNAL \UART_RCX:BUART:tx_status_2\ : bit;
SIGNAL \UART_RCX:BUART:tx_status_3\ : bit;
SIGNAL Net_1312 : bit;
SIGNAL \UART_RCX:BUART:tx_bitclk\ : bit;
SIGNAL \UART_RCX:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \UART_RCX:BUART:tx_mark\ : bit;
SIGNAL \UART_RCX:BUART:tx_parity_bit\ : bit;
SIGNAL \UART_RCX:BUART:rx_addressmatch\ : bit;
SIGNAL \UART_RCX:BUART:rx_addressmatch1\ : bit;
SIGNAL \UART_RCX:BUART:rx_addressmatch2\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_1\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_0\ : bit;
SIGNAL \UART_RCX:BUART:rx_bitclk_enable\ : bit;
SIGNAL \UART_RCX:BUART:rx_postpoll\ : bit;
ATTRIBUTE soft of \UART_RCX:BUART:rx_postpoll\:SIGNAL IS '1';
SIGNAL \UART_RCX:BUART:rx_load_fifo\ : bit;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:hd_shift_out\ : bit;
SIGNAL \UART_RCX:BUART:rx_fifonotempty\ : bit;
SIGNAL \UART_RCX:BUART:rx_fifofull\ : bit;
SIGNAL \UART_RCX:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \UART_RCX:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:rx_counter_load\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_3\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_2\ : bit;
SIGNAL \UART_RCX:BUART:rx_bitclk_pre\ : bit;
SIGNAL \UART_RCX:BUART:rx_count_2\ : bit;
SIGNAL \UART_RCX:BUART:rx_count_1\ : bit;
SIGNAL \UART_RCX:BUART:rx_count_0\ : bit;
SIGNAL \UART_RCX:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \UART_RCX:BUART:rx_count_6\ : bit;
SIGNAL \UART_RCX:BUART:rx_count_5\ : bit;
SIGNAL \UART_RCX:BUART:rx_count_4\ : bit;
SIGNAL \UART_RCX:BUART:rx_count_3\ : bit;
SIGNAL \UART_RCX:BUART:rx_count7_tc\ : bit;
SIGNAL \UART_RCX:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \UART_RCX:BUART:rx_bitclk\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \UART_RCX:BUART:rx_poll_bit1\ : bit;
SIGNAL \UART_RCX:BUART:rx_poll_bit2\ : bit;
SIGNAL \UART_RCX:BUART:pollingrange\ : bit;
SIGNAL \UART_RCX:BUART:pollcount_1\ : bit;
SIGNAL add_vv_vv_MODGEN_8_1 : bit;
SIGNAL \UART_RCX:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_8_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_9 : bit;
SIGNAL cmp_vv_vv_MODGEN_10 : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:a_1\ : bit;
SIGNAL MODIN7_1 : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:a_0\ : bit;
SIGNAL MODIN7_0 : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:b_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:b_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:s_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:s_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_1\ : bit;
SIGNAL MODIN8_1 : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_0\ : bit;
SIGNAL MODIN8_0 : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:newa_1\ : bit;
SIGNAL MODIN9_1 : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:newa_0\ : bit;
SIGNAL MODIN9_0 : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:newb_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:newb_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:dataa_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:dataa_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:datab_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:datab_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:lta_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:gta_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:lta_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:s23Poll:MODULE_10:g2:a0:gta_0\ : bit;
SIGNAL \UART_RCX:BUART:rx_status_0\ : bit;
SIGNAL \UART_RCX:BUART:rx_markspace_status\ : bit;
SIGNAL \UART_RCX:BUART:rx_status_1\ : bit;
SIGNAL \UART_RCX:BUART:rx_status_2\ : bit;
SIGNAL \UART_RCX:BUART:rx_parity_error_status\ : bit;
SIGNAL \UART_RCX:BUART:rx_status_3\ : bit;
SIGNAL \UART_RCX:BUART:rx_stop_bit_error\ : bit;
SIGNAL \UART_RCX:BUART:rx_status_4\ : bit;
SIGNAL \UART_RCX:BUART:rx_status_5\ : bit;
SIGNAL \UART_RCX:BUART:rx_status_6\ : bit;
SIGNAL \UART_RCX:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_1307 : bit;
SIGNAL \UART_RCX:BUART:rx_markspace_pre\ : bit;
SIGNAL \UART_RCX:BUART:rx_parity_error_pre\ : bit;
SIGNAL \UART_RCX:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_11 : bit;
SIGNAL \UART_RCX:BUART:rx_address_detected\ : bit;
SIGNAL \UART_RCX:BUART:rx_last\ : bit;
SIGNAL \UART_RCX:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_12 : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newa_6\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newa_5\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newa_4\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newa_3\ : bit;
SIGNAL MODIN10_6 : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newa_2\ : bit;
SIGNAL MODIN10_5 : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newa_1\ : bit;
SIGNAL MODIN10_4 : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newa_0\ : bit;
SIGNAL MODIN10_3 : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newb_6\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newb_5\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newb_4\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newb_3\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newb_2\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newb_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:newb_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:dataa_6\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:dataa_5\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:dataa_4\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:dataa_3\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:dataa_2\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:dataa_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:dataa_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:datab_6\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:datab_5\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:datab_4\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:datab_3\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:datab_2\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:datab_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:datab_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:lta_6\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:gta_6\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:lta_5\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:gta_5\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:lta_4\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:gta_4\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:lta_3\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:gta_3\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:lta_2\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:gta_2\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:lta_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:gta_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:lta_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_11:g2:a0:gta_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:newa_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:newb_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:dataa_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:datab_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:xeq\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:xneq\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:xlt\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:xlte\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:xgt\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:g1:a0:xgte\ : bit;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:lt\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:MODULE_12:lt\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:eq\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:MODULE_12:eq\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:gt\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:MODULE_12:gt\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:gte\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:MODULE_12:gte\:SIGNAL IS 2;
SIGNAL \UART_RCX:BUART:sRX:MODULE_12:lte\ : bit;
ATTRIBUTE port_state_att of \UART_RCX:BUART:sRX:MODULE_12:lte\:SIGNAL IS 2;
SIGNAL \USB:Net_9\ : bit;
SIGNAL \USB:Net_61\ : bit;
SIGNAL \USB:BUART:clock_op\ : bit;
SIGNAL \USB:BUART:reset_reg\ : bit;
SIGNAL \USB:BUART:tx_hd_send_break\ : bit;
SIGNAL \USB:BUART:HalfDuplexSend\ : bit;
SIGNAL \USB:BUART:FinalParityType_1\ : bit;
SIGNAL \USB:BUART:FinalParityType_0\ : bit;
SIGNAL \USB:BUART:FinalAddrMode_2\ : bit;
SIGNAL \USB:BUART:FinalAddrMode_1\ : bit;
SIGNAL \USB:BUART:FinalAddrMode_0\ : bit;
SIGNAL \USB:BUART:tx_ctrl_mark\ : bit;
SIGNAL \USB:BUART:reset_sr\ : bit;
SIGNAL \USB:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_1324 : bit;
SIGNAL \USB:BUART:txn\ : bit;
SIGNAL Net_1328 : bit;
SIGNAL \USB:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_1323 : bit;
SIGNAL \USB:BUART:rx_interrupt_out\ : bit;
SIGNAL \USB:BUART:tx_state_1\ : bit;
SIGNAL \USB:BUART:tx_state_0\ : bit;
SIGNAL \USB:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \USB:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \USB:BUART:tx_shift_out\ : bit;
SIGNAL \USB:BUART:tx_fifo_notfull\ : bit;
SIGNAL \USB:BUART:tx_fifo_empty\ : bit;
SIGNAL \USB:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:counter_load_not\ : bit;
SIGNAL \USB:BUART:tx_state_2\ : bit;
SIGNAL \USB:BUART:tx_bitclk_dp\ : bit;
SIGNAL \USB:BUART:tx_counter_dp\ : bit;
SIGNAL \USB:BUART:sc_out_7\ : bit;
SIGNAL \USB:BUART:sc_out_6\ : bit;
SIGNAL \USB:BUART:sc_out_5\ : bit;
SIGNAL \USB:BUART:sc_out_4\ : bit;
SIGNAL \USB:BUART:sc_out_3\ : bit;
SIGNAL \USB:BUART:sc_out_2\ : bit;
SIGNAL \USB:BUART:sc_out_1\ : bit;
SIGNAL \USB:BUART:sc_out_0\ : bit;
SIGNAL \USB:BUART:tx_counter_tc\ : bit;
SIGNAL \USB:BUART:tx_status_6\ : bit;
SIGNAL \USB:BUART:tx_status_5\ : bit;
SIGNAL \USB:BUART:tx_status_4\ : bit;
SIGNAL \USB:BUART:tx_status_0\ : bit;
SIGNAL \USB:BUART:tx_status_1\ : bit;
SIGNAL \USB:BUART:tx_status_2\ : bit;
SIGNAL \USB:BUART:tx_status_3\ : bit;
SIGNAL Net_1327 : bit;
SIGNAL \USB:BUART:tx_bitclk\ : bit;
SIGNAL \USB:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \USB:BUART:tx_mark\ : bit;
SIGNAL \USB:BUART:tx_parity_bit\ : bit;
SIGNAL \USB:BUART:rx_addressmatch\ : bit;
SIGNAL \USB:BUART:rx_addressmatch1\ : bit;
SIGNAL \USB:BUART:rx_addressmatch2\ : bit;
SIGNAL \USB:BUART:rx_state_1\ : bit;
SIGNAL \USB:BUART:rx_state_0\ : bit;
SIGNAL \USB:BUART:rx_bitclk_enable\ : bit;
SIGNAL \USB:BUART:rx_postpoll\ : bit;
SIGNAL \USB:BUART:rx_load_fifo\ : bit;
SIGNAL \USB:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \USB:BUART:hd_shift_out\ : bit;
SIGNAL \USB:BUART:rx_fifonotempty\ : bit;
SIGNAL \USB:BUART:rx_fifofull\ : bit;
SIGNAL \USB:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \USB:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \USB:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \USB:BUART:rx_counter_load\ : bit;
SIGNAL \USB:BUART:rx_state_3\ : bit;
SIGNAL \USB:BUART:rx_state_2\ : bit;
SIGNAL \USB:BUART:rx_bitclk_pre\ : bit;
SIGNAL \USB:BUART:rx_count_2\ : bit;
SIGNAL \USB:BUART:rx_count_1\ : bit;
SIGNAL \USB:BUART:rx_count_0\ : bit;
SIGNAL \USB:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \USB:BUART:rx_count_6\ : bit;
SIGNAL \USB:BUART:rx_count_5\ : bit;
SIGNAL \USB:BUART:rx_count_4\ : bit;
SIGNAL \USB:BUART:rx_count_3\ : bit;
SIGNAL \USB:BUART:rx_count7_tc\ : bit;
SIGNAL \USB:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \USB:BUART:rx_bitclk\ : bit;
SIGNAL \USB:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \USB:BUART:rx_poll_bit1\ : bit;
SIGNAL \USB:BUART:rx_poll_bit2\ : bit;
SIGNAL \USB:BUART:pollingrange\ : bit;
SIGNAL \USB:BUART:pollcount_1\ : bit;
SIGNAL Net_1320 : bit;
SIGNAL \USB:BUART:sRX:s23Poll:add_vv_vv_MODGEN_13_1\ : bit;
SIGNAL \USB:BUART:pollcount_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:add_vv_vv_MODGEN_13_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_14\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_15\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:a_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODIN11_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:a_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODIN11_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:b_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:b_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:s_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:s_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:newa_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODIN12_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:newa_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODIN12_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:newb_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:newb_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:dataa_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:dataa_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:datab_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:datab_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:lta_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:gta_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:lta_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_14:g2:a0:gta_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:newa_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODIN13_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:newa_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODIN13_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:newb_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:newb_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:dataa_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:dataa_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:datab_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:datab_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:lta_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:gta_1\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:lta_0\ : bit;
SIGNAL \USB:BUART:sRX:s23Poll:MODULE_15:g2:a0:gta_0\ : bit;
SIGNAL \USB:BUART:rx_status_0\ : bit;
SIGNAL \USB:BUART:rx_markspace_status\ : bit;
SIGNAL \USB:BUART:rx_status_1\ : bit;
SIGNAL \USB:BUART:rx_status_2\ : bit;
SIGNAL \USB:BUART:rx_parity_error_status\ : bit;
SIGNAL \USB:BUART:rx_status_3\ : bit;
SIGNAL \USB:BUART:rx_stop_bit_error\ : bit;
SIGNAL \USB:BUART:rx_status_4\ : bit;
SIGNAL \USB:BUART:rx_status_5\ : bit;
SIGNAL \USB:BUART:rx_status_6\ : bit;
SIGNAL \USB:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_1319 : bit;
SIGNAL \USB:BUART:rx_markspace_pre\ : bit;
SIGNAL \USB:BUART:rx_parity_error_pre\ : bit;
SIGNAL \USB:BUART:rx_break_status\ : bit;
SIGNAL \USB:BUART:sRX:cmp_vv_vv_MODGEN_16\ : bit;
SIGNAL \USB:BUART:rx_address_detected\ : bit;
SIGNAL \USB:BUART:rx_last\ : bit;
SIGNAL \USB:BUART:rx_parity_bit\ : bit;
SIGNAL \USB:BUART:sRX:cmp_vv_vv_MODGEN_17\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newa_6\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newa_5\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newa_4\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newa_3\ : bit;
SIGNAL \USB:BUART:sRX:MODIN14_6\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newa_2\ : bit;
SIGNAL \USB:BUART:sRX:MODIN14_5\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newa_1\ : bit;
SIGNAL \USB:BUART:sRX:MODIN14_4\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newa_0\ : bit;
SIGNAL \USB:BUART:sRX:MODIN14_3\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newb_6\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newb_5\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newb_4\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newb_3\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newb_2\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newb_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:newb_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:dataa_6\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:dataa_5\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:dataa_4\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:dataa_3\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:dataa_2\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:dataa_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:dataa_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:datab_6\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:datab_5\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:datab_4\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:datab_3\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:datab_2\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:datab_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:datab_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:lta_6\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:gta_6\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:lta_5\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:gta_5\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:lta_4\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:gta_4\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:lta_3\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:gta_3\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:lta_2\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:gta_2\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:lta_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:gta_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:lta_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_16:g2:a0:gta_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:newa_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:newb_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:dataa_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:datab_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:xeq\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:xneq\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:xlt\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:xlte\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:xgt\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:g1:a0:xgte\ : bit;
SIGNAL \USB:BUART:sRX:MODULE_17:lt\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:MODULE_17:lt\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:MODULE_17:eq\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:MODULE_17:eq\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:MODULE_17:gt\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:MODULE_17:gt\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:MODULE_17:gte\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:MODULE_17:gte\:SIGNAL IS 2;
SIGNAL \USB:BUART:sRX:MODULE_17:lte\ : bit;
ATTRIBUTE port_state_att of \USB:BUART:sRX:MODULE_17:lte\:SIGNAL IS 2;
SIGNAL tmpOE__Rx_1_net_0 : bit;
SIGNAL tmpIO_0__Rx_1_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_1_net_0 : bit;
SIGNAL tmpOE__Tx_1_net_0 : bit;
SIGNAL tmpFB_0__Tx_1_net_0 : bit;
SIGNAL tmpIO_0__Tx_1_net_0 : bit;
TERMINAL tmpSIOVREF__Tx_1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Tx_1_net_0 : bit;
SIGNAL tmpOE__TRX_rx_net_0 : bit;
SIGNAL tmpIO_0__TRX_rx_net_0 : bit;
TERMINAL tmpSIOVREF__TRX_rx_net_0 : bit;
SIGNAL tmpINTERRUPT_0__TRX_rx_net_0 : bit;
SIGNAL tmpOE__RCX_tx_net_0 : bit;
SIGNAL tmpFB_0__RCX_tx_net_0 : bit;
SIGNAL tmpIO_0__RCX_tx_net_0 : bit;
TERMINAL tmpSIOVREF__RCX_tx_net_0 : bit;
SIGNAL tmpINTERRUPT_0__RCX_tx_net_0 : bit;
SIGNAL \VermogenLinks:PWMUDB:min_kill_reg\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:prevCapture\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:trig_last\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:runmode_enable\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:sc_kill_tmp\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:ltch_kill_reg\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_1\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:dith_count_0\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm_i_reg\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm1_i_reg\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:pwm2_i_reg\\D\ : bit;
SIGNAL \VermogenLinks:PWMUDB:tc_i_reg\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:min_kill_reg\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:prevCapture\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:trig_last\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:runmode_enable\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:sc_kill_tmp\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:ltch_kill_reg\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_1\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:dith_count_0\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm_i_reg\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm1_i_reg\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:pwm2_i_reg\\D\ : bit;
SIGNAL \VermogenRechts:PWMUDB:tc_i_reg\\D\ : bit;
SIGNAL \UART_TRX:BUART:reset_reg\\D\ : bit;
SIGNAL \UART_TRX:BUART:txn\\D\ : bit;
SIGNAL \UART_TRX:BUART:tx_state_1\\D\ : bit;
SIGNAL \UART_TRX:BUART:tx_state_0\\D\ : bit;
SIGNAL \UART_TRX:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_1287D : bit;
SIGNAL \UART_TRX:BUART:tx_bitclk\\D\ : bit;
SIGNAL \UART_TRX:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \UART_TRX:BUART:tx_mark\\D\ : bit;
SIGNAL \UART_TRX:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_1\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_0\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_3\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_2\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_bitclk\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \UART_TRX:BUART:pollcount_1\\D\ : bit;
SIGNAL \UART_TRX:BUART:pollcount_0\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_break_status\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_address_detected\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_last\\D\ : bit;
SIGNAL \UART_TRX:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \UART_RCX:BUART:reset_reg\\D\ : bit;
SIGNAL \UART_RCX:BUART:txn\\D\ : bit;
SIGNAL \UART_RCX:BUART:tx_state_1\\D\ : bit;
SIGNAL \UART_RCX:BUART:tx_state_0\\D\ : bit;
SIGNAL \UART_RCX:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_1312D : bit;
SIGNAL \UART_RCX:BUART:tx_bitclk\\D\ : bit;
SIGNAL \UART_RCX:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \UART_RCX:BUART:tx_mark\\D\ : bit;
SIGNAL \UART_RCX:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_1\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_0\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_3\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_2\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_bitclk\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \UART_RCX:BUART:pollcount_1\\D\ : bit;
SIGNAL \UART_RCX:BUART:pollcount_0\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_break_status\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_address_detected\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_last\\D\ : bit;
SIGNAL \UART_RCX:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \USB:BUART:reset_reg\\D\ : bit;
SIGNAL \USB:BUART:txn\\D\ : bit;
SIGNAL \USB:BUART:tx_state_1\\D\ : bit;
SIGNAL \USB:BUART:tx_state_0\\D\ : bit;
SIGNAL \USB:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_1327D : bit;
SIGNAL \USB:BUART:tx_bitclk\\D\ : bit;
SIGNAL \USB:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \USB:BUART:tx_mark\\D\ : bit;
SIGNAL \USB:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \USB:BUART:rx_state_1\\D\ : bit;
SIGNAL \USB:BUART:rx_state_0\\D\ : bit;
SIGNAL \USB:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \USB:BUART:rx_state_3\\D\ : bit;
SIGNAL \USB:BUART:rx_state_2\\D\ : bit;
SIGNAL \USB:BUART:rx_bitclk\\D\ : bit;
SIGNAL \USB:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \USB:BUART:pollcount_1\\D\ : bit;
SIGNAL \USB:BUART:pollcount_0\\D\ : bit;
SIGNAL \USB:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \USB:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \USB:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \USB:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \USB:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \USB:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \USB:BUART:rx_break_status\\D\ : bit;
SIGNAL \USB:BUART:rx_address_detected\\D\ : bit;
SIGNAL \USB:BUART:rx_last\\D\ : bit;
SIGNAL \USB:BUART:rx_parity_bit\\D\ : bit;
BEGIN

zero <=  ('0') ;

tmpOE__LichtLinks_net_0 <=  ('1') ;

\VermogenLinks:PWMUDB:sc_kill_tmp\\D\ <= (not \VermogenLinks:PWMUDB:tc_i\);

\VermogenLinks:PWMUDB:dith_count_1\\D\ <= ((not \VermogenLinks:PWMUDB:dith_count_1\ and \VermogenLinks:PWMUDB:tc_i\ and \VermogenLinks:PWMUDB:dith_count_0\)
	OR (not \VermogenLinks:PWMUDB:dith_count_0\ and \VermogenLinks:PWMUDB:dith_count_1\)
	OR (not \VermogenLinks:PWMUDB:tc_i\ and \VermogenLinks:PWMUDB:dith_count_1\));

\VermogenLinks:PWMUDB:dith_count_0\\D\ <= ((not \VermogenLinks:PWMUDB:dith_count_0\ and \VermogenLinks:PWMUDB:tc_i\)
	OR (not \VermogenLinks:PWMUDB:tc_i\ and \VermogenLinks:PWMUDB:dith_count_0\));

\VermogenLinks:PWMUDB:tc_i_reg\\D\ <= ((\VermogenLinks:PWMUDB:runmode_enable\ and \VermogenLinks:PWMUDB:tc_i\));

\VermogenLinks:PWMUDB:pwm_i\ <= ((\VermogenLinks:PWMUDB:runmode_enable\ and \VermogenLinks:PWMUDB:cmp1_less\));

\VermogenRechts:PWMUDB:sc_kill_tmp\\D\ <= (not \VermogenRechts:PWMUDB:tc_i\);

\VermogenRechts:PWMUDB:dith_count_1\\D\ <= ((not \VermogenRechts:PWMUDB:dith_count_1\ and \VermogenRechts:PWMUDB:tc_i\ and \VermogenRechts:PWMUDB:dith_count_0\)
	OR (not \VermogenRechts:PWMUDB:dith_count_0\ and \VermogenRechts:PWMUDB:dith_count_1\)
	OR (not \VermogenRechts:PWMUDB:tc_i\ and \VermogenRechts:PWMUDB:dith_count_1\));

\VermogenRechts:PWMUDB:dith_count_0\\D\ <= ((not \VermogenRechts:PWMUDB:dith_count_0\ and \VermogenRechts:PWMUDB:tc_i\)
	OR (not \VermogenRechts:PWMUDB:tc_i\ and \VermogenRechts:PWMUDB:dith_count_0\));

\VermogenRechts:PWMUDB:tc_i_reg\\D\ <= ((\VermogenRechts:PWMUDB:runmode_enable\ and \VermogenRechts:PWMUDB:tc_i\));

\VermogenRechts:PWMUDB:pwm_i\ <= ((\VermogenRechts:PWMUDB:runmode_enable\ and \VermogenRechts:PWMUDB:cmp1_less\));

Net_1284 <= (not \UART_TRX:BUART:txn\);

\UART_TRX:BUART:counter_load_not\ <= ((not \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_state_0\)
	OR (not \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_state_1\)
	OR (not \UART_TRX:BUART:tx_bitclk_enable_pre\ and \UART_TRX:BUART:tx_state_2\));

\UART_TRX:BUART:tx_status_0\ <= ((\UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_bitclk_enable_pre\ and \UART_TRX:BUART:tx_fifo_empty\ and \UART_TRX:BUART:tx_state_2\));

\UART_TRX:BUART:tx_status_2\ <= (not \UART_TRX:BUART:tx_fifo_notfull\);

Net_1287D <= ((not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:tx_state_0\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:tx_state_1\));

\UART_TRX:BUART:tx_bitclk\\D\ <= ((not \UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_bitclk_enable_pre\)
	OR (not \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_bitclk_enable_pre\)
	OR (not \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_bitclk_enable_pre\));

\UART_TRX:BUART:tx_mark\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:tx_mark\));

\UART_TRX:BUART:tx_state_2\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_bitclk\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_bitclk_enable_pre\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_state_2\));

\UART_TRX:BUART:tx_state_1\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_1\ and not \UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_bitclk\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_bitclk_enable_pre\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_bitclk_enable_pre\ and \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_2\ and not \UART_TRX:BUART:tx_bitclk\ and \UART_TRX:BUART:tx_state_1\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_state_1\));

\UART_TRX:BUART:tx_state_0\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_0\ and not \UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_counter_dp\ and \UART_TRX:BUART:tx_bitclk\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_1\ and not \UART_TRX:BUART:tx_state_0\ and not \UART_TRX:BUART:tx_fifo_empty\ and not \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_bitclk_enable_pre\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_2\ and not \UART_TRX:BUART:tx_bitclk\ and \UART_TRX:BUART:tx_state_0\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_bitclk_enable_pre\ and \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_fifo_empty\ and \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_state_2\));

\UART_TRX:BUART:txn\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:txn\ and not \UART_TRX:BUART:tx_state_0\ and not \UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_counter_dp\ and \UART_TRX:BUART:tx_bitclk\ and \UART_TRX:BUART:tx_parity_bit\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_0\ and not \UART_TRX:BUART:tx_shift_out\ and not \UART_TRX:BUART:tx_state_2\ and not \UART_TRX:BUART:tx_counter_dp\ and \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_bitclk\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_0\ and not \UART_TRX:BUART:tx_parity_bit\ and \UART_TRX:BUART:txn\ and \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_counter_dp\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_1\ and not \UART_TRX:BUART:tx_state_2\ and not \UART_TRX:BUART:tx_bitclk\ and \UART_TRX:BUART:tx_state_0\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_state_1\ and not \UART_TRX:BUART:tx_shift_out\ and not \UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_state_0\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:tx_bitclk\ and \UART_TRX:BUART:txn\ and \UART_TRX:BUART:tx_state_1\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:txn\ and \UART_TRX:BUART:tx_state_2\));

\UART_TRX:BUART:tx_parity_bit\\D\ <= ((not \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:txn\ and \UART_TRX:BUART:tx_parity_bit\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:txn\ and not \UART_TRX:BUART:tx_state_0\ and not \UART_TRX:BUART:tx_state_2\ and not \UART_TRX:BUART:tx_parity_bit\ and \UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_bitclk\)
	OR (\UART_TRX:BUART:tx_state_1\ and \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_parity_bit\)
	OR (not \UART_TRX:BUART:tx_state_1\ and not \UART_TRX:BUART:tx_state_0\ and \UART_TRX:BUART:tx_parity_bit\)
	OR (not \UART_TRX:BUART:tx_bitclk\ and \UART_TRX:BUART:tx_parity_bit\)
	OR (\UART_TRX:BUART:tx_state_2\ and \UART_TRX:BUART:tx_parity_bit\)
	OR (\UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:tx_parity_bit\));

\UART_TRX:BUART:rx_counter_load\ <= ((not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_state_3\ and not \UART_TRX:BUART:rx_state_2\));

\UART_TRX:BUART:rx_bitclk_pre\ <= ((not \UART_TRX:BUART:rx_count_2\ and not \UART_TRX:BUART:rx_count_1\ and not \UART_TRX:BUART:rx_count_0\));

\UART_TRX:BUART:rx_state_stop1_reg\\D\ <= (not \UART_TRX:BUART:rx_state_2\
	OR not \UART_TRX:BUART:rx_state_3\
	OR \UART_TRX:BUART:rx_state_0\
	OR \UART_TRX:BUART:rx_state_1\);

\UART_TRX:BUART:pollcount_1\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_count_2\ and not \UART_TRX:BUART:rx_count_1\ and not MODIN3_1 and Net_1314 and MODIN3_0)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_count_2\ and not \UART_TRX:BUART:rx_count_1\ and not MODIN3_0 and MODIN3_1)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_count_2\ and not \UART_TRX:BUART:rx_count_1\ and not Net_1314 and MODIN3_1));

\UART_TRX:BUART:pollcount_0\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_count_2\ and not \UART_TRX:BUART:rx_count_1\ and not MODIN3_0 and Net_1314)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_count_2\ and not \UART_TRX:BUART:rx_count_1\ and not Net_1314 and MODIN3_0));

\UART_TRX:BUART:rx_postpoll\ <= ((Net_1314 and MODIN3_0)
	OR MODIN3_1);

\UART_TRX:BUART:rx_status_4\ <= ((\UART_TRX:BUART:rx_load_fifo\ and \UART_TRX:BUART:rx_fifofull\));

\UART_TRX:BUART:rx_status_5\ <= ((\UART_TRX:BUART:rx_fifonotempty\ and \UART_TRX:BUART:rx_state_stop1_reg\));

\UART_TRX:BUART:rx_stop_bit_error\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_postpoll\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_3\ and \UART_TRX:BUART:rx_state_2\));

\UART_TRX:BUART:rx_parity_error_status\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_3\ and \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_parity_error_pre\));

\UART_TRX:BUART:rx_load_fifo\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_3\));

\UART_TRX:BUART:rx_state_3\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_2\ and not MODIN6_6 and not MODIN6_4 and \UART_TRX:BUART:rx_state_0\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_2\ and not MODIN6_6 and not MODIN6_5 and \UART_TRX:BUART:rx_state_0\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_3\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_1\ and \UART_TRX:BUART:rx_state_3\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_state_3\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_state_3\));

\UART_TRX:BUART:rx_state_2\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_state_3\ and not \UART_TRX:BUART:rx_state_2\ and not Net_1314 and \UART_TRX:BUART:rx_last\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_3\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_1\ and \UART_TRX:BUART:rx_state_2\));

\UART_TRX:BUART:rx_state_1\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_1\));

\UART_TRX:BUART:rx_state_0\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_postpoll\ and not \UART_TRX:BUART:rx_state_3\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_2\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_0\ and MODIN6_5 and MODIN6_4)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_0\ and MODIN6_6)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_state_3\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_1\ and \UART_TRX:BUART:rx_state_0\)
	OR (not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_state_2\));

\UART_TRX:BUART:rx_last\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and Net_1314));

\UART_TRX:BUART:rx_address_detected\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_address_detected\));

\UART_TRX:BUART:rx_parity_bit\\D\ <= ((not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_parity_bit\)
	OR (\UART_TRX:BUART:rx_postpoll\ and \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_parity_bit\)
	OR (not \UART_TRX:BUART:rx_postpoll\ and \UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_parity_bit\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_3\ and not \UART_TRX:BUART:rx_state_2\ and not \UART_TRX:BUART:rx_parity_bit\ and \UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_postpoll\)
	OR (not \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_parity_bit\)
	OR (\UART_TRX:BUART:rx_state_3\ and \UART_TRX:BUART:rx_parity_bit\)
	OR (\UART_TRX:BUART:rx_state_1\ and \UART_TRX:BUART:rx_parity_bit\)
	OR (\UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_parity_bit\));

\UART_TRX:BUART:rx_parity_error_pre\\D\ <= ((not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_postpoll\ and not \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_state_3\ and \UART_TRX:BUART:rx_parity_bit\)
	OR (not \UART_TRX:BUART:reset_reg\ and not \UART_TRX:BUART:rx_state_1\ and not \UART_TRX:BUART:rx_state_0\ and not \UART_TRX:BUART:rx_state_2\ and not \UART_TRX:BUART:rx_parity_bit\ and \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_postpoll\ and \UART_TRX:BUART:rx_state_3\)
	OR (not \UART_TRX:BUART:rx_bitclk_enable\ and \UART_TRX:BUART:rx_parity_error_pre\)
	OR (\UART_TRX:BUART:rx_state_0\ and \UART_TRX:BUART:rx_parity_error_pre\)
	OR (\UART_TRX:BUART:rx_state_1\ and \UART_TRX:BUART:rx_parity_error_pre\)
	OR (\UART_TRX:BUART:reset_reg\ and \UART_TRX:BUART:rx_parity_error_pre\)
	OR (\UART_TRX:BUART:rx_postpoll\ and \UART_TRX:BUART:rx_parity_error_pre\)
	OR (not \UART_TRX:BUART:rx_state_2\ and \UART_TRX:BUART:rx_parity_error_pre\)
	OR (\UART_TRX:BUART:rx_state_3\ and \UART_TRX:BUART:rx_parity_error_pre\));

Net_1295 <= ((Net_1247 and Net_1275));

Net_1294 <= ((not Net_1247 and Net_1275));

Net_1293 <= ((not Net_1275 and Net_1247));

Net_1315 <= (not \UART_RCX:BUART:txn\);

\UART_RCX:BUART:counter_load_not\ <= ((not \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_state_0\)
	OR (not \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_state_1\)
	OR (not \UART_RCX:BUART:tx_bitclk_enable_pre\ and \UART_RCX:BUART:tx_state_2\));

\UART_RCX:BUART:tx_status_0\ <= ((\UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_bitclk_enable_pre\ and \UART_RCX:BUART:tx_fifo_empty\ and \UART_RCX:BUART:tx_state_2\));

\UART_RCX:BUART:tx_status_2\ <= (not \UART_RCX:BUART:tx_fifo_notfull\);

Net_1312D <= ((not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:tx_state_0\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:tx_state_1\));

\UART_RCX:BUART:tx_bitclk\\D\ <= ((not \UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_bitclk_enable_pre\)
	OR (not \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_bitclk_enable_pre\)
	OR (not \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_bitclk_enable_pre\));

\UART_RCX:BUART:tx_mark\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:tx_mark\));

\UART_RCX:BUART:tx_state_2\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_bitclk\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_bitclk_enable_pre\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_state_2\));

\UART_RCX:BUART:tx_state_1\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_1\ and not \UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_bitclk\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_bitclk_enable_pre\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_bitclk_enable_pre\ and \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_2\ and not \UART_RCX:BUART:tx_bitclk\ and \UART_RCX:BUART:tx_state_1\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_state_1\));

\UART_RCX:BUART:tx_state_0\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_0\ and not \UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_counter_dp\ and \UART_RCX:BUART:tx_bitclk\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_1\ and not \UART_RCX:BUART:tx_state_0\ and not \UART_RCX:BUART:tx_fifo_empty\ and not \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_bitclk_enable_pre\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_2\ and not \UART_RCX:BUART:tx_bitclk\ and \UART_RCX:BUART:tx_state_0\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_bitclk_enable_pre\ and \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_fifo_empty\ and \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_state_2\));

\UART_RCX:BUART:txn\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:txn\ and not \UART_RCX:BUART:tx_state_0\ and not \UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_counter_dp\ and \UART_RCX:BUART:tx_bitclk\ and \UART_RCX:BUART:tx_parity_bit\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_0\ and not \UART_RCX:BUART:tx_shift_out\ and not \UART_RCX:BUART:tx_state_2\ and not \UART_RCX:BUART:tx_counter_dp\ and \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_bitclk\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_0\ and not \UART_RCX:BUART:tx_parity_bit\ and \UART_RCX:BUART:txn\ and \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_counter_dp\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_1\ and not \UART_RCX:BUART:tx_state_2\ and not \UART_RCX:BUART:tx_bitclk\ and \UART_RCX:BUART:tx_state_0\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_state_1\ and not \UART_RCX:BUART:tx_shift_out\ and not \UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_state_0\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:tx_bitclk\ and \UART_RCX:BUART:txn\ and \UART_RCX:BUART:tx_state_1\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:txn\ and \UART_RCX:BUART:tx_state_2\));

\UART_RCX:BUART:tx_parity_bit\\D\ <= ((not \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:txn\ and \UART_RCX:BUART:tx_parity_bit\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:txn\ and not \UART_RCX:BUART:tx_state_0\ and not \UART_RCX:BUART:tx_state_2\ and not \UART_RCX:BUART:tx_parity_bit\ and \UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_bitclk\)
	OR (\UART_RCX:BUART:tx_state_1\ and \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_parity_bit\)
	OR (not \UART_RCX:BUART:tx_state_1\ and not \UART_RCX:BUART:tx_state_0\ and \UART_RCX:BUART:tx_parity_bit\)
	OR (not \UART_RCX:BUART:tx_bitclk\ and \UART_RCX:BUART:tx_parity_bit\)
	OR (\UART_RCX:BUART:tx_state_2\ and \UART_RCX:BUART:tx_parity_bit\)
	OR (\UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:tx_parity_bit\));

\UART_RCX:BUART:rx_counter_load\ <= ((not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_state_3\ and not \UART_RCX:BUART:rx_state_2\));

\UART_RCX:BUART:rx_bitclk_pre\ <= ((not \UART_RCX:BUART:rx_count_2\ and not \UART_RCX:BUART:rx_count_1\ and not \UART_RCX:BUART:rx_count_0\));

\UART_RCX:BUART:rx_state_stop1_reg\\D\ <= (not \UART_RCX:BUART:rx_state_2\
	OR not \UART_RCX:BUART:rx_state_3\
	OR \UART_RCX:BUART:rx_state_0\
	OR \UART_RCX:BUART:rx_state_1\);

\UART_RCX:BUART:pollcount_1\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_count_2\ and not \UART_RCX:BUART:rx_count_1\ and not MODIN7_1 and Net_1301 and MODIN7_0)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_count_2\ and not \UART_RCX:BUART:rx_count_1\ and not MODIN7_0 and MODIN7_1)
	OR (not Net_1301 and not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_count_2\ and not \UART_RCX:BUART:rx_count_1\ and MODIN7_1));

\UART_RCX:BUART:pollcount_0\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_count_2\ and not \UART_RCX:BUART:rx_count_1\ and not MODIN7_0 and Net_1301)
	OR (not Net_1301 and not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_count_2\ and not \UART_RCX:BUART:rx_count_1\ and MODIN7_0));

\UART_RCX:BUART:rx_postpoll\ <= ((Net_1301 and MODIN7_0)
	OR MODIN7_1);

\UART_RCX:BUART:rx_status_4\ <= ((\UART_RCX:BUART:rx_load_fifo\ and \UART_RCX:BUART:rx_fifofull\));

\UART_RCX:BUART:rx_status_5\ <= ((\UART_RCX:BUART:rx_fifonotempty\ and \UART_RCX:BUART:rx_state_stop1_reg\));

\UART_RCX:BUART:rx_stop_bit_error\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_postpoll\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_3\ and \UART_RCX:BUART:rx_state_2\));

\UART_RCX:BUART:rx_parity_error_status\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_3\ and \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_parity_error_pre\));

\UART_RCX:BUART:rx_load_fifo\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_3\));

\UART_RCX:BUART:rx_state_3\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_2\ and not MODIN10_6 and not MODIN10_4 and \UART_RCX:BUART:rx_state_0\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_2\ and not MODIN10_6 and not MODIN10_5 and \UART_RCX:BUART:rx_state_0\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_3\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_1\ and \UART_RCX:BUART:rx_state_3\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_state_3\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_state_3\));

\UART_RCX:BUART:rx_state_2\\D\ <= ((not Net_1301 and not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_state_3\ and not \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_last\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_3\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_1\ and \UART_RCX:BUART:rx_state_2\));

\UART_RCX:BUART:rx_state_1\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_1\));

\UART_RCX:BUART:rx_state_0\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_postpoll\ and not \UART_RCX:BUART:rx_state_3\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_2\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_0\ and MODIN10_5 and MODIN10_4)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_0\ and MODIN10_6)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_state_3\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_1\ and \UART_RCX:BUART:rx_state_0\)
	OR (not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_state_2\));

\UART_RCX:BUART:rx_last\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and Net_1301));

\UART_RCX:BUART:rx_address_detected\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_address_detected\));

\UART_RCX:BUART:rx_parity_bit\\D\ <= ((not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_parity_bit\)
	OR (\UART_RCX:BUART:rx_postpoll\ and \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_parity_bit\)
	OR (not \UART_RCX:BUART:rx_postpoll\ and \UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_parity_bit\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_3\ and not \UART_RCX:BUART:rx_state_2\ and not \UART_RCX:BUART:rx_parity_bit\ and \UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_postpoll\)
	OR (not \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_parity_bit\)
	OR (\UART_RCX:BUART:rx_state_3\ and \UART_RCX:BUART:rx_parity_bit\)
	OR (\UART_RCX:BUART:rx_state_1\ and \UART_RCX:BUART:rx_parity_bit\)
	OR (\UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_parity_bit\));

\UART_RCX:BUART:rx_parity_error_pre\\D\ <= ((not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_postpoll\ and not \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_state_3\ and \UART_RCX:BUART:rx_parity_bit\)
	OR (not \UART_RCX:BUART:reset_reg\ and not \UART_RCX:BUART:rx_state_1\ and not \UART_RCX:BUART:rx_state_0\ and not \UART_RCX:BUART:rx_state_2\ and not \UART_RCX:BUART:rx_parity_bit\ and \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_postpoll\ and \UART_RCX:BUART:rx_state_3\)
	OR (not \UART_RCX:BUART:rx_bitclk_enable\ and \UART_RCX:BUART:rx_parity_error_pre\)
	OR (\UART_RCX:BUART:rx_state_0\ and \UART_RCX:BUART:rx_parity_error_pre\)
	OR (\UART_RCX:BUART:rx_state_1\ and \UART_RCX:BUART:rx_parity_error_pre\)
	OR (\UART_RCX:BUART:reset_reg\ and \UART_RCX:BUART:rx_parity_error_pre\)
	OR (\UART_RCX:BUART:rx_postpoll\ and \UART_RCX:BUART:rx_parity_error_pre\)
	OR (not \UART_RCX:BUART:rx_state_2\ and \UART_RCX:BUART:rx_parity_error_pre\)
	OR (\UART_RCX:BUART:rx_state_3\ and \UART_RCX:BUART:rx_parity_error_pre\));

Net_1324 <= (not \USB:BUART:txn\);

\USB:BUART:counter_load_not\ <= ((not \USB:BUART:tx_bitclk_enable_pre\ and \USB:BUART:tx_state_2\)
	OR \USB:BUART:tx_state_0\
	OR \USB:BUART:tx_state_1\);

\USB:BUART:tx_status_0\ <= ((not \USB:BUART:tx_state_1\ and not \USB:BUART:tx_state_0\ and \USB:BUART:tx_bitclk_enable_pre\ and \USB:BUART:tx_fifo_empty\ and \USB:BUART:tx_state_2\));

\USB:BUART:tx_status_2\ <= (not \USB:BUART:tx_fifo_notfull\);

Net_1327D <= ((not \USB:BUART:reset_reg\ and \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:tx_state_0\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:tx_state_1\));

\USB:BUART:tx_bitclk\\D\ <= ((not \USB:BUART:tx_state_2\ and \USB:BUART:tx_bitclk_enable_pre\)
	OR (\USB:BUART:tx_state_0\ and \USB:BUART:tx_bitclk_enable_pre\)
	OR (\USB:BUART:tx_state_1\ and \USB:BUART:tx_bitclk_enable_pre\));

\USB:BUART:tx_mark\\D\ <= ((not \USB:BUART:reset_reg\ and \USB:BUART:tx_mark\));

\USB:BUART:tx_state_2\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_2\ and \USB:BUART:tx_state_1\ and \USB:BUART:tx_counter_dp\ and \USB:BUART:tx_bitclk\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_2\ and \USB:BUART:tx_state_1\ and \USB:BUART:tx_state_0\ and \USB:BUART:tx_bitclk\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_1\ and \USB:BUART:tx_state_0\ and \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_0\ and \USB:BUART:tx_state_1\ and \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_bitclk_enable_pre\ and \USB:BUART:tx_state_2\));

\USB:BUART:tx_state_1\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_1\ and not \USB:BUART:tx_state_2\ and \USB:BUART:tx_state_0\ and \USB:BUART:tx_bitclk\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_2\ and not \USB:BUART:tx_bitclk\ and \USB:BUART:tx_state_1\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_bitclk_enable_pre\ and \USB:BUART:tx_state_1\ and \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_0\ and not \USB:BUART:tx_counter_dp\ and \USB:BUART:tx_state_1\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_0\ and \USB:BUART:tx_state_1\ and \USB:BUART:tx_state_2\));

\USB:BUART:tx_state_0\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_1\ and not \USB:BUART:tx_fifo_empty\ and \USB:BUART:tx_bitclk_enable_pre\ and \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_1\ and not \USB:BUART:tx_state_0\ and not \USB:BUART:tx_fifo_empty\ and not \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_bitclk_enable_pre\ and \USB:BUART:tx_state_0\ and \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_2\ and not \USB:BUART:tx_bitclk\ and \USB:BUART:tx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_fifo_empty\ and \USB:BUART:tx_state_0\ and \USB:BUART:tx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_1\ and \USB:BUART:tx_state_0\ and \USB:BUART:tx_state_2\));

\USB:BUART:txn\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_0\ and not \USB:BUART:tx_shift_out\ and not \USB:BUART:tx_state_2\ and not \USB:BUART:tx_counter_dp\ and \USB:BUART:tx_state_1\ and \USB:BUART:tx_bitclk\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_1\ and not \USB:BUART:tx_state_2\ and not \USB:BUART:tx_bitclk\ and \USB:BUART:tx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_state_1\ and not \USB:BUART:tx_shift_out\ and not \USB:BUART:tx_state_2\ and \USB:BUART:tx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:tx_bitclk\ and \USB:BUART:txn\ and \USB:BUART:tx_state_1\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:txn\ and \USB:BUART:tx_state_2\));

\USB:BUART:tx_parity_bit\\D\ <= ((not \USB:BUART:tx_state_0\ and \USB:BUART:txn\ and \USB:BUART:tx_parity_bit\)
	OR (not \USB:BUART:tx_state_1\ and not \USB:BUART:tx_state_0\ and \USB:BUART:tx_parity_bit\)
	OR \USB:BUART:tx_parity_bit\);

\USB:BUART:rx_counter_load\ <= ((not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_0\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:rx_state_2\));

\USB:BUART:rx_bitclk_pre\ <= ((not \USB:BUART:rx_count_2\ and not \USB:BUART:rx_count_1\ and not \USB:BUART:rx_count_0\));

\USB:BUART:rx_state_stop1_reg\\D\ <= (not \USB:BUART:rx_state_2\
	OR not \USB:BUART:rx_state_3\
	OR \USB:BUART:rx_state_0\
	OR \USB:BUART:rx_state_1\);

\USB:BUART:pollcount_1\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:rx_count_2\ and not \USB:BUART:rx_count_1\ and not \USB:BUART:pollcount_1\ and Net_1320 and \USB:BUART:pollcount_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_count_2\ and not \USB:BUART:rx_count_1\ and not \USB:BUART:pollcount_0\ and \USB:BUART:pollcount_1\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_count_2\ and not \USB:BUART:rx_count_1\ and not Net_1320 and \USB:BUART:pollcount_1\));

\USB:BUART:pollcount_0\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:rx_count_2\ and not \USB:BUART:rx_count_1\ and not \USB:BUART:pollcount_0\ and Net_1320)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_count_2\ and not \USB:BUART:rx_count_1\ and not Net_1320 and \USB:BUART:pollcount_0\));

\USB:BUART:rx_postpoll\ <= ((Net_1320 and \USB:BUART:pollcount_0\)
	OR \USB:BUART:pollcount_1\);

\USB:BUART:rx_status_4\ <= ((\USB:BUART:rx_load_fifo\ and \USB:BUART:rx_fifofull\));

\USB:BUART:rx_status_5\ <= ((\USB:BUART:rx_fifonotempty\ and \USB:BUART:rx_state_stop1_reg\));

\USB:BUART:rx_stop_bit_error\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_0\ and not \USB:BUART:pollcount_1\ and not \USB:BUART:pollcount_0\ and \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_3\ and \USB:BUART:rx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_0\ and not \USB:BUART:pollcount_1\ and not Net_1320 and \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_3\ and \USB:BUART:rx_state_2\));

\USB:BUART:rx_load_fifo\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_0\ and not \USB:BUART:rx_state_2\ and \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_3\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:rx_state_2\ and not \USB:BUART:rx_count_6\ and not \USB:BUART:rx_count_4\ and \USB:BUART:rx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:rx_state_2\ and not \USB:BUART:rx_count_6\ and not \USB:BUART:rx_count_5\ and \USB:BUART:rx_state_0\));

\USB:BUART:rx_state_3\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_2\ and not \USB:BUART:rx_count_6\ and not \USB:BUART:rx_count_4\ and \USB:BUART:rx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_2\ and not \USB:BUART:rx_count_6\ and not \USB:BUART:rx_count_5\ and \USB:BUART:rx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_3\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_1\ and \USB:BUART:rx_state_3\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_2\ and \USB:BUART:rx_state_3\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_0\ and \USB:BUART:rx_state_3\));

\USB:BUART:rx_state_2\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_0\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:rx_state_2\ and not Net_1320 and \USB:BUART:rx_last\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_0\ and not \USB:BUART:rx_state_2\ and \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_3\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:rx_count_6\ and not \USB:BUART:rx_count_4\ and \USB:BUART:rx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:rx_count_6\ and not \USB:BUART:rx_count_5\ and \USB:BUART:rx_state_0\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_2\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_1\ and \USB:BUART:rx_state_2\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_0\ and \USB:BUART:rx_state_2\));

\USB:BUART:rx_state_1\\D\ <= ((not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_1\));

\USB:BUART:rx_state_0\\D\ <= ((not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:pollcount_1\ and not \USB:BUART:pollcount_0\ and \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_2\)
	OR (not \USB:BUART:reset_reg\ and not \USB:BUART:rx_state_1\ and not \USB:BUART:rx_state_3\ and not \USB:BUART:pollcount_1\ and not Net_1320 and \USB:BUART:rx_bitclk_enable\ and \USB:BUART:rx_state_2\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_0\ and \USB:BUART:rx_count_5\ and \USB:BUART:rx_count_4\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_0\ and \USB:BUART:rx_count_6\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_0\ and \USB:BUART:rx_state_3\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_1\ and \USB:BUART:rx_state_0\)
	OR (not \USB:BUART:reset_reg\ and \USB:BUART:rx_state_0\ and \USB:BUART:rx_state_2\));

\USB:BUART:rx_last\\D\ <= ((not \USB:BUART:reset_reg\ and Net_1320));

\USB:BUART:rx_address_detected\\D\ <= ((not \USB:BUART:reset_reg\ and \USB:BUART:rx_address_detected\));

LichtLinks:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"8d318d8b-cf7b-4b6b-b02c-ab1c5c49d0ba",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>(zero),
		fb=>Net_1247,
		analog=>(open),
		io=>(tmpIO_0__LichtLinks_net_0),
		siovref=>(tmpSIOVREF__LichtLinks_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__LichtLinks_net_0);
MotorLinks:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"e851a3b9-efb8-48be-bbb8-b303b216c393",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1248,
		fb=>(tmpFB_0__MotorLinks_net_0),
		analog=>(open),
		io=>(tmpIO_0__MotorLinks_net_0),
		siovref=>(tmpSIOVREF__MotorLinks_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MotorLinks_net_0);
\VermogenLinks:PWMUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_46,
		enable=>tmpOE__LichtLinks_net_0,
		clock_out=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\);
\VermogenLinks:PWMUDB:genblk1:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		control=>(\VermogenLinks:PWMUDB:control_7\, \VermogenLinks:PWMUDB:control_6\, \VermogenLinks:PWMUDB:control_5\, \VermogenLinks:PWMUDB:control_4\,
			\VermogenLinks:PWMUDB:control_3\, \VermogenLinks:PWMUDB:control_2\, \VermogenLinks:PWMUDB:control_1\, \VermogenLinks:PWMUDB:control_0\));
\VermogenLinks:PWMUDB:sP8:pwmdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		cs_addr=>(\VermogenLinks:PWMUDB:tc_i\, \VermogenLinks:PWMUDB:runmode_enable\, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\VermogenLinks:PWMUDB:cmp1_eq\,
		cl0=>\VermogenLinks:PWMUDB:cmp1_less\,
		z0=>\VermogenLinks:PWMUDB:tc_i\,
		ff0=>open,
		ce1=>\VermogenLinks:PWMUDB:cmp2_eq\,
		cl1=>\VermogenLinks:PWMUDB:cmp2_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>\VermogenLinks:PWMUDB:fifo_nempty\,
		f1_blk_stat=>\VermogenLinks:PWMUDB:fifo_full\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_24\);
\VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_16\);
\VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\VermogenLinks:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_8\);
Klok:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"069de999-51ad-4be8-9396-ad975ac1800a",
		source_clock_id=>"",
		divisor=>0,
		period=>"1000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_46,
		dig_domain_out=>open);
MotorRechts:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"c3b3b284-da97-4840-a753-3c9f09ccea3f",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1262,
		fb=>(tmpFB_0__MotorRechts_net_0),
		analog=>(open),
		io=>(tmpIO_0__MotorRechts_net_0),
		siovref=>(tmpSIOVREF__MotorRechts_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MotorRechts_net_0);
\VermogenRechts:PWMUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_46,
		enable=>tmpOE__LichtLinks_net_0,
		clock_out=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\);
\VermogenRechts:PWMUDB:genblk1:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		control=>(\VermogenRechts:PWMUDB:control_7\, \VermogenRechts:PWMUDB:control_6\, \VermogenRechts:PWMUDB:control_5\, \VermogenRechts:PWMUDB:control_4\,
			\VermogenRechts:PWMUDB:control_3\, \VermogenRechts:PWMUDB:control_2\, \VermogenRechts:PWMUDB:control_1\, \VermogenRechts:PWMUDB:control_0\));
\VermogenRechts:PWMUDB:sP8:pwmdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		cs_addr=>(\VermogenRechts:PWMUDB:tc_i\, \VermogenRechts:PWMUDB:runmode_enable\, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\VermogenRechts:PWMUDB:cmp1_eq\,
		cl0=>\VermogenRechts:PWMUDB:cmp1_less\,
		z0=>\VermogenRechts:PWMUDB:tc_i\,
		ff0=>open,
		ce1=>\VermogenRechts:PWMUDB:cmp2_eq\,
		cl1=>\VermogenRechts:PWMUDB:cmp2_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>\VermogenRechts:PWMUDB:fifo_nempty\,
		f1_blk_stat=>\VermogenRechts:PWMUDB:fifo_full\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\);
\VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\);
\VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\VermogenRechts:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\);
LichtRechts:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"0f1c0bd7-909a-4e0a-b17b-be68639f0f45",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>(zero),
		fb=>Net_1275,
		analog=>(open),
		io=>(tmpIO_0__LichtRechts_net_0),
		siovref=>(tmpSIOVREF__LichtRechts_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__LichtRechts_net_0);
\UART_TRX:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"b0162966-0060-4af5-82d1-fcb491ad7619/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"26041666666.6667",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\UART_TRX:Net_9\,
		dig_domain_out=>open);
\UART_TRX:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UART_TRX:Net_9\,
		enable=>tmpOE__LichtLinks_net_0,
		clock_out=>\UART_TRX:BUART:clock_op\);
\UART_TRX:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_TRX:BUART:reset_reg\,
		clk=>\UART_TRX:BUART:clock_op\,
		cs_addr=>(\UART_TRX:BUART:tx_state_1\, \UART_TRX:BUART:tx_state_0\, \UART_TRX:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_TRX:BUART:tx_shift_out\,
		f0_bus_stat=>\UART_TRX:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\UART_TRX:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\UART_TRX:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_TRX:BUART:reset_reg\,
		clk=>\UART_TRX:BUART:clock_op\,
		cs_addr=>(zero, zero, \UART_TRX:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\UART_TRX:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\UART_TRX:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\UART_TRX:BUART:sc_out_7\, \UART_TRX:BUART:sc_out_6\, \UART_TRX:BUART:sc_out_5\, \UART_TRX:BUART:sc_out_4\,
			\UART_TRX:BUART:sc_out_3\, \UART_TRX:BUART:sc_out_2\, \UART_TRX:BUART:sc_out_1\, \UART_TRX:BUART:sc_out_0\));
\UART_TRX:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_TRX:BUART:reset_reg\,
		clock=>\UART_TRX:BUART:clock_op\,
		status=>(zero, zero, zero, \UART_TRX:BUART:tx_fifo_notfull\,
			\UART_TRX:BUART:tx_status_2\, \UART_TRX:BUART:tx_fifo_empty\, \UART_TRX:BUART:tx_status_0\),
		interrupt=>\UART_TRX:BUART:tx_interrupt_out\);
\UART_TRX:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_TRX:BUART:reset_reg\,
		clk=>\UART_TRX:BUART:clock_op\,
		cs_addr=>(\UART_TRX:BUART:rx_state_1\, \UART_TRX:BUART:rx_state_0\, \UART_TRX:BUART:rx_bitclk_enable\),
		route_si=>\UART_TRX:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\UART_TRX:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\UART_TRX:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\UART_TRX:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_TRX:BUART:hd_shift_out\,
		f0_bus_stat=>\UART_TRX:BUART:rx_fifonotempty\,
		f0_blk_stat=>\UART_TRX:BUART:rx_fifofull\,
		f1_bus_stat=>\UART_TRX:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\UART_TRX:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\UART_TRX:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\UART_TRX:BUART:clock_op\,
		reset=>\UART_TRX:BUART:reset_reg\,
		load=>\UART_TRX:BUART:rx_counter_load\,
		enable=>tmpOE__LichtLinks_net_0,
		count=>(MODIN6_6, MODIN6_5, MODIN6_4, MODIN6_3,
			\UART_TRX:BUART:rx_count_2\, \UART_TRX:BUART:rx_count_1\, \UART_TRX:BUART:rx_count_0\),
		tc=>\UART_TRX:BUART:rx_count7_tc\);
\UART_TRX:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_TRX:BUART:reset_reg\,
		clock=>\UART_TRX:BUART:clock_op\,
		status=>(zero, \UART_TRX:BUART:rx_status_5\, \UART_TRX:BUART:rx_status_4\, \UART_TRX:BUART:rx_status_3\,
			\UART_TRX:BUART:rx_status_2\, zero, zero),
		interrupt=>\UART_TRX:BUART:rx_interrupt_out\);
Tx_TRX:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"ed092b9b-d398-4703-be89-cebf998501f6",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1284,
		fb=>(tmpFB_0__Tx_TRX_net_0),
		analog=>(open),
		io=>(tmpIO_0__Tx_TRX_net_0),
		siovref=>(tmpSIOVREF__Tx_TRX_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Tx_TRX_net_0);
GeenIsr0:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"a36ea317-d6bb-4801-ad57-4dbe98b5650b",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1293,
		fb=>(tmpFB_0__GeenIsr0_net_0),
		analog=>(open),
		io=>(tmpIO_0__GeenIsr0_net_0),
		siovref=>(tmpSIOVREF__GeenIsr0_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__GeenIsr0_net_0);
GeenIsr1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"14f4801c-3315-44c8-8bf6-4025b58ab771",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1294,
		fb=>(tmpFB_0__GeenIsr1_net_0),
		analog=>(open),
		io=>(tmpIO_0__GeenIsr1_net_0),
		siovref=>(tmpSIOVREF__GeenIsr1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__GeenIsr1_net_0);
GeenIsr2:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"14d78091-b466-4b59-ad49-3a004d0e07ae",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1295,
		fb=>(tmpFB_0__GeenIsr2_net_0),
		analog=>(open),
		io=>(tmpIO_0__GeenIsr2_net_0),
		siovref=>(tmpSIOVREF__GeenIsr2_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__GeenIsr2_net_0);
Rx_RCX:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"d359358c-c4b7-4ad6-9dc2-6c280ec752de",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>(zero),
		fb=>Net_1301,
		analog=>(open),
		io=>(tmpIO_0__Rx_RCX_net_0),
		siovref=>(tmpSIOVREF__Rx_RCX_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_RCX_net_0);
RCX_ISR:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_1303);
\UART_RCX:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"4d1ee38d-89da-4b28-83e7-7c7b3abd69e7/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"26041666666.6667",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\UART_RCX:Net_9\,
		dig_domain_out=>open);
\UART_RCX:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UART_RCX:Net_9\,
		enable=>tmpOE__LichtLinks_net_0,
		clock_out=>\UART_RCX:BUART:clock_op\);
\UART_RCX:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_RCX:BUART:reset_reg\,
		clk=>\UART_RCX:BUART:clock_op\,
		cs_addr=>(\UART_RCX:BUART:tx_state_1\, \UART_RCX:BUART:tx_state_0\, \UART_RCX:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_RCX:BUART:tx_shift_out\,
		f0_bus_stat=>\UART_RCX:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\UART_RCX:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\UART_RCX:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_RCX:BUART:reset_reg\,
		clk=>\UART_RCX:BUART:clock_op\,
		cs_addr=>(zero, zero, \UART_RCX:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\UART_RCX:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\UART_RCX:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\UART_RCX:BUART:sc_out_7\, \UART_RCX:BUART:sc_out_6\, \UART_RCX:BUART:sc_out_5\, \UART_RCX:BUART:sc_out_4\,
			\UART_RCX:BUART:sc_out_3\, \UART_RCX:BUART:sc_out_2\, \UART_RCX:BUART:sc_out_1\, \UART_RCX:BUART:sc_out_0\));
\UART_RCX:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_RCX:BUART:reset_reg\,
		clock=>\UART_RCX:BUART:clock_op\,
		status=>(zero, zero, zero, \UART_RCX:BUART:tx_fifo_notfull\,
			\UART_RCX:BUART:tx_status_2\, \UART_RCX:BUART:tx_fifo_empty\, \UART_RCX:BUART:tx_status_0\),
		interrupt=>\UART_RCX:BUART:tx_interrupt_out\);
\UART_RCX:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_RCX:BUART:reset_reg\,
		clk=>\UART_RCX:BUART:clock_op\,
		cs_addr=>(\UART_RCX:BUART:rx_state_1\, \UART_RCX:BUART:rx_state_0\, \UART_RCX:BUART:rx_bitclk_enable\),
		route_si=>\UART_RCX:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\UART_RCX:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\UART_RCX:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\UART_RCX:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_RCX:BUART:hd_shift_out\,
		f0_bus_stat=>\UART_RCX:BUART:rx_fifonotempty\,
		f0_blk_stat=>\UART_RCX:BUART:rx_fifofull\,
		f1_bus_stat=>\UART_RCX:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\UART_RCX:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\UART_RCX:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\UART_RCX:BUART:clock_op\,
		reset=>\UART_RCX:BUART:reset_reg\,
		load=>\UART_RCX:BUART:rx_counter_load\,
		enable=>tmpOE__LichtLinks_net_0,
		count=>(MODIN10_6, MODIN10_5, MODIN10_4, MODIN10_3,
			\UART_RCX:BUART:rx_count_2\, \UART_RCX:BUART:rx_count_1\, \UART_RCX:BUART:rx_count_0\),
		tc=>\UART_RCX:BUART:rx_count7_tc\);
\UART_RCX:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_RCX:BUART:reset_reg\,
		clock=>\UART_RCX:BUART:clock_op\,
		status=>(zero, \UART_RCX:BUART:rx_status_5\, \UART_RCX:BUART:rx_status_4\, \UART_RCX:BUART:rx_status_3\,
			\UART_RCX:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_1303);
\USB:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"99d8425c-2b8f-45cb-8c91-35ecc9bdc79a/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"2170138888.88889",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\USB:Net_9\,
		dig_domain_out=>open);
\USB:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\USB:Net_9\,
		enable=>tmpOE__LichtLinks_net_0,
		clock_out=>\USB:BUART:clock_op\);
\USB:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\USB:BUART:reset_reg\,
		clk=>\USB:BUART:clock_op\,
		cs_addr=>(\USB:BUART:tx_state_1\, \USB:BUART:tx_state_0\, \USB:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\USB:BUART:tx_shift_out\,
		f0_bus_stat=>\USB:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\USB:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\USB:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\USB:BUART:reset_reg\,
		clk=>\USB:BUART:clock_op\,
		cs_addr=>(zero, zero, \USB:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\USB:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\USB:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\USB:BUART:sc_out_7\, \USB:BUART:sc_out_6\, \USB:BUART:sc_out_5\, \USB:BUART:sc_out_4\,
			\USB:BUART:sc_out_3\, \USB:BUART:sc_out_2\, \USB:BUART:sc_out_1\, \USB:BUART:sc_out_0\));
\USB:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\USB:BUART:reset_reg\,
		clock=>\USB:BUART:clock_op\,
		status=>(zero, zero, zero, \USB:BUART:tx_fifo_notfull\,
			\USB:BUART:tx_status_2\, \USB:BUART:tx_fifo_empty\, \USB:BUART:tx_status_0\),
		interrupt=>\USB:BUART:tx_interrupt_out\);
\USB:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\USB:BUART:reset_reg\,
		clk=>\USB:BUART:clock_op\,
		cs_addr=>(\USB:BUART:rx_state_1\, \USB:BUART:rx_state_0\, \USB:BUART:rx_bitclk_enable\),
		route_si=>\USB:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\USB:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\USB:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\USB:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\USB:BUART:hd_shift_out\,
		f0_bus_stat=>\USB:BUART:rx_fifonotempty\,
		f0_blk_stat=>\USB:BUART:rx_fifofull\,
		f1_bus_stat=>\USB:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\USB:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\USB:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\USB:BUART:clock_op\,
		reset=>\USB:BUART:reset_reg\,
		load=>\USB:BUART:rx_counter_load\,
		enable=>tmpOE__LichtLinks_net_0,
		count=>(\USB:BUART:rx_count_6\, \USB:BUART:rx_count_5\, \USB:BUART:rx_count_4\, \USB:BUART:rx_count_3\,
			\USB:BUART:rx_count_2\, \USB:BUART:rx_count_1\, \USB:BUART:rx_count_0\),
		tc=>\USB:BUART:rx_count7_tc\);
\USB:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\USB:BUART:reset_reg\,
		clock=>\USB:BUART:clock_op\,
		status=>(zero, \USB:BUART:rx_status_5\, \USB:BUART:rx_status_4\, \USB:BUART:rx_status_3\,
			\USB:BUART:rx_status_2\, zero, zero),
		interrupt=>\USB:BUART:rx_interrupt_out\);
Rx_1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"1425177d-0d0e-4468-8bcc-e638e5509a9b",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>(zero),
		fb=>Net_1320,
		analog=>(open),
		io=>(tmpIO_0__Rx_1_net_0),
		siovref=>(tmpSIOVREF__Rx_1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_1_net_0);
Tx_1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"9277b3b2-46f4-4806-a7b6-1ad8031e935c",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1324,
		fb=>(tmpFB_0__Tx_1_net_0),
		analog=>(open),
		io=>(tmpIO_0__Tx_1_net_0),
		siovref=>(tmpSIOVREF__Tx_1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Tx_1_net_0);
TRX_rx:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"5363fde8-5e19-4be3-87ef-36e2bbbf2373",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>(zero),
		fb=>Net_1314,
		analog=>(open),
		io=>(tmpIO_0__TRX_rx_net_0),
		siovref=>(tmpSIOVREF__TRX_rx_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__TRX_rx_net_0);
RCX_tx:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"d5eaebbc-bb07-4527-9b8d-11bffd7e059e",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LichtLinks_net_0),
		y=>Net_1315,
		fb=>(tmpFB_0__RCX_tx_net_0),
		analog=>(open),
		io=>(tmpIO_0__RCX_tx_net_0),
		siovref=>(tmpSIOVREF__RCX_tx_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LichtLinks_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LichtLinks_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__RCX_tx_net_0);
\VermogenLinks:PWMUDB:min_kill_reg\:cy_dsrff
	PORT MAP(d=>tmpOE__LichtLinks_net_0,
		s=>zero,
		r=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:min_kill_reg\);
\VermogenLinks:PWMUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:prevCapture\);
\VermogenLinks:PWMUDB:trig_last\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:trig_last\);
\VermogenLinks:PWMUDB:runmode_enable\:cy_dsrff
	PORT MAP(d=>\VermogenLinks:PWMUDB:control_7\,
		s=>zero,
		r=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:runmode_enable\);
\VermogenLinks:PWMUDB:sc_kill_tmp\:cy_dff
	PORT MAP(d=>\VermogenLinks:PWMUDB:sc_kill_tmp\\D\,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:sc_kill_tmp\);
\VermogenLinks:PWMUDB:ltch_kill_reg\:cy_dsrff
	PORT MAP(d=>tmpOE__LichtLinks_net_0,
		s=>zero,
		r=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:ltch_kill_reg\);
\VermogenLinks:PWMUDB:dith_count_1\:cy_dsrff
	PORT MAP(d=>\VermogenLinks:PWMUDB:dith_count_1\\D\,
		s=>zero,
		r=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:dith_count_1\);
\VermogenLinks:PWMUDB:dith_count_0\:cy_dsrff
	PORT MAP(d=>\VermogenLinks:PWMUDB:dith_count_0\\D\,
		s=>zero,
		r=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:dith_count_0\);
\VermogenLinks:PWMUDB:pwm_i_reg\:cy_dff
	PORT MAP(d=>\VermogenLinks:PWMUDB:pwm_i\,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>Net_1248);
\VermogenLinks:PWMUDB:pwm1_i_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:pwm1_i_reg\);
\VermogenLinks:PWMUDB:pwm2_i_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:pwm2_i_reg\);
\VermogenLinks:PWMUDB:tc_i_reg\:cy_dff
	PORT MAP(d=>\VermogenLinks:PWMUDB:tc_i_reg\\D\,
		clk=>\VermogenLinks:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenLinks:PWMUDB:tc_i_reg\);
\VermogenRechts:PWMUDB:min_kill_reg\:cy_dsrff
	PORT MAP(d=>tmpOE__LichtLinks_net_0,
		s=>zero,
		r=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:min_kill_reg\);
\VermogenRechts:PWMUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:prevCapture\);
\VermogenRechts:PWMUDB:trig_last\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:trig_last\);
\VermogenRechts:PWMUDB:runmode_enable\:cy_dsrff
	PORT MAP(d=>\VermogenRechts:PWMUDB:control_7\,
		s=>zero,
		r=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:runmode_enable\);
\VermogenRechts:PWMUDB:sc_kill_tmp\:cy_dff
	PORT MAP(d=>\VermogenRechts:PWMUDB:sc_kill_tmp\\D\,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:sc_kill_tmp\);
\VermogenRechts:PWMUDB:ltch_kill_reg\:cy_dsrff
	PORT MAP(d=>tmpOE__LichtLinks_net_0,
		s=>zero,
		r=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:ltch_kill_reg\);
\VermogenRechts:PWMUDB:dith_count_1\:cy_dsrff
	PORT MAP(d=>\VermogenRechts:PWMUDB:dith_count_1\\D\,
		s=>zero,
		r=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:dith_count_1\);
\VermogenRechts:PWMUDB:dith_count_0\:cy_dsrff
	PORT MAP(d=>\VermogenRechts:PWMUDB:dith_count_0\\D\,
		s=>zero,
		r=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:dith_count_0\);
\VermogenRechts:PWMUDB:pwm_i_reg\:cy_dff
	PORT MAP(d=>\VermogenRechts:PWMUDB:pwm_i\,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>Net_1262);
\VermogenRechts:PWMUDB:pwm1_i_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:pwm1_i_reg\);
\VermogenRechts:PWMUDB:pwm2_i_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:pwm2_i_reg\);
\VermogenRechts:PWMUDB:tc_i_reg\:cy_dff
	PORT MAP(d=>\VermogenRechts:PWMUDB:tc_i_reg\\D\,
		clk=>\VermogenRechts:PWMUDB:ClockOutFromEnBlock\,
		q=>\VermogenRechts:PWMUDB:tc_i_reg\);
\UART_TRX:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:reset_reg\);
\UART_TRX:BUART:txn\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:txn\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:txn\);
\UART_TRX:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:tx_state_1\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:tx_state_1\);
\UART_TRX:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:tx_state_0\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:tx_state_0\);
\UART_TRX:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:tx_state_2\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:tx_state_2\);
Net_1287:cy_dff
	PORT MAP(d=>Net_1287D,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>Net_1287);
\UART_TRX:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:tx_bitclk\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:tx_bitclk\);
\UART_TRX:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:tx_ctrl_mark_last\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:tx_ctrl_mark_last\);
\UART_TRX:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:tx_mark\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:tx_mark\);
\UART_TRX:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:tx_parity_bit\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:tx_parity_bit\);
\UART_TRX:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_state_1\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_state_1\);
\UART_TRX:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_state_0\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_state_0\);
\UART_TRX:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_load_fifo\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_load_fifo\);
\UART_TRX:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_state_3\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_state_3\);
\UART_TRX:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_state_2\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_state_2\);
\UART_TRX:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_bitclk_pre\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_bitclk_enable\);
\UART_TRX:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_state_stop1_reg\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_state_stop1_reg\);
\UART_TRX:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:pollcount_1\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>MODIN3_1);
\UART_TRX:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:pollcount_0\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>MODIN3_0);
\UART_TRX:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_markspace_status\);
\UART_TRX:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_parity_error_status\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_status_2\);
\UART_TRX:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_stop_bit_error\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_status_3\);
\UART_TRX:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_addr_match_status\);
\UART_TRX:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_markspace_pre\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_markspace_pre\);
\UART_TRX:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_parity_error_pre\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_parity_error_pre\);
\UART_TRX:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_break_status\);
\UART_TRX:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_address_detected\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_address_detected\);
\UART_TRX:BUART:rx_last\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_last\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_last\);
\UART_TRX:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_TRX:BUART:rx_parity_bit\\D\,
		clk=>\UART_TRX:BUART:clock_op\,
		q=>\UART_TRX:BUART:rx_parity_bit\);
\UART_RCX:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:reset_reg\);
\UART_RCX:BUART:txn\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:txn\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:txn\);
\UART_RCX:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:tx_state_1\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:tx_state_1\);
\UART_RCX:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:tx_state_0\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:tx_state_0\);
\UART_RCX:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:tx_state_2\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:tx_state_2\);
Net_1312:cy_dff
	PORT MAP(d=>Net_1312D,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>Net_1312);
\UART_RCX:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:tx_bitclk\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:tx_bitclk\);
\UART_RCX:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:tx_ctrl_mark_last\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:tx_ctrl_mark_last\);
\UART_RCX:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:tx_mark\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:tx_mark\);
\UART_RCX:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:tx_parity_bit\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:tx_parity_bit\);
\UART_RCX:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_state_1\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_state_1\);
\UART_RCX:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_state_0\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_state_0\);
\UART_RCX:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_load_fifo\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_load_fifo\);
\UART_RCX:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_state_3\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_state_3\);
\UART_RCX:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_state_2\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_state_2\);
\UART_RCX:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_bitclk_pre\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_bitclk_enable\);
\UART_RCX:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_state_stop1_reg\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_state_stop1_reg\);
\UART_RCX:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:pollcount_1\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>MODIN7_1);
\UART_RCX:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:pollcount_0\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>MODIN7_0);
\UART_RCX:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_markspace_status\);
\UART_RCX:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_parity_error_status\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_status_2\);
\UART_RCX:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_stop_bit_error\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_status_3\);
\UART_RCX:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_addr_match_status\);
\UART_RCX:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_markspace_pre\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_markspace_pre\);
\UART_RCX:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_parity_error_pre\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_parity_error_pre\);
\UART_RCX:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_break_status\);
\UART_RCX:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_address_detected\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_address_detected\);
\UART_RCX:BUART:rx_last\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_last\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_last\);
\UART_RCX:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_RCX:BUART:rx_parity_bit\\D\,
		clk=>\UART_RCX:BUART:clock_op\,
		q=>\UART_RCX:BUART:rx_parity_bit\);
\USB:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:reset_reg\);
\USB:BUART:txn\:cy_dff
	PORT MAP(d=>\USB:BUART:txn\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:txn\);
\USB:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\USB:BUART:tx_state_1\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:tx_state_1\);
\USB:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\USB:BUART:tx_state_0\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:tx_state_0\);
\USB:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\USB:BUART:tx_state_2\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:tx_state_2\);
Net_1327:cy_dff
	PORT MAP(d=>Net_1327D,
		clk=>\USB:BUART:clock_op\,
		q=>Net_1327);
\USB:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\USB:BUART:tx_bitclk\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:tx_bitclk\);
\USB:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\USB:BUART:tx_ctrl_mark_last\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:tx_ctrl_mark_last\);
\USB:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\USB:BUART:tx_mark\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:tx_mark\);
\USB:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\USB:BUART:tx_parity_bit\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:tx_parity_bit\);
\USB:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_state_1\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_state_1\);
\USB:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_state_0\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_state_0\);
\USB:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_load_fifo\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_load_fifo\);
\USB:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_state_3\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_state_3\);
\USB:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_state_2\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_state_2\);
\USB:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_bitclk_pre\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_bitclk_enable\);
\USB:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_state_stop1_reg\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_state_stop1_reg\);
\USB:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\USB:BUART:pollcount_1\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:pollcount_1\);
\USB:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\USB:BUART:pollcount_0\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:pollcount_0\);
\USB:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_markspace_status\);
\USB:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_status_2\);
\USB:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_stop_bit_error\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_status_3\);
\USB:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_addr_match_status\);
\USB:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_markspace_pre\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_markspace_pre\);
\USB:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_parity_error_pre\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_parity_error_pre\);
\USB:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_break_status\);
\USB:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_address_detected\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_address_detected\);
\USB:BUART:rx_last\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_last\\D\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_last\);
\USB:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\USB:BUART:rx_parity_bit\,
		clk=>\USB:BUART:clock_op\,
		q=>\USB:BUART:rx_parity_bit\);

END R_T_L;

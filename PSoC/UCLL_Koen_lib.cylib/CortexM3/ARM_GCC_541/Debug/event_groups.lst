ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"event_groups.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTestWaitCondition,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvTestWaitCondition, %function
  24              	prvTestWaitCondition:
  25              	.LFB13:
  26              		.file 1 "..\\..\\..\\..\\..\\..\\FreeRTOS\\FreeRTOS\\FreeRTOS\\Source\\event_groups.c"
   1:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*
   2:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * FreeRTOS Kernel V10.4.0
   3:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  *
   5:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * subject to the following conditions:
  11:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  *
  12:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * copies or substantial portions of the Software.
  14:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  *
  15:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  *
  22:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * https://www.FreeRTOS.org
  23:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * https://github.com/FreeRTOS
  24:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  *
  25:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  */
  26:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  27:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /* Standard includes. */
  28:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #include <stdlib.h>
  29:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  30:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 2


  32:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * task.h is included from an application file. */
  33:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  35:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /* FreeRTOS includes. */
  36:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #include "FreeRTOS.h"
  37:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #include "task.h"
  38:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #include "timers.h"
  39:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #include "event_groups.h"
  40:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  41:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /* Lint e961, e750 and e9021 are suppressed as a MISRA exception justified
  42:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  43:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * for the header files above, but not in this file, in order to generate the
  44:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * correct privileged Vs unprivileged linkage and placement. */
  45:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021 See comment above. */
  46:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  47:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  48:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * item value.  It is important they don't clash with the
  49:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  50:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  51:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventCLEAR_EVENTS_ON_EXIT_BIT    0x0100U
  52:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventUNBLOCKED_DUE_TO_BIT_SET    0x0200U
  53:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventWAIT_FOR_ALL_BITS           0x0400U
  54:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventEVENT_BITS_CONTROL_BYTES    0xff00U
  55:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #else
  56:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventCLEAR_EVENTS_ON_EXIT_BIT    0x01000000UL
  57:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventUNBLOCKED_DUE_TO_BIT_SET    0x02000000UL
  58:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventWAIT_FOR_ALL_BITS           0x04000000UL
  59:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #define eventEVENT_BITS_CONTROL_BYTES    0xff000000UL
  60:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #endif
  61:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  62:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** typedef struct EventGroupDef_t
  63:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
  64:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventBits_t uxEventBits;
  65:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     List_t xTasksWaitingForBits; /*< List of tasks waiting for a bit to be set. */
  66:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  67:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
  68:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         UBaseType_t uxEventGroupNumber;
  69:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #endif
  70:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  71:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  72:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated
  73:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #endif
  74:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** } EventGroup_t;
  75:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  76:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
  77:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  78:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*
  79:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  80:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  81:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  82:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  83:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  84:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * in uxCurrentEventBits.
  85:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  */
  86:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits,
  87:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                         const EventBits_t uxBitsToWaitFor,
  88:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                         const BaseType_t xWaitForAllBits ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 3


  89:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  90:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
  91:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  92:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
  93:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  94:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t * pxEventGroupBuffer )
  95:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
  96:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         EventGroup_t * pxEventBits;
  97:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  98:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* A StaticEventGroup_t object must be provided. */
  99:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         configASSERT( pxEventGroupBuffer );
 100:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 101:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         #if ( configASSERT_DEFINED == 1 )
 102:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 103:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* Sanity check that the size of the structure used to declare a
 104:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * variable of type StaticEventGroup_t equals the size of the real
 105:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * event group structure. */
 106:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 volatile size_t xSize = sizeof( StaticEventGroup_t );
 107:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 configASSERT( xSize == sizeof( EventGroup_t ) );
 108:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             } /*lint !e529 xSize is referenced if configASSERT() is defined. */
 109:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         #endif /* configASSERT_DEFINED */
 110:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 111:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* The user has provided a statically allocated event group - use it. */
 112:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 !e9087 EventGroup_t and S
 113:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 114:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( pxEventBits != NULL )
 115:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 116:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             pxEventBits->uxEventBits = 0;
 117:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 118:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 119:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 120:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 121:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     /* Both static and dynamic allocation can be used, so note that
 122:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                      * this event group was created statically in case the event group
 123:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                      * is later deleted. */
 124:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     pxEventBits->ucStaticallyAllocated = pdTRUE;
 125:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 126:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 127:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 128:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             traceEVENT_GROUP_CREATE( pxEventBits );
 129:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 130:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 131:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 132:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* xEventGroupCreateStatic should only ever be called with
 133:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * pxEventGroupBuffer pointing to a pre-allocated (compile time
 134:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * allocated) StaticEventGroup_t variable. */
 135:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             traceEVENT_GROUP_CREATE_FAILED();
 136:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 137:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 138:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         return pxEventBits;
 139:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 140:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 141:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 142:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 143:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 144:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 145:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 4


 146:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroupHandle_t xEventGroupCreate( void )
 147:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 148:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         EventGroup_t * pxEventBits;
 149:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 150:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Allocate the event group.  Justification for MISRA deviation as
 151:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * follows:  pvPortMalloc() always ensures returned memory blocks are
 152:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * aligned per the requirements of the MCU stack.  In this case
 153:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * pvPortMalloc() must return a pointer that is guaranteed to meet the
 154:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * alignment requirements of the EventGroup_t structure - which (if you
 155:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * follow it through) is the alignment requirements of the TickType_t type
 156:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * (EventBits_t being of TickType_t itself).  Therefore, whenever the
 157:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * stack alignment requirements are greater than or equal to the
 158:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * TickType_t alignment requirements the cast is safe.  In other cases,
 159:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * where the natural word size of the architecture is less than
 160:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * sizeof( TickType_t ), the TickType_t variables will be accessed in two
 161:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * or more reads operations, and the alignment requirements is only that
 162:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * of each individual read. */
 163:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e90
 164:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 165:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( pxEventBits != NULL )
 166:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 167:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             pxEventBits->uxEventBits = 0;
 168:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 169:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 170:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 171:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 172:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     /* Both static and dynamic allocation can be used, so note this
 173:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                      * event group was allocated statically in case the event group is
 174:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                      * later deleted. */
 175:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     pxEventBits->ucStaticallyAllocated = pdFALSE;
 176:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 177:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 178:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 179:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             traceEVENT_GROUP_CREATE( pxEventBits );
 180:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 181:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 182:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 183:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracin
 184:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 185:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 186:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         return pxEventBits;
 187:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 188:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 189:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 190:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 191:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 192:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup,
 193:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                              const EventBits_t uxBitsToSet,
 194:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                              const EventBits_t uxBitsToWaitFor,
 195:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                              TickType_t xTicksToWait )
 196:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 197:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventBits_t uxOriginalBitValue, uxReturn;
 198:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 199:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xAlreadyYielded;
 200:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xTimeoutOccurred = pdFALSE;
 201:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 202:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 5


 203:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 204:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 205:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 206:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
 207:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 208:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #endif
 209:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 210:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     vTaskSuspendAll();
 211:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 212:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uxOriginalBitValue = pxEventBits->uxEventBits;
 213:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 214:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         ( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 215:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 216:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 217:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 218:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* All the rendezvous bits are now set - no need to block. */
 219:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 220:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 221:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* Rendezvous always clear the bits.  They will have been cleared
 222:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * already unless this is the only task in the rendezvous. */
 223:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 224:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 225:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xTicksToWait = 0;
 226:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 227:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 228:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 229:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             if( xTicksToWait != ( TickType_t ) 0 )
 230:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 231:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 232:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 233:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* Store the bits that the calling task is waiting for in the
 234:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * task's event list item so the kernel knows when a match is
 235:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * found.  Then enter the blocked state. */
 236:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToW
 237:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 238:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* This assignment is obsolete as uxReturn will get set after
 239:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * the task unblocks, but some compilers mistakenly generate a
 240:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * warning about uxReturn being returned without being set if the
 241:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * assignment is omitted. */
 242:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 uxReturn = 0;
 243:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 244:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             else
 245:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 246:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* The rendezvous bits were not set, but no block time was
 247:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * specified - just return the current event bit value. */
 248:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 uxReturn = pxEventBits->uxEventBits;
 249:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 xTimeoutOccurred = pdTRUE;
 250:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 251:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 252:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 253:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     xAlreadyYielded = xTaskResumeAll();
 254:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 255:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 256:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 257:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( xAlreadyYielded == pdFALSE )
 258:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 259:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             portYIELD_WITHIN_API();
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 6


 260:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 261:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 262:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 263:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 264:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 265:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 266:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* The task blocked to wait for its required bits to be set - at this
 267:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * point either the required bits were set or the block time expired.  If
 268:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * the required bits were set they will have been stored in the task's
 269:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * event list item, and they should now be retrieved then cleared. */
 270:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uxReturn = uxTaskResetEventItemValue();
 271:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 272:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 273:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 274:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* The task timed out, just return the current event bit value. */
 275:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             taskENTER_CRITICAL();
 276:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 277:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 uxReturn = pxEventBits->uxEventBits;
 278:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 279:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* Although the task got here because it timed out before the
 280:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * bits it was waiting for were set, it is possible that since it
 281:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * unblocked another task has set the bits.  If this is the case
 282:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * then it needs to clear the bits before exiting. */
 283:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 284:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 285:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 286:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 287:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 else
 288:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 289:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 290:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 291:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 292:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             taskEXIT_CRITICAL();
 293:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 294:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xTimeoutOccurred = pdTRUE;
 295:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 296:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 297:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 298:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* The task unblocked because the bits were set. */
 299:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 300:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 301:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Control bits might be set as the task had blocked should not be
 302:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * returned. */
 303:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 304:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 305:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 306:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 307:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 308:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     /* Prevent compiler warnings when trace macros are not used. */
 309:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xTimeoutOccurred;
 310:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 311:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     return uxReturn;
 312:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 313:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 314:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 315:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup,
 316:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                  const EventBits_t uxBitsToWaitFor,
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 7


 317:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                  const BaseType_t xClearOnExit,
 318:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                  const BaseType_t xWaitForAllBits,
 319:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                  TickType_t xTicksToWait )
 320:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 321:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 322:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventBits_t uxReturn, uxControlBits = 0;
 323:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xWaitConditionMet, xAlreadyYielded;
 324:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xTimeoutOccurred = pdFALSE;
 325:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 326:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     /* Check the user is not attempting to wait on the bits used by the kernel
 327:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****      * itself, and that at least one bit is being requested. */
 328:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( xEventGroup );
 329:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 330:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( uxBitsToWaitFor != 0 );
 331:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 332:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 333:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToW
 334:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 335:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     #endif
 336:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 337:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     vTaskSuspendAll();
 338:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 339:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 340:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 341:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Check to see if the wait condition is already met or not. */
 342:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllB
 343:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 344:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( xWaitConditionMet != pdFALSE )
 345:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 346:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* The wait condition has already been met so there is no need to
 347:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * block. */
 348:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxReturn = uxCurrentEventBits;
 349:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xTicksToWait = ( TickType_t ) 0;
 350:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 351:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* Clear the wait bits if requested to do so. */
 352:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             if( xClearOnExit != pdFALSE )
 353:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 354:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 355:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 356:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             else
 357:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 358:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 mtCOVERAGE_TEST_MARKER();
 359:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 360:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 361:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else if( xTicksToWait == ( TickType_t ) 0 )
 362:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 363:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* The wait condition has not been met, but no block time was
 364:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * specified, so just return the current value. */
 365:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxReturn = uxCurrentEventBits;
 366:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xTimeoutOccurred = pdTRUE;
 367:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 368:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 369:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 370:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* The task is going to block to wait for its required bits to be
 371:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * set.  uxControlBits are used to remember the specified behaviour of
 372:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * this call to xEventGroupWaitBits() - for use when the event bits
 373:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * unblock the task. */
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 8


 374:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             if( xClearOnExit != pdFALSE )
 375:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 376:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 377:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 378:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             else
 379:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 380:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 mtCOVERAGE_TEST_MARKER();
 381:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 382:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 383:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             if( xWaitForAllBits != pdFALSE )
 384:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 385:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 uxControlBits |= eventWAIT_FOR_ALL_BITS;
 386:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 387:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             else
 388:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 389:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 mtCOVERAGE_TEST_MARKER();
 390:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 391:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 392:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* Store the bits that the calling task is waiting for in the
 393:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * task's event list item so the kernel knows when a match is
 394:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * found.  Then enter the blocked state. */
 395:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitF
 396:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 397:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* This is obsolete as it will get set after the task unblocks, but
 398:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * some compilers mistakenly generate a warning about the variable
 399:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * being returned without being set if it is not done. */
 400:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxReturn = 0;
 401:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 402:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 403:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 404:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 405:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     xAlreadyYielded = xTaskResumeAll();
 406:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 407:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 408:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 409:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( xAlreadyYielded == pdFALSE )
 410:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 411:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             portYIELD_WITHIN_API();
 412:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 413:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 414:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 415:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 416:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 417:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 418:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* The task blocked to wait for its required bits to be set - at this
 419:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * point either the required bits were set or the block time expired.  If
 420:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * the required bits were set they will have been stored in the task's
 421:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * event list item, and they should now be retrieved then cleared. */
 422:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uxReturn = uxTaskResetEventItemValue();
 423:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 424:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 425:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 426:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             taskENTER_CRITICAL();
 427:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 428:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* The task timed out, just return the current event bit value. */
 429:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 uxReturn = pxEventBits->uxEventBits;
 430:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 9


 431:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* It is possible that the event bits were updated between this
 432:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * task leaving the Blocked state and running again. */
 433:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 434:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 435:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     if( xClearOnExit != pdFALSE )
 436:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     {
 437:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                         pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 438:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     }
 439:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     else
 440:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     {
 441:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                         mtCOVERAGE_TEST_MARKER();
 442:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     }
 443:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 444:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 else
 445:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 446:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 447:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 448:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 449:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 xTimeoutOccurred = pdTRUE;
 450:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 451:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             taskEXIT_CRITICAL();
 452:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 453:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 454:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 455:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* The task unblocked because the bits were set. */
 456:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 457:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 458:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* The task blocked so control bits may have been set. */
 459:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 460:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 461:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 462:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 463:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 464:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     /* Prevent compiler warnings when trace macros are not used. */
 465:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xTimeoutOccurred;
 466:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 467:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     return uxReturn;
 468:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 469:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 470:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 471:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup,
 472:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                   const EventBits_t uxBitsToClear )
 473:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 474:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 475:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventBits_t uxReturn;
 476:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 477:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     /* Check the user is not attempting to clear the bits used by the kernel
 478:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****      * itself. */
 479:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( xEventGroup );
 480:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 481:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 482:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     taskENTER_CRITICAL();
 483:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 484:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 485:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 486:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* The value returned is the event group value prior to the bits being
 487:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * cleared. */
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 10


 488:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uxReturn = pxEventBits->uxEventBits;
 489:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 490:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Clear the bits. */
 491:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         pxEventBits->uxEventBits &= ~uxBitsToClear;
 492:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 493:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     taskEXIT_CRITICAL();
 494:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 495:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     return uxReturn;
 496:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 497:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 498:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 499:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 500:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 501:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup,
 502:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                             const EventBits_t uxBitsToClear )
 503:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 504:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         BaseType_t xReturn;
 505:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 506:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 507:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGro
 508:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 509:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         return xReturn;
 510:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 511:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 512:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** #endif /* if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( co
 513:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 514:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 515:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 516:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 517:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     UBaseType_t uxSavedInterruptStatus;
 518:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t const * const pxEventBits = xEventGroup;
 519:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventBits_t uxReturn;
 520:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 521:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 522:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 523:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         uxReturn = pxEventBits->uxEventBits;
 524:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 525:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 526:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 527:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     return uxReturn;
 528:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 529:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 530:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 531:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup,
 532:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                 const EventBits_t uxBitsToSet )
 533:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 534:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ListItem_t * pxListItem, * pxNext;
 535:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ListItem_t const * pxListEnd;
 536:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     List_t const * pxList;
 537:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 538:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 539:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xMatchFound = pdFALSE;
 540:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 541:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     /* Check the user is not attempting to set the bits used by the kernel
 542:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****      * itself. */
 543:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( xEventGroup );
 544:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 11


 545:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 546:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     pxList = &( pxEventBits->xTasksWaitingForBits );
 547:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is 
 548:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     vTaskSuspendAll();
 549:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 550:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 551:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 552:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         pxListItem = listGET_HEAD_ENTRY( pxList );
 553:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 554:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Set the bits. */
 555:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         pxEventBits->uxEventBits |= uxBitsToSet;
 556:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 557:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* See if the new bit value should unblock any tasks. */
 558:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         while( pxListItem != pxListEnd )
 559:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 560:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             pxNext = listGET_NEXT( pxListItem );
 561:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 562:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xMatchFound = pdFALSE;
 563:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 564:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* Split the bits waited for from the control bits. */
 565:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 566:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 567:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 568:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 569:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 570:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* Just looking for single bit being set. */
 571:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 572:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 573:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     xMatchFound = pdTRUE;
 574:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 575:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 else
 576:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 577:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 578:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 579:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 580:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 581:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 582:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* All bits are set. */
 583:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 xMatchFound = pdTRUE;
 584:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 585:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             else
 586:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 587:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* Need all bits to be set, but not all the bits were set. */
 588:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 589:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 590:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             if( xMatchFound != pdFALSE )
 591:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 592:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* The bits match.  Should the bits be cleared on exit? */
 593:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 594:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 595:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     uxBitsToClear |= uxBitsWaitedFor;
 596:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 597:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 else
 598:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 599:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 600:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 601:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 12


 602:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* Store the actual event flag value in the task's event list
 603:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * item before removing the task from the event list.  The
 604:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 605:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * that is was unblocked due to its required bits matching, rather
 606:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * than because it timed out. */
 607:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBL
 608:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 609:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 610:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* Move onto the next list item.  Note pxListItem->pxNext is not
 611:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * used here as the list item may have been removed from the event list
 612:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * and inserted into the ready/pending reading list. */
 613:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             pxListItem = pxNext;
 614:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 615:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 616:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 617:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * bit was set in the control word. */
 618:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         pxEventBits->uxEventBits &= ~uxBitsToClear;
 619:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 620:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xTaskResumeAll();
 621:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 622:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     return pxEventBits->uxEventBits;
 623:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 624:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 625:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 626:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 627:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 628:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 629:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     const List_t * pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 630:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 631:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     vTaskSuspendAll();
 632:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 633:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         traceEVENT_GROUP_DELETE( xEventGroup );
 634:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 635:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 636:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 637:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             /* Unblock the task, returning 0 as the event list is being deleted
 638:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****              * and cannot therefore have any bits set. */
 639:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTas
 640:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 641:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 642:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 643:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
 644:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 645:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* The event group can only have been allocated dynamically - free
 646:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * it again. */
 647:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 vPortFree( pxEventBits );
 648:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 649:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         #elif ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1
 650:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 651:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 /* The event group could have been allocated statically or
 652:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                  * dynamically, so check before attempting to free the memory. */
 653:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 654:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 655:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     vPortFree( pxEventBits );
 656:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 657:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 else
 658:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 13


 659:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     mtCOVERAGE_TEST_MARKER();
 660:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 661:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 662:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 663:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 664:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xTaskResumeAll();
 665:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 666:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 667:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 668:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 669:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * an interrupt. */
 670:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** void vEventGroupSetBitsCallback( void * pvEventGroup,
 671:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                  const uint32_t ulBitsToSet )
 672:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 673:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't a
 674:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 675:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 676:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 677:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 678:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****  * an interrupt. */
 679:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** void vEventGroupClearBitsCallback( void * pvEventGroup,
 680:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                    const uint32_t ulBitsToClear )
 681:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
 682:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can
 683:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 684:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 685:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 686:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits,
 687:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                         const EventBits_t uxBitsToWaitFor,
 688:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                                         const BaseType_t xWaitForAllBits )
 689:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** {
  27              		.loc 1 689 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 690:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xWaitConditionMet = pdFALSE;
 691:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 692:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     if( xWaitForAllBits == pdFALSE )
  33              		.loc 1 692 0
  34 0000 1AB9     		cbnz	r2, .L2
 693:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 694:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Task only has to wait for one bit within uxBitsToWaitFor to be
 695:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * set.  Is one already set? */
 696:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
  35              		.loc 1 696 0
  36 0002 0842     		tst	r0, r1
  37 0004 06D1     		bne	.L4
 690:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xWaitConditionMet = pdFALSE;
  38              		.loc 1 690 0
  39 0006 0020     		movs	r0, #0
  40              	.LVL1:
  41 0008 7047     		bx	lr
  42              	.LVL2:
  43              	.L2:
 697:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 14


 698:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xWaitConditionMet = pdTRUE;
 699:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 700:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 701:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 702:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 703:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 704:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 705:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     else
 706:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 707:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         /* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 708:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****          * Are they set already? */
 709:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
  44              		.loc 1 709 0
  45 000a 31EA0003 		bics	r3, r1, r0
  46 000e 03D0     		beq	.L5
 690:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  47              		.loc 1 690 0
  48 0010 0020     		movs	r0, #0
  49              	.LVL3:
  50 0012 7047     		bx	lr
  51              	.LVL4:
  52              	.L4:
 698:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
  53              		.loc 1 698 0
  54 0014 0120     		movs	r0, #1
  55              	.LVL5:
  56 0016 7047     		bx	lr
  57              	.LVL6:
  58              	.L5:
 710:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 711:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xWaitConditionMet = pdTRUE;
  59              		.loc 1 711 0
  60 0018 0120     		movs	r0, #1
  61              	.LVL7:
 712:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 713:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         else
 714:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 715:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             mtCOVERAGE_TEST_MARKER();
 716:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 717:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 718:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 719:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     return xWaitConditionMet;
 720:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
  62              		.loc 1 720 0
  63 001a 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE13:
  66              		.size	prvTestWaitCondition, .-prvTestWaitCondition
  67              		.section	.text.xEventGroupCreate,"ax",%progbits
  68              		.align	2
  69              		.global	xEventGroupCreate
  70              		.thumb
  71              		.thumb_func
  72              		.type	xEventGroupCreate, %function
  73              	xEventGroupCreate:
  74              	.LFB4:
 147:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         EventGroup_t * pxEventBits;
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 15


  75              		.loc 1 147 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 163:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  83              		.loc 1 163 0
  84 0002 1820     		movs	r0, #24
  85 0004 FFF7FEFF 		bl	pvPortMalloc
  86              	.LVL8:
 165:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
  87              		.loc 1 165 0
  88 0008 0446     		mov	r4, r0
  89 000a 20B1     		cbz	r0, .L7
 167:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
  90              		.loc 1 167 0
  91 000c 0023     		movs	r3, #0
  92 000e 40F8043B 		str	r3, [r0], #4
  93              	.LVL9:
 168:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  94              		.loc 1 168 0
  95 0012 FFF7FEFF 		bl	vListInitialise
  96              	.LVL10:
  97              	.L7:
 187:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
  98              		.loc 1 187 0
  99 0016 2046     		mov	r0, r4
 100 0018 10BD     		pop	{r4, pc}
 101              		.cfi_endproc
 102              	.LFE4:
 103              		.size	xEventGroupCreate, .-xEventGroupCreate
 104 001a 00BF     		.section	.text.xEventGroupWaitBits,"ax",%progbits
 105              		.align	2
 106              		.global	xEventGroupWaitBits
 107              		.thumb
 108              		.thumb_func
 109              		.type	xEventGroupWaitBits, %function
 110              	xEventGroupWaitBits:
 111              	.LFB6:
 320:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 112              		.loc 1 320 0
 113              		.cfi_startproc
 114              		@ args = 4, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL11:
 117 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 118              		.cfi_def_cfa_offset 32
 119              		.cfi_offset 3, -32
 120              		.cfi_offset 4, -28
 121              		.cfi_offset 5, -24
 122              		.cfi_offset 6, -20
 123              		.cfi_offset 7, -16
 124              		.cfi_offset 8, -12
 125              		.cfi_offset 9, -8
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 16


 126              		.cfi_offset 14, -4
 127 0004 0746     		mov	r7, r0
 128 0006 0E46     		mov	r6, r1
 129 0008 9146     		mov	r9, r2
 130 000a 9846     		mov	r8, r3
 131 000c 089D     		ldr	r5, [sp, #32]
 132              	.LVL12:
 337:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 133              		.loc 1 337 0
 134 000e FFF7FEFF 		bl	vTaskSuspendAll
 135              	.LVL13:
 136              	.LBB6:
 339:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 137              		.loc 1 339 0
 138 0012 3C68     		ldr	r4, [r7]
 139              	.LVL14:
 342:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 140              		.loc 1 342 0
 141 0014 4246     		mov	r2, r8
 142 0016 3146     		mov	r1, r6
 143 0018 2046     		mov	r0, r4
 144 001a FFF7FEFF 		bl	prvTestWaitCondition
 145              	.LVL15:
 344:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 146              		.loc 1 344 0
 147 001e 38B1     		cbz	r0, .L10
 148              	.LVL16:
 352:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 149              		.loc 1 352 0
 150 0020 B9F1000F 		cmp	r9, #0
 151 0024 18D0     		beq	.L18
 354:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 152              		.loc 1 354 0
 153 0026 24EA0603 		bic	r3, r4, r6
 154 002a 3B60     		str	r3, [r7]
 349:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 155              		.loc 1 349 0
 156 002c 0025     		movs	r5, #0
 157 002e 14E0     		b	.L11
 158              	.LVL17:
 159              	.L10:
 361:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 160              		.loc 1 361 0
 161 0030 9DB1     		cbz	r5, .L11
 374:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 162              		.loc 1 374 0
 163 0032 B9F1000F 		cmp	r9, #0
 164 0036 01D1     		bne	.L19
 165              	.LBE6:
 322:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     BaseType_t xWaitConditionMet, xAlreadyYielded;
 166              		.loc 1 322 0
 167 0038 0021     		movs	r1, #0
 168 003a 01E0     		b	.L12
 169              	.L19:
 170              	.LBB7:
 376:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 171              		.loc 1 376 0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 17


 172 003c 4FF08071 		mov	r1, #16777216
 173              	.L12:
 174              	.LVL18:
 383:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 175              		.loc 1 383 0
 176 0040 B8F1000F 		cmp	r8, #0
 177 0044 01D0     		beq	.L13
 385:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 178              		.loc 1 385 0
 179 0046 41F08061 		orr	r1, r1, #67108864
 180              	.LVL19:
 181              	.L13:
 395:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 182              		.loc 1 395 0
 183 004a 2A46     		mov	r2, r5
 184 004c 3143     		orrs	r1, r1, r6
 185              	.LVL20:
 186 004e 381D     		adds	r0, r7, #4
 187              	.LVL21:
 188 0050 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 189              	.LVL22:
 400:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 190              		.loc 1 400 0
 191 0054 0024     		movs	r4, #0
 192              	.LVL23:
 193 0056 00E0     		b	.L11
 194              	.LVL24:
 195              	.L18:
 349:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 196              		.loc 1 349 0
 197 0058 0025     		movs	r5, #0
 198              	.LVL25:
 199              	.L11:
 200              	.LBE7:
 405:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 201              		.loc 1 405 0
 202 005a FFF7FEFF 		bl	xTaskResumeAll
 203              	.LVL26:
 407:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 204              		.loc 1 407 0
 205 005e 0DB3     		cbz	r5, .L14
 409:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 206              		.loc 1 409 0
 207 0060 38B9     		cbnz	r0, .L15
 411:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 208              		.loc 1 411 0
 209 0062 4FF08052 		mov	r2, #268435456
 210 0066 114B     		ldr	r3, .L21
 211 0068 1A60     		str	r2, [r3]
 212              		.syntax unified
 213              	@ 411 "..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source\event_groups.c" 1
 214 006a BFF34F8F 		dsb
 215              	@ 0 "" 2
 216              	@ 411 "..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source\event_groups.c" 1
 217 006e BFF36F8F 		isb
 218              	@ 0 "" 2
 219              		.thumb
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 18


 220              		.syntax unified
 221              	.L15:
 422:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 222              		.loc 1 422 0
 223 0072 FFF7FEFF 		bl	uxTaskResetEventItemValue
 224              	.LVL27:
 225 0076 0446     		mov	r4, r0
 226              	.LVL28:
 424:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 227              		.loc 1 424 0
 228 0078 10F0007F 		tst	r0, #33554432
 229 007c 10D1     		bne	.L16
 426:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 230              		.loc 1 426 0
 231 007e FFF7FEFF 		bl	vPortEnterCritical
 232              	.LVL29:
 429:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 233              		.loc 1 429 0
 234 0082 3C68     		ldr	r4, [r7]
 235              	.LVL30:
 433:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 236              		.loc 1 433 0
 237 0084 4246     		mov	r2, r8
 238 0086 3146     		mov	r1, r6
 239 0088 2046     		mov	r0, r4
 240 008a FFF7FEFF 		bl	prvTestWaitCondition
 241              	.LVL31:
 242 008e 28B1     		cbz	r0, .L17
 435:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     {
 243              		.loc 1 435 0
 244 0090 B9F1000F 		cmp	r9, #0
 245 0094 02D0     		beq	.L17
 437:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                     }
 246              		.loc 1 437 0
 247 0096 24EA0606 		bic	r6, r4, r6
 248              	.LVL32:
 249 009a 3E60     		str	r6, [r7]
 250              	.L17:
 251              	.LVL33:
 451:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 252              		.loc 1 451 0
 253 009c FFF7FEFF 		bl	vPortExitCritical
 254              	.LVL34:
 255              	.L16:
 459:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 256              		.loc 1 459 0
 257 00a0 24F07F44 		bic	r4, r4, #-16777216
 258              	.LVL35:
 259              	.L14:
 468:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 260              		.loc 1 468 0
 261 00a4 2046     		mov	r0, r4
 262 00a6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 263              	.LVL36:
 264              	.L22:
 265 00aa 00BF     		.align	2
 266              	.L21:
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 19


 267 00ac 04ED00E0 		.word	-536810236
 268              		.cfi_endproc
 269              	.LFE6:
 270              		.size	xEventGroupWaitBits, .-xEventGroupWaitBits
 271              		.section	.text.xEventGroupClearBits,"ax",%progbits
 272              		.align	2
 273              		.global	xEventGroupClearBits
 274              		.thumb
 275              		.thumb_func
 276              		.type	xEventGroupClearBits, %function
 277              	xEventGroupClearBits:
 278              	.LFB7:
 473:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 279              		.loc 1 473 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL37:
 284 0000 70B5     		push	{r4, r5, r6, lr}
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
 290 0002 0646     		mov	r6, r0
 291 0004 0C46     		mov	r4, r1
 292              	.LVL38:
 482:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 293              		.loc 1 482 0
 294 0006 FFF7FEFF 		bl	vPortEnterCritical
 295              	.LVL39:
 488:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 296              		.loc 1 488 0
 297 000a 3568     		ldr	r5, [r6]
 298              	.LVL40:
 491:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 299              		.loc 1 491 0
 300 000c 25EA0404 		bic	r4, r5, r4
 301              	.LVL41:
 302 0010 3460     		str	r4, [r6]
 493:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 303              		.loc 1 493 0
 304 0012 FFF7FEFF 		bl	vPortExitCritical
 305              	.LVL42:
 496:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 306              		.loc 1 496 0
 307 0016 2846     		mov	r0, r5
 308 0018 70BD     		pop	{r4, r5, r6, pc}
 309              		.cfi_endproc
 310              	.LFE7:
 311              		.size	xEventGroupClearBits, .-xEventGroupClearBits
 312 001a 00BF     		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 313              		.align	2
 314              		.global	xEventGroupGetBitsFromISR
 315              		.thumb
 316              		.thumb_func
 317              		.type	xEventGroupGetBitsFromISR, %function
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 20


 318              	xEventGroupGetBitsFromISR:
 319              	.LFB8:
 516:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     UBaseType_t uxSavedInterruptStatus;
 320              		.loc 1 516 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL43:
 326              	.LBB8:
 327              	.LBB9:
 328              		.file 2 "C:\\FreeRTOS\\FreeRTOS\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*
   2:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * FreeRTOS Kernel V10.4.0
   3:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *
   5:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * subject to the following conditions:
  11:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *
  12:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * copies or substantial portions of the Software.
  14:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *
  15:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *
  22:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * https://www.FreeRTOS.org
  23:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * https://github.com/FreeRTOS
  24:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *
  25:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * 1 tab == 4 spaces!
  26:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  */
  27:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  28:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  29:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** #ifndef PORTMACRO_H
  30:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define PORTMACRO_H
  31:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  32:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #ifdef __cplusplus
  33:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         extern "C" {
  34:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #endif
  35:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  36:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------
  37:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * Port specific definitions.
  38:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *
  39:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * given hardware and compiler.
  41:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *
  42:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * These settings should not be altered.
  43:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  *-----------------------------------------------------------
  44:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  */
  45:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 21


  46:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Type definitions. */
  47:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portCHAR          char
  48:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portFLOAT         float
  49:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portDOUBLE        double
  50:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portLONG          long
  51:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portSHORT         short
  52:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portBASE_TYPE     long
  54:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  55:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     typedef long             BaseType_t;
  57:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  59:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         typedef uint16_t     TickType_t;
  61:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #else
  63:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         typedef uint32_t     TickType_t;
  64:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  66:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * not need to be guarded with a critical section. */
  68:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #endif
  70:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
  71:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  72:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Architecture specifics. */
  73:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
  78:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  79:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Scheduler utilities. */
  80:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portYIELD()                                 \
  81:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     {                                                   \
  82:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****                                                         \
  85:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     }
  90:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  91:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
  96:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
  97:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Critical section management. */
  98:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     extern void vPortEnterCritical( void );
  99:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     extern void vPortExitCritical( void );
 100:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 22


 103:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 107:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 108:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 109:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****  * (which build with all the ports) will build. */
 112:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 115:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 116:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Tickless idle/low power functionality. */
 117:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #endif
 121:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 122:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 123:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Architecture specific optimisations. */
 124:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #endif
 127:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 128:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 130:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Generic helper function. */
 131:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         {
 133:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             uint8_t ucReturn;
 134:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 135:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 137:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             return ucReturn;
 138:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         }
 139:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 140:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Check the configuration. */
 141:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #endif
 144:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 145:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 149:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 150:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 151:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 153:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 155:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 157:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #ifdef configASSERT
 158:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 23


 160:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #endif
 161:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 162:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /* portNOP() is not required by this port. */
 163:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portNOP()
 164:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 165:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #define portINLINE              __inline
 166:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 167:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #ifndef portFORCE_INLINE
 168:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     #endif
 170:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 171:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 172:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 173:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 174:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     {
 175:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         uint32_t ulCurrentInterrupt;
 176:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         BaseType_t xReturn;
 177:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 178:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 179:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 180:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 181:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         if( ulCurrentInterrupt == 0 )
 182:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         {
 183:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             xReturn = pdFALSE;
 184:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         }
 185:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         else
 186:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         {
 187:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             xReturn = pdTRUE;
 188:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         }
 189:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 190:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         return xReturn;
 191:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     }
 192:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 193:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 194:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 195:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     {
 197:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         uint32_t ulNewBASEPRI;
 198:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 199:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         __asm volatile
 200:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         (
 201:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	mov %0, %1												\n"\
 202:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	msr basepri, %0											\n"\
 203:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	isb														\n"\
 204:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	dsb														\n"\
 205:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 206:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         );
 207:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     }
 208:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 209:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 210:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 211:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     {
 213:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 215:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         __asm volatile
 329              		.loc 2 215 0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 24


 330              		.syntax unified
 331              	@ 215 "C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 332 0000 EFF31183 			mrs r3, basepri											
 333 0004 4FF00402 		mov r2, #4												
 334 0008 82F31188 		msr basepri, r2											
 335 000c BFF36F8F 		isb														
 336 0010 BFF34F8F 		dsb														
 337              	
 338              	@ 0 "" 2
 339              		.thumb
 340              		.syntax unified
 341              	.LBE9:
 342              	.LBE8:
 523:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 343              		.loc 1 523 0
 344 0014 0068     		ldr	r0, [r0]
 345              	.LVL44:
 346              	.LBB10:
 347              	.LBB11:
 216:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         (
 217:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	mrs %0, basepri											\n"\
 218:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	mov %1, %2												\n"\
 219:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	msr basepri, %1											\n"\
 220:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	isb														\n"\
 221:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             "	dsb														\n"\
 222:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 223:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         );
 224:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 225:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 226:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****          * warnings. */
 227:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         return ulOriginalBASEPRI;
 228:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     }
 229:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** /*-----------------------------------------------------------*/
 230:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h **** 
 231:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****     {
 233:C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3\portmacro.h ****         __asm volatile
 348              		.loc 2 233 0
 349              		.syntax unified
 350              	@ 233 "C:\FreeRTOS\FreeRTOS\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 351 0016 83F31188 			msr basepri, r3	
 352              	@ 0 "" 2
 353              		.thumb
 354              		.syntax unified
 355              	.LBE11:
 356              	.LBE10:
 528:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 357              		.loc 1 528 0
 358 001a 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE8:
 361              		.size	xEventGroupGetBitsFromISR, .-xEventGroupGetBitsFromISR
 362              		.section	.text.xEventGroupSetBits,"ax",%progbits
 363              		.align	2
 364              		.global	xEventGroupSetBits
 365              		.thumb
 366              		.thumb_func
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 25


 367              		.type	xEventGroupSetBits, %function
 368              	xEventGroupSetBits:
 369              	.LFB9:
 533:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ListItem_t * pxListItem, * pxNext;
 370              		.loc 1 533 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL45:
 375 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 376              		.cfi_def_cfa_offset 24
 377              		.cfi_offset 3, -24
 378              		.cfi_offset 4, -20
 379              		.cfi_offset 5, -16
 380              		.cfi_offset 6, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 0446     		mov	r4, r0
 384 0004 0D46     		mov	r5, r1
 385              	.LVL46:
 547:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     vTaskSuspendAll();
 386              		.loc 1 547 0
 387 0006 00F10C06 		add	r6, r0, #12
 388              	.LVL47:
 548:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 389              		.loc 1 548 0
 390 000a FFF7FEFF 		bl	vTaskSuspendAll
 391              	.LVL48:
 552:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 392              		.loc 1 552 0
 393 000e 2069     		ldr	r0, [r4, #16]
 394              	.LVL49:
 555:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 395              		.loc 1 555 0
 396 0010 2368     		ldr	r3, [r4]
 397 0012 1D43     		orrs	r5, r5, r3
 398              	.LVL50:
 399 0014 2560     		str	r5, [r4]
 537:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 400              		.loc 1 537 0
 401 0016 0027     		movs	r7, #0
 558:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 402              		.loc 1 558 0
 403 0018 1FE0     		b	.L27
 404              	.LVL51:
 405              	.L32:
 560:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 406              		.loc 1 560 0
 407 001a 4568     		ldr	r5, [r0, #4]
 408              	.LVL52:
 561:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             xMatchFound = pdFALSE;
 409              		.loc 1 561 0
 410 001c 0368     		ldr	r3, [r0]
 411              	.LVL53:
 566:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 412              		.loc 1 566 0
 413 001e 23F07F42 		bic	r2, r3, #-16777216
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 26


 414              	.LVL54:
 568:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 415              		.loc 1 568 0
 416 0022 13F0806F 		tst	r3, #67108864
 417 0026 04D1     		bne	.L28
 571:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 418              		.loc 1 571 0
 419 0028 2168     		ldr	r1, [r4]
 420 002a 0A42     		tst	r2, r1
 421 002c 07D1     		bne	.L33
 562:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 422              		.loc 1 562 0
 423 002e 0021     		movs	r1, #0
 424 0030 08E0     		b	.L29
 425              	.L28:
 580:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 426              		.loc 1 580 0
 427 0032 2168     		ldr	r1, [r4]
 428 0034 32EA0101 		bics	r1, r2, r1
 429 0038 03D0     		beq	.L34
 562:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 430              		.loc 1 562 0
 431 003a 0021     		movs	r1, #0
 432 003c 02E0     		b	.L29
 433              	.L33:
 573:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 434              		.loc 1 573 0
 435 003e 0121     		movs	r1, #1
 436 0040 00E0     		b	.L29
 437              	.L34:
 583:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 438              		.loc 1 583 0
 439 0042 0121     		movs	r1, #1
 440              	.L29:
 441              	.LVL55:
 590:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 442              		.loc 1 590 0
 443 0044 41B1     		cbz	r1, .L30
 593:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 444              		.loc 1 593 0
 445 0046 13F0807F 		tst	r3, #16777216
 446 004a 00D0     		beq	.L31
 595:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 447              		.loc 1 595 0
 448 004c 1743     		orrs	r7, r7, r2
 449              	.LVL56:
 450              	.L31:
 607:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 451              		.loc 1 607 0
 452 004e 2168     		ldr	r1, [r4]
 453              	.LVL57:
 454 0050 41F00071 		orr	r1, r1, #33554432
 455 0054 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 456              	.LVL58:
 457              	.L30:
 562:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 458              		.loc 1 562 0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 27


 459 0058 2846     		mov	r0, r5
 460              	.LVL59:
 461              	.L27:
 558:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 462              		.loc 1 558 0
 463 005a B042     		cmp	r0, r6
 464 005c DDD1     		bne	.L32
 618:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 465              		.loc 1 618 0
 466 005e 2368     		ldr	r3, [r4]
 467 0060 23EA0707 		bic	r7, r3, r7
 468              	.LVL60:
 469 0064 2760     		str	r7, [r4]
 620:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 470              		.loc 1 620 0
 471 0066 FFF7FEFF 		bl	xTaskResumeAll
 472              	.LVL61:
 623:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 473              		.loc 1 623 0
 474 006a 2068     		ldr	r0, [r4]
 475 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 476              		.cfi_endproc
 477              	.LFE9:
 478              		.size	xEventGroupSetBits, .-xEventGroupSetBits
 479 006e 00BF     		.section	.text.xEventGroupSync,"ax",%progbits
 480              		.align	2
 481              		.global	xEventGroupSync
 482              		.thumb
 483              		.thumb_func
 484              		.type	xEventGroupSync, %function
 485              	xEventGroupSync:
 486              	.LFB5:
 196:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventBits_t uxOriginalBitValue, uxReturn;
 487              		.loc 1 196 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL62:
 492 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 493              		.cfi_def_cfa_offset 24
 494              		.cfi_offset 4, -24
 495              		.cfi_offset 5, -20
 496              		.cfi_offset 6, -16
 497              		.cfi_offset 7, -12
 498              		.cfi_offset 8, -8
 499              		.cfi_offset 14, -4
 500 0004 0546     		mov	r5, r0
 501 0006 0C46     		mov	r4, r1
 502 0008 1746     		mov	r7, r2
 503 000a 1E46     		mov	r6, r3
 504              	.LVL63:
 210:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 505              		.loc 1 210 0
 506 000c FFF7FEFF 		bl	vTaskSuspendAll
 507              	.LVL64:
 212:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 508              		.loc 1 212 0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 28


 509 0010 D5F80080 		ldr	r8, [r5]
 510              	.LVL65:
 214:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 511              		.loc 1 214 0
 512 0014 2146     		mov	r1, r4
 513 0016 2846     		mov	r0, r5
 514 0018 FFF7FEFF 		bl	xEventGroupSetBits
 515              	.LVL66:
 216:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 516              		.loc 1 216 0
 517 001c 48EA0404 		orr	r4, r8, r4
 518              	.LVL67:
 519 0020 37EA0403 		bics	r3, r7, r4
 520 0024 05D1     		bne	.L37
 521              	.LVL68:
 223:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 522              		.loc 1 223 0
 523 0026 2B68     		ldr	r3, [r5]
 524 0028 23EA0703 		bic	r3, r3, r7
 525 002c 2B60     		str	r3, [r5]
 526              	.LVL69:
 225:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 527              		.loc 1 225 0
 528 002e 0026     		movs	r6, #0
 529 0030 09E0     		b	.L38
 530              	.LVL70:
 531              	.L37:
 229:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 532              		.loc 1 229 0
 533 0032 3EB1     		cbz	r6, .L39
 236:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 534              		.loc 1 236 0
 535 0034 3246     		mov	r2, r6
 536 0036 47F0A061 		orr	r1, r7, #83886080
 537 003a 281D     		adds	r0, r5, #4
 538 003c FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 539              	.LVL71:
 242:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 540              		.loc 1 242 0
 541 0040 0024     		movs	r4, #0
 542 0042 00E0     		b	.L38
 543              	.LVL72:
 544              	.L39:
 248:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 xTimeoutOccurred = pdTRUE;
 545              		.loc 1 248 0
 546 0044 2C68     		ldr	r4, [r5]
 547              	.LVL73:
 548              	.L38:
 253:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 549              		.loc 1 253 0
 550 0046 FFF7FEFF 		bl	xTaskResumeAll
 551              	.LVL74:
 255:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 552              		.loc 1 255 0
 553 004a DEB1     		cbz	r6, .L40
 257:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 554              		.loc 1 257 0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 29


 555 004c 38B9     		cbnz	r0, .L41
 259:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 556              		.loc 1 259 0
 557 004e 4FF08052 		mov	r2, #268435456
 558 0052 0E4B     		ldr	r3, .L45
 559 0054 1A60     		str	r2, [r3]
 560              		.syntax unified
 561              	@ 259 "..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source\event_groups.c" 1
 562 0056 BFF34F8F 		dsb
 563              	@ 0 "" 2
 564              	@ 259 "..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source\event_groups.c" 1
 565 005a BFF36F8F 		isb
 566              	@ 0 "" 2
 567              		.thumb
 568              		.syntax unified
 569              	.L41:
 270:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 570              		.loc 1 270 0
 571 005e FFF7FEFF 		bl	uxTaskResetEventItemValue
 572              	.LVL75:
 573 0062 0446     		mov	r4, r0
 574              	.LVL76:
 272:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 575              		.loc 1 272 0
 576 0064 10F0007F 		tst	r0, #33554432
 577 0068 0AD1     		bne	.L42
 275:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             {
 578              		.loc 1 275 0
 579 006a FFF7FEFF 		bl	vPortEnterCritical
 580              	.LVL77:
 277:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 581              		.loc 1 277 0
 582 006e 2C68     		ldr	r4, [r5]
 583              	.LVL78:
 283:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 {
 584              		.loc 1 283 0
 585 0070 37EA0403 		bics	r3, r7, r4
 586 0074 02D1     		bne	.L43
 285:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****                 }
 587              		.loc 1 285 0
 588 0076 24EA0707 		bic	r7, r4, r7
 589              	.LVL79:
 590 007a 2F60     		str	r7, [r5]
 591              	.L43:
 292:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** 
 592              		.loc 1 292 0
 593 007c FFF7FEFF 		bl	vPortExitCritical
 594              	.LVL80:
 595              	.L42:
 303:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     }
 596              		.loc 1 303 0
 597 0080 24F07F44 		bic	r4, r4, #-16777216
 598              	.LVL81:
 599              	.L40:
 312:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 600              		.loc 1 312 0
 601 0084 2046     		mov	r0, r4
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 30


 602 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 603              	.LVL82:
 604              	.L46:
 605 008a 00BF     		.align	2
 606              	.L45:
 607 008c 04ED00E0 		.word	-536810236
 608              		.cfi_endproc
 609              	.LFE5:
 610              		.size	xEventGroupSync, .-xEventGroupSync
 611              		.section	.text.vEventGroupDelete,"ax",%progbits
 612              		.align	2
 613              		.global	vEventGroupDelete
 614              		.thumb
 615              		.thumb_func
 616              		.type	vEventGroupDelete, %function
 617              	vEventGroupDelete:
 618              	.LFB10:
 627:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     EventGroup_t * pxEventBits = xEventGroup;
 619              		.loc 1 627 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              	.LVL83:
 624 0000 10B5     		push	{r4, lr}
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 628 0002 0446     		mov	r4, r0
 629              	.LVL84:
 631:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     {
 630              		.loc 1 631 0
 631 0004 FFF7FEFF 		bl	vTaskSuspendAll
 632              	.LVL85:
 635:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 633              		.loc 1 635 0
 634 0008 04E0     		b	.L48
 635              	.L49:
 640:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         }
 636              		.loc 1 640 0
 637 000a 4FF00071 		mov	r1, #33554432
 638 000e 2069     		ldr	r0, [r4, #16]
 639 0010 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 640              	.LVL86:
 641              	.L48:
 635:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****         {
 642              		.loc 1 635 0
 643 0014 6368     		ldr	r3, [r4, #4]
 644 0016 002B     		cmp	r3, #0
 645 0018 F7D1     		bne	.L49
 647:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****             }
 646              		.loc 1 647 0
 647 001a 2046     		mov	r0, r4
 648 001c FFF7FEFF 		bl	vPortFree
 649              	.LVL87:
 664:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 650              		.loc 1 664 0
 651 0020 FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 31


 652              	.LVL88:
 653 0024 10BD     		pop	{r4, pc}
 654              		.cfi_endproc
 655              	.LFE10:
 656              		.size	vEventGroupDelete, .-vEventGroupDelete
 657 0026 00BF     		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 658              		.align	2
 659              		.global	vEventGroupSetBitsCallback
 660              		.thumb
 661              		.thumb_func
 662              		.type	vEventGroupSetBitsCallback, %function
 663              	vEventGroupSetBitsCallback:
 664              	.LFB11:
 672:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't a
 665              		.loc 1 672 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL89:
 670 0000 08B5     		push	{r3, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 673:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 674              		.loc 1 673 0
 675 0002 FFF7FEFF 		bl	xEventGroupSetBits
 676              	.LVL90:
 677 0006 08BD     		pop	{r3, pc}
 678              		.cfi_endproc
 679              	.LFE11:
 680              		.size	vEventGroupSetBitsCallback, .-vEventGroupSetBitsCallback
 681              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 682              		.align	2
 683              		.global	vEventGroupClearBitsCallback
 684              		.thumb
 685              		.thumb_func
 686              		.type	vEventGroupClearBitsCallback, %function
 687              	vEventGroupClearBitsCallback:
 688              	.LFB12:
 681:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c ****     ( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can
 689              		.loc 1 681 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL91:
 694 0000 08B5     		push	{r3, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 3, -8
 697              		.cfi_offset 14, -4
 682:..\..\..\..\..\..\FreeRTOS\FreeRTOS\FreeRTOS\Source/event_groups.c **** }
 698              		.loc 1 682 0
 699 0002 FFF7FEFF 		bl	xEventGroupClearBits
 700              	.LVL92:
 701 0006 08BD     		pop	{r3, pc}
 702              		.cfi_endproc
 703              	.LFE12:
 704              		.size	vEventGroupClearBitsCallback, .-vEventGroupClearBitsCallback
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 32


 705              		.text
 706              	.Letext0:
 707              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 708              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 709              		.file 5 "C:\\FreeRTOS\\FreeRTOS\\FreeRTOS\\Source\\include/list.h"
 710              		.file 6 "C:\\FreeRTOS\\FreeRTOS\\FreeRTOS\\Source\\include/event_groups.h"
 711              		.file 7 "C:\\FreeRTOS\\FreeRTOS\\FreeRTOS\\Source\\include/portable.h"
 712              		.file 8 "C:\\FreeRTOS\\FreeRTOS\\FreeRTOS\\Source\\include/task.h"
 713              		.section	.debug_info,"",%progbits
 714              	.Ldebug_info0:
 715 0000 ED080000 		.4byte	0x8ed
 716 0004 0400     		.2byte	0x4
 717 0006 00000000 		.4byte	.Ldebug_abbrev0
 718 000a 04       		.byte	0x4
 719 000b 01       		.uleb128 0x1
 720 000c 06050000 		.4byte	.LASF83
 721 0010 0C       		.byte	0xc
 722 0011 A8020000 		.4byte	.LASF84
 723 0015 A8000000 		.4byte	.LASF85
 724 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 725 001d 00000000 		.4byte	0
 726 0021 00000000 		.4byte	.Ldebug_line0
 727 0025 02       		.uleb128 0x2
 728 0026 04       		.byte	0x4
 729 0027 07       		.byte	0x7
 730 0028 18030000 		.4byte	.LASF0
 731 002c 03       		.uleb128 0x3
 732 002d 04       		.byte	0x4
 733 002e 05       		.byte	0x5
 734 002f 696E7400 		.ascii	"int\000"
 735 0033 02       		.uleb128 0x2
 736 0034 08       		.byte	0x8
 737 0035 05       		.byte	0x5
 738 0036 BD010000 		.4byte	.LASF1
 739 003a 02       		.uleb128 0x2
 740 003b 08       		.byte	0x8
 741 003c 04       		.byte	0x4
 742 003d 7C020000 		.4byte	.LASF2
 743 0041 02       		.uleb128 0x2
 744 0042 01       		.byte	0x1
 745 0043 06       		.byte	0x6
 746 0044 79010000 		.4byte	.LASF3
 747 0048 02       		.uleb128 0x2
 748 0049 01       		.byte	0x1
 749 004a 08       		.byte	0x8
 750 004b 88020000 		.4byte	.LASF4
 751 004f 02       		.uleb128 0x2
 752 0050 02       		.byte	0x2
 753 0051 05       		.byte	0x5
 754 0052 8A000000 		.4byte	.LASF5
 755 0056 02       		.uleb128 0x2
 756 0057 02       		.byte	0x2
 757 0058 07       		.byte	0x7
 758 0059 5E030000 		.4byte	.LASF6
 759 005d 02       		.uleb128 0x2
 760 005e 04       		.byte	0x4
 761 005f 05       		.byte	0x5
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 33


 762 0060 EF010000 		.4byte	.LASF7
 763 0064 04       		.uleb128 0x4
 764 0065 F8000000 		.4byte	.LASF12
 765 0069 03       		.byte	0x3
 766 006a 41       		.byte	0x41
 767 006b 6F000000 		.4byte	0x6f
 768 006f 02       		.uleb128 0x2
 769 0070 04       		.byte	0x4
 770 0071 07       		.byte	0x7
 771 0072 3A040000 		.4byte	.LASF8
 772 0076 02       		.uleb128 0x2
 773 0077 08       		.byte	0x8
 774 0078 07       		.byte	0x7
 775 0079 EB020000 		.4byte	.LASF9
 776 007d 02       		.uleb128 0x2
 777 007e 04       		.byte	0x4
 778 007f 07       		.byte	0x7
 779 0080 B2040000 		.4byte	.LASF10
 780 0084 05       		.uleb128 0x5
 781 0085 04       		.byte	0x4
 782 0086 02       		.uleb128 0x2
 783 0087 01       		.byte	0x1
 784 0088 08       		.byte	0x8
 785 0089 A9030000 		.4byte	.LASF11
 786 008d 04       		.uleb128 0x4
 787 008e 02030000 		.4byte	.LASF13
 788 0092 04       		.byte	0x4
 789 0093 30       		.byte	0x30
 790 0094 64000000 		.4byte	0x64
 791 0098 04       		.uleb128 0x4
 792 0099 30030000 		.4byte	.LASF14
 793 009d 02       		.byte	0x2
 794 009e 38       		.byte	0x38
 795 009f 5D000000 		.4byte	0x5d
 796 00a3 04       		.uleb128 0x4
 797 00a4 4C040000 		.4byte	.LASF15
 798 00a8 02       		.byte	0x2
 799 00a9 39       		.byte	0x39
 800 00aa 6F000000 		.4byte	0x6f
 801 00ae 04       		.uleb128 0x4
 802 00af 71020000 		.4byte	.LASF16
 803 00b3 02       		.byte	0x2
 804 00b4 3F       		.byte	0x3f
 805 00b5 8D000000 		.4byte	0x8d
 806 00b9 06       		.uleb128 0x6
 807 00ba 51020000 		.4byte	.LASF22
 808 00be 14       		.byte	0x14
 809 00bf 05       		.byte	0x5
 810 00c0 8E       		.byte	0x8e
 811 00c1 02010000 		.4byte	0x102
 812 00c5 07       		.uleb128 0x7
 813 00c6 15020000 		.4byte	.LASF17
 814 00ca 05       		.byte	0x5
 815 00cb 91       		.byte	0x91
 816 00cc AE000000 		.4byte	0xae
 817 00d0 00       		.byte	0
 818 00d1 07       		.uleb128 0x7
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 34


 819 00d2 AE030000 		.4byte	.LASF18
 820 00d6 05       		.byte	0x5
 821 00d7 92       		.byte	0x92
 822 00d8 02010000 		.4byte	0x102
 823 00dc 04       		.byte	0x4
 824 00dd 07       		.uleb128 0x7
 825 00de 9D000000 		.4byte	.LASF19
 826 00e2 05       		.byte	0x5
 827 00e3 93       		.byte	0x93
 828 00e4 02010000 		.4byte	0x102
 829 00e8 08       		.byte	0x8
 830 00e9 07       		.uleb128 0x7
 831 00ea 21010000 		.4byte	.LASF20
 832 00ee 05       		.byte	0x5
 833 00ef 94       		.byte	0x94
 834 00f0 84000000 		.4byte	0x84
 835 00f4 0C       		.byte	0xc
 836 00f5 07       		.uleb128 0x7
 837 00f6 FE010000 		.4byte	.LASF21
 838 00fa 05       		.byte	0x5
 839 00fb 95       		.byte	0x95
 840 00fc 39010000 		.4byte	0x139
 841 0100 10       		.byte	0x10
 842 0101 00       		.byte	0
 843 0102 08       		.uleb128 0x8
 844 0103 04       		.byte	0x4
 845 0104 B9000000 		.4byte	0xb9
 846 0108 06       		.uleb128 0x6
 847 0109 F8010000 		.4byte	.LASF23
 848 010d 14       		.byte	0x14
 849 010e 05       		.byte	0x5
 850 010f A6       		.byte	0xa6
 851 0110 39010000 		.4byte	0x139
 852 0114 07       		.uleb128 0x7
 853 0115 71040000 		.4byte	.LASF24
 854 0119 05       		.byte	0x5
 855 011a A9       		.byte	0xa9
 856 011b 86010000 		.4byte	0x186
 857 011f 00       		.byte	0
 858 0120 07       		.uleb128 0x7
 859 0121 ED040000 		.4byte	.LASF25
 860 0125 05       		.byte	0x5
 861 0126 AA       		.byte	0xaa
 862 0127 8B010000 		.4byte	0x18b
 863 012b 04       		.byte	0x4
 864 012c 07       		.uleb128 0x7
 865 012d 94000000 		.4byte	.LASF26
 866 0131 05       		.byte	0x5
 867 0132 AB       		.byte	0xab
 868 0133 7B010000 		.4byte	0x17b
 869 0137 08       		.byte	0x8
 870 0138 00       		.byte	0
 871 0139 08       		.uleb128 0x8
 872 013a 04       		.byte	0x4
 873 013b 08010000 		.4byte	0x108
 874 013f 04       		.uleb128 0x4
 875 0140 25030000 		.4byte	.LASF27
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 35


 876 0144 05       		.byte	0x5
 877 0145 98       		.byte	0x98
 878 0146 B9000000 		.4byte	0xb9
 879 014a 06       		.uleb128 0x6
 880 014b AF050000 		.4byte	.LASF28
 881 014f 0C       		.byte	0xc
 882 0150 05       		.byte	0x5
 883 0151 9A       		.byte	0x9a
 884 0152 7B010000 		.4byte	0x17b
 885 0156 07       		.uleb128 0x7
 886 0157 15020000 		.4byte	.LASF17
 887 015b 05       		.byte	0x5
 888 015c 9D       		.byte	0x9d
 889 015d AE000000 		.4byte	0xae
 890 0161 00       		.byte	0
 891 0162 07       		.uleb128 0x7
 892 0163 AE030000 		.4byte	.LASF18
 893 0167 05       		.byte	0x5
 894 0168 9E       		.byte	0x9e
 895 0169 02010000 		.4byte	0x102
 896 016d 04       		.byte	0x4
 897 016e 07       		.uleb128 0x7
 898 016f 9D000000 		.4byte	.LASF19
 899 0173 05       		.byte	0x5
 900 0174 9F       		.byte	0x9f
 901 0175 02010000 		.4byte	0x102
 902 0179 08       		.byte	0x8
 903 017a 00       		.byte	0
 904 017b 04       		.uleb128 0x4
 905 017c AE010000 		.4byte	.LASF29
 906 0180 05       		.byte	0x5
 907 0181 A1       		.byte	0xa1
 908 0182 4A010000 		.4byte	0x14a
 909 0186 09       		.uleb128 0x9
 910 0187 A3000000 		.4byte	0xa3
 911 018b 08       		.uleb128 0x8
 912 018c 04       		.byte	0x4
 913 018d 3F010000 		.4byte	0x13f
 914 0191 04       		.uleb128 0x4
 915 0192 A7010000 		.4byte	.LASF30
 916 0196 05       		.byte	0x5
 917 0197 AD       		.byte	0xad
 918 0198 08010000 		.4byte	0x108
 919 019c 04       		.uleb128 0x4
 920 019d 36010000 		.4byte	.LASF31
 921 01a1 06       		.byte	0x6
 922 01a2 53       		.byte	0x53
 923 01a3 A7010000 		.4byte	0x1a7
 924 01a7 08       		.uleb128 0x8
 925 01a8 04       		.byte	0x4
 926 01a9 AD010000 		.4byte	0x1ad
 927 01ad 06       		.uleb128 0x6
 928 01ae E6030000 		.4byte	.LASF32
 929 01b2 18       		.byte	0x18
 930 01b3 01       		.byte	0x1
 931 01b4 3E       		.byte	0x3e
 932 01b5 D2010000 		.4byte	0x1d2
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 36


 933 01b9 07       		.uleb128 0x7
 934 01ba C8030000 		.4byte	.LASF33
 935 01be 01       		.byte	0x1
 936 01bf 40       		.byte	0x40
 937 01c0 D2010000 		.4byte	0x1d2
 938 01c4 00       		.byte	0
 939 01c5 07       		.uleb128 0x7
 940 01c6 2C020000 		.4byte	.LASF34
 941 01ca 01       		.byte	0x1
 942 01cb 41       		.byte	0x41
 943 01cc 91010000 		.4byte	0x191
 944 01d0 04       		.byte	0x4
 945 01d1 00       		.byte	0
 946 01d2 04       		.uleb128 0x4
 947 01d3 03010000 		.4byte	.LASF35
 948 01d7 06       		.byte	0x6
 949 01d8 5D       		.byte	0x5d
 950 01d9 AE000000 		.4byte	0xae
 951 01dd 04       		.uleb128 0x4
 952 01de 2F060000 		.4byte	.LASF36
 953 01e2 01       		.byte	0x1
 954 01e3 4A       		.byte	0x4a
 955 01e4 AD010000 		.4byte	0x1ad
 956 01e8 0A       		.uleb128 0xa
 957 01e9 99030000 		.4byte	.LASF86
 958 01ed 02       		.byte	0x2
 959 01ee E7       		.byte	0xe7
 960 01ef 03       		.byte	0x3
 961 01f0 00020000 		.4byte	0x200
 962 01f4 0B       		.uleb128 0xb
 963 01f5 58040000 		.4byte	.LASF87
 964 01f9 02       		.byte	0x2
 965 01fa E7       		.byte	0xe7
 966 01fb 8D000000 		.4byte	0x8d
 967 01ff 00       		.byte	0
 968 0200 0C       		.uleb128 0xc
 969 0201 56010000 		.4byte	.LASF88
 970 0205 02       		.byte	0x2
 971 0206 D3       		.byte	0xd3
 972 0207 8D000000 		.4byte	0x8d
 973 020b 03       		.byte	0x3
 974 020c 27020000 		.4byte	0x227
 975 0210 0D       		.uleb128 0xd
 976 0211 96020000 		.4byte	.LASF37
 977 0215 02       		.byte	0x2
 978 0216 D5       		.byte	0xd5
 979 0217 8D000000 		.4byte	0x8d
 980 021b 0D       		.uleb128 0xd
 981 021c 34000000 		.4byte	.LASF38
 982 0220 02       		.byte	0x2
 983 0221 D5       		.byte	0xd5
 984 0222 8D000000 		.4byte	0x8d
 985 0226 00       		.byte	0
 986 0227 0E       		.uleb128 0xe
 987 0228 84030000 		.4byte	.LASF89
 988 022c 01       		.byte	0x1
 989 022d AE02     		.2byte	0x2ae
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 37


 990 022f 98000000 		.4byte	0x98
 991 0233 00000000 		.4byte	.LFB13
 992 0237 1C000000 		.4byte	.LFE13-.LFB13
 993 023b 01       		.uleb128 0x1
 994 023c 9C       		.byte	0x9c
 995 023d 7E020000 		.4byte	0x27e
 996 0241 0F       		.uleb128 0xf
 997 0242 BF050000 		.4byte	.LASF39
 998 0246 01       		.byte	0x1
 999 0247 AE02     		.2byte	0x2ae
 1000 0249 7E020000 		.4byte	0x27e
 1001 024d 00000000 		.4byte	.LLST0
 1002 0251 10       		.uleb128 0x10
 1003 0252 97010000 		.4byte	.LASF40
 1004 0256 01       		.byte	0x1
 1005 0257 AF02     		.2byte	0x2af
 1006 0259 7E020000 		.4byte	0x27e
 1007 025d 01       		.uleb128 0x1
 1008 025e 51       		.byte	0x51
 1009 025f 10       		.uleb128 0x10
 1010 0260 60000000 		.4byte	.LASF41
 1011 0264 01       		.byte	0x1
 1012 0265 B002     		.2byte	0x2b0
 1013 0267 83020000 		.4byte	0x283
 1014 026b 01       		.uleb128 0x1
 1015 026c 52       		.byte	0x52
 1016 026d 11       		.uleb128 0x11
 1017 026e 0F010000 		.4byte	.LASF42
 1018 0272 01       		.byte	0x1
 1019 0273 B202     		.2byte	0x2b2
 1020 0275 98000000 		.4byte	0x98
 1021 0279 6C000000 		.4byte	.LLST1
 1022 027d 00       		.byte	0
 1023 027e 12       		.uleb128 0x12
 1024 027f D2010000 		.4byte	0x1d2
 1025 0283 12       		.uleb128 0x12
 1026 0284 98000000 		.4byte	0x98
 1027 0288 13       		.uleb128 0x13
 1028 0289 22000000 		.4byte	.LASF44
 1029 028d 01       		.byte	0x1
 1030 028e 92       		.byte	0x92
 1031 028f 9C010000 		.4byte	0x19c
 1032 0293 00000000 		.4byte	.LFB4
 1033 0297 1A000000 		.4byte	.LFE4-.LFB4
 1034 029b 01       		.uleb128 0x1
 1035 029c 9C       		.byte	0x9c
 1036 029d D4020000 		.4byte	0x2d4
 1037 02a1 14       		.uleb128 0x14
 1038 02a2 E1040000 		.4byte	.LASF43
 1039 02a6 01       		.byte	0x1
 1040 02a7 94       		.byte	0x94
 1041 02a8 D4020000 		.4byte	0x2d4
 1042 02ac 8B000000 		.4byte	.LLST2
 1043 02b0 15       		.uleb128 0x15
 1044 02b1 08000000 		.4byte	.LVL8
 1045 02b5 7C080000 		.4byte	0x87c
 1046 02b9 C3020000 		.4byte	0x2c3
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 38


 1047 02bd 16       		.uleb128 0x16
 1048 02be 01       		.uleb128 0x1
 1049 02bf 50       		.byte	0x50
 1050 02c0 01       		.uleb128 0x1
 1051 02c1 48       		.byte	0x48
 1052 02c2 00       		.byte	0
 1053 02c3 17       		.uleb128 0x17
 1054 02c4 16000000 		.4byte	.LVL10
 1055 02c8 87080000 		.4byte	0x887
 1056 02cc 16       		.uleb128 0x16
 1057 02cd 01       		.uleb128 0x1
 1058 02ce 50       		.byte	0x50
 1059 02cf 02       		.uleb128 0x2
 1060 02d0 74       		.byte	0x74
 1061 02d1 04       		.sleb128 4
 1062 02d2 00       		.byte	0
 1063 02d3 00       		.byte	0
 1064 02d4 08       		.uleb128 0x8
 1065 02d5 04       		.byte	0x4
 1066 02d6 DD010000 		.4byte	0x1dd
 1067 02da 18       		.uleb128 0x18
 1068 02db 3B030000 		.4byte	.LASF45
 1069 02df 01       		.byte	0x1
 1070 02e0 3B01     		.2byte	0x13b
 1071 02e2 D2010000 		.4byte	0x1d2
 1072 02e6 00000000 		.4byte	.LFB6
 1073 02ea B0000000 		.4byte	.LFE6-.LFB6
 1074 02ee 01       		.uleb128 0x1
 1075 02ef 9C       		.byte	0x9c
 1076 02f0 42040000 		.4byte	0x442
 1077 02f4 0F       		.uleb128 0xf
 1078 02f5 C7040000 		.4byte	.LASF46
 1079 02f9 01       		.byte	0x1
 1080 02fa 3B01     		.2byte	0x13b
 1081 02fc 9C010000 		.4byte	0x19c
 1082 0300 A9000000 		.4byte	.LLST3
 1083 0304 0F       		.uleb128 0xf
 1084 0305 97010000 		.4byte	.LASF40
 1085 0309 01       		.byte	0x1
 1086 030a 3C01     		.2byte	0x13c
 1087 030c 7E020000 		.4byte	0x27e
 1088 0310 D5000000 		.4byte	.LLST4
 1089 0314 0F       		.uleb128 0xf
 1090 0315 49010000 		.4byte	.LASF47
 1091 0319 01       		.byte	0x1
 1092 031a 3D01     		.2byte	0x13d
 1093 031c 83020000 		.4byte	0x283
 1094 0320 01010000 		.4byte	.LLST5
 1095 0324 0F       		.uleb128 0xf
 1096 0325 60000000 		.4byte	.LASF41
 1097 0329 01       		.byte	0x1
 1098 032a 3E01     		.2byte	0x13e
 1099 032c 83020000 		.4byte	0x283
 1100 0330 2D010000 		.4byte	.LLST6
 1101 0334 0F       		.uleb128 0xf
 1102 0335 29010000 		.4byte	.LASF48
 1103 0339 01       		.byte	0x1
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 39


 1104 033a 3F01     		.2byte	0x13f
 1105 033c AE000000 		.4byte	0xae
 1106 0340 59010000 		.4byte	.LLST7
 1107 0344 11       		.uleb128 0x11
 1108 0345 E1040000 		.4byte	.LASF43
 1109 0349 01       		.byte	0x1
 1110 034a 4101     		.2byte	0x141
 1111 034c D4020000 		.4byte	0x2d4
 1112 0350 9C010000 		.4byte	.LLST8
 1113 0354 11       		.uleb128 0x11
 1114 0355 31040000 		.4byte	.LASF49
 1115 0359 01       		.byte	0x1
 1116 035a 4201     		.2byte	0x142
 1117 035c D2010000 		.4byte	0x1d2
 1118 0360 C8010000 		.4byte	.LLST9
 1119 0364 11       		.uleb128 0x11
 1120 0365 F6030000 		.4byte	.LASF50
 1121 0369 01       		.byte	0x1
 1122 036a 4201     		.2byte	0x142
 1123 036c D2010000 		.4byte	0x1d2
 1124 0370 13020000 		.4byte	.LLST10
 1125 0374 11       		.uleb128 0x11
 1126 0375 0F010000 		.4byte	.LASF42
 1127 0379 01       		.byte	0x1
 1128 037a 4301     		.2byte	0x143
 1129 037c 98000000 		.4byte	0x98
 1130 0380 3E020000 		.4byte	.LLST11
 1131 0384 11       		.uleb128 0x11
 1132 0385 05060000 		.4byte	.LASF51
 1133 0389 01       		.byte	0x1
 1134 038a 4301     		.2byte	0x143
 1135 038c 98000000 		.4byte	0x98
 1136 0390 5C020000 		.4byte	.LLST12
 1137 0394 11       		.uleb128 0x11
 1138 0395 F5040000 		.4byte	.LASF52
 1139 0399 01       		.byte	0x1
 1140 039a 4401     		.2byte	0x144
 1141 039c 98000000 		.4byte	0x98
 1142 03a0 6F020000 		.4byte	.LLST13
 1143 03a4 19       		.uleb128 0x19
 1144 03a5 00000000 		.4byte	.Ldebug_ranges0+0
 1145 03a9 F4030000 		.4byte	0x3f4
 1146 03ad 11       		.uleb128 0x11
 1147 03ae BF050000 		.4byte	.LASF39
 1148 03b2 01       		.byte	0x1
 1149 03b3 5301     		.2byte	0x153
 1150 03b5 7E020000 		.4byte	0x27e
 1151 03b9 8F020000 		.4byte	.LLST14
 1152 03bd 15       		.uleb128 0x15
 1153 03be 1E000000 		.4byte	.LVL15
 1154 03c2 27020000 		.4byte	0x227
 1155 03c6 DD030000 		.4byte	0x3dd
 1156 03ca 16       		.uleb128 0x16
 1157 03cb 01       		.uleb128 0x1
 1158 03cc 50       		.byte	0x50
 1159 03cd 02       		.uleb128 0x2
 1160 03ce 74       		.byte	0x74
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 40


 1161 03cf 00       		.sleb128 0
 1162 03d0 16       		.uleb128 0x16
 1163 03d1 01       		.uleb128 0x1
 1164 03d2 51       		.byte	0x51
 1165 03d3 02       		.uleb128 0x2
 1166 03d4 76       		.byte	0x76
 1167 03d5 00       		.sleb128 0
 1168 03d6 16       		.uleb128 0x16
 1169 03d7 01       		.uleb128 0x1
 1170 03d8 52       		.byte	0x52
 1171 03d9 02       		.uleb128 0x2
 1172 03da 78       		.byte	0x78
 1173 03db 00       		.sleb128 0
 1174 03dc 00       		.byte	0
 1175 03dd 17       		.uleb128 0x17
 1176 03de 54000000 		.4byte	.LVL22
 1177 03e2 93080000 		.4byte	0x893
 1178 03e6 16       		.uleb128 0x16
 1179 03e7 01       		.uleb128 0x1
 1180 03e8 50       		.byte	0x50
 1181 03e9 02       		.uleb128 0x2
 1182 03ea 77       		.byte	0x77
 1183 03eb 04       		.sleb128 4
 1184 03ec 16       		.uleb128 0x16
 1185 03ed 01       		.uleb128 0x1
 1186 03ee 52       		.byte	0x52
 1187 03ef 02       		.uleb128 0x2
 1188 03f0 75       		.byte	0x75
 1189 03f1 00       		.sleb128 0
 1190 03f2 00       		.byte	0
 1191 03f3 00       		.byte	0
 1192 03f4 1A       		.uleb128 0x1a
 1193 03f5 12000000 		.4byte	.LVL13
 1194 03f9 9F080000 		.4byte	0x89f
 1195 03fd 1A       		.uleb128 0x1a
 1196 03fe 5E000000 		.4byte	.LVL26
 1197 0402 AB080000 		.4byte	0x8ab
 1198 0406 1A       		.uleb128 0x1a
 1199 0407 76000000 		.4byte	.LVL27
 1200 040b B7080000 		.4byte	0x8b7
 1201 040f 1A       		.uleb128 0x1a
 1202 0410 82000000 		.4byte	.LVL29
 1203 0414 C3080000 		.4byte	0x8c3
 1204 0418 15       		.uleb128 0x15
 1205 0419 8E000000 		.4byte	.LVL31
 1206 041d 27020000 		.4byte	0x227
 1207 0421 38040000 		.4byte	0x438
 1208 0425 16       		.uleb128 0x16
 1209 0426 01       		.uleb128 0x1
 1210 0427 50       		.byte	0x50
 1211 0428 02       		.uleb128 0x2
 1212 0429 74       		.byte	0x74
 1213 042a 00       		.sleb128 0
 1214 042b 16       		.uleb128 0x16
 1215 042c 01       		.uleb128 0x1
 1216 042d 51       		.byte	0x51
 1217 042e 02       		.uleb128 0x2
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 41


 1218 042f 76       		.byte	0x76
 1219 0430 00       		.sleb128 0
 1220 0431 16       		.uleb128 0x16
 1221 0432 01       		.uleb128 0x1
 1222 0433 52       		.byte	0x52
 1223 0434 02       		.uleb128 0x2
 1224 0435 78       		.byte	0x78
 1225 0436 00       		.sleb128 0
 1226 0437 00       		.byte	0
 1227 0438 1A       		.uleb128 0x1a
 1228 0439 A0000000 		.4byte	.LVL34
 1229 043d CE080000 		.4byte	0x8ce
 1230 0441 00       		.byte	0
 1231 0442 18       		.uleb128 0x18
 1232 0443 5C020000 		.4byte	.LASF53
 1233 0447 01       		.byte	0x1
 1234 0448 D701     		.2byte	0x1d7
 1235 044a D2010000 		.4byte	0x1d2
 1236 044e 00000000 		.4byte	.LFB7
 1237 0452 1A000000 		.4byte	.LFE7-.LFB7
 1238 0456 01       		.uleb128 0x1
 1239 0457 9C       		.byte	0x9c
 1240 0458 AD040000 		.4byte	0x4ad
 1241 045c 0F       		.uleb128 0xf
 1242 045d C7040000 		.4byte	.LASF46
 1243 0461 01       		.byte	0x1
 1244 0462 D701     		.2byte	0x1d7
 1245 0464 9C010000 		.4byte	0x19c
 1246 0468 AD020000 		.4byte	.LLST15
 1247 046c 0F       		.uleb128 0xf
 1248 046d D3040000 		.4byte	.LASF54
 1249 0471 01       		.byte	0x1
 1250 0472 D801     		.2byte	0x1d8
 1251 0474 7E020000 		.4byte	0x27e
 1252 0478 CB020000 		.4byte	.LLST16
 1253 047c 11       		.uleb128 0x11
 1254 047d E1040000 		.4byte	.LASF43
 1255 0481 01       		.byte	0x1
 1256 0482 DA01     		.2byte	0x1da
 1257 0484 D4020000 		.4byte	0x2d4
 1258 0488 F7020000 		.4byte	.LLST17
 1259 048c 1B       		.uleb128 0x1b
 1260 048d 31040000 		.4byte	.LASF49
 1261 0491 01       		.byte	0x1
 1262 0492 DB01     		.2byte	0x1db
 1263 0494 D2010000 		.4byte	0x1d2
 1264 0498 01       		.uleb128 0x1
 1265 0499 55       		.byte	0x55
 1266 049a 1A       		.uleb128 0x1a
 1267 049b 0A000000 		.4byte	.LVL39
 1268 049f C3080000 		.4byte	0x8c3
 1269 04a3 1A       		.uleb128 0x1a
 1270 04a4 16000000 		.4byte	.LVL42
 1271 04a8 CE080000 		.4byte	0x8ce
 1272 04ac 00       		.byte	0
 1273 04ad 18       		.uleb128 0x18
 1274 04ae 04040000 		.4byte	.LASF55
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 42


 1275 04b2 01       		.byte	0x1
 1276 04b3 0302     		.2byte	0x203
 1277 04b5 D2010000 		.4byte	0x1d2
 1278 04b9 00000000 		.4byte	.LFB8
 1279 04bd 1C000000 		.4byte	.LFE8-.LFB8
 1280 04c1 01       		.uleb128 0x1
 1281 04c2 9C       		.byte	0x9c
 1282 04c3 41050000 		.4byte	0x541
 1283 04c7 0F       		.uleb128 0xf
 1284 04c8 C7040000 		.4byte	.LASF46
 1285 04cc 01       		.byte	0x1
 1286 04cd 0302     		.2byte	0x203
 1287 04cf 9C010000 		.4byte	0x19c
 1288 04d3 15030000 		.4byte	.LLST18
 1289 04d7 1C       		.uleb128 0x1c
 1290 04d8 9B040000 		.4byte	.LASF56
 1291 04dc 01       		.byte	0x1
 1292 04dd 0502     		.2byte	0x205
 1293 04df A3000000 		.4byte	0xa3
 1294 04e3 11       		.uleb128 0x11
 1295 04e4 E1040000 		.4byte	.LASF43
 1296 04e8 01       		.byte	0x1
 1297 04e9 0602     		.2byte	0x206
 1298 04eb 4C050000 		.4byte	0x54c
 1299 04ef 36030000 		.4byte	.LLST19
 1300 04f3 1B       		.uleb128 0x1b
 1301 04f4 31040000 		.4byte	.LASF49
 1302 04f8 01       		.byte	0x1
 1303 04f9 0702     		.2byte	0x207
 1304 04fb D2010000 		.4byte	0x1d2
 1305 04ff 01       		.uleb128 0x1
 1306 0500 50       		.byte	0x50
 1307 0501 1D       		.uleb128 0x1d
 1308 0502 00020000 		.4byte	0x200
 1309 0506 00000000 		.4byte	.LBB8
 1310 050a 14000000 		.4byte	.LBE8-.LBB8
 1311 050e 01       		.byte	0x1
 1312 050f 0902     		.2byte	0x209
 1313 0511 2A050000 		.4byte	0x52a
 1314 0515 1E       		.uleb128 0x1e
 1315 0516 00000000 		.4byte	.LBB9
 1316 051a 14000000 		.4byte	.LBE9-.LBB9
 1317 051e 1F       		.uleb128 0x1f
 1318 051f 10020000 		.4byte	0x210
 1319 0523 1F       		.uleb128 0x1f
 1320 0524 1B020000 		.4byte	0x21b
 1321 0528 00       		.byte	0
 1322 0529 00       		.byte	0
 1323 052a 20       		.uleb128 0x20
 1324 052b E8010000 		.4byte	0x1e8
 1325 052f 16000000 		.4byte	.LBB10
 1326 0533 04000000 		.4byte	.LBE10-.LBB10
 1327 0537 01       		.byte	0x1
 1328 0538 0D02     		.2byte	0x20d
 1329 053a 21       		.uleb128 0x21
 1330 053b F4010000 		.4byte	0x1f4
 1331 053f 00       		.byte	0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 43


 1332 0540 00       		.byte	0
 1333 0541 08       		.uleb128 0x8
 1334 0542 04       		.byte	0x4
 1335 0543 47050000 		.4byte	0x547
 1336 0547 12       		.uleb128 0x12
 1337 0548 DD010000 		.4byte	0x1dd
 1338 054c 12       		.uleb128 0x12
 1339 054d 41050000 		.4byte	0x541
 1340 0551 18       		.uleb128 0x18
 1341 0552 1E040000 		.4byte	.LASF57
 1342 0556 01       		.byte	0x1
 1343 0557 1302     		.2byte	0x213
 1344 0559 D2010000 		.4byte	0x1d2
 1345 055d 00000000 		.4byte	.LFB9
 1346 0561 6E000000 		.4byte	.LFE9-.LFB9
 1347 0565 01       		.uleb128 0x1
 1348 0566 9C       		.byte	0x9c
 1349 0567 35060000 		.4byte	0x635
 1350 056b 0F       		.uleb128 0xf
 1351 056c C7040000 		.4byte	.LASF46
 1352 0570 01       		.byte	0x1
 1353 0571 1302     		.2byte	0x213
 1354 0573 9C010000 		.4byte	0x19c
 1355 0577 57030000 		.4byte	.LLST20
 1356 057b 0F       		.uleb128 0xf
 1357 057c 15060000 		.4byte	.LASF58
 1358 0580 01       		.byte	0x1
 1359 0581 1402     		.2byte	0x214
 1360 0583 7E020000 		.4byte	0x27e
 1361 0587 75030000 		.4byte	.LLST21
 1362 058b 11       		.uleb128 0x11
 1363 058c 0A020000 		.4byte	.LASF59
 1364 0590 01       		.byte	0x1
 1365 0591 1602     		.2byte	0x216
 1366 0593 8B010000 		.4byte	0x18b
 1367 0597 A1030000 		.4byte	.LLST22
 1368 059b 11       		.uleb128 0x11
 1369 059c AE030000 		.4byte	.LASF18
 1370 05a0 01       		.byte	0x1
 1371 05a1 1602     		.2byte	0x216
 1372 05a3 8B010000 		.4byte	0x18b
 1373 05a7 BF030000 		.4byte	.LLST23
 1374 05ab 1B       		.uleb128 0x1b
 1375 05ac 70000000 		.4byte	.LASF60
 1376 05b0 01       		.byte	0x1
 1377 05b1 1702     		.2byte	0x217
 1378 05b3 35060000 		.4byte	0x635
 1379 05b7 01       		.uleb128 0x1
 1380 05b8 56       		.byte	0x56
 1381 05b9 11       		.uleb128 0x11
 1382 05ba E8010000 		.4byte	.LASF61
 1383 05be 01       		.byte	0x1
 1384 05bf 1802     		.2byte	0x218
 1385 05c1 40060000 		.4byte	0x640
 1386 05c5 D2030000 		.4byte	.LLST24
 1387 05c9 11       		.uleb128 0x11
 1388 05ca D3040000 		.4byte	.LASF54
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 44


 1389 05ce 01       		.byte	0x1
 1390 05cf 1902     		.2byte	0x219
 1391 05d1 D2010000 		.4byte	0x1d2
 1392 05d5 F4030000 		.4byte	.LLST25
 1393 05d9 11       		.uleb128 0x11
 1394 05da 69010000 		.4byte	.LASF62
 1395 05de 01       		.byte	0x1
 1396 05df 1902     		.2byte	0x219
 1397 05e1 D2010000 		.4byte	0x1d2
 1398 05e5 13040000 		.4byte	.LLST26
 1399 05e9 11       		.uleb128 0x11
 1400 05ea F6030000 		.4byte	.LASF50
 1401 05ee 01       		.byte	0x1
 1402 05ef 1902     		.2byte	0x219
 1403 05f1 D2010000 		.4byte	0x1d2
 1404 05f5 31040000 		.4byte	.LLST27
 1405 05f9 11       		.uleb128 0x11
 1406 05fa E1040000 		.4byte	.LASF43
 1407 05fe 01       		.byte	0x1
 1408 05ff 1A02     		.2byte	0x21a
 1409 0601 D4020000 		.4byte	0x2d4
 1410 0605 4B040000 		.4byte	.LLST28
 1411 0609 11       		.uleb128 0x11
 1412 060a BB040000 		.4byte	.LASF63
 1413 060e 01       		.byte	0x1
 1414 060f 1B02     		.2byte	0x21b
 1415 0611 98000000 		.4byte	0x98
 1416 0615 69040000 		.4byte	.LLST29
 1417 0619 1A       		.uleb128 0x1a
 1418 061a 0E000000 		.4byte	.LVL48
 1419 061e 9F080000 		.4byte	0x89f
 1420 0622 1A       		.uleb128 0x1a
 1421 0623 58000000 		.4byte	.LVL58
 1422 0627 D9080000 		.4byte	0x8d9
 1423 062b 1A       		.uleb128 0x1a
 1424 062c 6A000000 		.4byte	.LVL61
 1425 0630 AB080000 		.4byte	0x8ab
 1426 0634 00       		.byte	0
 1427 0635 08       		.uleb128 0x8
 1428 0636 04       		.byte	0x4
 1429 0637 3B060000 		.4byte	0x63b
 1430 063b 12       		.uleb128 0x12
 1431 063c 3F010000 		.4byte	0x13f
 1432 0640 08       		.uleb128 0x8
 1433 0641 04       		.byte	0x4
 1434 0642 46060000 		.4byte	0x646
 1435 0646 12       		.uleb128 0x12
 1436 0647 91010000 		.4byte	0x191
 1437 064b 13       		.uleb128 0x13
 1438 064c 41020000 		.4byte	.LASF64
 1439 0650 01       		.byte	0x1
 1440 0651 C0       		.byte	0xc0
 1441 0652 D2010000 		.4byte	0x1d2
 1442 0656 00000000 		.4byte	.LFB5
 1443 065a 90000000 		.4byte	.LFE5-.LFB5
 1444 065e 01       		.uleb128 0x1
 1445 065f 9C       		.byte	0x9c
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 45


 1446 0660 57070000 		.4byte	0x757
 1447 0664 22       		.uleb128 0x22
 1448 0665 C7040000 		.4byte	.LASF46
 1449 0669 01       		.byte	0x1
 1450 066a C0       		.byte	0xc0
 1451 066b 9C010000 		.4byte	0x19c
 1452 066f 94040000 		.4byte	.LLST30
 1453 0673 22       		.uleb128 0x22
 1454 0674 15060000 		.4byte	.LASF58
 1455 0678 01       		.byte	0x1
 1456 0679 C1       		.byte	0xc1
 1457 067a 7E020000 		.4byte	0x27e
 1458 067e C0040000 		.4byte	.LLST31
 1459 0682 22       		.uleb128 0x22
 1460 0683 97010000 		.4byte	.LASF40
 1461 0687 01       		.byte	0x1
 1462 0688 C2       		.byte	0xc2
 1463 0689 7E020000 		.4byte	0x27e
 1464 068d EC040000 		.4byte	.LLST32
 1465 0691 22       		.uleb128 0x22
 1466 0692 29010000 		.4byte	.LASF48
 1467 0696 01       		.byte	0x1
 1468 0697 C3       		.byte	0xc3
 1469 0698 AE000000 		.4byte	0xae
 1470 069c 18050000 		.4byte	.LLST33
 1471 06a0 14       		.uleb128 0x14
 1472 06a1 B5030000 		.4byte	.LASF65
 1473 06a5 01       		.byte	0x1
 1474 06a6 C5       		.byte	0xc5
 1475 06a7 D2010000 		.4byte	0x1d2
 1476 06ab 4D050000 		.4byte	.LLST34
 1477 06af 14       		.uleb128 0x14
 1478 06b0 31040000 		.4byte	.LASF49
 1479 06b4 01       		.byte	0x1
 1480 06b5 C5       		.byte	0xc5
 1481 06b6 D2010000 		.4byte	0x1d2
 1482 06ba 60050000 		.4byte	.LLST35
 1483 06be 14       		.uleb128 0x14
 1484 06bf E1040000 		.4byte	.LASF43
 1485 06c3 01       		.byte	0x1
 1486 06c4 C6       		.byte	0xc6
 1487 06c5 D4020000 		.4byte	0x2d4
 1488 06c9 AB050000 		.4byte	.LLST36
 1489 06cd 14       		.uleb128 0x14
 1490 06ce 05060000 		.4byte	.LASF51
 1491 06d2 01       		.byte	0x1
 1492 06d3 C7       		.byte	0xc7
 1493 06d4 98000000 		.4byte	0x98
 1494 06d8 D7050000 		.4byte	.LLST37
 1495 06dc 14       		.uleb128 0x14
 1496 06dd F5040000 		.4byte	.LASF52
 1497 06e1 01       		.byte	0x1
 1498 06e2 C8       		.byte	0xc8
 1499 06e3 98000000 		.4byte	0x98
 1500 06e7 EA050000 		.4byte	.LLST38
 1501 06eb 1A       		.uleb128 0x1a
 1502 06ec 10000000 		.4byte	.LVL64
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 46


 1503 06f0 9F080000 		.4byte	0x89f
 1504 06f4 15       		.uleb128 0x15
 1505 06f5 1C000000 		.4byte	.LVL66
 1506 06f9 51050000 		.4byte	0x551
 1507 06fd 0E070000 		.4byte	0x70e
 1508 0701 16       		.uleb128 0x16
 1509 0702 01       		.uleb128 0x1
 1510 0703 50       		.byte	0x50
 1511 0704 02       		.uleb128 0x2
 1512 0705 75       		.byte	0x75
 1513 0706 00       		.sleb128 0
 1514 0707 16       		.uleb128 0x16
 1515 0708 01       		.uleb128 0x1
 1516 0709 51       		.byte	0x51
 1517 070a 02       		.uleb128 0x2
 1518 070b 74       		.byte	0x74
 1519 070c 00       		.sleb128 0
 1520 070d 00       		.byte	0
 1521 070e 15       		.uleb128 0x15
 1522 070f 40000000 		.4byte	.LVL71
 1523 0713 93080000 		.4byte	0x893
 1524 0717 32070000 		.4byte	0x732
 1525 071b 16       		.uleb128 0x16
 1526 071c 01       		.uleb128 0x1
 1527 071d 50       		.byte	0x50
 1528 071e 02       		.uleb128 0x2
 1529 071f 75       		.byte	0x75
 1530 0720 04       		.sleb128 4
 1531 0721 16       		.uleb128 0x16
 1532 0722 01       		.uleb128 0x1
 1533 0723 51       		.byte	0x51
 1534 0724 06       		.uleb128 0x6
 1535 0725 77       		.byte	0x77
 1536 0726 00       		.sleb128 0
 1537 0727 44       		.byte	0x44
 1538 0728 46       		.byte	0x46
 1539 0729 24       		.byte	0x24
 1540 072a 21       		.byte	0x21
 1541 072b 16       		.uleb128 0x16
 1542 072c 01       		.uleb128 0x1
 1543 072d 52       		.byte	0x52
 1544 072e 02       		.uleb128 0x2
 1545 072f 76       		.byte	0x76
 1546 0730 00       		.sleb128 0
 1547 0731 00       		.byte	0
 1548 0732 1A       		.uleb128 0x1a
 1549 0733 4A000000 		.4byte	.LVL74
 1550 0737 AB080000 		.4byte	0x8ab
 1551 073b 1A       		.uleb128 0x1a
 1552 073c 62000000 		.4byte	.LVL75
 1553 0740 B7080000 		.4byte	0x8b7
 1554 0744 1A       		.uleb128 0x1a
 1555 0745 6E000000 		.4byte	.LVL77
 1556 0749 C3080000 		.4byte	0x8c3
 1557 074d 1A       		.uleb128 0x1a
 1558 074e 80000000 		.4byte	.LVL80
 1559 0752 CE080000 		.4byte	0x8ce
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 47


 1560 0756 00       		.byte	0
 1561 0757 23       		.uleb128 0x23
 1562 0758 85010000 		.4byte	.LASF67
 1563 075c 01       		.byte	0x1
 1564 075d 7202     		.2byte	0x272
 1565 075f 00000000 		.4byte	.LFB10
 1566 0763 26000000 		.4byte	.LFE10-.LFB10
 1567 0767 01       		.uleb128 0x1
 1568 0768 9C       		.byte	0x9c
 1569 0769 D9070000 		.4byte	0x7d9
 1570 076d 0F       		.uleb128 0xf
 1571 076e C7040000 		.4byte	.LASF46
 1572 0772 01       		.byte	0x1
 1573 0773 7202     		.2byte	0x272
 1574 0775 9C010000 		.4byte	0x19c
 1575 0779 FE050000 		.4byte	.LLST39
 1576 077d 11       		.uleb128 0x11
 1577 077e E1040000 		.4byte	.LASF43
 1578 0782 01       		.byte	0x1
 1579 0783 7402     		.2byte	0x274
 1580 0785 D4020000 		.4byte	0x2d4
 1581 0789 1C060000 		.4byte	.LLST40
 1582 078d 11       		.uleb128 0x11
 1583 078e DF050000 		.4byte	.LASF66
 1584 0792 01       		.byte	0x1
 1585 0793 7502     		.2byte	0x275
 1586 0795 40060000 		.4byte	0x640
 1587 0799 3A060000 		.4byte	.LLST41
 1588 079d 1A       		.uleb128 0x1a
 1589 079e 08000000 		.4byte	.LVL85
 1590 07a2 9F080000 		.4byte	0x89f
 1591 07a6 15       		.uleb128 0x15
 1592 07a7 14000000 		.4byte	.LVL86
 1593 07ab D9080000 		.4byte	0x8d9
 1594 07af BB070000 		.4byte	0x7bb
 1595 07b3 16       		.uleb128 0x16
 1596 07b4 01       		.uleb128 0x1
 1597 07b5 51       		.byte	0x51
 1598 07b6 03       		.uleb128 0x3
 1599 07b7 40       		.byte	0x40
 1600 07b8 45       		.byte	0x45
 1601 07b9 24       		.byte	0x24
 1602 07ba 00       		.byte	0
 1603 07bb 15       		.uleb128 0x15
 1604 07bc 20000000 		.4byte	.LVL87
 1605 07c0 E5080000 		.4byte	0x8e5
 1606 07c4 CF070000 		.4byte	0x7cf
 1607 07c8 16       		.uleb128 0x16
 1608 07c9 01       		.uleb128 0x1
 1609 07ca 50       		.byte	0x50
 1610 07cb 02       		.uleb128 0x2
 1611 07cc 74       		.byte	0x74
 1612 07cd 00       		.sleb128 0
 1613 07ce 00       		.byte	0
 1614 07cf 1A       		.uleb128 0x1a
 1615 07d0 24000000 		.4byte	.LVL88
 1616 07d4 AB080000 		.4byte	0x8ab
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 48


 1617 07d8 00       		.byte	0
 1618 07d9 23       		.uleb128 0x23
 1619 07da 94050000 		.4byte	.LASF68
 1620 07de 01       		.byte	0x1
 1621 07df 9E02     		.2byte	0x29e
 1622 07e1 00000000 		.4byte	.LFB11
 1623 07e5 08000000 		.4byte	.LFE11-.LFB11
 1624 07e9 01       		.uleb128 0x1
 1625 07ea 9C       		.byte	0x9c
 1626 07eb 28080000 		.4byte	0x828
 1627 07ef 0F       		.uleb128 0xf
 1628 07f0 0B030000 		.4byte	.LASF69
 1629 07f4 01       		.byte	0x1
 1630 07f5 9E02     		.2byte	0x29e
 1631 07f7 84000000 		.4byte	0x84
 1632 07fb 5C060000 		.4byte	.LLST42
 1633 07ff 0F       		.uleb128 0xf
 1634 0800 20020000 		.4byte	.LASF70
 1635 0804 01       		.byte	0x1
 1636 0805 9F02     		.2byte	0x29f
 1637 0807 28080000 		.4byte	0x828
 1638 080b 7D060000 		.4byte	.LLST43
 1639 080f 17       		.uleb128 0x17
 1640 0810 06000000 		.4byte	.LVL90
 1641 0814 51050000 		.4byte	0x551
 1642 0818 16       		.uleb128 0x16
 1643 0819 01       		.uleb128 0x1
 1644 081a 50       		.byte	0x50
 1645 081b 03       		.uleb128 0x3
 1646 081c F3       		.byte	0xf3
 1647 081d 01       		.uleb128 0x1
 1648 081e 50       		.byte	0x50
 1649 081f 16       		.uleb128 0x16
 1650 0820 01       		.uleb128 0x1
 1651 0821 51       		.byte	0x51
 1652 0822 03       		.uleb128 0x3
 1653 0823 F3       		.byte	0xf3
 1654 0824 01       		.uleb128 0x1
 1655 0825 51       		.byte	0x51
 1656 0826 00       		.byte	0
 1657 0827 00       		.byte	0
 1658 0828 12       		.uleb128 0x12
 1659 0829 8D000000 		.4byte	0x8d
 1660 082d 23       		.uleb128 0x23
 1661 082e CB010000 		.4byte	.LASF71
 1662 0832 01       		.byte	0x1
 1663 0833 A702     		.2byte	0x2a7
 1664 0835 00000000 		.4byte	.LFB12
 1665 0839 08000000 		.4byte	.LFE12-.LFB12
 1666 083d 01       		.uleb128 0x1
 1667 083e 9C       		.byte	0x9c
 1668 083f 7C080000 		.4byte	0x87c
 1669 0843 0F       		.uleb128 0xf
 1670 0844 0B030000 		.4byte	.LASF69
 1671 0848 01       		.byte	0x1
 1672 0849 A702     		.2byte	0x2a7
 1673 084b 84000000 		.4byte	0x84
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 49


 1674 084f 9E060000 		.4byte	.LLST44
 1675 0853 0F       		.uleb128 0xf
 1676 0854 21060000 		.4byte	.LASF72
 1677 0858 01       		.byte	0x1
 1678 0859 A802     		.2byte	0x2a8
 1679 085b 28080000 		.4byte	0x828
 1680 085f BF060000 		.4byte	.LLST45
 1681 0863 17       		.uleb128 0x17
 1682 0864 06000000 		.4byte	.LVL92
 1683 0868 42040000 		.4byte	0x442
 1684 086c 16       		.uleb128 0x16
 1685 086d 01       		.uleb128 0x1
 1686 086e 50       		.byte	0x50
 1687 086f 03       		.uleb128 0x3
 1688 0870 F3       		.byte	0xf3
 1689 0871 01       		.uleb128 0x1
 1690 0872 50       		.byte	0x50
 1691 0873 16       		.uleb128 0x16
 1692 0874 01       		.uleb128 0x1
 1693 0875 51       		.byte	0x51
 1694 0876 03       		.uleb128 0x3
 1695 0877 F3       		.byte	0xf3
 1696 0878 01       		.uleb128 0x1
 1697 0879 51       		.byte	0x51
 1698 087a 00       		.byte	0
 1699 087b 00       		.byte	0
 1700 087c 24       		.uleb128 0x24
 1701 087d D2050000 		.4byte	.LASF73
 1702 0881 D2050000 		.4byte	.LASF73
 1703 0885 07       		.byte	0x7
 1704 0886 B0       		.byte	0xb0
 1705 0887 25       		.uleb128 0x25
 1706 0888 7A000000 		.4byte	.LASF74
 1707 088c 7A000000 		.4byte	.LASF74
 1708 0890 05       		.byte	0x5
 1709 0891 5B01     		.2byte	0x15b
 1710 0893 25       		.uleb128 0x25
 1711 0894 41000000 		.4byte	.LASF75
 1712 0898 41000000 		.4byte	.LASF75
 1713 089c 08       		.byte	0x8
 1714 089d 3E0B     		.2byte	0xb3e
 1715 089f 25       		.uleb128 0x25
 1716 08a0 F5050000 		.4byte	.LASF76
 1717 08a4 F5050000 		.4byte	.LASF76
 1718 08a8 08       		.byte	0x8
 1719 08a9 3B05     		.2byte	0x53b
 1720 08ab 25       		.uleb128 0x25
 1721 08ac 4F030000 		.4byte	.LASF77
 1722 08b0 4F030000 		.4byte	.LASF77
 1723 08b4 08       		.byte	0x8
 1724 08b5 7305     		.2byte	0x573
 1725 08b7 25       		.uleb128 0x25
 1726 08b8 81040000 		.4byte	.LASF78
 1727 08bc 81040000 		.4byte	.LASF78
 1728 08c0 08       		.byte	0x8
 1729 08c1 7B0B     		.2byte	0xb7b
 1730 08c3 24       		.uleb128 0x24
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 50


 1731 08c4 71030000 		.4byte	.LASF79
 1732 08c8 71030000 		.4byte	.LASF79
 1733 08cc 02       		.byte	0x2
 1734 08cd 62       		.byte	0x62
 1735 08ce 24       		.uleb128 0x24
 1736 08cf D4030000 		.4byte	.LASF80
 1737 08d3 D4030000 		.4byte	.LASF80
 1738 08d7 02       		.byte	0x2
 1739 08d8 63       		.byte	0x63
 1740 08d9 25       		.uleb128 0x25
 1741 08da 00000000 		.4byte	.LASF81
 1742 08de 00000000 		.4byte	.LASF81
 1743 08e2 08       		.byte	0x8
 1744 08e3 6A0B     		.2byte	0xb6a
 1745 08e5 24       		.uleb128 0x24
 1746 08e6 67040000 		.4byte	.LASF82
 1747 08ea 67040000 		.4byte	.LASF82
 1748 08ee 07       		.byte	0x7
 1749 08ef B1       		.byte	0xb1
 1750 08f0 00       		.byte	0
 1751              		.section	.debug_abbrev,"",%progbits
 1752              	.Ldebug_abbrev0:
 1753 0000 01       		.uleb128 0x1
 1754 0001 11       		.uleb128 0x11
 1755 0002 01       		.byte	0x1
 1756 0003 25       		.uleb128 0x25
 1757 0004 0E       		.uleb128 0xe
 1758 0005 13       		.uleb128 0x13
 1759 0006 0B       		.uleb128 0xb
 1760 0007 03       		.uleb128 0x3
 1761 0008 0E       		.uleb128 0xe
 1762 0009 1B       		.uleb128 0x1b
 1763 000a 0E       		.uleb128 0xe
 1764 000b 55       		.uleb128 0x55
 1765 000c 17       		.uleb128 0x17
 1766 000d 11       		.uleb128 0x11
 1767 000e 01       		.uleb128 0x1
 1768 000f 10       		.uleb128 0x10
 1769 0010 17       		.uleb128 0x17
 1770 0011 00       		.byte	0
 1771 0012 00       		.byte	0
 1772 0013 02       		.uleb128 0x2
 1773 0014 24       		.uleb128 0x24
 1774 0015 00       		.byte	0
 1775 0016 0B       		.uleb128 0xb
 1776 0017 0B       		.uleb128 0xb
 1777 0018 3E       		.uleb128 0x3e
 1778 0019 0B       		.uleb128 0xb
 1779 001a 03       		.uleb128 0x3
 1780 001b 0E       		.uleb128 0xe
 1781 001c 00       		.byte	0
 1782 001d 00       		.byte	0
 1783 001e 03       		.uleb128 0x3
 1784 001f 24       		.uleb128 0x24
 1785 0020 00       		.byte	0
 1786 0021 0B       		.uleb128 0xb
 1787 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 51


 1788 0023 3E       		.uleb128 0x3e
 1789 0024 0B       		.uleb128 0xb
 1790 0025 03       		.uleb128 0x3
 1791 0026 08       		.uleb128 0x8
 1792 0027 00       		.byte	0
 1793 0028 00       		.byte	0
 1794 0029 04       		.uleb128 0x4
 1795 002a 16       		.uleb128 0x16
 1796 002b 00       		.byte	0
 1797 002c 03       		.uleb128 0x3
 1798 002d 0E       		.uleb128 0xe
 1799 002e 3A       		.uleb128 0x3a
 1800 002f 0B       		.uleb128 0xb
 1801 0030 3B       		.uleb128 0x3b
 1802 0031 0B       		.uleb128 0xb
 1803 0032 49       		.uleb128 0x49
 1804 0033 13       		.uleb128 0x13
 1805 0034 00       		.byte	0
 1806 0035 00       		.byte	0
 1807 0036 05       		.uleb128 0x5
 1808 0037 0F       		.uleb128 0xf
 1809 0038 00       		.byte	0
 1810 0039 0B       		.uleb128 0xb
 1811 003a 0B       		.uleb128 0xb
 1812 003b 00       		.byte	0
 1813 003c 00       		.byte	0
 1814 003d 06       		.uleb128 0x6
 1815 003e 13       		.uleb128 0x13
 1816 003f 01       		.byte	0x1
 1817 0040 03       		.uleb128 0x3
 1818 0041 0E       		.uleb128 0xe
 1819 0042 0B       		.uleb128 0xb
 1820 0043 0B       		.uleb128 0xb
 1821 0044 3A       		.uleb128 0x3a
 1822 0045 0B       		.uleb128 0xb
 1823 0046 3B       		.uleb128 0x3b
 1824 0047 0B       		.uleb128 0xb
 1825 0048 01       		.uleb128 0x1
 1826 0049 13       		.uleb128 0x13
 1827 004a 00       		.byte	0
 1828 004b 00       		.byte	0
 1829 004c 07       		.uleb128 0x7
 1830 004d 0D       		.uleb128 0xd
 1831 004e 00       		.byte	0
 1832 004f 03       		.uleb128 0x3
 1833 0050 0E       		.uleb128 0xe
 1834 0051 3A       		.uleb128 0x3a
 1835 0052 0B       		.uleb128 0xb
 1836 0053 3B       		.uleb128 0x3b
 1837 0054 0B       		.uleb128 0xb
 1838 0055 49       		.uleb128 0x49
 1839 0056 13       		.uleb128 0x13
 1840 0057 38       		.uleb128 0x38
 1841 0058 0B       		.uleb128 0xb
 1842 0059 00       		.byte	0
 1843 005a 00       		.byte	0
 1844 005b 08       		.uleb128 0x8
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 52


 1845 005c 0F       		.uleb128 0xf
 1846 005d 00       		.byte	0
 1847 005e 0B       		.uleb128 0xb
 1848 005f 0B       		.uleb128 0xb
 1849 0060 49       		.uleb128 0x49
 1850 0061 13       		.uleb128 0x13
 1851 0062 00       		.byte	0
 1852 0063 00       		.byte	0
 1853 0064 09       		.uleb128 0x9
 1854 0065 35       		.uleb128 0x35
 1855 0066 00       		.byte	0
 1856 0067 49       		.uleb128 0x49
 1857 0068 13       		.uleb128 0x13
 1858 0069 00       		.byte	0
 1859 006a 00       		.byte	0
 1860 006b 0A       		.uleb128 0xa
 1861 006c 2E       		.uleb128 0x2e
 1862 006d 01       		.byte	0x1
 1863 006e 03       		.uleb128 0x3
 1864 006f 0E       		.uleb128 0xe
 1865 0070 3A       		.uleb128 0x3a
 1866 0071 0B       		.uleb128 0xb
 1867 0072 3B       		.uleb128 0x3b
 1868 0073 0B       		.uleb128 0xb
 1869 0074 27       		.uleb128 0x27
 1870 0075 19       		.uleb128 0x19
 1871 0076 20       		.uleb128 0x20
 1872 0077 0B       		.uleb128 0xb
 1873 0078 01       		.uleb128 0x1
 1874 0079 13       		.uleb128 0x13
 1875 007a 00       		.byte	0
 1876 007b 00       		.byte	0
 1877 007c 0B       		.uleb128 0xb
 1878 007d 05       		.uleb128 0x5
 1879 007e 00       		.byte	0
 1880 007f 03       		.uleb128 0x3
 1881 0080 0E       		.uleb128 0xe
 1882 0081 3A       		.uleb128 0x3a
 1883 0082 0B       		.uleb128 0xb
 1884 0083 3B       		.uleb128 0x3b
 1885 0084 0B       		.uleb128 0xb
 1886 0085 49       		.uleb128 0x49
 1887 0086 13       		.uleb128 0x13
 1888 0087 00       		.byte	0
 1889 0088 00       		.byte	0
 1890 0089 0C       		.uleb128 0xc
 1891 008a 2E       		.uleb128 0x2e
 1892 008b 01       		.byte	0x1
 1893 008c 03       		.uleb128 0x3
 1894 008d 0E       		.uleb128 0xe
 1895 008e 3A       		.uleb128 0x3a
 1896 008f 0B       		.uleb128 0xb
 1897 0090 3B       		.uleb128 0x3b
 1898 0091 0B       		.uleb128 0xb
 1899 0092 27       		.uleb128 0x27
 1900 0093 19       		.uleb128 0x19
 1901 0094 49       		.uleb128 0x49
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 53


 1902 0095 13       		.uleb128 0x13
 1903 0096 20       		.uleb128 0x20
 1904 0097 0B       		.uleb128 0xb
 1905 0098 01       		.uleb128 0x1
 1906 0099 13       		.uleb128 0x13
 1907 009a 00       		.byte	0
 1908 009b 00       		.byte	0
 1909 009c 0D       		.uleb128 0xd
 1910 009d 34       		.uleb128 0x34
 1911 009e 00       		.byte	0
 1912 009f 03       		.uleb128 0x3
 1913 00a0 0E       		.uleb128 0xe
 1914 00a1 3A       		.uleb128 0x3a
 1915 00a2 0B       		.uleb128 0xb
 1916 00a3 3B       		.uleb128 0x3b
 1917 00a4 0B       		.uleb128 0xb
 1918 00a5 49       		.uleb128 0x49
 1919 00a6 13       		.uleb128 0x13
 1920 00a7 00       		.byte	0
 1921 00a8 00       		.byte	0
 1922 00a9 0E       		.uleb128 0xe
 1923 00aa 2E       		.uleb128 0x2e
 1924 00ab 01       		.byte	0x1
 1925 00ac 03       		.uleb128 0x3
 1926 00ad 0E       		.uleb128 0xe
 1927 00ae 3A       		.uleb128 0x3a
 1928 00af 0B       		.uleb128 0xb
 1929 00b0 3B       		.uleb128 0x3b
 1930 00b1 05       		.uleb128 0x5
 1931 00b2 27       		.uleb128 0x27
 1932 00b3 19       		.uleb128 0x19
 1933 00b4 49       		.uleb128 0x49
 1934 00b5 13       		.uleb128 0x13
 1935 00b6 11       		.uleb128 0x11
 1936 00b7 01       		.uleb128 0x1
 1937 00b8 12       		.uleb128 0x12
 1938 00b9 06       		.uleb128 0x6
 1939 00ba 40       		.uleb128 0x40
 1940 00bb 18       		.uleb128 0x18
 1941 00bc 9742     		.uleb128 0x2117
 1942 00be 19       		.uleb128 0x19
 1943 00bf 01       		.uleb128 0x1
 1944 00c0 13       		.uleb128 0x13
 1945 00c1 00       		.byte	0
 1946 00c2 00       		.byte	0
 1947 00c3 0F       		.uleb128 0xf
 1948 00c4 05       		.uleb128 0x5
 1949 00c5 00       		.byte	0
 1950 00c6 03       		.uleb128 0x3
 1951 00c7 0E       		.uleb128 0xe
 1952 00c8 3A       		.uleb128 0x3a
 1953 00c9 0B       		.uleb128 0xb
 1954 00ca 3B       		.uleb128 0x3b
 1955 00cb 05       		.uleb128 0x5
 1956 00cc 49       		.uleb128 0x49
 1957 00cd 13       		.uleb128 0x13
 1958 00ce 02       		.uleb128 0x2
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 54


 1959 00cf 17       		.uleb128 0x17
 1960 00d0 00       		.byte	0
 1961 00d1 00       		.byte	0
 1962 00d2 10       		.uleb128 0x10
 1963 00d3 05       		.uleb128 0x5
 1964 00d4 00       		.byte	0
 1965 00d5 03       		.uleb128 0x3
 1966 00d6 0E       		.uleb128 0xe
 1967 00d7 3A       		.uleb128 0x3a
 1968 00d8 0B       		.uleb128 0xb
 1969 00d9 3B       		.uleb128 0x3b
 1970 00da 05       		.uleb128 0x5
 1971 00db 49       		.uleb128 0x49
 1972 00dc 13       		.uleb128 0x13
 1973 00dd 02       		.uleb128 0x2
 1974 00de 18       		.uleb128 0x18
 1975 00df 00       		.byte	0
 1976 00e0 00       		.byte	0
 1977 00e1 11       		.uleb128 0x11
 1978 00e2 34       		.uleb128 0x34
 1979 00e3 00       		.byte	0
 1980 00e4 03       		.uleb128 0x3
 1981 00e5 0E       		.uleb128 0xe
 1982 00e6 3A       		.uleb128 0x3a
 1983 00e7 0B       		.uleb128 0xb
 1984 00e8 3B       		.uleb128 0x3b
 1985 00e9 05       		.uleb128 0x5
 1986 00ea 49       		.uleb128 0x49
 1987 00eb 13       		.uleb128 0x13
 1988 00ec 02       		.uleb128 0x2
 1989 00ed 17       		.uleb128 0x17
 1990 00ee 00       		.byte	0
 1991 00ef 00       		.byte	0
 1992 00f0 12       		.uleb128 0x12
 1993 00f1 26       		.uleb128 0x26
 1994 00f2 00       		.byte	0
 1995 00f3 49       		.uleb128 0x49
 1996 00f4 13       		.uleb128 0x13
 1997 00f5 00       		.byte	0
 1998 00f6 00       		.byte	0
 1999 00f7 13       		.uleb128 0x13
 2000 00f8 2E       		.uleb128 0x2e
 2001 00f9 01       		.byte	0x1
 2002 00fa 3F       		.uleb128 0x3f
 2003 00fb 19       		.uleb128 0x19
 2004 00fc 03       		.uleb128 0x3
 2005 00fd 0E       		.uleb128 0xe
 2006 00fe 3A       		.uleb128 0x3a
 2007 00ff 0B       		.uleb128 0xb
 2008 0100 3B       		.uleb128 0x3b
 2009 0101 0B       		.uleb128 0xb
 2010 0102 27       		.uleb128 0x27
 2011 0103 19       		.uleb128 0x19
 2012 0104 49       		.uleb128 0x49
 2013 0105 13       		.uleb128 0x13
 2014 0106 11       		.uleb128 0x11
 2015 0107 01       		.uleb128 0x1
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 55


 2016 0108 12       		.uleb128 0x12
 2017 0109 06       		.uleb128 0x6
 2018 010a 40       		.uleb128 0x40
 2019 010b 18       		.uleb128 0x18
 2020 010c 9742     		.uleb128 0x2117
 2021 010e 19       		.uleb128 0x19
 2022 010f 01       		.uleb128 0x1
 2023 0110 13       		.uleb128 0x13
 2024 0111 00       		.byte	0
 2025 0112 00       		.byte	0
 2026 0113 14       		.uleb128 0x14
 2027 0114 34       		.uleb128 0x34
 2028 0115 00       		.byte	0
 2029 0116 03       		.uleb128 0x3
 2030 0117 0E       		.uleb128 0xe
 2031 0118 3A       		.uleb128 0x3a
 2032 0119 0B       		.uleb128 0xb
 2033 011a 3B       		.uleb128 0x3b
 2034 011b 0B       		.uleb128 0xb
 2035 011c 49       		.uleb128 0x49
 2036 011d 13       		.uleb128 0x13
 2037 011e 02       		.uleb128 0x2
 2038 011f 17       		.uleb128 0x17
 2039 0120 00       		.byte	0
 2040 0121 00       		.byte	0
 2041 0122 15       		.uleb128 0x15
 2042 0123 898201   		.uleb128 0x4109
 2043 0126 01       		.byte	0x1
 2044 0127 11       		.uleb128 0x11
 2045 0128 01       		.uleb128 0x1
 2046 0129 31       		.uleb128 0x31
 2047 012a 13       		.uleb128 0x13
 2048 012b 01       		.uleb128 0x1
 2049 012c 13       		.uleb128 0x13
 2050 012d 00       		.byte	0
 2051 012e 00       		.byte	0
 2052 012f 16       		.uleb128 0x16
 2053 0130 8A8201   		.uleb128 0x410a
 2054 0133 00       		.byte	0
 2055 0134 02       		.uleb128 0x2
 2056 0135 18       		.uleb128 0x18
 2057 0136 9142     		.uleb128 0x2111
 2058 0138 18       		.uleb128 0x18
 2059 0139 00       		.byte	0
 2060 013a 00       		.byte	0
 2061 013b 17       		.uleb128 0x17
 2062 013c 898201   		.uleb128 0x4109
 2063 013f 01       		.byte	0x1
 2064 0140 11       		.uleb128 0x11
 2065 0141 01       		.uleb128 0x1
 2066 0142 31       		.uleb128 0x31
 2067 0143 13       		.uleb128 0x13
 2068 0144 00       		.byte	0
 2069 0145 00       		.byte	0
 2070 0146 18       		.uleb128 0x18
 2071 0147 2E       		.uleb128 0x2e
 2072 0148 01       		.byte	0x1
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 56


 2073 0149 3F       		.uleb128 0x3f
 2074 014a 19       		.uleb128 0x19
 2075 014b 03       		.uleb128 0x3
 2076 014c 0E       		.uleb128 0xe
 2077 014d 3A       		.uleb128 0x3a
 2078 014e 0B       		.uleb128 0xb
 2079 014f 3B       		.uleb128 0x3b
 2080 0150 05       		.uleb128 0x5
 2081 0151 27       		.uleb128 0x27
 2082 0152 19       		.uleb128 0x19
 2083 0153 49       		.uleb128 0x49
 2084 0154 13       		.uleb128 0x13
 2085 0155 11       		.uleb128 0x11
 2086 0156 01       		.uleb128 0x1
 2087 0157 12       		.uleb128 0x12
 2088 0158 06       		.uleb128 0x6
 2089 0159 40       		.uleb128 0x40
 2090 015a 18       		.uleb128 0x18
 2091 015b 9742     		.uleb128 0x2117
 2092 015d 19       		.uleb128 0x19
 2093 015e 01       		.uleb128 0x1
 2094 015f 13       		.uleb128 0x13
 2095 0160 00       		.byte	0
 2096 0161 00       		.byte	0
 2097 0162 19       		.uleb128 0x19
 2098 0163 0B       		.uleb128 0xb
 2099 0164 01       		.byte	0x1
 2100 0165 55       		.uleb128 0x55
 2101 0166 17       		.uleb128 0x17
 2102 0167 01       		.uleb128 0x1
 2103 0168 13       		.uleb128 0x13
 2104 0169 00       		.byte	0
 2105 016a 00       		.byte	0
 2106 016b 1A       		.uleb128 0x1a
 2107 016c 898201   		.uleb128 0x4109
 2108 016f 00       		.byte	0
 2109 0170 11       		.uleb128 0x11
 2110 0171 01       		.uleb128 0x1
 2111 0172 31       		.uleb128 0x31
 2112 0173 13       		.uleb128 0x13
 2113 0174 00       		.byte	0
 2114 0175 00       		.byte	0
 2115 0176 1B       		.uleb128 0x1b
 2116 0177 34       		.uleb128 0x34
 2117 0178 00       		.byte	0
 2118 0179 03       		.uleb128 0x3
 2119 017a 0E       		.uleb128 0xe
 2120 017b 3A       		.uleb128 0x3a
 2121 017c 0B       		.uleb128 0xb
 2122 017d 3B       		.uleb128 0x3b
 2123 017e 05       		.uleb128 0x5
 2124 017f 49       		.uleb128 0x49
 2125 0180 13       		.uleb128 0x13
 2126 0181 02       		.uleb128 0x2
 2127 0182 18       		.uleb128 0x18
 2128 0183 00       		.byte	0
 2129 0184 00       		.byte	0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 57


 2130 0185 1C       		.uleb128 0x1c
 2131 0186 34       		.uleb128 0x34
 2132 0187 00       		.byte	0
 2133 0188 03       		.uleb128 0x3
 2134 0189 0E       		.uleb128 0xe
 2135 018a 3A       		.uleb128 0x3a
 2136 018b 0B       		.uleb128 0xb
 2137 018c 3B       		.uleb128 0x3b
 2138 018d 05       		.uleb128 0x5
 2139 018e 49       		.uleb128 0x49
 2140 018f 13       		.uleb128 0x13
 2141 0190 00       		.byte	0
 2142 0191 00       		.byte	0
 2143 0192 1D       		.uleb128 0x1d
 2144 0193 1D       		.uleb128 0x1d
 2145 0194 01       		.byte	0x1
 2146 0195 31       		.uleb128 0x31
 2147 0196 13       		.uleb128 0x13
 2148 0197 11       		.uleb128 0x11
 2149 0198 01       		.uleb128 0x1
 2150 0199 12       		.uleb128 0x12
 2151 019a 06       		.uleb128 0x6
 2152 019b 58       		.uleb128 0x58
 2153 019c 0B       		.uleb128 0xb
 2154 019d 59       		.uleb128 0x59
 2155 019e 05       		.uleb128 0x5
 2156 019f 01       		.uleb128 0x1
 2157 01a0 13       		.uleb128 0x13
 2158 01a1 00       		.byte	0
 2159 01a2 00       		.byte	0
 2160 01a3 1E       		.uleb128 0x1e
 2161 01a4 0B       		.uleb128 0xb
 2162 01a5 01       		.byte	0x1
 2163 01a6 11       		.uleb128 0x11
 2164 01a7 01       		.uleb128 0x1
 2165 01a8 12       		.uleb128 0x12
 2166 01a9 06       		.uleb128 0x6
 2167 01aa 00       		.byte	0
 2168 01ab 00       		.byte	0
 2169 01ac 1F       		.uleb128 0x1f
 2170 01ad 34       		.uleb128 0x34
 2171 01ae 00       		.byte	0
 2172 01af 31       		.uleb128 0x31
 2173 01b0 13       		.uleb128 0x13
 2174 01b1 00       		.byte	0
 2175 01b2 00       		.byte	0
 2176 01b3 20       		.uleb128 0x20
 2177 01b4 1D       		.uleb128 0x1d
 2178 01b5 01       		.byte	0x1
 2179 01b6 31       		.uleb128 0x31
 2180 01b7 13       		.uleb128 0x13
 2181 01b8 11       		.uleb128 0x11
 2182 01b9 01       		.uleb128 0x1
 2183 01ba 12       		.uleb128 0x12
 2184 01bb 06       		.uleb128 0x6
 2185 01bc 58       		.uleb128 0x58
 2186 01bd 0B       		.uleb128 0xb
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 58


 2187 01be 59       		.uleb128 0x59
 2188 01bf 05       		.uleb128 0x5
 2189 01c0 00       		.byte	0
 2190 01c1 00       		.byte	0
 2191 01c2 21       		.uleb128 0x21
 2192 01c3 05       		.uleb128 0x5
 2193 01c4 00       		.byte	0
 2194 01c5 31       		.uleb128 0x31
 2195 01c6 13       		.uleb128 0x13
 2196 01c7 00       		.byte	0
 2197 01c8 00       		.byte	0
 2198 01c9 22       		.uleb128 0x22
 2199 01ca 05       		.uleb128 0x5
 2200 01cb 00       		.byte	0
 2201 01cc 03       		.uleb128 0x3
 2202 01cd 0E       		.uleb128 0xe
 2203 01ce 3A       		.uleb128 0x3a
 2204 01cf 0B       		.uleb128 0xb
 2205 01d0 3B       		.uleb128 0x3b
 2206 01d1 0B       		.uleb128 0xb
 2207 01d2 49       		.uleb128 0x49
 2208 01d3 13       		.uleb128 0x13
 2209 01d4 02       		.uleb128 0x2
 2210 01d5 17       		.uleb128 0x17
 2211 01d6 00       		.byte	0
 2212 01d7 00       		.byte	0
 2213 01d8 23       		.uleb128 0x23
 2214 01d9 2E       		.uleb128 0x2e
 2215 01da 01       		.byte	0x1
 2216 01db 3F       		.uleb128 0x3f
 2217 01dc 19       		.uleb128 0x19
 2218 01dd 03       		.uleb128 0x3
 2219 01de 0E       		.uleb128 0xe
 2220 01df 3A       		.uleb128 0x3a
 2221 01e0 0B       		.uleb128 0xb
 2222 01e1 3B       		.uleb128 0x3b
 2223 01e2 05       		.uleb128 0x5
 2224 01e3 27       		.uleb128 0x27
 2225 01e4 19       		.uleb128 0x19
 2226 01e5 11       		.uleb128 0x11
 2227 01e6 01       		.uleb128 0x1
 2228 01e7 12       		.uleb128 0x12
 2229 01e8 06       		.uleb128 0x6
 2230 01e9 40       		.uleb128 0x40
 2231 01ea 18       		.uleb128 0x18
 2232 01eb 9742     		.uleb128 0x2117
 2233 01ed 19       		.uleb128 0x19
 2234 01ee 01       		.uleb128 0x1
 2235 01ef 13       		.uleb128 0x13
 2236 01f0 00       		.byte	0
 2237 01f1 00       		.byte	0
 2238 01f2 24       		.uleb128 0x24
 2239 01f3 2E       		.uleb128 0x2e
 2240 01f4 00       		.byte	0
 2241 01f5 3F       		.uleb128 0x3f
 2242 01f6 19       		.uleb128 0x19
 2243 01f7 3C       		.uleb128 0x3c
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 59


 2244 01f8 19       		.uleb128 0x19
 2245 01f9 6E       		.uleb128 0x6e
 2246 01fa 0E       		.uleb128 0xe
 2247 01fb 03       		.uleb128 0x3
 2248 01fc 0E       		.uleb128 0xe
 2249 01fd 3A       		.uleb128 0x3a
 2250 01fe 0B       		.uleb128 0xb
 2251 01ff 3B       		.uleb128 0x3b
 2252 0200 0B       		.uleb128 0xb
 2253 0201 00       		.byte	0
 2254 0202 00       		.byte	0
 2255 0203 25       		.uleb128 0x25
 2256 0204 2E       		.uleb128 0x2e
 2257 0205 00       		.byte	0
 2258 0206 3F       		.uleb128 0x3f
 2259 0207 19       		.uleb128 0x19
 2260 0208 3C       		.uleb128 0x3c
 2261 0209 19       		.uleb128 0x19
 2262 020a 6E       		.uleb128 0x6e
 2263 020b 0E       		.uleb128 0xe
 2264 020c 03       		.uleb128 0x3
 2265 020d 0E       		.uleb128 0xe
 2266 020e 3A       		.uleb128 0x3a
 2267 020f 0B       		.uleb128 0xb
 2268 0210 3B       		.uleb128 0x3b
 2269 0211 05       		.uleb128 0x5
 2270 0212 00       		.byte	0
 2271 0213 00       		.byte	0
 2272 0214 00       		.byte	0
 2273              		.section	.debug_loc,"",%progbits
 2274              	.Ldebug_loc0:
 2275              	.LLST0:
 2276 0000 00000000 		.4byte	.LVL0
 2277 0004 08000000 		.4byte	.LVL1
 2278 0008 0100     		.2byte	0x1
 2279 000a 50       		.byte	0x50
 2280 000b 08000000 		.4byte	.LVL1
 2281 000f 0A000000 		.4byte	.LVL2
 2282 0013 0400     		.2byte	0x4
 2283 0015 F3       		.byte	0xf3
 2284 0016 01       		.uleb128 0x1
 2285 0017 50       		.byte	0x50
 2286 0018 9F       		.byte	0x9f
 2287 0019 0A000000 		.4byte	.LVL2
 2288 001d 12000000 		.4byte	.LVL3
 2289 0021 0100     		.2byte	0x1
 2290 0023 50       		.byte	0x50
 2291 0024 12000000 		.4byte	.LVL3
 2292 0028 14000000 		.4byte	.LVL4
 2293 002c 0400     		.2byte	0x4
 2294 002e F3       		.byte	0xf3
 2295 002f 01       		.uleb128 0x1
 2296 0030 50       		.byte	0x50
 2297 0031 9F       		.byte	0x9f
 2298 0032 14000000 		.4byte	.LVL4
 2299 0036 16000000 		.4byte	.LVL5
 2300 003a 0100     		.2byte	0x1
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 60


 2301 003c 50       		.byte	0x50
 2302 003d 16000000 		.4byte	.LVL5
 2303 0041 18000000 		.4byte	.LVL6
 2304 0045 0400     		.2byte	0x4
 2305 0047 F3       		.byte	0xf3
 2306 0048 01       		.uleb128 0x1
 2307 0049 50       		.byte	0x50
 2308 004a 9F       		.byte	0x9f
 2309 004b 18000000 		.4byte	.LVL6
 2310 004f 1A000000 		.4byte	.LVL7
 2311 0053 0100     		.2byte	0x1
 2312 0055 50       		.byte	0x50
 2313 0056 1A000000 		.4byte	.LVL7
 2314 005a 1C000000 		.4byte	.LFE13
 2315 005e 0400     		.2byte	0x4
 2316 0060 F3       		.byte	0xf3
 2317 0061 01       		.uleb128 0x1
 2318 0062 50       		.byte	0x50
 2319 0063 9F       		.byte	0x9f
 2320 0064 00000000 		.4byte	0
 2321 0068 00000000 		.4byte	0
 2322              	.LLST1:
 2323 006c 00000000 		.4byte	.LVL0
 2324 0070 1A000000 		.4byte	.LVL7
 2325 0074 0200     		.2byte	0x2
 2326 0076 30       		.byte	0x30
 2327 0077 9F       		.byte	0x9f
 2328 0078 1A000000 		.4byte	.LVL7
 2329 007c 1C000000 		.4byte	.LFE13
 2330 0080 0100     		.2byte	0x1
 2331 0082 50       		.byte	0x50
 2332 0083 00000000 		.4byte	0
 2333 0087 00000000 		.4byte	0
 2334              	.LLST2:
 2335 008b 08000000 		.4byte	.LVL8
 2336 008f 12000000 		.4byte	.LVL9
 2337 0093 0100     		.2byte	0x1
 2338 0095 50       		.byte	0x50
 2339 0096 12000000 		.4byte	.LVL9
 2340 009a 1A000000 		.4byte	.LFE4
 2341 009e 0100     		.2byte	0x1
 2342 00a0 54       		.byte	0x54
 2343 00a1 00000000 		.4byte	0
 2344 00a5 00000000 		.4byte	0
 2345              	.LLST3:
 2346 00a9 00000000 		.4byte	.LVL11
 2347 00ad 11000000 		.4byte	.LVL13-1
 2348 00b1 0100     		.2byte	0x1
 2349 00b3 50       		.byte	0x50
 2350 00b4 11000000 		.4byte	.LVL13-1
 2351 00b8 AA000000 		.4byte	.LVL36
 2352 00bc 0100     		.2byte	0x1
 2353 00be 57       		.byte	0x57
 2354 00bf AA000000 		.4byte	.LVL36
 2355 00c3 B0000000 		.4byte	.LFE6
 2356 00c7 0400     		.2byte	0x4
 2357 00c9 F3       		.byte	0xf3
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 61


 2358 00ca 01       		.uleb128 0x1
 2359 00cb 50       		.byte	0x50
 2360 00cc 9F       		.byte	0x9f
 2361 00cd 00000000 		.4byte	0
 2362 00d1 00000000 		.4byte	0
 2363              	.LLST4:
 2364 00d5 00000000 		.4byte	.LVL11
 2365 00d9 11000000 		.4byte	.LVL13-1
 2366 00dd 0100     		.2byte	0x1
 2367 00df 51       		.byte	0x51
 2368 00e0 11000000 		.4byte	.LVL13-1
 2369 00e4 9A000000 		.4byte	.LVL32
 2370 00e8 0100     		.2byte	0x1
 2371 00ea 56       		.byte	0x56
 2372 00eb 9A000000 		.4byte	.LVL32
 2373 00ef B0000000 		.4byte	.LFE6
 2374 00f3 0400     		.2byte	0x4
 2375 00f5 F3       		.byte	0xf3
 2376 00f6 01       		.uleb128 0x1
 2377 00f7 51       		.byte	0x51
 2378 00f8 9F       		.byte	0x9f
 2379 00f9 00000000 		.4byte	0
 2380 00fd 00000000 		.4byte	0
 2381              	.LLST5:
 2382 0101 00000000 		.4byte	.LVL11
 2383 0105 11000000 		.4byte	.LVL13-1
 2384 0109 0100     		.2byte	0x1
 2385 010b 52       		.byte	0x52
 2386 010c 11000000 		.4byte	.LVL13-1
 2387 0110 AA000000 		.4byte	.LVL36
 2388 0114 0100     		.2byte	0x1
 2389 0116 59       		.byte	0x59
 2390 0117 AA000000 		.4byte	.LVL36
 2391 011b B0000000 		.4byte	.LFE6
 2392 011f 0400     		.2byte	0x4
 2393 0121 F3       		.byte	0xf3
 2394 0122 01       		.uleb128 0x1
 2395 0123 52       		.byte	0x52
 2396 0124 9F       		.byte	0x9f
 2397 0125 00000000 		.4byte	0
 2398 0129 00000000 		.4byte	0
 2399              	.LLST6:
 2400 012d 00000000 		.4byte	.LVL11
 2401 0131 11000000 		.4byte	.LVL13-1
 2402 0135 0100     		.2byte	0x1
 2403 0137 53       		.byte	0x53
 2404 0138 11000000 		.4byte	.LVL13-1
 2405 013c AA000000 		.4byte	.LVL36
 2406 0140 0100     		.2byte	0x1
 2407 0142 58       		.byte	0x58
 2408 0143 AA000000 		.4byte	.LVL36
 2409 0147 B0000000 		.4byte	.LFE6
 2410 014b 0400     		.2byte	0x4
 2411 014d F3       		.byte	0xf3
 2412 014e 01       		.uleb128 0x1
 2413 014f 53       		.byte	0x53
 2414 0150 9F       		.byte	0x9f
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 62


 2415 0151 00000000 		.4byte	0
 2416 0155 00000000 		.4byte	0
 2417              	.LLST7:
 2418 0159 00000000 		.4byte	.LVL11
 2419 015d 20000000 		.4byte	.LVL16
 2420 0161 0200     		.2byte	0x2
 2421 0163 91       		.byte	0x91
 2422 0164 00       		.sleb128 0
 2423 0165 20000000 		.4byte	.LVL16
 2424 0169 30000000 		.4byte	.LVL17
 2425 016d 0200     		.2byte	0x2
 2426 016f 30       		.byte	0x30
 2427 0170 9F       		.byte	0x9f
 2428 0171 30000000 		.4byte	.LVL17
 2429 0175 58000000 		.4byte	.LVL24
 2430 0179 0200     		.2byte	0x2
 2431 017b 91       		.byte	0x91
 2432 017c 00       		.sleb128 0
 2433 017d 58000000 		.4byte	.LVL24
 2434 0181 5A000000 		.4byte	.LVL25
 2435 0185 0200     		.2byte	0x2
 2436 0187 30       		.byte	0x30
 2437 0188 9F       		.byte	0x9f
 2438 0189 5A000000 		.4byte	.LVL25
 2439 018d AA000000 		.4byte	.LVL36
 2440 0191 0100     		.2byte	0x1
 2441 0193 55       		.byte	0x55
 2442 0194 00000000 		.4byte	0
 2443 0198 00000000 		.4byte	0
 2444              	.LLST8:
 2445 019c 0E000000 		.4byte	.LVL12
 2446 01a0 11000000 		.4byte	.LVL13-1
 2447 01a4 0100     		.2byte	0x1
 2448 01a6 50       		.byte	0x50
 2449 01a7 11000000 		.4byte	.LVL13-1
 2450 01ab AA000000 		.4byte	.LVL36
 2451 01af 0100     		.2byte	0x1
 2452 01b1 57       		.byte	0x57
 2453 01b2 AA000000 		.4byte	.LVL36
 2454 01b6 B0000000 		.4byte	.LFE6
 2455 01ba 0400     		.2byte	0x4
 2456 01bc F3       		.byte	0xf3
 2457 01bd 01       		.uleb128 0x1
 2458 01be 50       		.byte	0x50
 2459 01bf 9F       		.byte	0x9f
 2460 01c0 00000000 		.4byte	0
 2461 01c4 00000000 		.4byte	0
 2462              	.LLST9:
 2463 01c8 20000000 		.4byte	.LVL16
 2464 01cc 30000000 		.4byte	.LVL17
 2465 01d0 0100     		.2byte	0x1
 2466 01d2 54       		.byte	0x54
 2467 01d3 54000000 		.4byte	.LVL22
 2468 01d7 58000000 		.4byte	.LVL24
 2469 01db 0200     		.2byte	0x2
 2470 01dd 30       		.byte	0x30
 2471 01de 9F       		.byte	0x9f
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 63


 2472 01df 58000000 		.4byte	.LVL24
 2473 01e3 78000000 		.4byte	.LVL28
 2474 01e7 0100     		.2byte	0x1
 2475 01e9 54       		.byte	0x54
 2476 01ea 78000000 		.4byte	.LVL28
 2477 01ee 81000000 		.4byte	.LVL29-1
 2478 01f2 0100     		.2byte	0x1
 2479 01f4 50       		.byte	0x50
 2480 01f5 81000000 		.4byte	.LVL29-1
 2481 01f9 AA000000 		.4byte	.LVL36
 2482 01fd 0100     		.2byte	0x1
 2483 01ff 54       		.byte	0x54
 2484 0200 AA000000 		.4byte	.LVL36
 2485 0204 B0000000 		.4byte	.LFE6
 2486 0208 0100     		.2byte	0x1
 2487 020a 50       		.byte	0x50
 2488 020b 00000000 		.4byte	0
 2489 020f 00000000 		.4byte	0
 2490              	.LLST10:
 2491 0213 0E000000 		.4byte	.LVL12
 2492 0217 40000000 		.4byte	.LVL18
 2493 021b 0200     		.2byte	0x2
 2494 021d 30       		.byte	0x30
 2495 021e 9F       		.byte	0x9f
 2496 021f 40000000 		.4byte	.LVL18
 2497 0223 4E000000 		.4byte	.LVL20
 2498 0227 0100     		.2byte	0x1
 2499 0229 51       		.byte	0x51
 2500 022a 58000000 		.4byte	.LVL24
 2501 022e 5A000000 		.4byte	.LVL25
 2502 0232 0200     		.2byte	0x2
 2503 0234 30       		.byte	0x30
 2504 0235 9F       		.byte	0x9f
 2505 0236 00000000 		.4byte	0
 2506 023a 00000000 		.4byte	0
 2507              	.LLST11:
 2508 023e 1E000000 		.4byte	.LVL15
 2509 0242 50000000 		.4byte	.LVL21
 2510 0246 0100     		.2byte	0x1
 2511 0248 50       		.byte	0x50
 2512 0249 58000000 		.4byte	.LVL24
 2513 024d 5A000000 		.4byte	.LVL25
 2514 0251 0100     		.2byte	0x1
 2515 0253 50       		.byte	0x50
 2516 0254 00000000 		.4byte	0
 2517 0258 00000000 		.4byte	0
 2518              	.LLST12:
 2519 025c 5E000000 		.4byte	.LVL26
 2520 0260 75000000 		.4byte	.LVL27-1
 2521 0264 0100     		.2byte	0x1
 2522 0266 50       		.byte	0x50
 2523 0267 00000000 		.4byte	0
 2524 026b 00000000 		.4byte	0
 2525              	.LLST13:
 2526 026f 0E000000 		.4byte	.LVL12
 2527 0273 9C000000 		.4byte	.LVL33
 2528 0277 0200     		.2byte	0x2
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 64


 2529 0279 30       		.byte	0x30
 2530 027a 9F       		.byte	0x9f
 2531 027b 9C000000 		.4byte	.LVL33
 2532 027f A0000000 		.4byte	.LVL34
 2533 0283 0200     		.2byte	0x2
 2534 0285 31       		.byte	0x31
 2535 0286 9F       		.byte	0x9f
 2536 0287 00000000 		.4byte	0
 2537 028b 00000000 		.4byte	0
 2538              	.LLST14:
 2539 028f 14000000 		.4byte	.LVL14
 2540 0293 56000000 		.4byte	.LVL23
 2541 0297 0100     		.2byte	0x1
 2542 0299 54       		.byte	0x54
 2543 029a 58000000 		.4byte	.LVL24
 2544 029e 5A000000 		.4byte	.LVL25
 2545 02a2 0100     		.2byte	0x1
 2546 02a4 54       		.byte	0x54
 2547 02a5 00000000 		.4byte	0
 2548 02a9 00000000 		.4byte	0
 2549              	.LLST15:
 2550 02ad 00000000 		.4byte	.LVL37
 2551 02b1 09000000 		.4byte	.LVL39-1
 2552 02b5 0100     		.2byte	0x1
 2553 02b7 50       		.byte	0x50
 2554 02b8 09000000 		.4byte	.LVL39-1
 2555 02bc 1A000000 		.4byte	.LFE7
 2556 02c0 0100     		.2byte	0x1
 2557 02c2 56       		.byte	0x56
 2558 02c3 00000000 		.4byte	0
 2559 02c7 00000000 		.4byte	0
 2560              	.LLST16:
 2561 02cb 00000000 		.4byte	.LVL37
 2562 02cf 09000000 		.4byte	.LVL39-1
 2563 02d3 0100     		.2byte	0x1
 2564 02d5 51       		.byte	0x51
 2565 02d6 09000000 		.4byte	.LVL39-1
 2566 02da 10000000 		.4byte	.LVL41
 2567 02de 0100     		.2byte	0x1
 2568 02e0 54       		.byte	0x54
 2569 02e1 10000000 		.4byte	.LVL41
 2570 02e5 1A000000 		.4byte	.LFE7
 2571 02e9 0400     		.2byte	0x4
 2572 02eb F3       		.byte	0xf3
 2573 02ec 01       		.uleb128 0x1
 2574 02ed 51       		.byte	0x51
 2575 02ee 9F       		.byte	0x9f
 2576 02ef 00000000 		.4byte	0
 2577 02f3 00000000 		.4byte	0
 2578              	.LLST17:
 2579 02f7 06000000 		.4byte	.LVL38
 2580 02fb 09000000 		.4byte	.LVL39-1
 2581 02ff 0100     		.2byte	0x1
 2582 0301 50       		.byte	0x50
 2583 0302 09000000 		.4byte	.LVL39-1
 2584 0306 1A000000 		.4byte	.LFE7
 2585 030a 0100     		.2byte	0x1
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 65


 2586 030c 56       		.byte	0x56
 2587 030d 00000000 		.4byte	0
 2588 0311 00000000 		.4byte	0
 2589              	.LLST18:
 2590 0315 00000000 		.4byte	.LVL43
 2591 0319 16000000 		.4byte	.LVL44
 2592 031d 0100     		.2byte	0x1
 2593 031f 50       		.byte	0x50
 2594 0320 16000000 		.4byte	.LVL44
 2595 0324 1C000000 		.4byte	.LFE8
 2596 0328 0400     		.2byte	0x4
 2597 032a F3       		.byte	0xf3
 2598 032b 01       		.uleb128 0x1
 2599 032c 50       		.byte	0x50
 2600 032d 9F       		.byte	0x9f
 2601 032e 00000000 		.4byte	0
 2602 0332 00000000 		.4byte	0
 2603              	.LLST19:
 2604 0336 00000000 		.4byte	.LVL43
 2605 033a 16000000 		.4byte	.LVL44
 2606 033e 0100     		.2byte	0x1
 2607 0340 50       		.byte	0x50
 2608 0341 16000000 		.4byte	.LVL44
 2609 0345 1C000000 		.4byte	.LFE8
 2610 0349 0400     		.2byte	0x4
 2611 034b F3       		.byte	0xf3
 2612 034c 01       		.uleb128 0x1
 2613 034d 50       		.byte	0x50
 2614 034e 9F       		.byte	0x9f
 2615 034f 00000000 		.4byte	0
 2616 0353 00000000 		.4byte	0
 2617              	.LLST20:
 2618 0357 00000000 		.4byte	.LVL45
 2619 035b 0D000000 		.4byte	.LVL48-1
 2620 035f 0100     		.2byte	0x1
 2621 0361 50       		.byte	0x50
 2622 0362 0D000000 		.4byte	.LVL48-1
 2623 0366 6E000000 		.4byte	.LFE9
 2624 036a 0100     		.2byte	0x1
 2625 036c 54       		.byte	0x54
 2626 036d 00000000 		.4byte	0
 2627 0371 00000000 		.4byte	0
 2628              	.LLST21:
 2629 0375 00000000 		.4byte	.LVL45
 2630 0379 0D000000 		.4byte	.LVL48-1
 2631 037d 0100     		.2byte	0x1
 2632 037f 51       		.byte	0x51
 2633 0380 0D000000 		.4byte	.LVL48-1
 2634 0384 14000000 		.4byte	.LVL50
 2635 0388 0100     		.2byte	0x1
 2636 038a 55       		.byte	0x55
 2637 038b 14000000 		.4byte	.LVL50
 2638 038f 6E000000 		.4byte	.LFE9
 2639 0393 0400     		.2byte	0x4
 2640 0395 F3       		.byte	0xf3
 2641 0396 01       		.uleb128 0x1
 2642 0397 51       		.byte	0x51
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 66


 2643 0398 9F       		.byte	0x9f
 2644 0399 00000000 		.4byte	0
 2645 039d 00000000 		.4byte	0
 2646              	.LLST22:
 2647 03a1 10000000 		.4byte	.LVL49
 2648 03a5 57000000 		.4byte	.LVL58-1
 2649 03a9 0100     		.2byte	0x1
 2650 03ab 50       		.byte	0x50
 2651 03ac 5A000000 		.4byte	.LVL59
 2652 03b0 69000000 		.4byte	.LVL61-1
 2653 03b4 0100     		.2byte	0x1
 2654 03b6 50       		.byte	0x50
 2655 03b7 00000000 		.4byte	0
 2656 03bb 00000000 		.4byte	0
 2657              	.LLST23:
 2658 03bf 1C000000 		.4byte	.LVL52
 2659 03c3 5A000000 		.4byte	.LVL59
 2660 03c7 0100     		.2byte	0x1
 2661 03c9 55       		.byte	0x55
 2662 03ca 00000000 		.4byte	0
 2663 03ce 00000000 		.4byte	0
 2664              	.LLST24:
 2665 03d2 06000000 		.4byte	.LVL46
 2666 03d6 0D000000 		.4byte	.LVL48-1
 2667 03da 0300     		.2byte	0x3
 2668 03dc 70       		.byte	0x70
 2669 03dd 04       		.sleb128 4
 2670 03de 9F       		.byte	0x9f
 2671 03df 0D000000 		.4byte	.LVL48-1
 2672 03e3 6E000000 		.4byte	.LFE9
 2673 03e7 0300     		.2byte	0x3
 2674 03e9 74       		.byte	0x74
 2675 03ea 04       		.sleb128 4
 2676 03eb 9F       		.byte	0x9f
 2677 03ec 00000000 		.4byte	0
 2678 03f0 00000000 		.4byte	0
 2679              	.LLST25:
 2680 03f4 06000000 		.4byte	.LVL46
 2681 03f8 1A000000 		.4byte	.LVL51
 2682 03fc 0200     		.2byte	0x2
 2683 03fe 30       		.byte	0x30
 2684 03ff 9F       		.byte	0x9f
 2685 0400 1A000000 		.4byte	.LVL51
 2686 0404 64000000 		.4byte	.LVL60
 2687 0408 0100     		.2byte	0x1
 2688 040a 57       		.byte	0x57
 2689 040b 00000000 		.4byte	0
 2690 040f 00000000 		.4byte	0
 2691              	.LLST26:
 2692 0413 1E000000 		.4byte	.LVL53
 2693 0417 22000000 		.4byte	.LVL54
 2694 041b 0100     		.2byte	0x1
 2695 041d 53       		.byte	0x53
 2696 041e 22000000 		.4byte	.LVL54
 2697 0422 57000000 		.4byte	.LVL58-1
 2698 0426 0100     		.2byte	0x1
 2699 0428 52       		.byte	0x52
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 67


 2700 0429 00000000 		.4byte	0
 2701 042d 00000000 		.4byte	0
 2702              	.LLST27:
 2703 0431 1E000000 		.4byte	.LVL53
 2704 0435 57000000 		.4byte	.LVL58-1
 2705 0439 0800     		.2byte	0x8
 2706 043b 73       		.byte	0x73
 2707 043c 00       		.sleb128 0
 2708 043d 40       		.byte	0x40
 2709 043e 44       		.byte	0x44
 2710 043f 24       		.byte	0x24
 2711 0440 1F       		.byte	0x1f
 2712 0441 1A       		.byte	0x1a
 2713 0442 9F       		.byte	0x9f
 2714 0443 00000000 		.4byte	0
 2715 0447 00000000 		.4byte	0
 2716              	.LLST28:
 2717 044b 06000000 		.4byte	.LVL46
 2718 044f 0D000000 		.4byte	.LVL48-1
 2719 0453 0100     		.2byte	0x1
 2720 0455 50       		.byte	0x50
 2721 0456 0D000000 		.4byte	.LVL48-1
 2722 045a 6E000000 		.4byte	.LFE9
 2723 045e 0100     		.2byte	0x1
 2724 0460 54       		.byte	0x54
 2725 0461 00000000 		.4byte	0
 2726 0465 00000000 		.4byte	0
 2727              	.LLST29:
 2728 0469 06000000 		.4byte	.LVL46
 2729 046d 1A000000 		.4byte	.LVL51
 2730 0471 0200     		.2byte	0x2
 2731 0473 30       		.byte	0x30
 2732 0474 9F       		.byte	0x9f
 2733 0475 1E000000 		.4byte	.LVL53
 2734 0479 44000000 		.4byte	.LVL55
 2735 047d 0200     		.2byte	0x2
 2736 047f 30       		.byte	0x30
 2737 0480 9F       		.byte	0x9f
 2738 0481 44000000 		.4byte	.LVL55
 2739 0485 50000000 		.4byte	.LVL57
 2740 0489 0100     		.2byte	0x1
 2741 048b 51       		.byte	0x51
 2742 048c 00000000 		.4byte	0
 2743 0490 00000000 		.4byte	0
 2744              	.LLST30:
 2745 0494 00000000 		.4byte	.LVL62
 2746 0498 0F000000 		.4byte	.LVL64-1
 2747 049c 0100     		.2byte	0x1
 2748 049e 50       		.byte	0x50
 2749 049f 0F000000 		.4byte	.LVL64-1
 2750 04a3 8A000000 		.4byte	.LVL82
 2751 04a7 0100     		.2byte	0x1
 2752 04a9 55       		.byte	0x55
 2753 04aa 8A000000 		.4byte	.LVL82
 2754 04ae 90000000 		.4byte	.LFE5
 2755 04b2 0400     		.2byte	0x4
 2756 04b4 F3       		.byte	0xf3
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 68


 2757 04b5 01       		.uleb128 0x1
 2758 04b6 50       		.byte	0x50
 2759 04b7 9F       		.byte	0x9f
 2760 04b8 00000000 		.4byte	0
 2761 04bc 00000000 		.4byte	0
 2762              	.LLST31:
 2763 04c0 00000000 		.4byte	.LVL62
 2764 04c4 0F000000 		.4byte	.LVL64-1
 2765 04c8 0100     		.2byte	0x1
 2766 04ca 51       		.byte	0x51
 2767 04cb 0F000000 		.4byte	.LVL64-1
 2768 04cf 20000000 		.4byte	.LVL67
 2769 04d3 0100     		.2byte	0x1
 2770 04d5 54       		.byte	0x54
 2771 04d6 20000000 		.4byte	.LVL67
 2772 04da 90000000 		.4byte	.LFE5
 2773 04de 0400     		.2byte	0x4
 2774 04e0 F3       		.byte	0xf3
 2775 04e1 01       		.uleb128 0x1
 2776 04e2 51       		.byte	0x51
 2777 04e3 9F       		.byte	0x9f
 2778 04e4 00000000 		.4byte	0
 2779 04e8 00000000 		.4byte	0
 2780              	.LLST32:
 2781 04ec 00000000 		.4byte	.LVL62
 2782 04f0 0F000000 		.4byte	.LVL64-1
 2783 04f4 0100     		.2byte	0x1
 2784 04f6 52       		.byte	0x52
 2785 04f7 0F000000 		.4byte	.LVL64-1
 2786 04fb 7A000000 		.4byte	.LVL79
 2787 04ff 0100     		.2byte	0x1
 2788 0501 57       		.byte	0x57
 2789 0502 7A000000 		.4byte	.LVL79
 2790 0506 90000000 		.4byte	.LFE5
 2791 050a 0400     		.2byte	0x4
 2792 050c F3       		.byte	0xf3
 2793 050d 01       		.uleb128 0x1
 2794 050e 52       		.byte	0x52
 2795 050f 9F       		.byte	0x9f
 2796 0510 00000000 		.4byte	0
 2797 0514 00000000 		.4byte	0
 2798              	.LLST33:
 2799 0518 00000000 		.4byte	.LVL62
 2800 051c 0F000000 		.4byte	.LVL64-1
 2801 0520 0100     		.2byte	0x1
 2802 0522 53       		.byte	0x53
 2803 0523 0F000000 		.4byte	.LVL64-1
 2804 0527 2E000000 		.4byte	.LVL69
 2805 052b 0100     		.2byte	0x1
 2806 052d 56       		.byte	0x56
 2807 052e 2E000000 		.4byte	.LVL69
 2808 0532 32000000 		.4byte	.LVL70
 2809 0536 0200     		.2byte	0x2
 2810 0538 30       		.byte	0x30
 2811 0539 9F       		.byte	0x9f
 2812 053a 32000000 		.4byte	.LVL70
 2813 053e 8A000000 		.4byte	.LVL82
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 69


 2814 0542 0100     		.2byte	0x1
 2815 0544 56       		.byte	0x56
 2816 0545 00000000 		.4byte	0
 2817 0549 00000000 		.4byte	0
 2818              	.LLST34:
 2819 054d 14000000 		.4byte	.LVL65
 2820 0551 8A000000 		.4byte	.LVL82
 2821 0555 0100     		.2byte	0x1
 2822 0557 58       		.byte	0x58
 2823 0558 00000000 		.4byte	0
 2824 055c 00000000 		.4byte	0
 2825              	.LLST35:
 2826 0560 26000000 		.4byte	.LVL68
 2827 0564 32000000 		.4byte	.LVL70
 2828 0568 0100     		.2byte	0x1
 2829 056a 54       		.byte	0x54
 2830 056b 40000000 		.4byte	.LVL71
 2831 056f 44000000 		.4byte	.LVL72
 2832 0573 0200     		.2byte	0x2
 2833 0575 30       		.byte	0x30
 2834 0576 9F       		.byte	0x9f
 2835 0577 46000000 		.4byte	.LVL73
 2836 057b 64000000 		.4byte	.LVL76
 2837 057f 0100     		.2byte	0x1
 2838 0581 54       		.byte	0x54
 2839 0582 64000000 		.4byte	.LVL76
 2840 0586 6D000000 		.4byte	.LVL77-1
 2841 058a 0100     		.2byte	0x1
 2842 058c 50       		.byte	0x50
 2843 058d 6D000000 		.4byte	.LVL77-1
 2844 0591 8A000000 		.4byte	.LVL82
 2845 0595 0100     		.2byte	0x1
 2846 0597 54       		.byte	0x54
 2847 0598 8A000000 		.4byte	.LVL82
 2848 059c 90000000 		.4byte	.LFE5
 2849 05a0 0100     		.2byte	0x1
 2850 05a2 50       		.byte	0x50
 2851 05a3 00000000 		.4byte	0
 2852 05a7 00000000 		.4byte	0
 2853              	.LLST36:
 2854 05ab 0C000000 		.4byte	.LVL63
 2855 05af 0F000000 		.4byte	.LVL64-1
 2856 05b3 0100     		.2byte	0x1
 2857 05b5 50       		.byte	0x50
 2858 05b6 0F000000 		.4byte	.LVL64-1
 2859 05ba 8A000000 		.4byte	.LVL82
 2860 05be 0100     		.2byte	0x1
 2861 05c0 55       		.byte	0x55
 2862 05c1 8A000000 		.4byte	.LVL82
 2863 05c5 90000000 		.4byte	.LFE5
 2864 05c9 0400     		.2byte	0x4
 2865 05cb F3       		.byte	0xf3
 2866 05cc 01       		.uleb128 0x1
 2867 05cd 50       		.byte	0x50
 2868 05ce 9F       		.byte	0x9f
 2869 05cf 00000000 		.4byte	0
 2870 05d3 00000000 		.4byte	0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 70


 2871              	.LLST37:
 2872 05d7 4A000000 		.4byte	.LVL74
 2873 05db 61000000 		.4byte	.LVL75-1
 2874 05df 0100     		.2byte	0x1
 2875 05e1 50       		.byte	0x50
 2876 05e2 00000000 		.4byte	0
 2877 05e6 00000000 		.4byte	0
 2878              	.LLST38:
 2879 05ea 0C000000 		.4byte	.LVL63
 2880 05ee 46000000 		.4byte	.LVL73
 2881 05f2 0200     		.2byte	0x2
 2882 05f4 30       		.byte	0x30
 2883 05f5 9F       		.byte	0x9f
 2884 05f6 00000000 		.4byte	0
 2885 05fa 00000000 		.4byte	0
 2886              	.LLST39:
 2887 05fe 00000000 		.4byte	.LVL83
 2888 0602 07000000 		.4byte	.LVL85-1
 2889 0606 0100     		.2byte	0x1
 2890 0608 50       		.byte	0x50
 2891 0609 07000000 		.4byte	.LVL85-1
 2892 060d 26000000 		.4byte	.LFE10
 2893 0611 0100     		.2byte	0x1
 2894 0613 54       		.byte	0x54
 2895 0614 00000000 		.4byte	0
 2896 0618 00000000 		.4byte	0
 2897              	.LLST40:
 2898 061c 04000000 		.4byte	.LVL84
 2899 0620 07000000 		.4byte	.LVL85-1
 2900 0624 0100     		.2byte	0x1
 2901 0626 50       		.byte	0x50
 2902 0627 07000000 		.4byte	.LVL85-1
 2903 062b 26000000 		.4byte	.LFE10
 2904 062f 0100     		.2byte	0x1
 2905 0631 54       		.byte	0x54
 2906 0632 00000000 		.4byte	0
 2907 0636 00000000 		.4byte	0
 2908              	.LLST41:
 2909 063a 04000000 		.4byte	.LVL84
 2910 063e 07000000 		.4byte	.LVL85-1
 2911 0642 0300     		.2byte	0x3
 2912 0644 70       		.byte	0x70
 2913 0645 04       		.sleb128 4
 2914 0646 9F       		.byte	0x9f
 2915 0647 07000000 		.4byte	.LVL85-1
 2916 064b 26000000 		.4byte	.LFE10
 2917 064f 0300     		.2byte	0x3
 2918 0651 74       		.byte	0x74
 2919 0652 04       		.sleb128 4
 2920 0653 9F       		.byte	0x9f
 2921 0654 00000000 		.4byte	0
 2922 0658 00000000 		.4byte	0
 2923              	.LLST42:
 2924 065c 00000000 		.4byte	.LVL89
 2925 0660 05000000 		.4byte	.LVL90-1
 2926 0664 0100     		.2byte	0x1
 2927 0666 50       		.byte	0x50
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 71


 2928 0667 05000000 		.4byte	.LVL90-1
 2929 066b 08000000 		.4byte	.LFE11
 2930 066f 0400     		.2byte	0x4
 2931 0671 F3       		.byte	0xf3
 2932 0672 01       		.uleb128 0x1
 2933 0673 50       		.byte	0x50
 2934 0674 9F       		.byte	0x9f
 2935 0675 00000000 		.4byte	0
 2936 0679 00000000 		.4byte	0
 2937              	.LLST43:
 2938 067d 00000000 		.4byte	.LVL89
 2939 0681 05000000 		.4byte	.LVL90-1
 2940 0685 0100     		.2byte	0x1
 2941 0687 51       		.byte	0x51
 2942 0688 05000000 		.4byte	.LVL90-1
 2943 068c 08000000 		.4byte	.LFE11
 2944 0690 0400     		.2byte	0x4
 2945 0692 F3       		.byte	0xf3
 2946 0693 01       		.uleb128 0x1
 2947 0694 51       		.byte	0x51
 2948 0695 9F       		.byte	0x9f
 2949 0696 00000000 		.4byte	0
 2950 069a 00000000 		.4byte	0
 2951              	.LLST44:
 2952 069e 00000000 		.4byte	.LVL91
 2953 06a2 05000000 		.4byte	.LVL92-1
 2954 06a6 0100     		.2byte	0x1
 2955 06a8 50       		.byte	0x50
 2956 06a9 05000000 		.4byte	.LVL92-1
 2957 06ad 08000000 		.4byte	.LFE12
 2958 06b1 0400     		.2byte	0x4
 2959 06b3 F3       		.byte	0xf3
 2960 06b4 01       		.uleb128 0x1
 2961 06b5 50       		.byte	0x50
 2962 06b6 9F       		.byte	0x9f
 2963 06b7 00000000 		.4byte	0
 2964 06bb 00000000 		.4byte	0
 2965              	.LLST45:
 2966 06bf 00000000 		.4byte	.LVL91
 2967 06c3 05000000 		.4byte	.LVL92-1
 2968 06c7 0100     		.2byte	0x1
 2969 06c9 51       		.byte	0x51
 2970 06ca 05000000 		.4byte	.LVL92-1
 2971 06ce 08000000 		.4byte	.LFE12
 2972 06d2 0400     		.2byte	0x4
 2973 06d4 F3       		.byte	0xf3
 2974 06d5 01       		.uleb128 0x1
 2975 06d6 51       		.byte	0x51
 2976 06d7 9F       		.byte	0x9f
 2977 06d8 00000000 		.4byte	0
 2978 06dc 00000000 		.4byte	0
 2979              		.section	.debug_aranges,"",%progbits
 2980 0000 64000000 		.4byte	0x64
 2981 0004 0200     		.2byte	0x2
 2982 0006 00000000 		.4byte	.Ldebug_info0
 2983 000a 04       		.byte	0x4
 2984 000b 00       		.byte	0
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 72


 2985 000c 0000     		.2byte	0
 2986 000e 0000     		.2byte	0
 2987 0010 00000000 		.4byte	.LFB13
 2988 0014 1C000000 		.4byte	.LFE13-.LFB13
 2989 0018 00000000 		.4byte	.LFB4
 2990 001c 1A000000 		.4byte	.LFE4-.LFB4
 2991 0020 00000000 		.4byte	.LFB6
 2992 0024 B0000000 		.4byte	.LFE6-.LFB6
 2993 0028 00000000 		.4byte	.LFB7
 2994 002c 1A000000 		.4byte	.LFE7-.LFB7
 2995 0030 00000000 		.4byte	.LFB8
 2996 0034 1C000000 		.4byte	.LFE8-.LFB8
 2997 0038 00000000 		.4byte	.LFB9
 2998 003c 6E000000 		.4byte	.LFE9-.LFB9
 2999 0040 00000000 		.4byte	.LFB5
 3000 0044 90000000 		.4byte	.LFE5-.LFB5
 3001 0048 00000000 		.4byte	.LFB10
 3002 004c 26000000 		.4byte	.LFE10-.LFB10
 3003 0050 00000000 		.4byte	.LFB11
 3004 0054 08000000 		.4byte	.LFE11-.LFB11
 3005 0058 00000000 		.4byte	.LFB12
 3006 005c 08000000 		.4byte	.LFE12-.LFB12
 3007 0060 00000000 		.4byte	0
 3008 0064 00000000 		.4byte	0
 3009              		.section	.debug_ranges,"",%progbits
 3010              	.Ldebug_ranges0:
 3011 0000 12000000 		.4byte	.LBB6
 3012 0004 38000000 		.4byte	.LBE6
 3013 0008 3C000000 		.4byte	.LBB7
 3014 000c 5A000000 		.4byte	.LBE7
 3015 0010 00000000 		.4byte	0
 3016 0014 00000000 		.4byte	0
 3017 0018 00000000 		.4byte	.LFB13
 3018 001c 1C000000 		.4byte	.LFE13
 3019 0020 00000000 		.4byte	.LFB4
 3020 0024 1A000000 		.4byte	.LFE4
 3021 0028 00000000 		.4byte	.LFB6
 3022 002c B0000000 		.4byte	.LFE6
 3023 0030 00000000 		.4byte	.LFB7
 3024 0034 1A000000 		.4byte	.LFE7
 3025 0038 00000000 		.4byte	.LFB8
 3026 003c 1C000000 		.4byte	.LFE8
 3027 0040 00000000 		.4byte	.LFB9
 3028 0044 6E000000 		.4byte	.LFE9
 3029 0048 00000000 		.4byte	.LFB5
 3030 004c 90000000 		.4byte	.LFE5
 3031 0050 00000000 		.4byte	.LFB10
 3032 0054 26000000 		.4byte	.LFE10
 3033 0058 00000000 		.4byte	.LFB11
 3034 005c 08000000 		.4byte	.LFE11
 3035 0060 00000000 		.4byte	.LFB12
 3036 0064 08000000 		.4byte	.LFE12
 3037 0068 00000000 		.4byte	0
 3038 006c 00000000 		.4byte	0
 3039              		.section	.debug_line,"",%progbits
 3040              	.Ldebug_line0:
 3041 0000 6E030000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 73


 3041      02000002 
 3041      00000201 
 3041      FB0E0D00 
 3041      01010101 
 3042              	.LASF81:
 3043 0000 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 3043      6B52656D 
 3043      6F766546 
 3043      726F6D55 
 3043      6E6F7264 
 3044              	.LASF44:
 3045 0022 78457665 		.ascii	"xEventGroupCreate\000"
 3045      6E744772 
 3045      6F757043 
 3045      72656174 
 3045      6500
 3046              	.LASF38:
 3047 0034 756C4E65 		.ascii	"ulNewBASEPRI\000"
 3047      77424153 
 3047      45505249 
 3047      00
 3048              	.LASF75:
 3049 0041 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 3049      6B506C61 
 3049      63654F6E 
 3049      556E6F72 
 3049      64657265 
 3050              	.LASF41:
 3051 0060 78576169 		.ascii	"xWaitForAllBits\000"
 3051      74466F72 
 3051      416C6C42 
 3051      69747300 
 3052              	.LASF60:
 3053 0070 70784C69 		.ascii	"pxListEnd\000"
 3053      7374456E 
 3053      6400
 3054              	.LASF74:
 3055 007a 764C6973 		.ascii	"vListInitialise\000"
 3055      74496E69 
 3055      7469616C 
 3055      69736500 
 3056              	.LASF5:
 3057 008a 73686F72 		.ascii	"short int\000"
 3057      7420696E 
 3057      7400
 3058              	.LASF26:
 3059 0094 784C6973 		.ascii	"xListEnd\000"
 3059      74456E64 
 3059      00
 3060              	.LASF19:
 3061 009d 70785072 		.ascii	"pxPrevious\000"
 3061      6576696F 
 3061      757300
 3062              	.LASF85:
 3063 00a8 433A5C44 		.ascii	"C:\\DATA\\software\\embedded_controllers\\Cypress\\"
 3063      4154415C 
 3063      736F6674 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 74


 3063      77617265 
 3063      5C656D62 
 3064 00d6 55434C4C 		.ascii	"UCLL_Koen_lib\\UCLL_Koen_lib.cylib\000"
 3064      5F4B6F65 
 3064      6E5F6C69 
 3064      625C5543 
 3064      4C4C5F4B 
 3065              	.LASF12:
 3066 00f8 5F5F7569 		.ascii	"__uint32_t\000"
 3066      6E743332 
 3066      5F7400
 3067              	.LASF35:
 3068 0103 4576656E 		.ascii	"EventBits_t\000"
 3068      74426974 
 3068      735F7400 
 3069              	.LASF42:
 3070 010f 78576169 		.ascii	"xWaitConditionMet\000"
 3070      74436F6E 
 3070      64697469 
 3070      6F6E4D65 
 3070      7400
 3071              	.LASF20:
 3072 0121 70764F77 		.ascii	"pvOwner\000"
 3072      6E657200 
 3073              	.LASF48:
 3074 0129 78546963 		.ascii	"xTicksToWait\000"
 3074      6B73546F 
 3074      57616974 
 3074      00
 3075              	.LASF31:
 3076 0136 4576656E 		.ascii	"EventGroupHandle_t\000"
 3076      7447726F 
 3076      75704861 
 3076      6E646C65 
 3076      5F7400
 3077              	.LASF47:
 3078 0149 78436C65 		.ascii	"xClearOnExit\000"
 3078      61724F6E 
 3078      45786974 
 3078      00
 3079              	.LASF88:
 3080 0156 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 3080      72745261 
 3080      69736542 
 3080      41534550 
 3080      524900
 3081              	.LASF62:
 3082 0169 75784269 		.ascii	"uxBitsWaitedFor\000"
 3082      74735761 
 3082      69746564 
 3082      466F7200 
 3083              	.LASF3:
 3084 0179 7369676E 		.ascii	"signed char\000"
 3084      65642063 
 3084      68617200 
 3085              	.LASF67:
 3086 0185 76457665 		.ascii	"vEventGroupDelete\000"
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 75


 3086      6E744772 
 3086      6F757044 
 3086      656C6574 
 3086      6500
 3087              	.LASF40:
 3088 0197 75784269 		.ascii	"uxBitsToWaitFor\000"
 3088      7473546F 
 3088      57616974 
 3088      466F7200 
 3089              	.LASF30:
 3090 01a7 4C697374 		.ascii	"List_t\000"
 3090      5F7400
 3091              	.LASF29:
 3092 01ae 4D696E69 		.ascii	"MiniListItem_t\000"
 3092      4C697374 
 3092      4974656D 
 3092      5F7400
 3093              	.LASF1:
 3094 01bd 6C6F6E67 		.ascii	"long long int\000"
 3094      206C6F6E 
 3094      6720696E 
 3094      7400
 3095              	.LASF71:
 3096 01cb 76457665 		.ascii	"vEventGroupClearBitsCallback\000"
 3096      6E744772 
 3096      6F757043 
 3096      6C656172 
 3096      42697473 
 3097              	.LASF61:
 3098 01e8 70784C69 		.ascii	"pxList\000"
 3098      737400
 3099              	.LASF7:
 3100 01ef 6C6F6E67 		.ascii	"long int\000"
 3100      20696E74 
 3100      00
 3101              	.LASF23:
 3102 01f8 784C4953 		.ascii	"xLIST\000"
 3102      5400
 3103              	.LASF21:
 3104 01fe 7078436F 		.ascii	"pxContainer\000"
 3104      6E746169 
 3104      6E657200 
 3105              	.LASF59:
 3106 020a 70784C69 		.ascii	"pxListItem\000"
 3106      73744974 
 3106      656D00
 3107              	.LASF17:
 3108 0215 78497465 		.ascii	"xItemValue\000"
 3108      6D56616C 
 3108      756500
 3109              	.LASF70:
 3110 0220 756C4269 		.ascii	"ulBitsToSet\000"
 3110      7473546F 
 3110      53657400 
 3111              	.LASF34:
 3112 022c 78546173 		.ascii	"xTasksWaitingForBits\000"
 3112      6B735761 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 76


 3112      6974696E 
 3112      67466F72 
 3112      42697473 
 3113              	.LASF64:
 3114 0241 78457665 		.ascii	"xEventGroupSync\000"
 3114      6E744772 
 3114      6F757053 
 3114      796E6300 
 3115              	.LASF22:
 3116 0251 784C4953 		.ascii	"xLIST_ITEM\000"
 3116      545F4954 
 3116      454D00
 3117              	.LASF53:
 3118 025c 78457665 		.ascii	"xEventGroupClearBits\000"
 3118      6E744772 
 3118      6F757043 
 3118      6C656172 
 3118      42697473 
 3119              	.LASF16:
 3120 0271 5469636B 		.ascii	"TickType_t\000"
 3120      54797065 
 3120      5F7400
 3121              	.LASF2:
 3122 027c 6C6F6E67 		.ascii	"long double\000"
 3122      20646F75 
 3122      626C6500 
 3123              	.LASF4:
 3124 0288 756E7369 		.ascii	"unsigned char\000"
 3124      676E6564 
 3124      20636861 
 3124      7200
 3125              	.LASF37:
 3126 0296 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 3126      6967696E 
 3126      616C4241 
 3126      53455052 
 3126      4900
 3127              	.LASF84:
 3128 02a8 2E2E5C2E 		.ascii	"..\\..\\..\\..\\..\\..\\FreeRTOS\\FreeRTOS\\FreeRTO"
 3128      2E5C2E2E 
 3128      5C2E2E5C 
 3128      2E2E5C2E 
 3128      2E5C4672 
 3129 02d3 535C536F 		.ascii	"S\\Source\\event_groups.c\000"
 3129      75726365 
 3129      5C657665 
 3129      6E745F67 
 3129      726F7570 
 3130              	.LASF9:
 3131 02eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 3131      206C6F6E 
 3131      6720756E 
 3131      7369676E 
 3131      65642069 
 3132              	.LASF13:
 3133 0302 75696E74 		.ascii	"uint32_t\000"
 3133      33325F74 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 77


 3133      00
 3134              	.LASF69:
 3135 030b 70764576 		.ascii	"pvEventGroup\000"
 3135      656E7447 
 3135      726F7570 
 3135      00
 3136              	.LASF0:
 3137 0318 756E7369 		.ascii	"unsigned int\000"
 3137      676E6564 
 3137      20696E74 
 3137      00
 3138              	.LASF27:
 3139 0325 4C697374 		.ascii	"ListItem_t\000"
 3139      4974656D 
 3139      5F7400
 3140              	.LASF14:
 3141 0330 42617365 		.ascii	"BaseType_t\000"
 3141      54797065 
 3141      5F7400
 3142              	.LASF45:
 3143 033b 78457665 		.ascii	"xEventGroupWaitBits\000"
 3143      6E744772 
 3143      6F757057 
 3143      61697442 
 3143      69747300 
 3144              	.LASF77:
 3145 034f 78546173 		.ascii	"xTaskResumeAll\000"
 3145      6B526573 
 3145      756D6541 
 3145      6C6C00
 3146              	.LASF6:
 3147 035e 73686F72 		.ascii	"short unsigned int\000"
 3147      7420756E 
 3147      7369676E 
 3147      65642069 
 3147      6E7400
 3148              	.LASF79:
 3149 0371 76506F72 		.ascii	"vPortEnterCritical\000"
 3149      74456E74 
 3149      65724372 
 3149      69746963 
 3149      616C00
 3150              	.LASF89:
 3151 0384 70727654 		.ascii	"prvTestWaitCondition\000"
 3151      65737457 
 3151      61697443 
 3151      6F6E6469 
 3151      74696F6E 
 3152              	.LASF86:
 3153 0399 76506F72 		.ascii	"vPortSetBASEPRI\000"
 3153      74536574 
 3153      42415345 
 3153      50524900 
 3154              	.LASF11:
 3155 03a9 63686172 		.ascii	"char\000"
 3155      00
 3156              	.LASF18:
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 78


 3157 03ae 70784E65 		.ascii	"pxNext\000"
 3157      787400
 3158              	.LASF65:
 3159 03b5 75784F72 		.ascii	"uxOriginalBitValue\000"
 3159      6967696E 
 3159      616C4269 
 3159      7456616C 
 3159      756500
 3160              	.LASF33:
 3161 03c8 75784576 		.ascii	"uxEventBits\000"
 3161      656E7442 
 3161      69747300 
 3162              	.LASF80:
 3163 03d4 76506F72 		.ascii	"vPortExitCritical\000"
 3163      74457869 
 3163      74437269 
 3163      74696361 
 3163      6C00
 3164              	.LASF32:
 3165 03e6 4576656E 		.ascii	"EventGroupDef_t\000"
 3165      7447726F 
 3165      75704465 
 3165      665F7400 
 3166              	.LASF50:
 3167 03f6 7578436F 		.ascii	"uxControlBits\000"
 3167      6E74726F 
 3167      6C426974 
 3167      7300
 3168              	.LASF55:
 3169 0404 78457665 		.ascii	"xEventGroupGetBitsFromISR\000"
 3169      6E744772 
 3169      6F757047 
 3169      65744269 
 3169      74734672 
 3170              	.LASF57:
 3171 041e 78457665 		.ascii	"xEventGroupSetBits\000"
 3171      6E744772 
 3171      6F757053 
 3171      65744269 
 3171      747300
 3172              	.LASF49:
 3173 0431 75785265 		.ascii	"uxReturn\000"
 3173      7475726E 
 3173      00
 3174              	.LASF8:
 3175 043a 6C6F6E67 		.ascii	"long unsigned int\000"
 3175      20756E73 
 3175      69676E65 
 3175      6420696E 
 3175      7400
 3176              	.LASF15:
 3177 044c 55426173 		.ascii	"UBaseType_t\000"
 3177      65547970 
 3177      655F7400 
 3178              	.LASF87:
 3179 0458 756C4E65 		.ascii	"ulNewMaskValue\000"
 3179      774D6173 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 79


 3179      6B56616C 
 3179      756500
 3180              	.LASF82:
 3181 0467 76506F72 		.ascii	"vPortFree\000"
 3181      74467265 
 3181      6500
 3182              	.LASF24:
 3183 0471 75784E75 		.ascii	"uxNumberOfItems\000"
 3183      6D626572 
 3183      4F664974 
 3183      656D7300 
 3184              	.LASF78:
 3185 0481 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 3185      736B5265 
 3185      73657445 
 3185      76656E74 
 3185      4974656D 
 3186              	.LASF56:
 3187 049b 75785361 		.ascii	"uxSavedInterruptStatus\000"
 3187      76656449 
 3187      6E746572 
 3187      72757074 
 3187      53746174 
 3188              	.LASF10:
 3189 04b2 73697A65 		.ascii	"sizetype\000"
 3189      74797065 
 3189      00
 3190              	.LASF63:
 3191 04bb 784D6174 		.ascii	"xMatchFound\000"
 3191      6368466F 
 3191      756E6400 
 3192              	.LASF46:
 3193 04c7 78457665 		.ascii	"xEventGroup\000"
 3193      6E744772 
 3193      6F757000 
 3194              	.LASF54:
 3195 04d3 75784269 		.ascii	"uxBitsToClear\000"
 3195      7473546F 
 3195      436C6561 
 3195      7200
 3196              	.LASF43:
 3197 04e1 70784576 		.ascii	"pxEventBits\000"
 3197      656E7442 
 3197      69747300 
 3198              	.LASF25:
 3199 04ed 7078496E 		.ascii	"pxIndex\000"
 3199      64657800 
 3200              	.LASF52:
 3201 04f5 7854696D 		.ascii	"xTimeoutOccurred\000"
 3201      656F7574 
 3201      4F636375 
 3201      72726564 
 3201      00
 3202              	.LASF83:
 3203 0506 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3203      43313120 
 3203      352E342E 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 80


 3203      31203230 
 3203      31363036 
 3204 0539 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3204      20726576 
 3204      6973696F 
 3204      6E203233 
 3204      37373135 
 3205 056c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3205      66756E63 
 3205      74696F6E 
 3205      2D736563 
 3205      74696F6E 
 3206              	.LASF68:
 3207 0594 76457665 		.ascii	"vEventGroupSetBitsCallback\000"
 3207      6E744772 
 3207      6F757053 
 3207      65744269 
 3207      74734361 
 3208              	.LASF28:
 3209 05af 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 3209      495F4C49 
 3209      53545F49 
 3209      54454D00 
 3210              	.LASF39:
 3211 05bf 75784375 		.ascii	"uxCurrentEventBits\000"
 3211      7272656E 
 3211      74457665 
 3211      6E744269 
 3211      747300
 3212              	.LASF73:
 3213 05d2 7076506F 		.ascii	"pvPortMalloc\000"
 3213      72744D61 
 3213      6C6C6F63 
 3213      00
 3214              	.LASF66:
 3215 05df 70785461 		.ascii	"pxTasksWaitingForBits\000"
 3215      736B7357 
 3215      61697469 
 3215      6E67466F 
 3215      72426974 
 3216              	.LASF76:
 3217 05f5 76546173 		.ascii	"vTaskSuspendAll\000"
 3217      6B537573 
 3217      70656E64 
 3217      416C6C00 
 3218              	.LASF51:
 3219 0605 78416C72 		.ascii	"xAlreadyYielded\000"
 3219      65616479 
 3219      5969656C 
 3219      64656400 
 3220              	.LASF58:
 3221 0615 75784269 		.ascii	"uxBitsToSet\000"
 3221      7473546F 
 3221      53657400 
 3222              	.LASF72:
 3223 0621 756C4269 		.ascii	"ulBitsToClear\000"
 3223      7473546F 
ARM GAS  C:\Users\u0036181\AppData\Local\Temp\cc3UM1Sh.s 			page 81


 3223      436C6561 
 3223      7200
 3224              	.LASF36:
 3225 062f 4576656E 		.ascii	"EventGroup_t\000"
 3225      7447726F 
 3225      75705F74 
 3225      00
 3226              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
